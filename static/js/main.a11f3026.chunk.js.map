{"version":3,"sources":["App/logo.svg","reducers/App.js","reducers/File.js","reducers/GCode.js","reducers/Machine.js","Geometry.js","shapes/Polygon.js","shapes/Star.js","shapes/Circle.js","shapes/Heart.js","shapes/Reuleaux.js","shapes/Epicycloid.js","shapes/Hypocycloid.js","shapes/Rose.js","shapes/Fonts.js","shapes/Vicious1Vertices.js","inputs/Transforms.js","shapes/InputText.js","shapes/V1Engineering.js","reducers/Shapes.js","reducers/Transform.js","reducers/Wiper.js","App/Header.js","App/Documentation.js","inputs/Wiper.js","inputs/ThetaRho.js","inputs/InputTabs.js","machine/MachineSettings.js","machine/LimitEnforcer.js","inputs/Computer.js","machine/MachinePreview.js","machine/GCode.js","App/App.js","index.js"],"names":["module","exports","__webpack_require__","p","defaultState","sandifyVersion","input","reverse","canvas_width","canvas_height","machineSlider","machineRectExpanded","machinePolarExpanded","showGCode","name","comments","vertices","zoom","aspectRatio","filename","pre","localStorage","getItem","post","rectangular","undefined","min_x","parseFloat","max_x","min_y","max_y","max_radius","rectOrigin","polarEndpoints","Vertex","x","y","f","arguments","length","Polygon","Object","classCallCheck","this","createClass","key","value","state","ownProps","polygonSides","shapes","dispatch","onPolygonSizeChange","event","type","target","parent","points","i","angle","Math","PI","push","cos","sin","options","title","props","onChange","action","objectSpread","Star","starPoints","starRatio","onStarPointsChange","onStarRatioChange","min","max","star_points","star_scale","step","Circle","circleLobes","onCircleLobesChange","circle_points","Heart","heart_points","pow","Reuleaux","reuleauxSides","onReuleauxSidesChange","corners","coverageAngle","halfCoverageAngle","c","startAngle","corn","Epicycloid","epicycloidA","epicycloidB","onepicycloidAChange","onepicycloidBChange","link","a","b","Hypocycloid","hypocycloidA","hypocycloidB","onhypocycloidAChange","onhypocycloidBChange","Rose","roseN","roseD","onRoseNChange","onRoseDChange","n","parseInt","d","thetaClose","resolution","theta","r","billsey"," ","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","0","1","2","3","4","5","6","7","8","9","$",".","curve","toConsumableArray","Array","keys","map","index","billseyConverter","newVertices","prevPoint","forEach","vertex","width","abs","height","concat","cv","Font2","ch","upper","toUpperCase","hasOwnProperty","Vicious1Vertices","registeredShapes","InputText","inputText","onInputTextChange","chi","letter","vi","widthOffset","point","V1Engineering","disableEnter","shiftKey","preventDefault","Shape","activeClassName","active","options_render","option","react_default","createElement","react_bootstrap_es","controlId","componentClass","ControlLabel","sm","onKeyDown","options_list_render","link_render","rel","href","className","collapsible","expanded","horizontal","onClick","clicked","Component","ShapeList","_this","possibleConstructorReturn","getPrototypeOf","call","shape","addShape","getParams","assertThisInitialized","self","shape_render","Transforms_Shape","currentShape","setShape","startingSize","onSizeChange","x_offset","onOffsetXChange","y_offset","onOffsetYChange","connect","transform","xformOffsetX","xformOffsetY","registeredProps","mapStateToProps","assign","apply","methods","offset","registeredMethods","mapDispatchToProps","RotationTransform","header","activeCallback","switchbacks","onSwitchbacksChange","spinEnabled","spinValue","spinSwitchbacks","ScaleTransform","growEnabled","growValue","TrackTransform","activeGrowClassName","activeGrow","onChangeLength","activeGrowCallback","trackGrow","onChangeGrow","trackEnabled","trackGrowEnabled","trackValue","trackLength","Transforms","Transforms_ShapeList","loops","changeLoops","Transforms_ScaleTransform","Transforms_RotationTransform","Transforms_TrackTransform","numLoops","reduceReducers","getReducer","angleDeg","size","Header","src","logo","alt","Documentation","Wiper","changeAngle","changeSize","wiper","ThetaRho","aspectRatioActive","htmlFor","style","cursor","id","accept","setVertices","display","join","setZoom","toggleAspectRatio","file","parseThrFile","rv","reader","FileReader","onload","lines","result","split","has_vertex","ii","line","trim","indexOf","pointStrings","console","log","thetaRhos","previous","max_angle","next","deltaAngle","rhoStep","rho","emergency_break","convertToXY","readAsText","files","InputTabs","defaultActiveKey","onSelect","handleSelect","bind","eventKey","src_inputs_Transforms","inputs_Wiper","src_inputs_ThetaRho","RectSettings","smOffset","onMinXChange","onMaxXChange","onMinYChange","onMaxYChange","origin","onOriginChange","app","machine","setItem","setMachineRectOrigin","PolarSettings","endpointsActiveClass","endpoints","onMaxRadiusChange","toggleEndpoints","MachineSettings","MachineSettings_RectSettings","MachineSettings_PolarSettings","pointLocation","size_x","size_y","location","intersection","line_start","line_end","side_start","side_end","clone","subtract","side","lineCrossSidePerp","diff","t","u","add","multiply","Victor","clipLine","quadrant_start","quadrant_end","nearestVertex","boundPoint","sides","intersections","s","int_point","fromObject","Error","lengthSq","temp","midpoint","good","bad","dx","dy","fixed","distance","traceCircle","start","end","endAngle","tracePoints","onSegment","clipLineCircle","rad_start","magnitude","rad_end","nearestVertexCircle","direction","normalize","distanceToLine","dt","sqrt","point1","point2","on","getIntersections","other_point","scale","scale_perc","data","fraction_index","transformed_vertex","offset_x","offset_y","loop_period","spin_amount","angle_deg","rotate","loop_index","radius","track","outOfBounds","nearEnough","polishVertices","outPoint","first","last","vFirst","vLast","nextCorner","unshift","cleanVertices","pt","cleanerVertices","enforceRectLimits","enforcePolarLimits","outputVertices","startLocation","cosa","sina","orig_delta_w","orig_delta_h","delta_w","delta_h","endLocation","nextWidthPoint","nextHeightPoint","corner","getVertices","createSelector","wiperState","findShape","num_loops","j","fraction","transformShapes","x_scale","y_scale","thetaRho","getVerticesStats","numPoints","floor","getTrackVertices","trackVertices","PreviewWindow","canvas","ReactDOM","findDOMNode","context","getContext","bigBox","document","getElementById","resize","window","addEventListener","paint","clearRect","machine_x","machine_y","use_rect","scale_x","scale_y","min_scale","mmToPixelsScale","in_mm","mmToPixels","moveTo","lineTo","arc","fillStyle","strokeStyle","fill","sliderValue","begin_fraction","end_fraction","begin_vertex","round","end_vertex","slice","save","beginPath","lineWidth","moveTo_mm","lineTo_mm","stroke","drawing_vertices","slice_vertices","dot_mm","showTrack","restore","getComputedStyle","getPropertyValue","onResize","_this$props","MachinePreview","MachinePreview_PreviewWindow","verticesStats","rc_slider_es","onSlider","src_machine_MachineSettings","setMachineSlider","setShowGCode","download","text","pom","setAttribute","encodeURIComponent","createEvent","initEvent","dispatchEvent","click","gcode","command","toFixed","speed","thetarho","getComments","shapeInfo","find","GCodeGenerator","content","settings","xOffset","yOffset","includes","close","subsampledVertices","delta","deltaSegment","trVertices","previousTheta","previousRawTheta","rawTheta","atan2","deltaTheta","reverseActiveClass","bsStyle","bsSize","open","show","onHide","closeButton","Title","Body","setFilename","setPre","setPost","toggleReverse","Footer","generateGCode","generateThetaRho","store","createStore","combineReducers","comment","newValue","App","react_redux_es","src_App_Header","src_inputs_InputTabs","src_machine_MachinePreview","machine_GCode","src_App_Documentation","render","src_App_App"],"mappings":"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,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,aACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,cACvBA,EAAO,cAAgB,cACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,cACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,aAAe,eACtBA,EAAO,aAAe,eACtBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,cACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,cACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,cACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,aAAe,eACtBA,EAAO,cAAgB,eACvBA,EAAO,aAAe,eACtBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,cACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,gBACvBA,EAAO,cAAgB,gBACvBA,EAAO,cAAgB,gBACvBA,EAAO,aAAe,gBACtBA,EAAO,cAAgB,kBACvBA,EAAO,eAAiB,gBACxBA,EAAO,eAAiB,gBACxBA,EAAO,eAAiB,gBACxBA,EAAO,eAAiB,gBACxBA,EAAO,cAAgB,eACvBA,EAAO,eAAiB,eACxBA,EAAO,cAAgB,eACvBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,cACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,cAAgB,cACvBA,EAAO,aAAe,eACtBA,EAAO,cAAgB,eACvBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,cAAgB,eACvBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,cACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,cAAgB,eACvBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,cACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,cACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,cACxBA,EAAO,cAAgB,eACvBA,EAAO,eAAiB,aACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,cACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,cACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,cACvBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,E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","file":"static/js/main.a11f3026.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.a6ab37e6.svg\";","\nconst defaultState = {\n  sandifyVersion: \"0.1.5\",\n  input: 0,\n  reverse: false,\n  canvas_width: 600,\n  canvas_height: 600,\n  machineSlider: 0.0,\n  machineRectExpanded: false,\n  machinePolarExpanded: false,\n  showGCode: false,\n}\n\nexport default function app(state = defaultState, action) {\n  switch (action.type) {\n\n    // Vertex actions\n    case 'CHOOSE_INPUT':\n      return {...state,\n        input: action.value,\n      };\n    case 'TOGGLE_REVERSE':\n      return {...state,\n        reverse: !state.reverse,\n      };\n    case 'SET_MACHINE_SIZE':\n      return {...state,\n        canvas_width: action.value,\n        canvas_height: action.value,\n      };\n    case 'SET_MACHINE_SLIDER':\n      return {...state,\n        machineSlider: action.value,\n      };\n    case 'TOGGLE_MACHINE_RECT_EXPANDED':\n      return {...state,\n        machineRectExpanded: !state.machineRectExpanded,\n        machinePolarExpanded: false,\n      };\n    case 'TOGGLE_MACHINE_POLAR_EXPANDED':\n      return {...state,\n        machinePolarExpanded: !state.machinePolarExpanded,\n        machineRectExpanded: false,\n      };\n    case 'SET_SHOW_GCODE':\n      return {...state,\n        showGCode: action.value,\n      };\n\n\n    case '@@redux/INIT':\n      return state;\n    default:\n      return state;\n  }\n}\n\n\n\n","\nconst defaultState = {\n  name: \"\",\n  comments: [],\n  vertices: [],\n  zoom: 100,\n  aspectRatio: false,\n}\n\nexport default function file(state = defaultState, action) {\n  switch (action.type) {\n\n    // File actions\n    case 'SET_FILE_VERTICES':\n      return {...state,\n        vertices : action.vertices,\n      };\n    case 'SET_FILE_NAME':\n      return {...state,\n        name: action.value,\n      };\n    case 'SET_FILE_COMMENT':\n      return {...state,\n        comment: action.value,\n      };\n    case 'SET_FILE_ZOOM':\n      return {...state,\n        zoom: action.value,\n      };\n    case 'TOGGLE_FILE_ASPECT_RATIO':\n      return {...state,\n        aspectRatio: !state.aspectRatio,\n      };\n\n    case '@@redux/INIT':\n      return state;\n    default:\n      return state;\n  }\n}\n\n\n\n","\nconst defaultState = {\n  filename: \"sandify\",\n  pre: localStorage.getItem('gcode_pre') ? localStorage.getItem('gcode_pre') : '',\n  post: localStorage.getItem('gcode_post') ? localStorage.getItem('gcode_post') : '',\n}\n\nexport default function gcode(state = defaultState, action) {\n  switch (action.type) {\n\n    // GCode Settings\n    case 'SET_GCODE_FILENAME':\n      return {...state,\n        filename: action.value,\n      };\n    case 'SET_GCODE_PRE':\n      return {...state,\n        pre: action.value,\n      };\n    case 'SET_GCODE_POST':\n      return {...state,\n        post: action.value,\n      };\n\n    case '@@redux/INIT':\n      return state;\n    default:\n      return state;\n  }\n}\n\n\n\n","\nconst defaultState = {\n  // Machine settings\n  rectangular: undefined !== localStorage.getItem('machine_rect_active') ? localStorage.getItem('machine_rect_active') < 2 : true,\n  min_x: parseFloat(localStorage.getItem('machine_min_x') ? localStorage.getItem('machine_min_x') : 0),\n  max_x: parseFloat(localStorage.getItem('machine_max_x') ? localStorage.getItem('machine_max_x') : 500),\n  min_y: parseFloat(localStorage.getItem('machine_min_y') ? localStorage.getItem('machine_min_y') : 0),\n  max_y: parseFloat(localStorage.getItem('machine_max_y') ? localStorage.getItem('machine_max_y') : 500),\n  max_radius: localStorage.getItem('machine_radius') ? localStorage.getItem('machine_radius') : 250,\n  rectOrigin: [],\n  polarEndpoints: false,\n}\n\nexport default function machine(state = defaultState, action) {\n  switch (action.type) {\n    // Machine Settings\n    case 'TOGGLE_MACHINE_RECT_EXPANDED':\n      return {...state,\n        rectangular: true,\n      };\n    case 'TOGGLE_MACHINE_POLAR_EXPANDED':\n      return {...state,\n        rectangular: false,\n      };\n\n    case 'SET_MIN_X':\n      return {...state,\n        min_x: action.value,\n      };\n    case 'SET_MAX_X':\n      return {...state,\n        max_x: action.value,\n      };\n    case 'SET_MIN_Y':\n      return {...state,\n        min_y: action.value,\n      };\n    case 'SET_MAX_Y':\n      return {...state,\n        max_y: action.value,\n      };\n    case 'SET_MAX_RADIUS':\n      return {...state,\n        max_radius: action.value,\n      };\n    case 'SET_MACHINE_RECT_ORIGIN':\n      let newValue = [];\n      for (let i = 0; i < action.value.length ; i++) {\n        if (!state.rectOrigin.includes(action.value[i])) {\n          newValue.push(action.value[i]);\n          break;\n        }\n      }\n      return {...state,\n        rectOrigin: newValue,\n      };\n    case 'TOGGLE_MACHINE_ENDPOINTS':\n      return {...state,\n        polarEndpoints: !state.polarEndpoints,\n      };\n    case '@@redux/INIT':\n      return state;\n    default:\n      return state;\n  }\n}\n\n\n\n","\n// A simple struct that we can use everywhere we need vertices. I don't see a\n// problem letting this bloat a little.\n//\nexport const Vertex = (x, y, speed=0) => {\n  return {\n    x: x,\n    y: y,\n    f: speed\n  }\n}\n\n// convert degrees to radians\nexport const degToRad = (deg) => {\n  return deg / 180.0 * Math.PI;\n}\n\n// convert radians to degrees\nexport const radToDeg = (rad) => {\n  return rad * 180.0 / Math.PI;\n}\n\n","import { Vertex } from '../Geometry';\n\nexport const setShapePolygonSides = ( sides ) => {\n  return {\n    type: 'SET_SHAPE_POLYGON_SIDES',\n    value: sides,\n  };\n}\n\nexport class Polygon {\n  static mapStateToProps(state, ownProps) {\n    return {\n      polygonSides: state.shapes.polygonSides,\n    }\n  }\n\n  static mapDispatchToProps(dispatch, ownProps) {\n    return {\n      onPolygonSizeChange: (event) => {\n        dispatch(setShapePolygonSides(event.target.value));\n      },\n    }\n  }\n\n  static getParams(parent) {\n    return {\n      name: \"Polygon\",\n      vertices: (state) => {\n        let points = [];\n        for (let i=0; i<state.shapes.polygonSides; i++) {\n          let angle = Math.PI * 2.0 / state.shapes.polygonSides * (0.5 + i);\n          points.push(Vertex(Math.cos(angle), Math.sin(angle)))\n        }\n        return points;\n      },\n      options: [\n        {\n          title: \"Number of Sides\",\n          key: \"polygonSides\",\n          value: () => { return parent.props.polygonSides },\n          onChange: parent.props.onPolygonSizeChange,\n        },\n      ],\n    };\n  }\n\n  static getReducer(state, action) {\n    switch(action.type) {\n      case 'SET_SHAPE_POLYGON_SIDES':\n        return {...state,\n          polygonSides: action.value,\n        };\n\n      default:\n        return state;\n    }\n  }\n}\n","import { Vertex } from '../Geometry';\n\nexport const setShapeStarPoints = ( sides ) => {\n  return {\n    type: 'SET_SHAPE_STAR_POINTS',\n    value: sides,\n  };\n}\n\nexport const setShapeStarRatio = ( value ) => {\n  return {\n    type: 'SET_SHAPE_STAR_RATIO',\n    value: Math.min(Math.max(value, 0.0), 1.0),\n  };\n}\n\n\nexport class Star {\n  static mapStateToProps(state, ownProps) {\n    return {\n      starPoints:   state.shapes.starPoints,\n      starRatio:    state.shapes.starRatio,\n    }\n  }\n\n  static mapDispatchToProps(dispatch, ownProps) {\n    return {\n      onStarPointsChange: (event) => {\n        dispatch(setShapeStarPoints(event.target.value));\n      },\n      onStarRatioChange: (event) => {\n        dispatch(setShapeStarRatio(event.target.value));\n      },\n    }\n  }\n\n  static getParams(parent) {\n    return {\n      name: \"Star\",\n      vertices: (state) => {\n        let star_points = [];\n        for (let i=0; i<state.shapes.starPoints * 2; i++) {\n          let angle = Math.PI * 2.0 / (2.0 * state.shapes.starPoints) * i;\n          let star_scale = 1.0;\n          if (i % 2 === 0) {\n            star_scale *= state.shapes.starRatio;\n          }\n          star_points.push(Vertex(star_scale * Math.cos(angle), star_scale * Math.sin(angle)))\n        }\n        return star_points\n      },\n      options: [\n        {\n          title: \"Number of Points\",\n          key: \"starPoints\",\n          value: () => { return parent.props.starPoints },\n          onChange: parent.props.onStarPointsChange,\n        },\n        {\n          title: \"Size of Points\",\n          key: \"starRatio\",          \n          value: () => { return parent.props.starRatio },\n          onChange: parent.props.onStarRatioChange,\n          step: 0.05,\n        },\n      ],\n    };\n  }\n\n  static getReducer(state, action) {\n    switch(action.type) {\n      case 'SET_SHAPE_STAR_POINTS':\n        return {...state,\n          starPoints: action.value,\n        };\n\n      case 'SET_SHAPE_STAR_RATIO':\n        return {...state,\n          starRatio: action.value,\n        };\n\n      default:\n        return state;\n    }\n  }\n}\n","import { Vertex } from '../Geometry';\n\nexport const setShapeCircleLobes = ( sides ) => {\n  return {\n    type: 'SET_SHAPE_CIRCLE_LOBES',\n    value: sides,\n  };\n}\n\nexport class Circle {\n  static mapStateToProps(state, ownProps) {\n    return {\n      circleLobes: state.shapes.circleLobes,\n    }\n  }\n\n  static mapDispatchToProps(dispatch, ownProps) {\n    return {\n      onCircleLobesChange: (event) => {\n        dispatch(setShapeCircleLobes(event.target.value));\n      },\n    }\n  }\n\n  static getParams(parent) {\n    return {\n      name: \"Circle\",\n      vertices: (state) => {\n        let circle_points = []\n        for (let i=0; i<128; i++) {\n          let angle = Math.PI * 2.0 / 128.0 * i\n          circle_points.push(Vertex(Math.cos(angle), Math.sin(state.shapes.circleLobes * angle)/state.shapes.circleLobes))\n        }\n        return circle_points\n      },\n      options: [\n        {\n          title: \"Number of Lobes\",\n          key: \"circleLobes\",\n          value: () => { return parent.props.circleLobes },\n          onChange: parent.props.onCircleLobesChange,\n        },\n      ],\n    };\n  }\n\n  static getReducer(state, action) {\n    switch(action.type) {\n      case 'SET_SHAPE_CIRCLE_LOBES':\n        return {...state,\n          circleLobes: action.value,\n        };\n\n      default:\n        return state;\n    }\n  }\n}\n","import { Vertex } from '../Geometry';\n\nexport class Heart {\n  static mapStateToProps(state, ownProps) {\n    return {\n\n    }\n  }\n\n  static mapDispatchToProps(dispatch, ownProps) {\n    return {\n\n    }\n  }\n\n  static getParams(parent) {\n    return {\n      name: \"Heart\",\n      vertices: (state) => {\n        let heart_points = []\n        for (let i=0; i<128; i++) {\n          let angle = Math.PI * 2.0 / 128.0 * i\n          // heart equation from: http://mathworld.wolfram.com/HeartCurve.html\n          heart_points.push(Vertex(1.0 * Math.pow(Math.sin(angle), 3),\n                                   13.0/16.0 * Math.cos(angle) +\n                                   -5.0/16.0 * Math.cos(2.0 * angle) +\n                                   -2.0/16.0 * Math.cos(3.0 * angle) +\n                                   -1.0/16.0 * Math.cos(4.0 * angle)))\n        }\n        return heart_points\n      },\n      options: [\n      ],\n    };\n  }\n\n  static getReducer(state, action) {\n    switch(action.type) {\n      default:\n        return state;\n    }\n  }\n}\n","import { Vertex } from '../Geometry';\n\nexport const setShapeReuleauxSides = ( sides ) => {\n  return {\n    type: 'SET_SHAPE_REULEAUX_SIDES',\n    value: sides,\n  };\n}\n\nexport class Reuleaux {\n  static mapStateToProps(state, ownProps) {\n    return {\n      reuleauxSides: state.shapes.reuleauxSides,\n    }\n  }\n\n  static mapDispatchToProps(dispatch, ownProps) {\n    return {\n      onReuleauxSidesChange: (event) => {\n        dispatch(setShapeReuleauxSides(event.target.value));\n      },\n    }\n  }\n\n  static getParams(parent) {\n    return {\n      name: \"Reuleaux\",\n      vertices: (state) => {\n        let points = []\n        // Construct an equalateral triangle\n        let corners = []\n        // Initial location at PI/2\n        let angle = Math.PI/2.0;\n        // How much of the circle in one side?\n        let coverageAngle = Math.PI/state.shapes.reuleauxSides;\n        let halfCoverageAngle = 0.5 * coverageAngle;\n        for (let c=0; c<state.shapes.reuleauxSides; c++) {\n          let startAngle = angle + Math.PI - halfCoverageAngle;\n          corners.push( [Vertex(Math.cos(angle), Math.sin(angle)), startAngle] );\n          angle += 2.0 * Math.PI / state.shapes.reuleauxSides;\n        }\n        let length = 0.5 / Math.cos(Math.PI/2.0/state.shapes.reuleauxSides);\n        for (let corn=0; corn < corners.length; corn++) {\n          for (let i=0; i<128; i++) {\n            let angle = coverageAngle  * (i / 128.0) + corners[corn][1];\n            points.push(Vertex(length * corners[corn][0].x + Math.cos(angle),\n                               length * corners[corn][0].y + Math.sin(angle)));\n          }\n        }\n        return points;\n      },\n      options: [\n        {\n          title: \"Number of sides\",\n          key: \"reuleauxSides\",\n          value: () => { return parent.props.reuleauxSides },\n          onChange: parent.props.onReuleauxSidesChange,\n          step: 1,\n        },\n      ],\n    };\n  }\n\n  static getReducer(state, action) {\n    switch(action.type) {\n      case 'SET_SHAPE_REULEAUX_SIDES':\n        return {...state,\n          reuleauxSides: action.value,\n        };\n\n      default:\n        return state;\n    }\n  }\n}\n","import { Vertex } from '../Geometry';\n\nexport const setShapeepicycloidA = ( a ) => {\n  return {\n    type: 'SET_SHAPE_EPICYCLOID_A',\n    value: a,\n  };\n}\n\nexport const setShapeepicycloidB = ( b ) => {\n  return {\n    type: 'SET_SHAPE_EPICYCLOID_B',\n    value: b,\n  };\n}\n\nexport class Epicycloid {\n  static mapStateToProps(state, ownProps) {\n    return {\n      epicycloidA: state.shapes.epicycloidA,\n      epicycloidB: state.shapes.epicycloidB,\n    }\n  }\n\n  static mapDispatchToProps(dispatch, ownProps) {\n    return {\n      onepicycloidAChange: (event) => {\n        dispatch(setShapeepicycloidA(event.target.value));\n      },\n      onepicycloidBChange: (event) => {\n        dispatch(setShapeepicycloidB(event.target.value));\n      },\n    }\n  }\n\n  static getParams(parent) {\n    return {\n      name: \"Clover\",\n      link: \"http://mathworld.wolfram.com/Epicycloid.html\",\n      vertices: (state) => {\n        let points = []\n        let a = parseFloat(state.shapes.epicycloidA)\n        let b = parseFloat(state.shapes.epicycloidB)\n\n        for (let i=0; i<128; i++) {\n          let angle = Math.PI * 2.0 / 128.0 * i\n          points.push(Vertex(0.5 * (a + b) * Math.cos(angle) - 0.5 * b * Math.cos(((a + b) / b) * angle),\n                             0.5 * (a + b) * Math.sin(angle) - 0.5 * b * Math.sin(((a + b) / b) * angle)))\n        }\n        return points\n      },\n      options: [\n        {\n          title: \"Large circle radius\",\n          key: \"epicycloidA\",\n          value: () => { return parent.props.epicycloidA },\n          onChange: parent.props.onepicycloidAChange,\n          step: 0.1,\n        },\n        {\n          title: \"Small circle radius\",\n          key: \"epicycloidB\",\n          value: () => { return parent.props.epicycloidB },\n          onChange: parent.props.onepicycloidBChange,\n          step: 0.1,\n        },\n      ],\n    };\n  }\n\n  static getReducer(state, action) {\n    switch(action.type) {\n      case 'SET_SHAPE_EPICYCLOID_A':\n        return {...state,\n          epicycloidA: action.value,\n        };\n\n      case 'SET_SHAPE_EPICYCLOID_B':\n        return {...state,\n          epicycloidB: action.value,\n        };\n\n      default:\n        return state;\n    }\n  }\n}\n","import { Vertex } from '../Geometry';\n\nexport const setShapehypocycloidA = ( a ) => {\n  return {\n    type: 'SET_SHAPE_HYPOCYCLOID_A',\n    value: a,\n  };\n}\n\nexport const setShapehypocycloidB = ( b ) => {\n  return {\n    type: 'SET_SHAPE_HYPOCYCLOID_B',\n    value: b,\n  };\n}\n\nexport class Hypocycloid {\n  static mapStateToProps(state, ownProps) {\n    return {\n      hypocycloidA: state.shapes.hypocycloidA,\n      hypocycloidB: state.shapes.hypocycloidB,\n    }\n  }\n\n  static mapDispatchToProps(dispatch, ownProps) {\n    return {\n      onhypocycloidAChange: (event) => {\n        dispatch(setShapehypocycloidA(event.target.value));\n      },\n      onhypocycloidBChange: (event) => {\n        dispatch(setShapehypocycloidB(event.target.value));\n      },\n    }\n  }\n\n  static getParams(parent) {\n    return {\n      name: \"Web\",\n      link: \"http://mathworld.wolfram.com/Hypocycloid.html\",\n      vertices: (state) => {\n        let points = []\n        let a = parseFloat(state.shapes.hypocycloidA)\n        let b = parseFloat(state.shapes.hypocycloidB)\n\n        for (let i=0; i<128; i++) {\n          let angle = Math.PI * 2.0 / 128.0 * i\n          points.push(Vertex(1.0 * (a - b) * Math.cos(angle) + b * Math.cos(((a - b) / b) * angle),\n                                1.0 * (a - b) * Math.sin(angle) - b * Math.sin(((a - b) / b) * angle)))\n        }\n        return points\n      },\n      options: [\n        {\n          title: \"Large circle radius\",\n          key: \"hypocycloidA\",\n          value: () => { return parent.props.hypocycloidA },\n          onChange: parent.props.onhypocycloidAChange,\n          step: 0.1,\n        },\n        {\n          title: \"Small circle radius\",\n          key: \"hypocycloidB\",                    \n          value: () => { return parent.props.hypocycloidB },\n          onChange: parent.props.onhypocycloidBChange,\n          step: 0.1,\n        },\n      ],\n    };\n  }\n\n  static getReducer(state, action) {\n    switch(action.type) {\n      case 'SET_SHAPE_HYPOCYCLOID_A':\n        return {...state,\n          hypocycloidA: action.value,\n        };\n\n      case 'SET_SHAPE_HYPOCYCLOID_B':\n        return {...state,\n          hypocycloidB: action.value,\n        };\n\n      default:\n        return state;\n    }\n  }\n}\n","import { Vertex } from '../Geometry';\n\nexport const setShapeRoseN = ( n ) => {\n  return {\n    type: 'SET_SHAPE_ROSE_N',\n    value: n,\n  };\n}\n\nexport const setShapeRoseD = ( d ) => {\n  return {\n    type: 'SET_SHAPE_ROSE_D',\n    value: d,\n  };\n}\n\nexport class Rose {\n  static mapStateToProps(state, ownProps) {\n    return {\n      roseN: state.shapes.roseN,\n      roseD: state.shapes.roseD,\n    }\n  }\n\n  static mapDispatchToProps(dispatch, ownProps) {\n    return {\n      onRoseNChange: (event) => {\n        dispatch(setShapeRoseN(event.target.value));\n      },\n      onRoseDChange: (event) => {\n        dispatch(setShapeRoseD(event.target.value));\n      },\n    }\n  }\n\n  static getParams(parent) {\n    return {\n      name: \"Rose\",\n      link: \"http://mathworld.wolfram.com/Rose.html\",\n      vertices: (state) => {\n        let points = []\n        let a = 2\n        let n = parseInt(state.shapes.roseN)\n        let d = parseInt(state.shapes.roseD)\n        let p = (n * d % 2 === 0) ? 2 : 1\n        let thetaClose = d * p * 32 * n;\n        let resolution = 64 * n;\n\n        for (let i=0; i<thetaClose+1; i++) {\n          let theta = Math.PI * 2.0 / (resolution) * i\n          let r = 0.5 * a * Math.sin((n / d) * theta)\n          points.push(Vertex(r * Math.cos(theta), r * Math.sin(theta)))\n        }\n        return points\n      },\n      options: [\n        {\n          title: \"Numerator\",\n          key: \"roseN\",\n          value: () => { return parent.props.roseN },\n          onChange: parent.props.onRoseNChange,\n          step: 1,\n        },\n        {\n          title: \"Denominator\",\n          key: \"roseD\",          \n          value: () => { return parent.props.roseD },\n          onChange: parent.props.onRoseDChange,\n          step: 1,\n        },\n      ],\n    };\n  }\n\n  static getReducer(state, action) {\n    switch(action.type) {\n      case 'SET_SHAPE_ROSE_N':\n        return {...state,\n          roseN: action.value,\n        };\n\n      case 'SET_SHAPE_ROSE_D':\n        return {...state,\n          roseD: action.value,\n        };\n\n      default:\n        return state;\n    }\n  }\n}\n","import { Vertex } from '../Geometry';\n\nconst fontSpacing = 1.5;\n\n// Format for vertices: [x,y,b] where in a 0:7(8) by -1:7 grid defining x,y and b defines the line or curve.\n// Bulge directions could be represented by a 0:4 list starting at none, then NE and going clockwise.\n// 4  1\n// 3  2\nlet billsey = {\n  ' ': [ [8,-1,0] ],\n  'A': [ [0,0,0], [3.5,7,0], [7,0,0], [5,3.5,0], [2,3.5,0], [0,0,0], [0,-1,0], [8,-1,0] ],\n  'B': [ [0,0,0], [0,7,0], [3.5,7,0], [7,5.25,1], [3.5,3.5,2], [0,3.5,0], [3.5,3.5,0], [7,1.75,1], [3.5,0,2], [0,0,0], [0,-1,0], [8,-1,0] ],\n  'C': [ [3.5,-1,0], [3.5,0,0], [0,3.5,3], [3.5,7,4], [7,5.25,1], [3.5,7,1], [0,3.5,4], [3.5,0,3], [7,1.75,2], [3.5,0,2], [3.5,-1,0], [8,-1,0] ],\n  'D': [ [0,0,0], [0,7,0], [3.5,7,0], [7,3.5,1], [3.5,0,2], [0,0,0], [0,-1,0], [8,-1,0] ],\n  'E': [ [0,0,0], [0,7,0], [7,7,0], [0,7,0], [0,3.5,0], [3.5,3.5,0], [0,3.5,0], [0,0,0], [7,0,0], [0,0,0], [0,-1,0], [8,-1,0] ],\n  'F': [ [0,0,0], [0,7,0], [7,7,0], [0,7,0], [0,3.5,0], [3.5,3.5,0], [0,3.5,0], [0,0,0], [0,-1,0], [8,-1,0] ],\n  'G': [ [3.5,-1,0], [3.5,0,0], [0,3.5,3], [3.5,7,4], [7,5.25,1], [3.5,7,1], [0,3.5,4], [3.5,0,3], [7,1.75,2], [5.25,1.75,0], [7,1.75,0], [3.5,0,2], [3.5,-1,0], [8,-1,0] ],\n  'H': [ [0,0,0], [0,7,0], [0,3.5,0], [7,3.5,0], [7,7,0], [7,0,0], [7,3.5,0], [0,3.5,0], [0,0,0], [0,-1,0], [8,-1,0] ],\n  'I': [ [3.5,-1,0], [3.5,7,0], [0,7,0], [7,7,0], [3.5,7,0], [3.5,0,0], [0,0,0], [7,0,0], [3.5,0,0], [3.5,-1,0], [8,-1,0] ],\n  'J': [ [3.5,-1,0], [3.5,0,0], [0,1.75,3], [3.5,0,3], [7,1.75,2], [7,7,0], [7,1.75,0], [3.5,0,2], [3.5,-1,0], [8,-1,0] ],\n  'K': [ [0,0,0], [0,7,0], [0,1.75,0], [3.5,3.5,0], [7,7,0], [3.5,3.5,0], [7,0,0], [3.5,3.5,0], [0,1.75,0], [0,0,0], [0,-1,0], [8,-1,0] ],\n  'L': [ [0,0,0], [0,7,0], [0,0,0], [7,0,0], [0,0,0], [0,-1,0], [8,-1,0] ],\n  'M': [ [0,0,0], [0,7,0], [3.5,0,0], [7,7,0], [7,0,0], [7,7,0], [3.5,0,0], [0,7,0], [0,0,0], [0,-1,0], [8,-1,0] ],\n  'N': [ [0,0,0], [0,7,0], [7,0,0], [7,7,0], [7,0,0], [0,7,0], [0,0,0], [0,-1,0], [8,-1,0] ],\n  'O': [ [3.5,-1,0], [3.5, 0, 0], [0, 3.5, 3], [3.5, 7, 4], [7.0, 3.5, 1], [3.5, 0, 2], [3.5, -1, 0], [8, -1, 0] ],\n  'P': [ [0,0,0], [0,7,0], [3.5,7,0], [7,5.25,1], [3.5,3.5,2], [0,3.5,0], [0,0,0], [0,-1,0], [8,-1,0] ],\n  'Q': [ [3.5,-1,0], [3.5, 0, 0], [0, 3.5, 3], [3.5, 7, 4], [7.0, 3.5, 1], [3.5, 0, 2], [4.325,0.5,4], [6.075,0,0], [7,0.5,2], [6.075,0,2], [4.325,0.5,0], [3.5,0,4], [3.5, -1, 0], [8, -1, 0] ],\n  'R': [ [0,0,0], [0,7,0], [3.5,7,0], [7,5.25,1], [3.5,3.5,2], [7,0,0], [3.5,3.5,0], [0,3.5,0], [0,0,0], [0,-1,0], [8,-1,0] ],\n  'S': [ [3.5,-1,0], [3.5,0,0], [0,1.75,3], [3.5,0,3], [7,1.75,2], [3.5,3.5,1], [0,5.25,3], [3.5,7,4], [7,5.25,1], [3.5,7,1], [0,5.25,4], [3.5,3.5,3], [7,1.75,1], [3.5,0,2], [3.5,-1,0], [8,-1,0] ],\n  'T': [ [3.5,-1,0], [3.5,7,0], [0,7,0], [7,7,0], [3.5,7,0], [3.5,0,0], [3.5,-1,0], [8,-1,0] ],\n  'U': [ [3.5,-1,0], [3.5,0,0], [0,3.5,3], [0,7,0], [0,3.5,0], [3.5,0,3], [7,3.5,2], [7,7,0], [7,3.5,0], [3.5,0,2], [3.5,-1,0], [8,-1,0] ],\n  'V': [ [3.5,-1,0], [3.5,0,0], [0,7,0], [3.5,0,0], [7,7,0], [3.5,0,0], [3.5,-1,0], [8,-1,0] ],\n  'W': [ [1.75,-1,0], [1.75,0,0], [0,7,0], [1.75,0,0], [3.5,7,0], [5.25,0,0], [7,7,0], [5.25,0,0], [3.5,7,0], [1.75,0,0], [1.75,-1,0], [8,-1,0] ],\n  'X': [ [0,0,0], [7,7,0], [3.5,3.5,0], [0,7,0], [7,0,0], [3.5,3.5,0], [0,0,0], [0,-1,0], [8,-1,0] ],\n  'Y': [ [3.5,-1,0], [3.5,3.5,0], [0,7,0], [3.5,3.5,0], [7,7,0], [3.5,3.5,0], [3.5,-1,0], [8,-1,0] ],\n  'Z': [ [0,0,0], [7,0,0], [0,0,0], [7,7,0], [0,7,0], [7,7,0], [0,0,0], [0,-1,0], [8,-1,0] ],\n  '0': [ [3.5,-1,0], [3.5,0,0], [6,3.5,2], [3.5,7,1], [1,3.5,4], [3.5,0,3], [3.5,-1,0], [8,-1,0] ],\n  '1': [ [0,-1,0], [0,0,0], [0,0,0], [7,0,0], [3.5,0,0], [3.5,7,0], [1.5,6,2], [3.5,7,2], [3.5,0,0], [0,0,0], [0,-1,0], [8,-1,0] ],\n  '2': [ [1,-1,0], [1,0,0], [6,5.25,0], [3.5,7,1], [1,5.25,4], [3.5,7,4], [6,5.25,1], [1,0,0], [6,0,0], [1,0,0], [1,-1,0], [8,-1,0] ],\n  '3': [ [3.5,-1,0], [3.5,0,0], [1,1.75,3], [3.5,0,3], [6,1.75,2], [3.5,3.5,1], [6,5.25,2], [3.5,7,1], [1,5.25,4], [3.5,7,4], [6,5.25,1], [3.5,3.5,2], [6,1.75,1], [3.5,0,2], [3.5,-1,0], [8,-1,0] ],\n  '4': [ [3.5,-1,0], [3.5,0,0], [3.5,7,0], [1,3.5,0], [6,3.5,0], [3.5,3.5,0], [3.5,-1,0], [8,-1,0] ],\n  '5': [ [3.5,-1,0], [3.5,0,0], [1,1.75,3], [3.5,0,3], [6,1.75,2], [3.5,3.5,1],[1,3.5,0], [1,7,0], [6,7,0], [1,7,0], [1,3.5,0], [3.5,3.5,0], [6,1.75,1], [3.5,0,2], [3.5,-1,0], [8,-1,0] ],\n  '6': [ [3.5,-1,0], [3.5,0,0], [1,1.75,3], [5.25,7,4], [1,1.75,4], [3.5,0,3],[6,1.75,2], [3.5,3.5,1], [1,1.75,4], [3.5,0,3], [3.5,-1,0], [8,-1,0] ],\n  '7': [ [3.5,-1,0], [3.5,0,0], [6,7,0], [1,7,0], [6,7,0], [3.5,0,0], [3.5,-1,0], [8,-1,0] ],\n  '8': [ [3.5,-1,0], [3.5,0,0], [1,1.75,3], [6,5.25,0], [3.5,7,1], [1,5.25,4], [6,1.75,0], [3.5,0,2], [3.5,-1,0], [8,-1,0] ],\n  '9': [ [3.5,-1,0], [3.5,0,0], [6,5.25,2], [3.5,7,1], [1,5.25,4], [3.5,3.5,3], [6,5.25,2], [3.5,0,2], [3.5,-1,0], [8,-1,0] ],\n  '$': [ [3.5,-1,0], [3.5,0.5,0], [0,2.00,3], [3.5,0.5,3], [7,2.00,2], [3.5,3.5,1], [0,5.00,3], [3.5,6.5,4], [7,5.00,1], [3.5,6.5,1], [3.5, 7, 0], [3.5, 0, 0], [3.5,-1,0], [8,-1,0] ],\n  '.': [ [3.5,-1,0], [3.5,0.5,0], [3,1,3], [3.5,1.5,4], [4,1,1], [3.5,0.5,2], [3.5,-1,0], [8,-1,0] ],\n};\n\n// This is a clever way to create a range from 0..32, and then compute an x,y for each of those\n// points on the unit circle from zero to pi/2.\nconst curve = [...Array(32).keys()].map((index) => {\n  let angle = (index+1) * Math.PI/2.0/32.0;\n  return Vertex(Math.cos(angle), Math.sin(angle));\n});\n\nconst billseyConverter = (vertices) => {\n  let newVertices = [];\n  let prevPoint = Vertex(0,0);\n  vertices.forEach( (vertex) => {\n    switch (vertex[2]) {\n    case 0:\n    default:\n      newVertices.push(Vertex(vertex[0] / 8.0, vertex[1] / 4.0));\n      break;\n    case 1: // NE\n      if (vertex[1] < prevPoint[1]) { // clockwise\n        let width = Math.abs(vertex[0] - prevPoint[0]) / 8.0;\n        let height = Math.abs(vertex[1] - prevPoint[1]) / 4.0;\n        newVertices = newVertices.concat(curve.map( cv => Vertex(cv.x * width + prevPoint[0] / 8.0, cv.y * height + vertex[1] / 4.0)).reverse());\n      } else { // ccwise\n        let width = Math.abs(vertex[0] - prevPoint[0]) / 8.0;\n        let height = Math.abs(vertex[1] - prevPoint[1]) / 4.0;\n        newVertices = newVertices.concat(curve.map( cv => Vertex(cv.x * width + vertex[0] / 8.0, cv.y * height + prevPoint[1] / 4.0)));\n      }\n      newVertices.push(Vertex(vertex[0] / 8.0, vertex[1] / 4.0));\n      break;\n    case 2: // SE\n      if (vertex[1] < prevPoint[1]) { // clockwise\n        let width = Math.abs(vertex[0] - prevPoint[0]) / 8.0;\n        let height = -Math.abs(vertex[1] - prevPoint[1]) / 4.0;\n        newVertices = newVertices.concat(curve.map( cv => Vertex(cv.x * width + vertex[0] / 8.0, cv.y * height + prevPoint[1] / 4.0)));\n      } else { // ccwise\n        let width = Math.abs(vertex[0] - prevPoint[0]) / 8.0;\n        let height = -Math.abs(vertex[1] - prevPoint[1]) / 4.0;\n        newVertices = newVertices.concat(curve.map( cv => Vertex(cv.x * width + prevPoint[0] / 8.0, cv.y * height + vertex[1] / 4.0)).reverse());\n      }\n      newVertices.push(Vertex(vertex[0] / 8.0, vertex[1] / 4.0));\n      break;\n    case 3: // SW\n      if (vertex[1] > prevPoint[1]) { // clockwise\n        let width = -Math.abs(vertex[0] - prevPoint[0]) / 8.0;\n        let height = -Math.abs(vertex[1] - prevPoint[1]) / 4.0;\n        newVertices = newVertices.concat(curve.map( cv => Vertex(cv.x * width + prevPoint[0] / 8.0, cv.y * height + vertex[1] / 4.0)).reverse());\n      } else { // ccwise\n        let width = -Math.abs(vertex[0] - prevPoint[0]) / 8.0;\n        let height = -Math.abs(vertex[1] - prevPoint[1]) / 4.0;\n        newVertices = newVertices.concat(curve.map( cv => Vertex(cv.x * width + vertex[0] / 8.0, cv.y * height + prevPoint[1] / 4.0)));\n      }\n      newVertices.push(Vertex(vertex[0] / 8.0, vertex[1] / 4.0));\n      break;\n    case 4: // NW\n      if (vertex[1] > prevPoint[1]) { // clockwise\n        let width = -Math.abs(vertex[0] - prevPoint[0]) / 8.0;\n        let height = Math.abs(vertex[1] - prevPoint[1]) / 4.0;\n        newVertices = newVertices.concat(curve.map( cv => Vertex(cv.x * width + vertex[0] / 8.0, cv.y * height + prevPoint[1] / 4.0)));\n      } else { // ccwise\n        let width = -Math.abs(vertex[0] - prevPoint[0]) / 8.0;\n        let height = Math.abs(vertex[1] - prevPoint[1]) / 4.0;\n        newVertices = newVertices.concat(curve.map( cv => Vertex(cv.x * width + prevPoint[0] / 8.0, cv.y * height + vertex[1] / 4.0)).reverse());\n      }\n      newVertices.push(Vertex(vertex[0] / 8.0, vertex[1] / 4.0));\n      break;\n    }\n    prevPoint = vertex;\n  });\n\n  return {\n    max_x: fontSpacing,\n    vertices: newVertices,\n  };\n}\n\nexport const Font2 = (ch) => {\n  let upper = ch.toUpperCase();\n  if (billsey.hasOwnProperty(upper)) {\n    return billseyConverter(billsey[upper]);\n  } else {\n    return billseyConverter(billsey[' ']);\n  }\n}\n","import { Vertex } from '../Geometry';\n\nlet Vicious1Vertices = () => {\n  return [\n    Vertex(-0.745613252629, 0.342139688058),\n    Vertex(-0.722681883112, 0.350763810109),\n    Vertex(-0.700286039815, 0.359363989838),\n    Vertex(-0.683380317501, 0.365945196632),\n    Vertex(-0.666520036737, 0.372640251609),\n    Vertex(-0.649705686141, 0.379449643388),\n    Vertex(-0.632937754332, 0.386372394731),\n    Vertex(-0.61621672993, 0.393408994259),\n    Vertex(-0.59954407879, 0.400558464732),\n    Vertex(-0.582920289531, 0.40782080615),\n    Vertex(-0.566345850773, 0.415195529896),\n    Vertex(-0.549821739752, 0.42268214735),\n    Vertex(-0.533348933706, 0.430280658513),\n    Vertex(-0.516927921255, 0.437990574764),\n    Vertex(-0.500559191017, 0.445811896105),\n    Vertex(-0.484244208848, 0.453743645298),\n    Vertex(-0.467982974749, 0.461785822342),\n    Vertex(-0.451776954575, 0.46993793862),\n    Vertex(-0.435626636946, 0.478199505511),\n    Vertex(-0.417042020391, 0.487809171708),\n    Vertex(-0.398529230801, 0.497557117029),\n    Vertex(-0.380089734033, 0.507441875618),\n    Vertex(-0.361724018706, 0.517463936093),\n    Vertex(-0.343433550675, 0.527621343979),\n    Vertex(-0.325218818561, 0.537915076515),\n    Vertex(-0.307080799601, 0.548343667842),\n    Vertex(-0.289020959651, 0.558906629343),\n    Vertex(-0.271040275948, 0.569603472399),\n    Vertex(-0.253139237112, 0.580433708391),\n    Vertex(-0.235319797618, 0.591396360082),\n    Vertex(-0.217581468846, 0.60249142747),\n    Vertex(-0.199926693892, 0.61371793332),\n    Vertex(-0.182355472755, 0.625075389011),\n    Vertex(-0.164869271291, 0.636562817306),\n    Vertex(-0.147469066739, 0.648180218206),\n    Vertex(-0.130155347716, 0.659926125854),\n    Vertex(-0.112929580079, 0.671800540249),\n    Vertex(-0.0957922524482, 0.683802484155),\n    Vertex(-0.0787448306786, 0.695931957571),\n    Vertex(-0.0617878033894, 0.708187006022),\n    Vertex(-0.0449226364371, 0.720568118127),\n    Vertex(-0.0281493298216, 0.733074316648),\n    Vertex(-0.0114698380183, 0.745704624347),\n    Vertex(0.00511535035415, 0.758458552606),\n    Vertex(0.021605258058, 0.771335124187),\n    Vertex(0.0379993964745, 0.78433433909),\n    Vertex(0.0542962997473, 0.79745424284),\n    Vertex(0.0689143087782, 0.809362371934),\n    Vertex(0.0834609794625, 0.821357963795),\n    Vertex(0.0979358231812, 0.833440041186),\n    Vertex(0.112337862697, 0.845608604107),\n    Vertex(0.12666660939, 0.857863652558),\n    Vertex(0.140921574643, 0.870203720682),\n    Vertex(0.155102758455, 0.882629297099),\n    Vertex(0.169209183589, 0.895138915952),\n    Vertex(0.181539967956, 0.906207597924),\n    Vertex(0.193955771996, 0.91718051061),\n    Vertex(0.206455618473, 0.928057165389),\n    Vertex(0.219038530147, 0.938837562262),\n    Vertex(0.22146207946, 0.940840899396),\n    Vertex(0.223916411758, 0.942806124262),\n    Vertex(0.226401527041, 0.944732748242),\n    Vertex(0.228916936691, 0.946620282717),\n    Vertex(0.230887047745, 0.948104706671),\n    Vertex(0.232926054052, 0.949493361338),\n    Vertex(0.235029069424, 0.950783803623),\n    Vertex(0.237191207672, 0.951972124576),\n    Vertex(0.239407582608, 0.953055881104),\n    Vertex(0.241672819425, 0.954032630111),\n    Vertex(0.243982520555, 0.954900417123),\n    Vertex(0.246330822571, 0.955656799046),\n    Vertex(0.248847209458, 0.956426373676),\n    Vertex(0.251395845187, 0.957082100124),\n    Vertex(0.253971354951, 0.957622512531),\n    Vertex(0.256568363942, 0.958047610898),\n    Vertex(0.259181985973, 0.958355440751),\n    Vertex(0.261806846237, 0.958546002088),\n    Vertex(0.264437081308, 0.958618806291),\n    Vertex(0.267068293617, 0.958573364741),\n    Vertex(0.269695108356, 0.958410166058),\n    Vertex(0.2723116621, 0.95812921024),\n    Vertex(0.274913068661, 0.957731474526),\n    Vertex(0.277493953231, 0.957217447535),\n    Vertex(0.280048941005, 0.956588595122),\n    Vertex(0.282573634412, 0.955845405908),\n    Vertex(0.285062170027, 0.954989834366),\n    Vertex(0.287510150281, 0.954023834973),\n    Vertex(0.289695253613, 0.953107674698),\n    Vertex(0.291880845564, 0.952108937844),\n    Vertex(0.301388879047, 0.947138218659),\n    Vertex(0.310845118937, 0.942069775711),\n    Vertex(0.320249076614, 0.936904097619),\n    Vertex(0.329599286221, 0.931642650239),\n    Vertex(0.363485000908, 0.912453612212),\n    Vertex(0.397329182996, 0.8931922586),\n    Vertex(0.431132321104, 0.873858589404),\n    Vertex(0.464893926612, 0.854453093243),\n    Vertex(0.498613999522, 0.834975281497),\n    Vertex(0.532292539832, 0.815425642786),\n    Vertex(0.565929058925, 0.795804177109),\n    Vertex(0.599524045418, 0.776110884466),\n    Vertex(0.614195802519, 0.767461354237),\n    Vertex(0.628780096852, 0.758665238364),\n    Vertex(0.643274973942, 0.749722536847),\n    Vertex(0.657679456551, 0.740634715542),\n    Vertex(0.663100193664, 0.737124966608),\n    Vertex(0.668459853424, 0.733522380099),\n    Vertex(0.673756481358, 0.729827933253),\n    Vertex(0.678988611609, 0.72604211469),\n    Vertex(0.681833350338, 0.72394251965),\n    Vertex(0.684601864533, 0.721743246372),\n    Vertex(0.687290245243, 0.719446737951),\n    Vertex(0.689896049373, 0.717056903336),\n    Vertex(0.692415367973, 0.714576674241),\n    Vertex(0.694845269331, 0.71200800514),\n    Vertex(0.697182821733, 0.709355293604),\n    Vertex(0.699425093466, 0.706621471345),\n    Vertex(0.70031242523, 0.705263599663),\n    Vertex(0.70110301047, 0.703846605105),\n    Vertex(0.701792940234, 0.702378794191),\n    Vertex(0.702378794191, 0.700866030346),\n    Vertex(0.702858129247, 0.699316131471),\n    Vertex(0.703228502307, 0.697736426848),\n    Vertex(0.703487470278, 0.696135222997),\n    Vertex(0.703634544541, 0.694519360583),\n    Vertex(0.703808492838, 0.692484263226),\n    Vertex(0.704005894839, 0.688243540547),\n    Vertex(0.704113390977, 0.683999886156),\n    Vertex(0.704130981255, 0.679754765908),\n    Vertex(0.704059154289, 0.675510622897),\n    Vertex(0.703896932843, 0.671268434362),\n    Vertex(0.703645294154, 0.667031132015),\n    Vertex(0.703303749604, 0.662799693094),\n    Vertex(0.702872787811, 0.658576560692),\n    Vertex(0.701225165173, 0.648144060414),\n    Vertex(0.699422161753, 0.637737456933),\n    Vertex(0.697463288931, 0.627358704724),\n    Vertex(0.695350012565, 0.617010735501),\n    Vertex(0.693864122754, 0.60962184181),\n    Vertex(0.691242194203, 0.596705692105),\n    Vertex(0.688638833167, 0.58378514483),\n    Vertex(0.686055016884, 0.570860688605),\n    Vertex(0.683489768115, 0.557932812049),\n    Vertex(0.679173798139, 0.53578860744),\n    Vertex(0.675031287842, 0.513610688133),\n    Vertex(0.671063214461, 0.491401008603),\n    Vertex(0.667269089377, 0.469161523326),\n    Vertex(0.663649889828, 0.446892232301),\n    Vertex(0.660205127196, 0.424595578622),\n    Vertex(0.65693480148, 0.402273028147),\n    Vertex(0.653839889918, 0.379925069493),\n    Vertex(0.65092039251, 0.357553168517),\n    Vertex(0.648176309256, 0.335159768314),\n    Vertex(0.645608128774, 0.312745357501),\n    Vertex(0.643215362447, 0.290311401936),\n    Vertex(0.641387928086, 0.272862824121),\n    Vertex(0.640313455316, 0.262524627274),\n    Vertex(0.639318138793, 0.252178123907),\n    Vertex(0.638402467138, 0.241824779876),\n    Vertex(0.637566440349, 0.231464595183),\n    Vertex(0.636809569807, 0.221098058444),\n    Vertex(0.636132344132, 0.210726146899),\n    Vertex(0.635534763324, 0.200349349165),\n    Vertex(0.635016338763, 0.189968153863),\n    Vertex(0.634136336281, 0.166283334136),\n    Vertex(0.633371647838, 0.14259411684),\n    Vertex(0.632722273436, 0.118901479213),\n    Vertex(0.632187724454, 0.0952059098725),\n    Vertex(0.631768489513, 0.0715078974381),\n    Vertex(0.631464568611, 0.0478084191472),\n    Vertex(0.63127547313, 0.0241079636186),\n    Vertex(0.631201691689, 0.000406530852484),\n    Vertex(0.631270098323, -0.0222394852774),\n    Vertex(0.631441114908, -0.0448845241697),\n    Vertex(0.631715230062, -0.0675285858243),\n    Vertex(0.632092443786, -0.0901711816225),\n    Vertex(0.63257226746, -0.112811822945),\n    Vertex(0.633154701085, -0.135450021174),\n    Vertex(0.63384023328, -0.158085776309),\n    Vertex(0.634628864044, -0.180717622493),\n    Vertex(0.635306089719, -0.195449968327),\n    Vertex(0.636126969325, -0.210174984878),\n    Vertex(0.637091014243, -0.22489120629),\n    Vertex(0.638198713093, -0.239597655326),\n    Vertex(0.639449577254, -0.254292377511),\n    Vertex(0.640843606728, -0.268974395606),\n    Vertex(0.642380801514, -0.283642243756),\n    Vertex(0.644060672993, -0.298293967485),\n    Vertex(0.64612020129, -0.31581290641),\n    Vertex(0.6482320118, -0.333325493289),\n    Vertex(0.65039757038, -0.350831239505),\n    Vertex(0.652615411173, -0.368331122296),\n    Vertex(0.654741880247, -0.384873800832),\n    Vertex(0.656970959272, -0.401402798041),\n    Vertex(0.659303625486, -0.417918113923),\n    Vertex(0.661739390269, -0.434418282622),\n    Vertex(0.664278253622, -0.450902815519),\n    Vertex(0.666919726926, -0.467371223995),\n    Vertex(0.66966381018, -0.483822530812),\n    Vertex(0.672510992004, -0.500256735972),\n    Vertex(0.675460295159, -0.516672862235),\n    Vertex(0.678512696885, -0.533069932364),\n    Vertex(0.681666731323, -0.54944794636),\n    Vertex(0.684923375712, -0.565805926984),\n    Vertex(0.688253801542, -0.582478578124),\n    Vertex(0.691624294115, -0.599143411363),\n    Vertex(0.695033876193, -0.615799938082),\n    Vertex(0.698483036394, -0.632448158282),\n    Vertex(0.700362264349, -0.641257466863),\n    Vertex(0.702110053844, -0.650093649478),\n    Vertex(0.703725916259, -0.658955240272),\n    Vertex(0.705209362975, -0.667839796151),\n    Vertex(0.705560191283, -0.670609776202),\n    Vertex(0.705811829972, -0.673129583421),\n    Vertex(0.705988709982, -0.675296119238),\n    Vertex(0.706054184903, -0.677469495719),\n    Vertex(0.706007766116, -0.679642872199),\n    Vertex(0.70584945362, -0.681811362492),\n    Vertex(0.705579736035, -0.683968614552),\n    Vertex(0.705199590599, -0.686109253572),\n    Vertex(0.704709505929, -0.688227904745),\n    Vertex(0.704111436502, -0.690317727409),\n    Vertex(0.702891355326, -0.694066410943),\n    Vertex(0.701505632372, -0.697756460219),\n    Vertex(0.699955733497, -0.701380545956),\n    Vertex(0.698245567651, -0.704932316108),\n    Vertex(0.696378555166, -0.708403464156),\n    Vertex(0.694358116374, -0.711788126674),\n    Vertex(0.692188648844, -0.715079462999),\n    Vertex(0.689874061527, -0.718270143849),\n    Vertex(0.688711148751, -0.719521985248),\n    Vertex(0.687505237521, -0.720732294048),\n    Vertex(0.686256816453, -0.721899115774),\n    Vertex(0.684968817262, -0.723021473187),\n    Vertex(0.683641728566, -0.724097900432),\n    Vertex(0.68227750484, -0.725126443034),\n    Vertex(0.68087761194, -0.726106612373),\n    Vertex(0.679444492961, -0.727036942593),\n    Vertex(0.669607619016, -0.733287843069),\n    Vertex(0.659707713245, -0.739438576688),\n    Vertex(0.649746730121, -0.745489632069),\n    Vertex(0.639724669646, -0.751439054737),\n    Vertex(0.626066307964, -0.75960143201),\n    Vertex(0.588245257356, -0.781929357292),\n    Vertex(0.550379253818, -0.804180569421),\n    Vertex(0.512467808729, -0.826354091159),\n    Vertex(0.474510922092, -0.848449922505),\n    Vertex(0.436509082523, -0.87046806346),\n    Vertex(0.398462290023, -0.892408514024),\n    Vertex(0.360370544593, -0.914271274197),\n    Vertex(0.322234334851, -0.936056343978),\n    Vertex(0.311636192795, -0.942000391839),\n    Vertex(0.303639945919, -0.946411153865),\n    Vertex(0.301535464691, -0.947610713051),\n    Vertex(0.299393848434, -0.94874333146),\n    Vertex(0.29721754024, -0.949807054616),\n    Vertex(0.295008494586, -0.9508013939),\n    Vertex(0.292769154566, -0.951725372076),\n    Vertex(0.290501474654, -0.952577523286),\n    Vertex(0.288207897946, -0.95335784753),\n    Vertex(0.285890867534, -0.954064878953),\n    Vertex(0.282197886545, -0.955003515693),\n    Vertex(0.278465327432, -0.955768692754),\n    Vertex(0.274700519477, -0.956358455661),\n    Vertex(0.270912257819, -0.956772315796),\n    Vertex(0.267109337597, -0.957008318683),\n    Vertex(0.263299088092, -0.957066464322),\n    Vertex(0.259490304444, -0.956946752712),\n    Vertex(0.255691781792, -0.956649183855),\n    Vertex(0.251910849416, -0.956174246369),\n    Vertex(0.248156302456, -0.95552340611),\n    Vertex(0.244436447432, -0.954697640316),\n    Vertex(0.240758613626, -0.953699392081),\n    Vertex(0.240319833932, -0.953534238922),\n    Vertex(0.238502171947, -0.952568728147),\n    Vertex(0.236709918141, -0.951555821348),\n    Vertex(0.234945026988, -0.950496007142),\n    Vertex(0.233208964345, -0.949390262768),\n    Vertex(0.23150270745, -0.948239076844),\n    Vertex(0.22982723354, -0.94704293799),\n    Vertex(0.228184008471, -0.945803312061),\n    Vertex(0.226574009482, -0.944520687677),\n    Vertex(0.224074235635, -0.942570121375),\n    Vertex(0.212583875626, -0.933021043911),\n    Vertex(0.201218113415, -0.923323914947),\n    Vertex(0.189977926239, -0.913481666195),\n    Vertex(0.178866245811, -0.903494297655),\n    Vertex(0.161323853183, -0.887790577622),\n    Vertex(0.143655885521, -0.872228557044),\n    Vertex(0.125862831443, -0.856809213159),\n    Vertex(0.107946156805, -0.841533523206),\n    Vertex(0.0899073274635, -0.82640295304),\n    Vertex(0.0717468320377, -0.811418479899),\n    Vertex(0.0534666250026, -0.796580103784),\n    Vertex(0.0350671949772, -0.781890267787),\n    Vertex(0.0165500078179, -0.767348483291),\n    Vertex(-0.00208395923779, -0.752956704771),\n    Vertex(-0.0208327517145, -0.738715420845),\n    Vertex(-0.0396958809936, -0.724625608751),\n    Vertex(-0.0586718812184, -0.710688245726),\n    Vertex(-0.0777597751514, -0.69690382039),\n    Vertex(-0.0969580969362, -0.683274287218),\n    Vertex(-0.116265380716, -0.66979964621),\n    Vertex(-0.135680649254, -0.656480874603),\n    Vertex(-0.155202436693, -0.643318949635),\n    Vertex(-0.174829765796, -0.630314359925),\n    Vertex(-0.194561170706, -0.617469059948),\n    Vertex(-0.214395674185, -0.604782561085),\n    Vertex(-0.234331321759, -0.592256329193),\n    Vertex(-0.254367624808, -0.579891341509),\n    Vertex(-0.274502628858, -0.567688086652),\n    Vertex(-0.29394086248, -0.556123456584),\n    Vertex(-0.313469979201, -0.54471371868),\n    Vertex(-0.333088513165, -0.533458384321),\n    Vertex(-0.352795975753, -0.522359407981),\n    Vertex(-0.372590901108, -0.511416789662),\n    Vertex(-0.392471334756, -0.500631017982),\n    Vertex(-0.412437276696, -0.490003070179),\n    Vertex(-0.432486283835, -0.47953392349),\n    Vertex(-0.452617867553, -0.469224066534),\n    Vertex(-0.472830073375, -0.459073499311),\n    Vertex(-0.493122412682, -0.449083687678),\n    Vertex(-0.513493419618, -0.439255120252),\n    Vertex(-0.533941628327, -0.429588285654),\n    Vertex(-0.554465572951, -0.420083183884),\n    Vertex(-0.575064276254, -0.410741769415),\n    Vertex(-0.595736272379, -0.401563065011),\n    Vertex(-0.61648009547, -0.392549025148),\n    Vertex(-0.637294768288, -0.383699161205),\n    Vertex(-0.658179313597, -0.37501493904),\n    Vertex(-0.679131776921, -0.366496358653),\n    Vertex(-0.698898362385, -0.3585812225),\n    Vertex(-0.718729934152, -0.350830262268),\n    Vertex(-0.738624537745, -0.34324250072),\n    Vertex(-0.758581195928, -0.33581989233),\n    Vertex(-0.778598442844, -0.32856194848),\n    Vertex(-0.798674812635, -0.32146915779),\n    Vertex(-0.818809328066, -0.314542497496),\n    Vertex(-0.83900003466, -0.307782456217),\n    Vertex(-0.849647527216, -0.304229708827),\n    Vertex(-0.859482935305, -0.301024369413),\n    Vertex(-0.86930319621, -0.297772122593),\n    Vertex(-0.879107821313, -0.294472968367),\n    Vertex(-0.888896810615, -0.291126906735),\n    Vertex(-0.898669186876, -0.287733937697),\n    Vertex(-0.908425927336, -0.284294061253),\n    Vertex(-0.918165566137, -0.28080825464),\n    Vertex(-0.927888591898, -0.277275540622),\n    Vertex(-0.931015263683, -0.276110673371),\n    Vertex(-0.934077437785, -0.27478553915),\n    Vertex(-0.937066807683, -0.273304046909),\n    Vertex(-0.939975066859, -0.271669128361),\n    Vertex(-0.942794886029, -0.269885669693),\n    Vertex(-0.945518447293, -0.267958557094),\n    Vertex(-0.948138909988, -0.265892676752),\n    Vertex(-0.950648456212, -0.263693892093),\n    Vertex(-0.953040245302, -0.261368066543),\n    Vertex(-0.955308902451, -0.258921063527),\n    Vertex(-0.957447586996, -0.256360212328),\n    Vertex(-0.959450435511, -0.25369186499),\n    Vertex(-0.961260768213, -0.251131991028),\n    Vertex(-0.962993410524, -0.248518368997),\n    Vertex(-0.96464591935, -0.245853930609),\n    Vertex(-0.966217317453, -0.24314063034),\n    Vertex(-0.972878657732, -0.231316055063),\n    Vertex(-0.972926053757, -0.0130031238537),\n    Vertex(-0.972925565138, 0.00628803550555),\n    Vertex(-0.97291628138, 0.0249869888634),\n    Vertex(-0.972898202484, 0.0430570898088),\n    Vertex(-0.972858135742, 0.0776097691758),\n    Vertex(-0.972741844464, 0.112162448543),\n    Vertex(-0.972548351414, 0.146714639291),\n    Vertex(-0.972277656592, 0.181266341421),\n    Vertex(-0.972203875151, 0.189501034277),\n    Vertex(-0.972085629398, 0.197735727134),\n    Vertex(-0.971922919333, 0.205968954135),\n    Vertex(-0.971715256338, 0.214201692516),\n    Vertex(-0.971568670694, 0.217132916776),\n    Vertex(-0.971310679961, 0.220056811754),\n    Vertex(-0.970942749994, 0.222968491261),\n    Vertex(-0.970464880795, 0.225864534966),\n    Vertex(-0.969878049601, 0.228740056681),\n    Vertex(-0.96918274503, 0.231591636074),\n    Vertex(-0.968380432939, 0.234414875576),\n    Vertex(-0.967472090565, 0.237205866236),\n    Vertex(-0.966500716365, 0.23992551855),\n    Vertex(-0.965406210223, 0.242597774839),\n    Vertex(-0.964191015235, 0.245217260296),\n    Vertex(-0.962857085875, 0.247778600114),\n    Vertex(-0.961408331095, 0.250276908105),\n    Vertex(-0.959846705368, 0.252705832225),\n    Vertex(-0.958176117646, 0.255061463523),\n    Vertex(-0.956399499642, 0.257337938573),\n    Vertex(-0.954520760305, 0.259531348425),\n    Vertex(-0.952544297207, 0.261636318272),\n    Vertex(-0.950473530677, 0.263649427781),\n    Vertex(-0.948313346904, 0.265565790766),\n    Vertex(-0.946067654839, 0.267381009657),\n    Vertex(-0.94374134067, 0.269092641359),\n    Vertex(-0.941339779204, 0.270695799685),\n    Vertex(-0.93886736801, 0.27218804154),\n    Vertex(-0.936329481894, 0.273565946593),\n    Vertex(-0.933731007046, 0.274826094512),\n    Vertex(-0.93107829551, 0.27596701944),\n    Vertex(-0.928375744855, 0.276985301047),\n    Vertex(-0.913861323012, 0.282438287001),\n    Vertex(-0.899294130338, 0.287750550737),\n    Vertex(-0.884676121307, 0.292920137779),\n    Vertex(-0.870008761776, 0.297948025366),\n    Vertex(-0.854391527272, 0.303278856616),\n    Vertex(-0.838793348902, 0.308665390412),\n    Vertex(-0.823214226666, 0.314107138133),\n    Vertex(-0.807654649182, 0.319603611161),\n    Vertex(-0.792114127832, 0.325155298116),\n    Vertex(-0.776593639853, 0.330761710377),\n    Vertex(-0.761093185246, 0.336423336564),\n    Vertex(-0.745613252629, 0.342139688058),\n  ];\n}\n\nexport default Vicious1Vertices;\n","import React, { Component } from 'react';\nimport {\n  Col,\n  ControlLabel,\n  Form,\n  FormControl,\n  FormGroup,\n  ListGroup,\n  ListGroupItem,\n  Panel,\n} from 'react-bootstrap'\nimport './Transforms.css'\nimport { connect } from 'react-redux';\n\nimport { Polygon } from '../shapes/Polygon.js';\nimport { Star } from '../shapes/Star.js';\nimport { Circle } from '../shapes/Circle.js';\nimport { Heart } from '../shapes/Heart.js';\nimport { Reuleaux } from '../shapes/Reuleaux.js';\nimport { Epicycloid } from '../shapes/Epicycloid.js';\nimport { Hypocycloid } from '../shapes/Hypocycloid.js';\nimport { Rose } from '../shapes/Rose.js';\nimport { InputText } from '../shapes/InputText.js';\nimport { V1Engineering } from '../shapes/V1Engineering.js';\n\nexport const registeredShapes = [Polygon, Star, Circle, Heart, Reuleaux, Epicycloid,\n  Hypocycloid, Rose, InputText, V1Engineering];\n\n// Transform actions\nexport const addShape = ( shape ) => {\n  return {\n    type: 'ADD_SHAPE',\n    shape: shape,\n  };\n}\nexport const setShape = ( shape ) => {\n  return {\n    type: 'SET_SHAPE',\n    value: shape,\n  };\n}\n\nexport const setShapeSize = ( size ) => {\n  return {\n    type: 'SET_SHAPE_SIZE',\n    value: size,\n  };\n}\n\nexport const setXFormOffsetX = ( offset ) => {\n  return {\n    type: 'SET_SHAPE_OFFSET_X',\n    value: parseFloat(offset),\n  };\n}\n\nexport const setXFormOffsetY = ( offset ) => {\n  return {\n    type: 'SET_SHAPE_OFFSET_Y',\n    value: parseFloat(offset),\n  };\n}\n\nexport const setLoops = ( loops ) => {\n  return {\n    type: 'SET_LOOPS',\n    value: loops,\n  };\n}\n\nexport const toggleSpin = ( ) => {\n  return {\n    type: 'TOGGLE_SPIN',\n  };\n}\n\nexport const setSpin = ( value ) => {\n  return {\n    type: 'SET_SPIN',\n    value: parseFloat(value),\n  };\n}\n\nexport const setSpinSwitchbacks = ( value ) => {\n  return {\n    type: 'SET_SPIN_SWITCHBACKS',\n    value: parseInt(value),\n  };\n}\n\nexport const toggleGrow = ( ) => {\n  return {\n    type: 'TOGGLE_GROW',\n  };\n}\n\nexport const setGrow = ( value ) => {\n  return {\n    type: 'SET_GROW',\n    value: value,\n  };\n}\n\nexport const toggleTrack = ( ) => {\n  return {\n    type: 'TOGGLE_TRACK',\n  };\n}\n\nexport const toggleTrackGrow = ( ) => {\n  return {\n    type: 'TOGGLE_TRACK_GROW',\n  };\n}\n\nexport const setTrack = ( value ) => {\n  return {\n    type: 'SET_TRACK',\n    value: value,\n  };\n}\n\nexport const setTrackLength = ( value ) => {\n  return {\n    type: 'SET_TRACK_LENGTH',\n    value: value,\n  };\n}\n\nexport const setTrackGrow = ( value ) => {\n  return {\n    type: 'SET_TRACK_GROW',\n    value: value,\n  };\n}\n\nconst disableEnter = (event) => {\n  if (event.key === 'Enter' && event.shiftKey === false) {\n    event.preventDefault();\n  }\n};\n\nclass Shape extends Component {\n  render() {\n    var activeClassName = \"\";\n    if (this.props.active) {\n      activeClassName = \"active\";\n    }\n\n    var options_render = this.props.options.map( (option) => {\n      return <FormGroup controlId=\"options-step\" key={option.title}>\n               <Col componentClass={ControlLabel} sm={4}>\n                 {option.title}\n               </Col>\n               <Col sm={8}>\n                 <FormControl\n                   type={option.type ? option.type : \"number\"}\n                   step={option.step ? option.step : 1}\n                   value={option.value()}\n                   onChange={(event) => {\n                     option.onChange(event)\n                   }}\n                   onKeyDown={disableEnter}/>\n               </Col>\n             </FormGroup>\n    });\n\n    var options_list_render = undefined;\n    var link_render = undefined;\n\n    if (this.props.link) {\n      link_render = <p>See <a target=\"_blank\" rel=\"noopener noreferrer\" href={this.props.link}>{this.props.link}</a> for ideas</p>;\n    }\n\n    if (this.props.options.length >= 1) {\n      options_list_render =\n        <div className=\"shape-options\">\n          <Panel className=\"options-panel\" collapsible expanded={this.props.active}>\n            <Form horizontal>\n              {link_render}\n              {options_render}\n            </Form>\n          </Panel>\n        </div>\n    }\n\n    return (\n      <div className=\"shape\">\n        <ListGroupItem className={activeClassName} onClick={this.props.clicked}>{this.props.name}</ListGroupItem>\n            {options_list_render}\n      </div>\n    )\n  }\n}\n\nconst shapeListProps = (state, ownProps) => {\n  let props = {\n    shapes: state.shapes.shapes,\n    currentShape: state.shapes.currentShape,\n    startingSize: state.shapes.startingSize,\n    x_offset: state.transform.xformOffsetX,\n    y_offset: state.transform.xformOffsetY,\n  };\n  let registeredProps = registeredShapes.map((shape) => shape.mapStateToProps(state, ownProps));\n\n  return Object.assign(props, ...registeredProps);\n}\n\nconst shapeListDispatch = (dispatch, ownProps) => {\n  let methods = {\n    addShape: (shape) => {\n      dispatch(addShape(shape));\n    },\n    setShape: (name) => {\n      dispatch(setShape(name));\n    },\n    onSizeChange: (event) => {\n      dispatch(setShapeSize(event.target.value));\n    },\n    onOffsetXChange: (event) => {\n      dispatch(setXFormOffsetX(event.target.value));\n    },\n    onOffsetYChange: (event) => {\n      dispatch(setXFormOffsetY(event.target.value));\n    },\n  };\n  let registeredMethods = registeredShapes.map((shape) => shape.mapDispatchToProps(dispatch, ownProps));\n\n  return Object.assign(methods, ...registeredMethods);\n}\n\nclass ShapeList extends Component {\n  constructor(props) {\n    super(props)\n\n    registeredShapes.forEach((shape) => {\n      this.props.addShape(shape.getParams(this));\n    });\n  }\n\n  render() {\n    let self = this;\n\n    var shape_render = this.props.shapes.map( (shape) => {\n      return <Shape\n               key={shape.name}\n               name={shape.name}\n               link={shape.link || \"\"}\n               active={shape.name === self.props.currentShape}\n               options={shape.options}\n               clicked={ () => { self.props.setShape(shape.name); } }\n             />\n    });\n\n    return (\n      <div className=\"shapes\">\n        <ListGroup>\n          {shape_render}\n        </ListGroup>\n        <div className=\"shoptions\">\n          <Panel className=\"options-panel\" collapsible expanded>\n            <Form horizontal>\n              <FormGroup controlId=\"shape-size\">\n                <Col componentClass={ControlLabel} sm={4}>\n                  Starting Size\n                </Col>\n                <Col sm={8}>\n                  <FormControl type=\"number\" value={this.props.startingSize} onChange={this.props.onSizeChange} onKeyDown={disableEnter}/>\n                </Col>\n              </FormGroup>\n              <FormGroup controlId=\"shape-offset\">\n                <Col componentClass={ControlLabel} sm={4}>\n                  Offset\n                </Col>\n                <Col componentClass={ControlLabel} sm={1}>\n                  X\n                </Col>\n                <Col sm={3}>\n                  <FormControl type=\"number\" value={this.props.x_offset} onChange={this.props.onOffsetXChange} onKeyDown={disableEnter}/>\n                </Col>\n                <Col componentClass={ControlLabel} sm={1}>\n                  Y\n                </Col>\n                <Col sm={3}>\n                  <FormControl type=\"number\" value={this.props.y_offset} onChange={this.props.onOffsetYChange} onKeyDown={disableEnter}/>\n                </Col>\n              </FormGroup>\n            </Form>\n          </Panel>\n        </div>\n      </div>\n    )\n  }\n}\n\nShapeList = connect(shapeListProps, shapeListDispatch)(ShapeList) ;\n\nconst rotateProps = (state, ownProps) => {\n  return {\n    active: state.transform.spinEnabled,\n    value: state.transform.spinValue,\n    switchbacks: state.transform.spinSwitchbacks,\n  }\n}\n\nconst rotateDispatch = (dispatch, ownProps) => {\n  return {\n    activeCallback: () => {\n      dispatch(toggleSpin());\n    },\n    onChange: (event) => {\n      dispatch(setSpin(event.target.value));\n    },\n    onSwitchbacksChange: (event) => {\n      dispatch(setSpinSwitchbacks(event.target.value));\n    },\n  }\n}\n\nclass RotationTransform extends Component {\n\n  render() {\n    var activeClassName = \"\";\n    if (this.props.active) {\n      activeClassName = \"active\";\n    }\n\n    return (\n      <div className=\"rotate\">\n        <ListGroupItem header=\"Spin\" className={activeClassName} onClick={this.props.activeCallback}>Spins the input shape a little bit for each copy</ListGroupItem>\n        <div className=\"rotate-options\">\n          <Panel className=\"options-panel\" collapsible expanded={this.props.active}>\n            <Form horizontal>\n              <FormGroup controlId=\"rotate-step\">\n                <Col componentClass={ControlLabel} sm={4}>\n                  Spin Step (Can be Negative)\n                </Col>\n                <Col sm={8}>\n                  <FormControl type=\"number\" step=\"0.1\" value={this.props.value} onChange={this.props.onChange} onKeyDown={disableEnter}/>\n                </Col>\n              </FormGroup>\n              <FormGroup controlId=\"rotate-switchbacks\">\n                <Col componentClass={ControlLabel} sm={4}>\n                  Switchbacks\n                </Col>\n                <Col sm={8}>\n                  <FormControl type=\"number\" step=\"1\" value={this.props.switchbacks} onChange={this.props.onSwitchbacksChange} onKeyDown={disableEnter}/>\n                </Col>\n              </FormGroup>\n            </Form>\n          </Panel>\n        </div>\n      </div>\n    )\n  }\n}\nRotationTransform = connect(rotateProps, rotateDispatch)(RotationTransform) ;\n\n\nconst scaleProps = (state, ownProps) => {\n  return {\n    active: state.transform.growEnabled,\n    value: state.transform.growValue,\n  }\n}\n\nconst scaleDispatch = (dispatch, ownProps) => {\n  return {\n    activeCallback: () => {\n      dispatch(toggleGrow());\n    },\n    onChange: (event) => {\n      dispatch(setGrow(event.target.value));\n    },\n  }\n}\n\nclass ScaleTransform extends Component {\n\n  render() {\n    var activeClassName = \"\";\n    if (this.props.active) {\n      activeClassName = \"active\";\n    }\n\n    return (\n      <div className=\"scale\">\n        <ListGroupItem header=\"Grow\" className={activeClassName} onClick={this.props.activeCallback}>Grows or shrinks the input shape a little bit for each copy</ListGroupItem>\n        <div className=\"scale-options\">\n          <Panel className=\"options-panel\" collapsible expanded={this.props.active}>\n            <Form horizontal>\n              <FormGroup controlId=\"scale-step\">\n                <Col componentClass={ControlLabel} sm={4}>\n                  Grow Step\n                </Col>\n                <Col sm={8}>\n                  <FormControl type=\"number\" value={this.props.value} onChange={this.props.onChange} onKeyDown={disableEnter}/>\n                </Col>\n              </FormGroup>\n            </Form>\n          </Panel>\n        </div>\n      </div>\n    )\n  }\n}\nScaleTransform = connect(scaleProps, scaleDispatch)(ScaleTransform) ;\n\nconst trackProps = (state, ownProps) => {\n  return {\n    active: state.transform.trackEnabled,\n    activeGrow: state.transform.trackGrowEnabled,\n    value: state.transform.trackValue,\n    length: state.transform.trackLength,\n    trackGrow: state.transform.trackGrow,\n  }\n}\n\nconst trackDispatch = (dispatch, ownProps) => {\n  return {\n    activeCallback: () => {\n      dispatch(toggleTrack());\n    },\n    activeGrowCallback: () => {\n      dispatch(toggleTrackGrow());\n    },\n    onChange: (event) => {\n      dispatch(setTrack(event.target.value));\n    },\n    onChangeLength: (event) => {\n      dispatch(setTrackLength(event.target.value));\n    },\n    onChangeGrow: (event) => {\n      dispatch(setTrackGrow(event.target.value));\n    },\n  }\n}\n\nclass TrackTransform extends Component {\n\n  render() {\n    var activeClassName = \"\";\n    if (this.props.active) {\n      activeClassName = \"active\";\n    }\n\n    var activeGrowClassName = \"\";\n    if (this.props.activeGrow) {\n      activeGrowClassName = \"active\";\n    }\n\n    return (\n      <div className=\"track\">\n        <ListGroupItem header=\"Track\" className={activeClassName} onClick={this.props.activeCallback}>Moves the shape along a track (shown in green)</ListGroupItem>\n        <div className=\"track-options\">\n          <Panel className=\"options-panel\" collapsible expanded={this.props.active}>\n            <Form horizontal>\n              <FormGroup controlId=\"track-size\">\n                <Col componentClass={ControlLabel} sm={4}>\n                  Track Size\n                </Col>\n                <Col sm={8}>\n                  <FormControl type=\"number\" value={this.props.value} onChange={this.props.onChange} onKeyDown={disableEnter}/>\n                </Col>\n              </FormGroup>\n              <FormGroup controlId=\"track-length\">\n                <Col componentClass={ControlLabel} sm={4}>\n                  Track Length\n                </Col>\n                <Col sm={8}>\n                  <FormControl type=\"number\" value={this.props.length} step=\"0.05\" onChange={this.props.onChangeLength} onKeyDown={disableEnter}/>\n                </Col>\n              </FormGroup>\n              <ListGroupItem header=\"Grow\" className={activeGrowClassName} onClick={this.props.activeGrowCallback}>Grows or shrinks the track a little bit for each step</ListGroupItem>\n              <div className=\"scale-options\">\n                <Panel className=\"options-panel\" collapsible expanded={this.props.activeGrow}>\n                    <FormGroup controlId=\"scale-step\">\n                      <Col componentClass={ControlLabel} sm={4}>\n                        Track Grow Step\n                      </Col>\n                      <Col sm={8}>\n                        <FormControl type=\"number\" value={this.props.trackGrow} onChange={this.props.onChangeGrow} onKeyDown={disableEnter}/>\n                      </Col>\n                    </FormGroup>\n                </Panel>\n              </div>\n            </Form>\n          </Panel>\n        </div>\n      </div>\n    )\n  }\n}\nTrackTransform = connect(trackProps, trackDispatch)(TrackTransform) ;\n\nconst transformsProps = (state, ownProps) => {\n  return {\n    loops: state.transform.numLoops,\n  }\n}\n\nconst transformsDispatch = (dispatch, ownProps) => {\n  return {\n    changeLoops: (event) => {\n      dispatch(setLoops(event.target.value));\n    },\n  }\n}\n\nclass Transforms extends Component {\n  render() {\n\n    return (\n      <div className=\"transforms\">\n        <Panel className=\"shapes-panel\">\n          <h4>Input Shapes</h4>\n          <ShapeList />\n        </Panel>\n        <Panel className=\"transforms-panel\">\n          <h4>Modifiers</h4>\n          <Panel className=\"options-panel\">\n            <Form horizontal>\n              <FormGroup controlId=\"loop-count\">\n                <Col componentClass={ControlLabel} sm={4}>\n                  Number of Loops\n                </Col>\n                <Col sm={8}>\n                  <FormControl type=\"number\" value={this.props.loops} onChange={this.props.changeLoops} onKeyDown={disableEnter}/>\n                </Col>\n              </FormGroup>\n            </Form>\n          </Panel>\n          <ListGroup>\n            <ScaleTransform\n              />\n            <RotationTransform\n              />\n            <TrackTransform\n              />\n          </ListGroup>\n        </Panel>\n      </div>\n    );\n  }\n}\nTransforms = connect(transformsProps, transformsDispatch)(Transforms);\n\n\nexport default Transforms\n","import { Font2 } from './Fonts';\nimport { Vertex } from '../Geometry';\n\nexport const setShapeInputText = ( text ) => {\n  return {\n    type: 'SET_SHAPE_INPUT_TEXT',\n    value: text,\n  };\n}\n\nexport class InputText {\n  static mapStateToProps(state, ownProps) {\n    return {\n      inputText: state.shapes.inputText,\n    }\n  }\n\n  static mapDispatchToProps(dispatch, ownProps) {\n    return {\n      onInputTextChange: (event) => {\n        dispatch(setShapeInputText(event.target.value));\n      },\n    }\n  }\n\n  static getParams(parent) {\n    return {\n      name: \"Text\",\n      vertices: (state) => {\n        let points = [];\n        const under_y = -0.25;\n        points.push(Vertex(0.0, under_y))\n        let x = 0.0;\n        for (let chi = 0; chi < state.shapes.inputText.length; chi++) {\n          var letter = Font2(state.shapes.inputText[chi]);\n          if (0 < letter.vertices.length) {\n            points.push(Vertex(x + letter.vertices[0].x, under_y))\n          }\n          for (let vi = 0; vi < letter.vertices.length; vi++) {\n            points.push(Vertex(letter.vertices[vi].x + x, letter.vertices[vi].y));\n          }\n          if (0 < letter.vertices.length) {\n            points.push(Vertex(x + letter.vertices[letter.vertices.length-1].x, under_y))\n          }\n          if (chi !== state.shapes.inputText.length-1) {\n            points.push(Vertex(x + letter.max_x, under_y))\n          }\n          x += letter.max_x;\n        }\n        let widthOffset = x / 2.0;\n        return points.map( (point) => {\n          return Vertex(point.x - widthOffset, point.y);\n        });\n      },\n      options: [\n        {\n          title: \"Text\",\n          type: \"textarea\",\n          key: \"inputText\",                    \n          value: () => { return parent.props.inputText },\n          onChange: parent.props.onInputTextChange,\n        },\n      ],\n    };\n  }\n\n  static getReducer(state, action) {\n    switch(action.type) {\n      case 'SET_SHAPE_INPUT_TEXT':\n        return {...state,\n          inputText: action.value,\n        };\n\n      default:\n        return state;\n    }\n  }\n}\n","import Vicious1Vertices from './Vicious1Vertices';\n\nexport class V1Engineering {\n  static mapStateToProps(state, ownProps) {\n    return {\n\n    }\n  }\n\n  static mapDispatchToProps(dispatch, ownProps) {\n    return {\n\n    }\n  }\n\n  static getParams(parent) {\n    return {\n      name: \"V1Engineering\",\n      vertices: (state) => {\n        return Vicious1Vertices();\n      },\n      options: [],\n    };\n}\n\n  static getReducer(state, action) {\n    switch(action.type) {\n      default:\n        return state;\n    }\n  }\n}\n","import { registeredShapes } from '../inputs/Transforms.js'\nimport reduceReducers from 'reduce-reducers';\n\nconst defaultState = {\n  // Transform settings\n  shapes: [],\n  currentShape: \"Polygon\",\n  polygonSides: 4,\n  starPoints: 5,\n  starRatio: 0.5,\n  circleLobes: 1,\n  reuleauxSides: 3,\n  inputText: \"Sandify\",\n  startingSize: 10.0,\n  epicycloidA: 1.0,\n  epicycloidB: .25,\n  hypocycloidA: 1.0,\n  hypocycloidB: .25,\n  roseN: 3,\n  roseD: 2\n}\n\nfunction defaultShapes(state = defaultState, action) {\n  switch (action.type) {\n\n    // shape actions\n    case 'ADD_SHAPE':\n      return {...state,\n          shapes: [...state.shapes,\n            action.shape\n          ],\n      };\n\n    case 'SET_SHAPE':\n      return {...state,\n        currentShape: action.value,\n      };\n\n    case 'SET_SHAPE_SIZE':\n      return {...state,\n        startingSize: action.value,\n      };\n\n    case '@@redux/INIT':\n      return state;\n    default:\n      return state;\n  }\n}\n\nexport default reduceReducers(defaultShapes, ...registeredShapes.map((shape) => shape.getReducer));\n","\nconst defaultState = {\n  xformOffsetX: 0.0,\n  xformOffsetY: 0.0,\n  numLoops: 10,\n  growEnabled: true,\n  growValue: 100,\n  spinEnabled: false,\n  spinValue: 2,\n  spinSwitchbacks: 0,\n  trackEnabled: false,\n  trackGrowEnabled: false,\n  trackValue: 10,\n  trackLength: 0.2,\n  trackGrow: 50.0,\n}\n\nexport default function transform(state = defaultState, action) {\n  switch (action.type) {\n\n    case 'SET_SHAPE_OFFSET_X':\n      return {...state,\n        xformOffsetX: action.value,\n      };\n\n    case 'SET_SHAPE_OFFSET_Y':\n      return {...state,\n        xformOffsetY: action.value,\n      };\n\n    case 'SET_LOOPS':\n      return {...state,\n        numLoops: action.value,\n      };\n\n    case 'TOGGLE_SPIN':\n      return {...state,\n        spinEnabled: !state.spinEnabled,\n      };\n\n    case 'TOGGLE_GROW':\n      return {...state,\n        growEnabled: !state.growEnabled,\n      };\n\n    case 'TOGGLE_TRACK':\n      return {...state,\n        trackEnabled: !state.trackEnabled,\n      };\n\n    case 'TOGGLE_TRACK_GROW':\n      return {...state,\n        trackGrowEnabled: !state.trackGrowEnabled,\n      };\n\n    case 'SET_SPIN':\n      return {...state,\n        spinValue: action.value,\n      };\n\n    case 'SET_SPIN_SWITCHBACKS':\n      return {...state,\n        spinSwitchbacks: (action.value >= 0? action.value : 0),\n      };\n\n    case 'SET_GROW':\n      return {...state,\n        growValue: action.value,\n      };\n\n    case 'SET_TRACK':\n      return {...state,\n        trackValue: action.value,\n      };\n\n    case 'SET_TRACK_LENGTH':\n      return {...state,\n        trackLength: action.value,\n      };\n\n    case 'SET_TRACK_GROW':\n      return {...state,\n        trackGrow: action.value,\n      };\n\n\n    case '@@redux/INIT':\n      return state;\n    default:\n      return state;\n  }\n}\n\n\n\n","\nconst defaultState = {\n  angleDeg: 15,\n  size: 12,\n}\n\nexport default function wiper(state = defaultState, action) {\n  switch (action.type) {\n\n    // Wiper Settings\n    case 'SET_WIPER_ANGLE_DEG':\n      return {...state,\n        angleDeg: action.value,\n      };\n    case 'SET_WIPER_SIZE':\n      return {...state,\n        size: action.value,\n      };\n\n    case '@@redux/INIT':\n      return state;\n    default:\n      return state;\n  }\n}\n\n\n\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './Header.css';\n\nclass Header extends Component {\n  render() {\n    return (\n      <div className=\"header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <h2>sandify</h2>\n        <p>\n          web based user interface to create patterns that\n          could be useful for robots that draw in sand with ball bearings.\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default Header\n\n","import React, { Component } from 'react';\nimport './Documentation.css';\n\nclass Documentation extends Component {\n  render () {\n    return (\n      <div className=\"documentation\">\n        <div className=\"App-col-3\">\n          <h3 className=\"docTitle\">About</h3>\n          Sandify is working on a solution to turn your\n              cold, empty hearted, emotionless sand tables into\n              cold, empty hearted emotionless sand table robots with enchanting patterns.\n          <br/>\n          <br/>\n          Sandify is a labor of love, but if you'd like to support me financially,\n            I do have a <a href=\"https://github.com/sponsors/jeffeb3\">Donation system set up <b>with github matching donations</b></a>. Or just <a href=\"https://www.paypal.me/jeffeb3\">PayPal</a>.\n        </div>\n        <div className=\"App-col-3\">\n          <h3 className=\"docTitle\">Sand Machine</h3>\n          Anything that uses gcode can be used with sandify.\n              But the machine this was designed for is the ZenXY from V1Engineering.com:\n          <br/>\n          <a href=\"https://docs.v1engineering.com/zenxy/\">ZenXY on V1Engineering.com</a>\n          <br/>\n          <a href=\"https://www.thingiverse.com/thing:2477901\">ZenXY Thingiverse Page</a>\n          <br/>\n          ZenXY was inspired by the awesome Sisyphus Kinetic Art Table by <a href=\"https://sisyphus-industries.com/\">Sisyphus Industries</a>, which is also now supported.\n          <br/>\n          Sandify was created by users in the\n          <a href=\"https://forum.v1engineering.com/t/does-this-count-as-a-build/6037\"> V1Engineering.com Forum</a>\n        </div>\n        <div className=\"App-col-3\">\n          <h3 className=\"docTitle\">Github</h3>\n          Sandify is hosted on github.io\n          <br/>\n          <a href=\"https://github.com/jeffeb3/sandify\">Sandify Source Code</a>\n          <br/>\n          Please post any problems, feature requests or comments in the github issues:\n          <br/>\n          <a href=\"https://github.com/jeffeb3/sandify/issues\">Sandify Issue Tracker</a>\n          <br/>\n          Sandify is a community project. We want and need developers:\n          <br/>\n          <a href=\"https://github.com/jeffeb3/sandify/wiki#developer-info\">Help Sandify</a>\n        </div>\n        <div className=\"App-col-3\">\n          <h3 className=\"docTitle\">License</h3>\n          Sandify is licensed under the MIT license.\n          <br/>\n          Patterns that you create and gcode generated with sandify are not covered\n              under the sandify license (they are your work, and are your copyright).\n          <br/>\n          <a href=\"https://raw.githubusercontent.com/jeffeb3/sandify/master/LICENSE\">Sandify License</a>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default Documentation\n","import React, { Component } from 'react';\nimport {\n    Col,\n    ControlLabel,\n    Form,\n    FormControl,\n    FormGroup,\n    Panel,\n} from 'react-bootstrap'\nimport { connect } from 'react-redux'\n\n// Wipe actions\nexport const setWiperAngleDeg = ( value ) => {\n  return {\n    type: 'SET_WIPER_ANGLE_DEG',\n    value: value,\n  };\n}\n\nexport const setWiperSize = ( value ) => {\n  return {\n    type: 'SET_WIPER_SIZE',\n    value: value,\n  };\n}\n\n\nconst wiperProps = (state, ownProps) => {\n  return {\n    angle: state.wiper.angleDeg,\n    size: state.wiper.size,\n  }\n}\n\nconst wiperDispatch = (dispatch, ownProps) => {\n  return {\n    changeAngle: (event) => {\n      dispatch(setWiperAngleDeg(parseFloat(event.target.value)));\n    },\n    changeSize: (event) => {\n      dispatch(setWiperSize(parseFloat(event.target.value)));\n    },\n  }\n}\n\nclass Wiper extends Component {\n\n  render() {\n\n    return (\n      <div className=\"Wiper\">\n        <Panel className=\"Wiper-panel\">\n          <h4>Wipe Settings</h4>\n          <Panel className=\"Wiper-panel\">\n            <Form horizontal>\n              <FormGroup controlId=\"angle\">\n                <Col componentClass={ControlLabel} sm={4}>\n                  Wiper Angle\n                </Col>\n                <Col sm={8}>\n                  <FormControl type=\"number\" min=\"0\" max=\"180\" step=\"0.5\" value={this.props.angle} onChange={this.props.changeAngle}/>\n                </Col>\n              </FormGroup>\n              <FormGroup controlId=\"size\">\n                <Col componentClass={ControlLabel} sm={4}>\n                  Wiper Size\n                </Col>\n                <Col sm={8}>\n                  <FormControl type=\"number\" step=\"0.1\" value={this.props.size} onChange={this.props.changeSize}/>\n                </Col>\n              </FormGroup>\n            </Form>\n\n          </Panel>\n        </Panel>\n      </div>\n    );\n  }\n}\nWiper = connect(wiperProps, wiperDispatch)(Wiper);\n\nexport default Wiper\n\n","import React, { Component } from 'react';\nimport {\n    Col,\n    ControlLabel,\n    Form,\n    FormControl,\n    FormGroup,\n    ListGroupItem,\n    Panel,\n    Well,\n} from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport './ThetaRho.css'\n\nexport const setFileVertices = ( vertices ) => {\n  return {\n    type: 'SET_FILE_VERTICES',\n    vertices: vertices,\n  };\n}\n\nexport const setFileName = ( value ) => {\n  return {\n    type: 'SET_FILE_NAME',\n    value: value,\n  };\n}\n\nexport const setFileComment = ( value ) => {\n  return {\n    type: 'SET_FILE_COMMENT',\n    value: value,\n  };\n}\n\nexport const setFileZoom = ( value ) => {\n  return {\n    type: 'SET_FILE_ZOOM',\n    value: value,\n  };\n}\n\nexport const toggleFileAspectRatio = ( value ) => {\n  return {\n    type: 'TOGGLE_FILE_ASPECT_RATIO',\n    value: value,\n  };\n}\n\nconst thrProps = (state, ownProps) => {\n  return {\n    name: state.file.name,\n    comments: state.file.comments,\n    vertices: state.file.vertices,\n    zoom: state.file.zoom,\n    aspectRatio: state.file.aspectRatio,\n  }\n}\n\n\nconst thrDispatch = (dispatch, ownProps) => {\n\n  var convertToXY = (thetaRhos) => {\n    var vertices = []\n    var previous = undefined;\n    var max_angle = Math.PI / 64.0;\n    for (let ii = 0; ii < thetaRhos.length; ii++) {\n      var next = thetaRhos[ii];\n      if (previous) {\n        if (Math.abs(next[0] - previous[0]) < max_angle) {\n          // These sin, cos elements are inverted. I'm not sure why\n          vertices.push({\n                        x: previous[1] * Math.sin(previous[0]),\n                        y: previous[1] * Math.cos(previous[0]),\n                        f: 1000,\n          });\n        } else {\n          // We need to do some interpolating.\n          let deltaAngle = next[0] - previous[0];\n          let rhoStep = max_angle / Math.abs(deltaAngle) * (next[1] - previous[1]);\n          var rho = previous[1];\n          if (deltaAngle > 0.0) {\n            var emergency_break = 0;\n            for (let angle = previous[0]; angle < next[0]; angle += max_angle, rho += rhoStep) {\n              vertices.push({\n                            x: rho * Math.sin(angle),\n                            y: rho * Math.cos(angle),\n                            f: 1000,\n              });\n              if (emergency_break++ > 100000) {\n                break;\n              }\n            }\n          } else {\n            for (let angle = previous[0]; angle > next[0]; angle -= max_angle, rho += rhoStep) {\n              vertices.push({\n                            x: rho * Math.sin(angle),\n                            y: rho * Math.cos(angle),\n                            f: 1000,\n              });\n              if (emergency_break++ > 100000) {\n                break;\n              }\n            }\n          }\n        }\n      }\n      previous = next;\n    }\n    return vertices;\n  }\n\n  var parseThrFile = (file) => {\n    var rv = {};\n    rv.comments = [];\n    rv.vertices = [];\n\n    var reader = new FileReader();\n\n    reader.onload = (event) => {\n      var text = reader.result;\n      var lines = text.split('\\n');\n      var has_vertex = false;\n      for (let ii = 0; ii < lines.length; ii++) {\n        var line = lines[ii].trim();\n        if (line.length === 0) {\n          // blank lines\n          continue;\n        }\n        if (line.indexOf(\"#\") === 0 && !has_vertex) {\n          rv.comments.push(lines[ii]);\n        }\n\n        if (line.indexOf(\"#\") !== 0) {\n          has_vertex = true;\n          // This is a point, let's try to read it.\n          var pointStrings = line.split(/\\s+/);\n          if (pointStrings.length !== 2) {\n            // AAAH\n            console.log(pointStrings);\n            continue;\n          }\n          rv.vertices.push([parseFloat(pointStrings[0]), parseFloat(pointStrings[1])]);\n        }\n      }\n\n      dispatch(setFileComment(rv.comments));\n      dispatch(setFileVertices(convertToXY(rv.vertices)));\n    }\n\n    reader.readAsText(file);\n  }\n\n  return {\n    setVertices: (event: any) => {\n      var file = event.target.files[0];\n      console.log(file)\n      dispatch(setFileName(file.name));\n      parseThrFile(file);\n    },\n    setZoom: (event) => {\n      dispatch(setFileZoom(parseFloat(event.target.value)));\n    },\n    toggleAspectRatio: (event) => {\n      dispatch(toggleFileAspectRatio());\n    },\n  }\n}\n\nconst disableEnter = (event) => {\n  if (event.key === 'Enter' && event.shiftKey === false) {\n    event.preventDefault();\n  }\n};\n\nclass ThetaRho extends Component {\n\n  render() {\n    var aspectRatioActive = \"\";\n    if (this.props.aspectRatio) {\n      aspectRatioActive = \"active\";\n    }\n\n    return (\n      <div className=\"ThetaRho\">\n        <Panel className=\"thr-panel\">\n          <h4>Theta Rho Input</h4>\n          <ControlLabel className=\"thr-panel\" htmlFor=\"fileUpload\" style={{ cursor: \"pointer\" }}>\n            <ListGroupItem header=\"Click to Load\" className=\"\" >Import a sisyphus style theta rho (.thr) file into sandify.</ListGroupItem>\n            <FormControl\n                id=\"fileUpload\"\n                type=\"file\"\n                accept=\".thr\"\n                onChange={this.props.setVertices}\n                style={{ display: \"none\" }}\n            />\n          </ControlLabel>\n          <Well> Name: {this.props.name} <br/> Comments: { this.props.comments.join('\\n') } <br/> Number of points: {this.props.vertices.length }</Well>\n          <Form horizontal>\n            <FormGroup controlId=\"thr-zoom\">\n              <Col componentClass={ControlLabel} sm={2}>\n                Zoom\n              </Col>\n              <Col sm={8}>\n                <FormControl type=\"number\" value={this.props.zoom} onChange={this.props.setZoom} onKeyDown={disableEnter} />\n              </Col>\n            </FormGroup>\n          </Form>\n          <ListGroupItem header=\"Keep Aspect Ratio\" className={aspectRatioActive} onClick={this.props.toggleAspectRatio}>Keeps original aspect ratio.</ListGroupItem>\n          <br/>\n          <h5>Where to get thr files:\n          <ul>\n            <li><h5><a href=\"https://reddit.com/u/markyland\">Markyland on Reddit</a></h5></li>\n            <li><h5><a href=\"https://github.com/Dithermaster/sisyphus/\">Dithermaster's github</a></h5></li>\n            <li><h5><a href=\"https://github.com/SlightlyLoony/JSisyphus\">JSisyphus by Slightly Loony</a></h5></li>\n            <li><h5><a href=\"https://reddit.com/r/SisyphusIndustries\">Sisyphus on Reddit</a></h5></li>\n            <li><h5><a href=\"https://sisyphus-industries.com/community/community-tracks\">Sisyphus Community</a></h5></li>\n            <li><h5><a href=\"http://thejuggler.net/sisyphus/\">The Juggler</a></h5></li>\n          </ul>\n          </h5>\n          <h6>Note about Copyrights:</h6>\n          <h6>Be careful and respectful. Understand that the original author put their labor, intensity, and ideas into this art. The creators have a right to own it (and they have a copyright, even if it doesn't say so).</h6>\n          <h6>If you don't have permisson (a license) to use their art, then you shouldn't be.</h6>\n          <h6>If you do have permission to use their art, then you should be thankful, and I'm sure they would appreciate you sending them a note of thanks. A picture of your table creating their shared art would probably make them smile.</h6>\n          <h6>Someone posting the .thr file to a forum or subreddit probably wants it to be shared, and drawing it on your home table is probably OK. Just be careful if you want to use them for something significant without explicit permission.</h6>\n          <h6>I am not a lawyer.</h6>\n        </Panel>\n      </div>\n    );\n  }\n}\nThetaRho = connect(thrProps, thrDispatch)(ThetaRho);\n\nexport default ThetaRho\n\n","import React, { Component } from 'react';\nimport {\n    Tab,\n    Tabs,\n} from 'react-bootstrap'\nimport './InputTabs.css'\nimport Transforms from './Transforms.js'\nimport Wiper from './Wiper.js'\nimport ThetaRho from './ThetaRho.js'\nimport { connect } from 'react-redux'\n\nexport const chooseInput = ( input ) => {\n  return {\n    type: 'CHOOSE_INPUT',\n    value: input,\n  };\n}\n\nclass InputTabs extends Component {\n\n  handleSelect( key ) {\n    this.props.dispatch(chooseInput(key));\n  }\n\n  render() {\n    return (\n       <Tabs defaultActiveKey={0} onSelect={this.handleSelect.bind(this)} id=\"inputTabs\">\n         <Tab eventKey={0} title=\"Shapes\">\n           <Transforms/>\n         </Tab>\n         <Tab eventKey={2} title=\"Wiper\">\n           <Wiper/>\n         </Tab>\n         <Tab eventKey={3} title=\"Code\">\n           <ThetaRho/>\n         </Tab>\n       </Tabs>\n    );\n  }\n}\nInputTabs = connect()(InputTabs);\n\nexport default InputTabs;\n","import React, { Component } from 'react';\nimport {\n    Col,\n    ControlLabel,\n    Form,\n    FormControl,\n    FormGroup,\n    ListGroup,\n    ListGroupItem,\n    Panel,\n    ToggleButton,\n    ToggleButtonGroup,\n} from 'react-bootstrap'\nimport { connect } from 'react-redux'\n\nimport './MachineSettings.css';\n\n// Machine actions\nexport const toggleMachineRectExpanded = ( ) => {\n  localStorage.setItem('machine_rect_active', 1)\n  return {\n    type: 'TOGGLE_MACHINE_RECT_EXPANDED',\n  };\n}\n\nexport const toggleMachinePolarExpanded = ( ) => {\n  localStorage.setItem('machine_rect_active', 2)\n  return {\n    type: 'TOGGLE_MACHINE_POLAR_EXPANDED',\n  };\n}\n\nexport const toggleMachineEndpoints = ( ) => {\n  return {\n    type: 'TOGGLE_MACHINE_ENDPOINTS',\n  };\n}\n\nexport const setMachineRectOrigin = (value) => {\n  return {\n    type: 'SET_MACHINE_RECT_ORIGIN',\n    value: value,\n  };\n}\n\nexport const setMachineMinX = ( value ) => {\n  // This is definitely a side effect...\n  localStorage.setItem('machine_min_x', value)\n  return {\n    type: 'SET_MIN_X',\n    value: value,\n  };\n}\n\nexport const setMachineMaxX = ( value ) => {\n  localStorage.setItem('machine_max_x', value)\n  return {\n    type: 'SET_MAX_X',\n    value: value,\n  };\n}\n\nexport const setMachineMinY = ( value ) => {\n  localStorage.setItem('machine_min_y', value)\n  return {\n    type: 'SET_MIN_Y',\n    value: value,\n  };\n}\n\nexport const setMachineMaxY = ( value ) => {\n  localStorage.setItem('machine_max_y', value)\n  return {\n    type: 'SET_MAX_Y',\n    value: value,\n  };\n}\n\nexport const setMachineRadius = ( value ) => {\n  localStorage.setItem('machine_radius', value)\n  return {\n    type: 'SET_MAX_RADIUS',\n    value: value,\n  };\n}\n\nconst rectMapStateToProps = (state, ownProps) => {\n  return {\n    expanded: state.app.machineRectExpanded,\n    active:   state.machine.rectangular,\n    min_x:    state.machine.min_x,\n    max_x:    state.machine.max_x,\n    min_y:    state.machine.min_y,\n    max_y:    state.machine.max_y,\n    origin:   state.machine.rectOrigin,\n  }\n}\n\nconst rectMapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    activeCallback: (event) => {\n      dispatch(toggleMachineRectExpanded())\n    },\n    onMinXChange: (event) => {\n      dispatch(setMachineMinX(parseFloat(event.target.value)))\n    },\n    onMaxXChange: (event) => {\n      dispatch(setMachineMaxX(parseFloat(event.target.value)))\n    },\n    onMinYChange: (event) => {\n      dispatch(setMachineMinY(parseFloat(event.target.value)))\n    },\n    onMaxYChange: (event) => {\n      dispatch(setMachineMaxY(parseFloat(event.target.value)))\n    },\n    onOriginChange: (value) => {\n      dispatch(setMachineRectOrigin(value))\n    },\n  }\n}\n\nclass RectSettings extends Component {\n  render() {\n    var activeClassName = \"\";\n    if (this.props.active) {\n      activeClassName = \"active\";\n    }\n\n    return (\n      <div className=\"rect\">\n        <ListGroupItem header=\"Rectangular Machine\" className={activeClassName} onClick={this.props.activeCallback}>Rectangle Machines like the Zen XY.</ListGroupItem>\n        <div className=\"rect-options\">\n          <Panel className=\"options-panel\" collapsible expanded={this.props.expanded}>\n            <Form horizontal>\n              <FormGroup className=\"machineSmaller\" controlId=\"min_x\">\n                <Col className=\"machineSmaller\" componentClass={ControlLabel} sm={2}>\n                  Min X (mm)\n                </Col>\n                <Col sm={8} smOffset={1}>\n                  <FormControl type=\"number\" value={this.props.min_x} onChange={this.props.onMinXChange}/>\n                </Col>\n              </FormGroup>\n              <FormGroup className=\"machineSmaller\" controlId=\"max_x\">\n                <Col className=\"machineSmaller\" componentClass={ControlLabel} sm={2}>\n                  Max X (mm)\n                </Col>\n                <Col sm={8} smOffset={1}>\n                  <FormControl type=\"number\" value={this.props.max_x} onChange={this.props.onMaxXChange}/>\n                </Col>\n              </FormGroup>\n              <FormGroup className=\"machineSmaller\" controlId=\"min_y\">\n                <Col className=\"machineSmaller\" componentClass={ControlLabel} sm={2}>\n                  Min Y (mm)\n                </Col>\n                <Col sm={8} smOffset={1}>\n                  <FormControl type=\"number\" value={this.props.min_y} onChange={this.props.onMinYChange}/>\n                </Col>\n              </FormGroup>\n              <FormGroup className=\"machineSmaller\" controlId=\"max_y\">\n                <Col className=\"machineSmaller\" componentClass={ControlLabel} sm={2}>\n                  Max Y (mm)\n                </Col>\n                <Col sm={8} smOffset={1}>\n                  <FormControl type=\"number\" value={this.props.max_y} onChange={this.props.onMaxYChange}/>\n                </Col>\n              </FormGroup>\n              <FormGroup className=\"machineSmaller\" controlId=\"max_y\">\n                <Col className=\"machineSmaller\" componentClass={ControlLabel} sm={2}>\n                  Force Origin\n                </Col>\n                <Col componentClass={ControlLabel} sm={8} smOffset={1}>\n                  <ToggleButtonGroup id=\"origin-bar\" type=\"checkbox\" name=\"origin\" value={this.props.origin} onChange={this.props.onOriginChange}>\n                    <ToggleButton value={0} >Lower Left</ToggleButton>\n                    <ToggleButton value={1} >Upper Left</ToggleButton>\n                    <ToggleButton value={2} >Upper Right</ToggleButton>\n                    <ToggleButton value={3} >Lower Right</ToggleButton>\n                  </ToggleButtonGroup>\n                </Col>\n              </FormGroup>\n            </Form>\n          </Panel>\n        </div>\n      </div>\n    )\n  }\n}\n\nRectSettings = connect(rectMapStateToProps, rectMapDispatchToProps)(RectSettings)\n\nconst polarMapStateToProps = (state, ownProps) => {\n  return {\n    expanded:   state.app.machinePolarExpanded,\n    active:     !state.machine.rectangular,\n    max_radius: state.machine.max_radius,\n    endpoints:  state.machine.polarEndpoints,\n  }\n}\n\nconst polarMapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    activeCallback: (event) => {\n      dispatch(toggleMachinePolarExpanded())\n    },\n    onMaxRadiusChange: (event) => {\n      dispatch(setMachineRadius(parseFloat(event.target.value)))\n    },\n    toggleEndpoints: () => {\n      dispatch(toggleMachineEndpoints());\n    },\n  }\n}\n\nclass PolarSettings extends Component {\n  render() {\n    var activeClassName = \"\";\n    if (this.props.active) {\n      activeClassName = \"active\";\n    }\n\n    const endpointsActiveClass = (this.props.endpoints ? \"active\" : null);\n\n    return (\n      <div className=\"polar\">\n        <ListGroupItem header=\"Polar Machine\" className={activeClassName} onClick={this.props.activeCallback}>Polar Machines like the Sisyphus.</ListGroupItem>\n        <div className=\"polar-options\">\n          <Panel className=\"options-panel\" collapsible expanded={this.props.expanded}>\n            <Form horizontal>\n              <FormGroup className=\"machineSmaller\" controlId=\"max_radius\">\n                <Col className=\"machineSmaller\" componentClass={ControlLabel} sm={3}>\n                  Max Radius (mm)\n                </Col>\n                <Col sm={7} smOffset={1}>\n                  <FormControl type=\"number\" value={this.props.max_radius} onChange={this.props.onMaxRadiusChange}/>\n                </Col>\n              </FormGroup>\n            </Form>\n            <ListGroupItem header=\"Force Endpoints\" className={endpointsActiveClass} onClick={this.props.toggleEndpoints}>Forces the first and last points to be at the center and edge.</ListGroupItem>\n          </Panel>\n        </div>\n      </div>\n    )\n  }\n}\n\nPolarSettings = connect(polarMapStateToProps, polarMapDispatchToProps)(PolarSettings)\n\nclass MachineSettings extends Component {\n  render() {\n\n    return (\n      <div className=\"machine-form\">\n        <Panel className=\"machine-panel\">\n          <h4>Machine Settings</h4>\n          <ListGroup>\n            <RectSettings/>\n            <PolarSettings/>\n          </ListGroup>\n        </Panel>\n      </div>\n    )\n  }\n}\n\nexport default MachineSettings;\n\n","import { Vertex } from '../Geometry';\nimport Victor from 'victor';\n\n// Determines which of 8 neighbor areas the point is in:\n//   https://stackoverflow.com/questions/3746274/line-intersection-with-aabb-rectangle\n//\n//           |          |\n//   0b1001  |  0b0001  |  0b0101\n//           |          |\n// ------------------------------ y_max\n//           |          |\n//   0b1000  |  0b0000  |  0b0100\n//           |          |\n// ------------------------------ y_min\n//           |          |\n//   0b1010  |  0b0010  |  0b0110\n//           |          |\n//         x_min      x_max\n//\nfunction pointLocation(point, size_x, size_y) {\n  var location = 0b0;\n  if (point.x < -size_x) {\n    location += 0b1000;\n  } else if (point.x > size_x) {\n    location += 0b0100;\n  }\n\n  if (point.y < -size_y) {\n    location += 0b0001;\n  } else if (point.y > size_y) {\n    location += 0b0010;\n  }\n\n  return location;\n}\n\n// Determine intersection with one of the sides\nfunction intersection(line_start, line_end, side_start, side_end) {\n\n  var line = line_end.clone().subtract(line_start);\n  var side = side_end.clone().subtract(side_start);\n  var lineCrossSidePerp = line.x * side.y - line.y * side.x;\n\n  // if line Cross side === 0, it means the lines are parallel so have infinite intersection points\n  if (lineCrossSidePerp === 0) {\n    return null;\n  }\n\n  var diff = side_start.clone().subtract(line_start);\n  var t = (diff.x * side.y - diff.y * side.x) / lineCrossSidePerp;\n  if (t < 0 || t >= 1) {\n    return null;\n  }\n\n  var u = (diff.x * line.y - diff.y * line.x) / lineCrossSidePerp;\n  if (u < 0 || u >= 1) {\n    return null;\n  }\n\n  var intersection = line_start.clone().add(line.clone().multiply(Victor(t, t)));\n  return intersection;\n}\n\n// This method is the guts of logic for this limits enforcer. It will take a single line (defined by\n// start and end) and if the line goes out of bounds, returns the vertices around the outside edge\n// to follow around without messing up the shape of the vertices.\n//\nfunction clipLine(line_start, line_end, size_x, size_y) {\n\n  var quadrant_start = pointLocation(line_start, size_x, size_y);\n  var quadrant_end = pointLocation(line_end, size_x, size_y);\n\n  if (quadrant_start === 0b0000 && quadrant_end === 0b0000) {\n    // The line is inside the boundaries\n    return [line_start, line_end];\n  }\n\n  if (quadrant_start === quadrant_end) {\n    // We are in the same box, and we are out of bounds.\n    return [nearestVertex(line_start, size_x, size_y), nearestVertex(line_end, size_x, size_y)];\n  }\n\n  if (quadrant_start & quadrant_end) {\n    // These points are all on one side of the box.\n    return [nearestVertex(line_start, size_x, size_y), nearestVertex(line_end, size_x, size_y)];\n  }\n\n  if (quadrant_start === 0b000) {\n    // We are exiting the box. Return the start, the intersection with the boundary, and the closest\n    // boundary point to the exited point.\n    var line = [line_start];\n    line.push(boundPoint(line_start, line_end, size_x, size_y));\n    line.push(nearestVertex(line_end, size_x, size_y));\n    return line;\n  }\n\n  if (quadrant_end === 0b000) {\n    // We are re-entering the box.\n    return [boundPoint(line_end, line_start, size_x, size_y), line_end];\n  }\n\n  // We have reached a terrible place, where both points are oob, but it might intersect with the\n  // work area.\n\n  // First, define the boundaries as lines.\n  const sides = [\n    // left\n    [Victor(-size_x, -size_y), Victor(-size_x, size_y)],\n    // right\n    [Victor(size_x, -size_y), Victor(size_x, size_y)],\n    // bottom\n    [Victor(-size_x, -size_y), Victor(size_x, -size_y)],\n    // top\n    [Victor(-size_x, size_y), Victor(size_x, size_y)],\n  ]\n\n  // Count up the number of boundary lines intersect with our line segment.\n  var intersections = []\n  for (var s=0; s<sides.length; s++) {\n    var int_point = intersection(Victor.fromObject(line_start),\n                                 Victor.fromObject(line_end),\n                                 sides[s][0],\n                                 sides[s][1]);\n    if (int_point) {\n      intersections.push(Vertex(int_point.x, int_point.y));\n    }\n  }\n\n  if (intersections.length !== 0) {\n    if (intersections.length !== 2) {\n      // We should never get here. How would we have something other than 2 or 0 intersections with\n      // a box?\n      console.log(intersections);\n      throw Error(\"Software Geometry Error\");\n    }\n\n    // The intersections are tested in some normal order, but the line could be going through them\n    // in any direction. This check will flip the intersections if they are reversed somehow.\n    if (Victor.fromObject(intersections[0]).subtract(Victor.fromObject(line_start)).lengthSq() >\n        Victor.fromObject(intersections[1]).subtract(Victor.fromObject(line_start)).lengthSq()) {\n      var temp = intersections[0];\n      intersections[0] = intersections[1];\n      intersections[1] = temp;\n    }\n    return [...intersections, nearestVertex(line_end, size_x, size_y)];\n  }\n\n  // Damn. We got here because we have a start and end that are failing different boundary checks,\n  // and the line segment doesn't intersect the box. We have to crawl around the outside of the\n  // box until we reach the other point.\n  //\n  // Here, I'm going to split this line into two parts, and send each half line segment back\n  // through the clipLine algorithm. Eventually, that should result in only one of the other cases.\n  var midpoint = Victor.fromObject(line_start).add(Victor.fromObject(line_end)).multiply(Victor(0.5, 0.5));\n  // recurse, and find smaller segments until we don't end up in this place again.\n  return [...clipLine(line_start, midpoint, size_x, size_y),\n          ...clipLine(midpoint,   line_end, size_x, size_y)];\n}\n\n// Finds the nearest vertex that is in the bounds. This will change the shape. i.e. this doesn't\n// care about the line segment, only about the point.\nfunction nearestVertex(vertex, size_x, size_y) {\n  return Vertex(Math.min(size_x, Math.max(-size_x, vertex.x)),\n                Math.min(size_y, Math.max(-size_y, vertex.y)));\n}\n\n// Intersect the line with the boundary, and return the point exactly on the boundary.\n// This will keep the shape. i.e. It will follow the line segment, and return the point on that line\n// segment.\nfunction boundPoint(good, bad, size_x, size_y) {\n  var dx = good.x - bad.x;\n  var dy = good.y - bad.y;\n\n  var fixed = Vertex(bad.x, bad.y);\n  var distance = 0;\n  if (bad.x < -size_x || bad.x > size_x) {\n    if (bad.x < -size_x) {\n      // we are leaving the left\n      fixed.x = -size_x;\n    } else {\n      // we are leaving the right\n      fixed.x = size_x;\n    }\n    distance = (fixed.x - good.x) / dx;\n    fixed.y = good.y + distance * dy;\n    // We fixed x, but y might have the same problem, so we'll rerun this, with different points.\n    return boundPoint(good, fixed, size_x, size_y);\n  }\n  if (bad.y < -size_y || bad.y > size_y) {\n    if (bad.y < -size_y) {\n      // we are leaving the bottom\n      fixed.y = -size_y;\n    } else {\n      // we are leaving the top\n      fixed.y = size_y;\n    }\n    distance = (fixed.y - good.y) / dy;\n    fixed.x = good.x + distance * dx;\n  }\n  return fixed;\n}\n\n// Returns points along the circle from the start to the end, tracing a circle of radius size.\nfunction traceCircle(start, end, size) {\n  const startAngle = start.angle();\n  const endAngle = end.angle();\n  let resolution = (Math.PI*2.0) / 128.0; // 128 segments per circle. Enough?\n  let deltaAngle = ((endAngle - startAngle) + 2.0 * Math.PI) % (2.0 * Math.PI);\n  if (deltaAngle > Math.PI) {\n    deltaAngle -= 2.0 * Math.PI;\n  }\n  if (deltaAngle < 0.0) {\n    resolution *= -1.0;\n  }\n\n  var tracePoints = []\n  for (var step = 0; step < (deltaAngle/resolution) ; step++) {\n    tracePoints.push(Victor(size * Math.cos(resolution * step + startAngle),\n                            size * Math.sin(resolution * step + startAngle)));\n  }\n  return tracePoints;\n}\n\nfunction onSegment(start, end, point) {\n  if (start.distance(point) + end.distance(point) - start.distance(end) < 0.001) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction getIntersections(start, end, size) {\n  var direction = end.clone().subtract(start).clone().normalize();\n\n  var t = direction.x * -1.0 * start.x + direction.y * -1.0 * start.y;\n  var e = direction.clone().multiply(Victor(t,t)).add(start);\n\n  var distanceToLine = e.magnitude();\n\n  if (distanceToLine >= size)\n  {\n    return {\n      intersection: false,\n      points: [],\n    }\n  }\n\n  var dt = Math.sqrt(size*size - distanceToLine*distanceToLine);\n\n  var point1 = direction.clone().multiply(Victor(t - dt,t - dt)).add(start);\n  var point2 = direction.clone().multiply(Victor(t + dt,t + dt)).add(start);\n\n  return {\n    intersection: true,\n    points: [\n      {\n        point: point1,\n        on: onSegment(start, end, point1),\n      },\n      {\n        point: point2,\n        on: onSegment(start, end, point2),\n      }\n    ]}\n}\n\n// This method is the guts of logic for this limits enforcer. It will take a single line (defined by\n// start and end) and if the line goes out of bounds, returns the vertices around the outside edge\n// to follow around without messing up the shape of the vertices.\n//\nfunction clipLineCircle(line_start, line_end, size) {\n\n  // Cases:\n  // 1 - Entire line is inside\n  //     return start, end\n  // 2 - Entire line is outside\n  //     trace from start to end\n  // 3 - only start is inside\n  //     find the intersection\n  //     include start\n  //     include intersection\n  //     trace from intersection to closest to end point\n  // 4 - only end is inside\n  //     do reverse of 3\n  // 4 - Neither end is inside, but there is some line segment inside\n  //     find both intersections\n  //     trace from start to first intersction\n  //     trace from second intersection to end\n\n  // Helper objects\n  const start = Victor.fromObject(line_start);\n  const end = Victor.fromObject(line_end);\n\n  // I'll need these\n  const rad_start = start.magnitude();\n  const rad_end = end.magnitude();\n\n  // Check the easy case\n  if (rad_start <= size && rad_end <= size) {\n    // The whole segment is inside\n    return [line_start, line_end];\n  }\n\n  // Check for the odd case of coincident points\n  if (start.distance(end) < 0.00001) {\n     return [nearestVertexCircle(start, size)];\n  }\n\n  var intersections = getIntersections(start, end, size);\n\n  if ( !intersections.intersection )\n  {\n    // The whole line is outside, just trace.\n    return traceCircle(start, end, size);\n  }\n\n  // if neither point is on the segment, then it should just be a trace\n  if (!intersections.points[0].on && ! intersections.points[1].on) {\n    return traceCircle(start, end, size);\n  }\n\n  // If both points are outside, but there's an intersection\n  if (rad_start > size + 1.0e-9 && rad_end > size + 1.0e-9) {\n    let point = intersections.points[0].point;\n    let other_point = intersections.points[1].point;\n\n    return [\n      ...traceCircle(start, point, size),\n      point,\n      ...traceCircle(other_point, end, size)\n    ];\n  }\n\n  // If we're here, then one point is still in the circle.\n  if (rad_start <= size) {\n    var point1 = (intersections.points[0].on && Math.abs(intersections.points[0].point - start) > 0.0001) ? intersections.points[0].point : intersections.points[1].point;\n    return [\n      start,\n      ...traceCircle(point1, end, size),\n      end\n    ];\n  } else {\n    point1 = intersections.points[0].on ? intersections.points[0].point : intersections.points[1].point;\n    return [\n      ...traceCircle(start, point1, size),\n      point1,\n      end\n    ];\n  }\n}\n\n// Finds the nearest vertex that is in the bounds of the circle. This will change the shape. i.e. this doesn't\n// care about the line segment, only about the point.\nfunction nearestVertexCircle(vertex, size) {\n  const point = Victor.fromObject(vertex);\n  if ( point.length() > size) {\n    let scale = size / point.length();\n    return point.multiply(Victor(scale, scale));\n  } else {\n    return point;\n  }\n}\n\n// Manipulates the points to make them all in bounds, while doing the least amount of damage to the\n// desired shape.\nexport const enforceRectLimits = function(vertices, size_x, size_y) {\n  var cleanVertices = []\n  var previous = null;\n\n  if (size_x < 0) {\n    size_x *= -1.0;\n  }\n  if (size_y < 0) {\n    size_y *= -1.0;\n  }\n  for (var next=0; next<vertices.length; next++) {\n    var vertex = vertices[next];\n    if (previous) {\n      var line = clipLine(previous, vertex, size_x, size_y);\n      for (var pt=0; pt<line.length; pt++) {\n        if (line[pt] !== previous) {\n          cleanVertices.push(line[pt]);\n        }\n      }\n    } else {\n      cleanVertices.push(nearestVertex(vertex, size_x, size_y));\n    }\n    previous = vertex;\n  }\n\n  // Just for sanity, and cases that I haven't thought of, clean this list again, including removing\n  // duplicate points\n  previous = null;\n  var cleanerVertices = []\n  for (var i=0; i<cleanVertices.length; i++) {\n    if (previous) {\n      let start = Victor.fromObject(cleanVertices[i]);\n      let end = Victor.fromObject(previous);\n      if (start.distance(end) > 0.001) {\n        cleanerVertices.push(nearestVertex(cleanVertices[i], size_x, size_y));\n      }\n    } else {\n      cleanerVertices.push(nearestVertex(cleanVertices[i], size_x, size_y));\n    }\n    previous = cleanVertices[i];\n  }\n\n  return cleanerVertices;\n}\n\nexport const enforcePolarLimits = function(vertices, size) {\n\n  var cleanVertices = []\n  var previous = null;\n\n  for (var next=0; next<vertices.length; next++) {\n    var vertex = vertices[next];\n    if (previous) {\n      var line = clipLineCircle(previous, vertex, size);\n      for (var pt=0; pt<line.length; pt++) {\n        if (line[pt] !== previous) {\n          cleanVertices.push(line[pt]);\n        }\n      }\n    } else {\n      cleanVertices.push(nearestVertexCircle(vertex, size));\n    }\n    previous = vertex;\n  }\n\n  // Just for sanity, and cases that I haven't thought of, clean this list again, including removing\n  // duplicate points\n  previous = null;\n  var cleanerVertices = []\n  for (var i=0; i<cleanVertices.length; i++) {\n    if (previous) {\n      let start = Victor.fromObject(cleanVertices[i]);\n      let end = Victor.fromObject(previous);\n      if (start.distance(end) > 0.001) {\n        cleanerVertices.push(nearestVertexCircle(cleanVertices[i], size));\n      }\n    } else {\n      cleanerVertices.push(nearestVertexCircle(cleanVertices[i], size));\n    }\n    previous = cleanVertices[i];\n  }\n  return cleanerVertices;\n}\n\n\n","import {\n  degToRad,\n  Vertex,\n} from '../Geometry.js'\nimport {\n  enforceRectLimits,\n  enforcePolarLimits\n} from '../machine/LimitEnforcer';\nimport Victor from 'victor';\nimport { createSelector } from 'reselect'\n\n// Transform funtions\nfunction rotate (vertex, angle_deg) {\n  var angle = Math.PI / 180.0 * angle_deg;\n  return Vertex(\n           vertex.x * Math.cos(angle) - vertex.y * Math.sin(angle),\n           vertex.x * Math.sin(angle) + vertex.y * Math.cos(angle),\n           vertex.f);\n}\n\nfunction scale (vertex, scale_perc) {\n  var scale = scale_perc / 100.0;\n  return {\n    x: vertex.x * scale,\n    y: vertex.y * scale,\n    f: vertex.f,\n  }\n}\n\nfunction offset (vertex, offset_x, offset_y) {\n  return {\n    x: vertex.x + offset_x,\n    y: vertex.y + offset_y,\n    f: vertex.f,\n  }\n}\n\nfunction track (vertex, data, loop_index) {\n  let angle = data.trackLength * loop_index / 16 * 2.0 * Math.PI;\n  let radius = 1.0;\n  if (data.trackGrowEnabled) {\n    radius = 1.0 + loop_index / 10.0 * data.trackGrow / 100.0;\n  }\n  return {\n    x: vertex.x + radius * data.trackValue * Math.cos(angle),\n    y: vertex.y + radius * data.trackValue * Math.sin(angle),\n    f: vertex.f, // Why do I still have f in here?\n  };\n}\n\nexport const transform = (data, vertex, fraction_index) => {\n  var transformed_vertex = vertex\n  if (data.growEnabled)\n  {\n    transformed_vertex = scale(transformed_vertex, 100.0 + (data.growValue * fraction_index));\n  }\n  transformed_vertex = offset(transformed_vertex, data.xformOffsetX, data.xformOffsetY);\n  if (data.spinEnabled)\n  {\n    var loop_period = data.numLoops / (parseInt(data.spinSwitchbacks) + 1);\n    var stage = fraction_index/loop_period;\n    var direction = (stage % 2 < 1 ? 1.0 : -1.0);\n    var spin_amount = direction * (fraction_index % loop_period) * data.spinValue;\n    // Add in the amount it goes positive to the negatives, so they start at the same place.\n    if (direction < 0.0) {\n      spin_amount += loop_period * data.spinValue;\n    }\n    transformed_vertex = rotate(transformed_vertex, spin_amount);\n  }\n  if (data.trackEnabled) {\n    transformed_vertex = track(transformed_vertex, data, fraction_index);\n  }\n  return transformed_vertex;\n}\n\nconst outOfBounds = (point, width, height) => {\n  if (point.x < -width/2.0) {\n    return true;\n  }\n  if (point.y < -height/2.0) {\n    return true;\n  }\n  if (point.x > width/2.0) {\n    return true;\n  }\n  if (point.y > height/2.0) {\n    return true;\n  }\n  return false;\n}\n\nconst findShape = (shapes, name) => {\n  for (let i=0; i<shapes.length; i++) {\n    if (name === shapes[i].name) {\n      return shapes[i];\n    }\n  }\n  return null;\n}\n\n// Intersect the line with the boundary, and return the point exactly on the boundary.\n// This will keep the shape. i.e. It will follow the line segment, and return the point on that line\n// segment.\nfunction boundPoint(good, bad, size_x, size_y) {\n  var dx = good.x - bad.x;\n  var dy = good.y - bad.y;\n\n  var fixed = Victor(bad.x, bad.y);\n  var distance = 0;\n  if (bad.x < -size_x || bad.x > size_x) {\n    if (bad.x < -size_x) {\n      // we are leaving the left\n      fixed.x = -size_x;\n    } else {\n      // we are leaving the right\n      fixed.x = size_x;\n    }\n    distance = (fixed.x - good.x) / dx;\n    fixed.y = good.y + distance * dy;\n    // We fixed x, but y might have the same problem, so we'll rerun this, with different points.\n    return boundPoint(good, fixed, size_x, size_y);\n  }\n  if (bad.y < -size_y || bad.y > size_y) {\n    if (bad.y < -size_y) {\n      // we are leaving the bottom\n      fixed.y = -size_y;\n    } else {\n      // we are leaving the top\n      fixed.y = size_y;\n    }\n    distance = (fixed.y - good.y) / dy;\n    fixed.x = good.x + distance * dx;\n  }\n  return fixed;\n}\n\nfunction nearEnough(end, point) {\n  if (point.clone().subtract(end).length() < 0.01) {\n    return true;\n  }\n  return false;\n}\n\n// Vertex functions\nexport const polishVertices = (state, vertices) => {\n  let machine = state.machine;\n  if (vertices.length > 0) {\n    if (machine.rectangular && machine.rectOrigin.length === 1) {\n\n      // OK, let's assign corners indices:\n      //\n      // [1]   [2]\n      //\n      //\n      // [0]   [3]\n\n      let dx = (machine.max_x - machine.min_x) / 2.0;\n      let dy = (machine.max_y - machine.min_y) / 2.0;\n\n      let corners = [\n        {x: -dx, y: -dy},\n        {x: -dx, y:  dy},\n        {x:  dx, y:  dy},\n        {x:  dx, y: -dy}\n      ];\n      console.log(corners);\n\n      let first = vertices[0];\n      let last = vertices[vertices.length-1];\n\n      // Max radius\n      let max_radius = Math.sqrt(Math.pow(2.0*dx,2.0) + Math.pow(2.0*dy, 2.0)) / 2.0;\n\n      let vFirst = Victor.fromObject(first);\n      let vLast = Victor.fromObject(last);\n      let outPoint;\n      let newVertices = [];\n      if (vFirst.magnitude() <= vLast.magnitude()) {\n        // It's going outward\n        let scale = max_radius / vLast.magnitude();\n        outPoint = vLast.multiply(Victor(scale,scale));\n        newVertices.push({ ...last, x: outPoint.x, y: outPoint.y});\n      } else {\n        let scale = max_radius / vFirst.magnitude();\n        outPoint = vFirst.multiply(Victor(scale,scale));\n        newVertices.push({ ...first, x: outPoint.x, y: outPoint.y});\n      }\n      console.log(outPoint);\n      console.log(dx);\n\n      let nextCorner = 1;\n      if (outPoint.x >= dx) {\n        // right\n        nextCorner = 2;\n      } else if (outPoint.x <= -dx) {\n        // left\n        nextCorner = 0;\n      } else if (outPoint.y >= dy) {\n        // up\n        nextCorner = 1;\n      } else if (outPoint.y <= -dy) {\n        // down\n        nextCorner = 3;\n      } else {\n        console.log(\"Darn!\");\n        nextCorner = 3;\n      }\n      // console.log(\"nextCorner: \" + nextCorner);\n      // newVertices.push({ ...first, x: corners[nextCorner].x, y: corners[nextCorner].y});\n\n      while (nextCorner !== machine.rectOrigin[0]) {\n        console.log(\"nextCorner: \" + nextCorner);\n        newVertices.push({ ...first, x: corners[nextCorner].x, y: corners[nextCorner].y});\n        nextCorner -= 1;\n        if (nextCorner < 0) {\n          nextCorner = 3;\n        }\n      }\n      console.log(\"nextCorner: \" + nextCorner);\n      newVertices.push({ ...first, x: corners[nextCorner].x, y: corners[nextCorner].y});\n\n      console.log(newVertices);\n      if (vFirst.magnitude() <= vLast.magnitude()) {\n        // outward\n        vertices = vertices.concat(newVertices);\n      } else {\n        vertices = newVertices.reverse().concat(vertices);\n      }\n    }\n    if (machine.polarEndpoints && !machine.rectangular) {\n\n      let first = vertices[0];\n      let last = vertices[vertices.length-1];\n\n      // Always put 0.0 in there\n\n      // Max radius\n      let max_radius = machine.max_radius;\n      let vFirst = Victor.fromObject(first);\n      let vLast = Victor.fromObject(last);\n      if (vFirst.magnitude() <= vLast.magnitude()) {\n        // It's going outward\n        let scale = max_radius / vLast.magnitude();\n        let outPoint = vLast.multiply(Victor(scale,scale));\n        vertices.unshift(Vertex(0.0, 0.0, first.f));\n        vertices.push(Vertex(outPoint.x, outPoint.y, last.f));\n      } else {\n        let scale = max_radius / vFirst.magnitude();\n        let outPoint = vFirst.multiply(Victor(scale,scale));\n        vertices.push(Vertex(0.0, 0.0, first.f));\n        vertices.unshift(Vertex(outPoint.x, outPoint.y, last.f));\n      }\n    }\n  }\n  if (state.app.reverse) {\n    vertices.reverse();\n  }\n  if (machine.rectangular) {\n    vertices = enforceRectLimits(vertices,\n                                 (machine.max_x - machine.min_x)/2.0,\n                                 (machine.max_y - machine.min_y)/2.0\n                                 );\n  } else {\n    vertices = enforcePolarLimits(vertices,\n                                  machine.max_radius\n                                  );\n  }\n\n  return vertices;\n}\n\nconst wiper = (state) => {\n\n  var outputVertices = []\n\n  // Do the math\n\n  // Get the angle between 0,180\n  let angle = (180.0 - (state.wiper.angleDeg % 360)) % 180.0;\n  if (angle < 0.0) {\n    angle += 180.0;\n  }\n  angle = degToRad(angle);\n\n  // Start with the defaults for 0,45\n  let height = 1;\n  let width = 1;\n  let machine = state.machine;\n  if (machine.rectangular) {\n    height = machine.max_y - machine.min_y;\n    width = machine.max_x - machine.min_x;\n  } else {\n    height = machine.max_radius * 2.0;\n    width = height;\n  }\n\n  let startLocation = Victor(-width/2.0, height/2.0)\n  let cosa = Math.cos(angle);\n  let sina = Math.sin(angle);\n  // These can be zero, but infinity isn't great for out math, so let's just clip it.\n  if (Math.abs(cosa) < 1.0e-10) {\n    cosa = 1.0e-10;\n  }\n  if (Math.abs(sina) < 1.0e-10) {\n    sina = 1.0e-10;\n  }\n  let orig_delta_w = Victor(state.wiper.size / cosa, 0.0);\n  let orig_delta_h = Victor(0.0, -state.wiper.size / sina);\n\n  if (angle > Math.PI/4.0 && angle < 0.75 * Math.PI) {\n    // flip the logic of x,y\n    let temp = orig_delta_w.clone();\n    orig_delta_w = orig_delta_h.clone();\n    orig_delta_h = temp;\n  }\n  if (angle > Math.PI/2.0) {\n    startLocation = Victor(-width/2.0, -height/2.0)\n    orig_delta_w = orig_delta_w.clone().multiply(Victor(-1.0, -1.0));\n    orig_delta_h = orig_delta_h.clone().multiply(Victor(-1.0, -1.0));\n  }\n  let delta_w = orig_delta_w;\n  let delta_h = orig_delta_h;\n  let endLocation = startLocation.clone().multiply(Victor(-1.0, -1.0));\n  outputVertices.push(startLocation);\n  let nextWidthPoint = startLocation;\n  let nextHeightPoint = startLocation;\n\n  let emergency_break = 0;\n  while (emergency_break < 1000) {\n    emergency_break += 1;\n\n    // \"right\"\n    nextWidthPoint = nextWidthPoint.clone().add(delta_w);\n    if (outOfBounds(nextWidthPoint, width, height)) {\n      let corner = boundPoint(nextWidthPoint.clone().subtract(delta_w), nextWidthPoint, width/2.0, height/2.0);\n      outputVertices.push(corner);\n      if (nearEnough(endLocation, corner)) {\n        break;\n      }\n      nextWidthPoint = boundPoint(nextHeightPoint, nextWidthPoint, width/2.0, height/2.0);\n      delta_w = orig_delta_h;\n    }\n    outputVertices.push(nextWidthPoint);\n    if (nearEnough(endLocation, nextWidthPoint)) {\n      break;\n    }\n\n    // \"down-left\"\n    nextHeightPoint = nextHeightPoint.clone().add(delta_h);\n    if (outOfBounds(nextHeightPoint, width, height)) {\n      nextHeightPoint = boundPoint(nextWidthPoint, nextHeightPoint, width/2.0, height/2.0);\n      delta_h = orig_delta_w;\n    }\n    outputVertices.push(nextHeightPoint);\n    if (nearEnough(endLocation, nextHeightPoint)) {\n      break;\n    }\n\n    // \"down\"\n    nextHeightPoint = nextHeightPoint.clone().add(delta_h);\n    outputVertices.push(nextHeightPoint);\n    if (nearEnough(endLocation, nextHeightPoint)) {\n      break;\n    }\n    if (outOfBounds(nextHeightPoint, width, height)) {\n      let corner = boundPoint(nextHeightPoint.clone().subtract(delta_h), nextHeightPoint, width/2.0, height/2.0);\n      outputVertices.push(corner);\n      if (nearEnough(endLocation, corner)) {\n        break;\n      }\n      nextHeightPoint = boundPoint(nextWidthPoint, nextHeightPoint, width/2.0, height/2.0);\n      delta_h = orig_delta_w;\n    }\n    outputVertices.push(nextHeightPoint);\n    if (nearEnough(endLocation, nextHeightPoint)) {\n      break;\n    }\n\n    // \"up-right\"\n    nextWidthPoint = nextWidthPoint.clone().add(delta_w);\n    outputVertices.push(nextWidthPoint);\n    if (nearEnough(endLocation, nextWidthPoint)) {\n      break;\n    }\n    if (outOfBounds(nextWidthPoint, width, height)) {\n      nextWidthPoint = boundPoint(nextHeightPoint, nextWidthPoint, width/2.0, height/2.0);\n      delta_w = orig_delta_h;\n    }\n\n  }\n\n  return polishVertices(state, outputVertices);\n};\n\nconst thetaRho = (state) => {\n  let machine = state.machine;\n  var x_scale = (machine.max_x - machine.min_x)/2.0 * 0.01 * state.file.zoom;\n  var y_scale = (machine.max_y - machine.min_y)/2.0 * 0.01 * state.file.zoom;\n  if (!machine.rectangular) {\n    x_scale = y_scale = machine.max_radius;\n  }\n  x_scale *= 0.01 * state.file.zoom;\n  y_scale *= 0.01 * state.file.zoom;\n  if (state.file.aspectRatio) {\n    x_scale = y_scale = Math.min(x_scale,y_scale);\n  }\n\n  var newVertices = state.file.vertices.map( (vertex) => {\n    return {...vertex,\n      x: vertex.x * x_scale,\n      y: vertex.y * y_scale,\n    };\n  });\n  return polishVertices(state, newVertices);\n}\n\nconst transformShapes = (state) => {\n  const shape = findShape(state.shapes.shapes, state.shapes.currentShape);\n  var input = []\n  if (shape) {\n    input = shape.vertices(state).map( (vertex) => {\n      return scale(vertex, 100.0 * state.shapes.startingSize);\n    });\n  }\n\n  var num_loops = state.transform.numLoops;\n  var outputVertices = []\n  for (var i=0; i<num_loops; i++) {\n    for (var j=0; j<input.length; j++) {\n      let fraction = j/input.length;\n      outputVertices.push(transform(state.transform, input[j], i+fraction))\n    }\n  }\n\n  return polishVertices(state, outputVertices);\n};\n\nconst getApp = state => state.app;\nconst getShapes = state => state.shapes;\nconst getTransform = state => state.transform;\nconst getFile = state => state.file;\nconst getWiper = state => state.wiper;\nconst getMachine = state => state.machine;\n\nexport const getVertices = createSelector(\n  [\n      getApp,\n      getShapes,\n      getTransform,\n      getFile,\n      getWiper,\n      getMachine,\n  ],\n  (app, shapes, transform, file, wiperState, machine) => {\n    let state = {\n      app: app,\n      shapes: shapes,\n      transform: transform,\n      file: file,\n      wiper: wiperState,\n      machine: machine\n    };\n\n    if (state.app.input === 0) {\n      return transformShapes(state);\n    } else if (state.app.input === 2) {\n      return wiper(state);\n    } else if (state.app.input === 3) {\n      return thetaRho(state);\n    }\n  }\n);\n\nexport const getVerticesStats = createSelector(\n  [\n      getVertices\n  ],\n  (vertices) => {\n    let distance = 0.0;\n    let previous = null;\n    vertices.forEach( (vertex) => {\n      if (previous) {\n        distance += Math.sqrt(Math.pow(vertex.x - previous.x, 2.0) +\n                              Math.pow(vertex.y - previous.y, 2.0));\n      }\n      previous = vertex;\n    });\n    return {\n      numPoints: vertices.length,\n      distance: Math.floor(distance),\n    };\n  }\n);\n\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './MachinePreview.css';\nimport { Vertex } from '../Geometry';\nimport MachineSettings from './MachineSettings.js';\nimport { connect } from 'react-redux'\nimport { Panel } from 'react-bootstrap'\nimport Slider from 'rc-slider'\nimport 'rc-slider/assets/index.css'\nimport {\n  transform,\n  getVertices,\n  getVerticesStats,\n} from '../inputs/Computer.js';\nimport { createSelector } from 'reselect'\n\nexport const setMachinePreviewSize = ( value ) => {\n  return {\n    type: 'SET_MACHINE_SIZE',\n    value: value,\n  };\n}\n\nexport const setMachineSlider = ( value ) => {\n  return {\n    type: 'SET_MACHINE_SLIDER',\n    value: value,\n  };\n}\n\nconst getTransform = state => state.transform;\n\nconst getTrackVertices = createSelector(\n  [getTransform],\n  (data) => {\n    var num_loops = data.numLoops;\n    var trackVertices = []\n    for (var i=0; i<num_loops; i++) {\n      if (data.trackEnabled) {\n        trackVertices.push(transform(data, {x: 0.0, y: 0.0}, i))\n      }\n    }\n    return trackVertices;\n  }\n);\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    use_rect: state.machine.rectangular,\n    min_x: state.machine.min_x,\n    max_x: state.machine.max_x,\n    min_y: state.machine.min_y,\n    max_y: state.machine.max_y,\n    max_radius: state.machine.max_radius,\n    canvas_width: state.app.canvas_width,\n    canvas_height: state.app.canvas_height,\n    vertices: getVertices(state),\n    sliderValue: state.app.machineSlider,\n    showTrack: state.app.input === 0,\n    trackVertices: getTrackVertices(state),\n  }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    onResize: (size) => {\n      dispatch(setMachinePreviewSize(size))\n    },\n  }\n}\n\n// Contains the preview window, and any parameters for the machine.\nclass PreviewWindow extends Component {\n\n  componentDidMount() {\n    var canvas = ReactDOM.findDOMNode(this);\n    var context = canvas.getContext('2d');\n    var bigBox = document.getElementById(\"biggerBox\");\n    this.resize(canvas, bigBox);\n    window.addEventListener('resize', () => { this.resize(canvas, bigBox) }, false);\n    this.paint(context);\n  }\n\n  componentDidUpdate() {\n    var canvas = ReactDOM.findDOMNode(this);\n    var context = canvas.getContext('2d');\n    context.clearRect(0, 0, this.props.canvas_width, this.props.canvas_height);\n    var bigBox = document.getElementById(\"biggerBox\");\n    this.resize(canvas, bigBox);\n    this.paint(context);\n  }\n\n  // in mm means in units of mm, but 0,0 is the center, not the lower corner or something.\n  mmToPixelsScale() {\n\n    var machine_x = 1;\n    var machine_y = 1;\n    if (this.props.use_rect) {\n      machine_x = this.props.max_x - this.props.min_x;\n      machine_y = this.props.max_y - this.props.min_y;\n    } else {\n      machine_x = this.props.max_radius * 2.0;\n      machine_y = machine_x;\n    }\n\n    var scale_x = this.props.canvas_width / machine_x;\n    var scale_y = this.props.canvas_height / machine_y;\n    // Keep it square.\n    return Math.min(scale_x, scale_y) * 0.95;\n  }\n\n  mmToPixels(vertex) {\n    var min_scale = this.mmToPixelsScale()\n\n    var x = vertex.x * min_scale + this.props.canvas_width/2.0;\n    // Y for pixels starts at the top, and goes down.\n    var y = -vertex.y * min_scale + this.props.canvas_height/2.0;\n\n    return Vertex(x, y);\n  }\n\n  moveTo_mm(context, vertex) {\n    var in_mm = this.mmToPixels(vertex);\n    context.moveTo(in_mm.x, in_mm.y)\n  }\n\n  lineTo_mm(context, vertex) {\n    var in_mm = this.mmToPixels(vertex);\n    context.lineTo(in_mm.x, in_mm.y)\n  }\n\n  dot_mm(context, vertex) {\n    var in_mm = this.mmToPixels(vertex);\n    context.arc(in_mm.x, in_mm.y, Math.max(4.0, this.mmToPixelsScale() * 1.5), 0, 2 * Math.PI, true);\n    context.fillStyle = context.strokeStyle;\n    context.fill();\n  }\n\n  slice_vertices(vertices, sliderValue) {\n    const slide_size = 10.0;\n    if (sliderValue === 0) {\n      return vertices;\n    }\n\n    // Let's start by just assuming we want a slide_size sized window, as a percentage of the whole\n    // thing.\n    //\n    const begin_fraction = sliderValue / 100.0;\n    const end_fraction = (slide_size + sliderValue) / 100.0;\n\n    const begin_vertex = Math.round(vertices.length * begin_fraction);\n    const end_vertex = Math.round(vertices.length * end_fraction);\n\n    return vertices.slice(begin_vertex, end_vertex);\n  }\n\n  paint(context) {\n    context.save();\n\n    // Draw the bounds of the machine\n    context.beginPath();\n    context.lineWidth = \"1\";\n    context.strokeStyle = \"blue\";\n    if (this.props.use_rect) {\n      this.moveTo_mm(context, Vertex((this.props.min_x - this.props.max_x)/2.0, (this.props.min_y - this.props.max_y)/2.0))\n      this.lineTo_mm(context, Vertex((this.props.max_x - this.props.min_x)/2.0, (this.props.min_y - this.props.max_y)/2.0))\n      this.lineTo_mm(context, Vertex((this.props.max_x - this.props.min_x)/2.0, (this.props.max_y - this.props.min_y)/2.0))\n      this.lineTo_mm(context, Vertex((this.props.min_x - this.props.max_x)/2.0, (this.props.max_y - this.props.min_y)/2.0))\n      this.lineTo_mm(context, Vertex((this.props.min_x - this.props.max_x)/2.0, (this.props.min_y - this.props.max_y)/2.0))\n    } else {\n      this.moveTo_mm(context, Vertex(this.props.max_radius, 0.0));\n      let resolution = 128.0;\n      for (let i=0; i<=resolution ; i++) {\n        let angle = Math.PI * 2.0 / resolution * i\n        this.lineTo_mm(context, Vertex(this.props.max_radius * Math.cos(angle),\n                                       this.props.max_radius * Math.sin(angle)));\n      }\n    }\n    context.stroke();\n\n    var drawing_vertices = this.props.vertices;\n\n    drawing_vertices = this.slice_vertices(drawing_vertices, this.props.sliderValue);\n\n    if (drawing_vertices && drawing_vertices.length > 0) {\n\n      // Draw the start and end points\n      context.beginPath();\n      context.lineWidth = 1.0;\n      context.strokeStyle = \"green\";\n      this.dot_mm(context, this.props.vertices[0]);\n      context.stroke();\n      context.beginPath();\n      context.lineWidth = 1.0;\n      context.strokeStyle = \"red\";\n      this.dot_mm(context, this.props.vertices[this.props.vertices.length-1]);\n      context.stroke();\n\n      // Draw the background vertices\n      if (this.props.sliderValue !== 0) {\n        context.beginPath();\n        context.lineWidth = this.mmToPixelsScale();\n        context.strokeStyle = \"gray\";\n        this.moveTo_mm(context, this.props.vertices[0]);\n        for (let i=0; i<this.props.vertices.length; i++) {\n          this.lineTo_mm(context, this.props.vertices[i]);\n        }\n        context.stroke();\n      }\n\n      // Draw the specific vertices\n      context.beginPath();\n      context.lineWidth = this.mmToPixelsScale();\n      context.strokeStyle = \"yellow\";\n      this.moveTo_mm(context, drawing_vertices[0]);\n      for (let i=0; i<drawing_vertices.length; i++) {\n        this.lineTo_mm(context, drawing_vertices[i]);\n      }\n      context.stroke();\n    }\n    // Draw the trackVertices\n    if (this.props.trackVertices && this.props.trackVertices.length > 0 && this.props.showTrack) {\n      // Draw the track vertices\n      context.beginPath();\n      context.lineWidth = this.mmToPixelsScale();\n      context.strokeStyle = \"green\";\n      this.moveTo_mm(context, this.props.trackVertices[0]);\n      for (let i=0; i<this.props.trackVertices.length; i++) {\n        this.lineTo_mm(context, this.props.trackVertices[i]);\n      }\n      context.stroke();\n    }\n\n    context.restore();\n  }\n\n  resize(canvas, bigBox) {\n    var size = parseInt(getComputedStyle(bigBox).getPropertyValue('width'),10);\n    canvas.width = size;\n    canvas.height = size;\n    if (this.props.canvas_width !== size) {\n      this.props.onResize(size);\n    }\n    var context = canvas.getContext('2d');\n    this.paint(context)\n  }\n\n  render() {\n    const {canvas_width, canvas_height} = this.props;\n    return (\n        <canvas className=\"canvas\"\n          width={canvas_width}\n          height={canvas_height}\n        />\n    );\n  }\n}\nPreviewWindow = connect(mapStateToProps, mapDispatchToProps)(PreviewWindow);\n\nconst machineStateToProps = (state, ownProps) => {\n  return {\n    sliderValue: state.app.machineSlider,\n    verticesStats: getVerticesStats(state),\n  }\n}\n\nconst machineDispatchToProps = (dispatch, ownProps) => {\n  return {\n    onSlider: (value) => {\n      dispatch(setMachineSlider(value))\n    },\n  }\n}\n\nclass MachinePreview extends Component {\n  render() {\n    return (\n      <div className=\"machine-preview\">\n\n        <Panel>\n            <PreviewWindow />\n            Points: {this.props.verticesStats.numPoints}, Distance: {this.props.verticesStats.distance}\n            <div className=\"slide-box\">\n                <Slider\n                  value={this.props.sliderValue}\n                  step={1.0}\n                  min={0.0}\n                  max={100.0}\n                  onChange={this.props.onSlider}\n                />\n            </div>\n            <div className=\"cheatBox\" id=\"biggerBox\">\n                <MachineSettings />\n            </div>\n        </Panel>\n      </div>\n    )\n  }\n}\nMachinePreview = connect(machineStateToProps, machineDispatchToProps)(MachinePreview);\n\nexport default MachinePreview;\n\n","import './GCode.css';\nimport React, { Component } from 'react';\nimport {\n  Button,\n  ControlLabel,\n  FormControl,\n  FormGroup,\n  ListGroupItem,\n  Modal,\n} from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport {\n  getVertices,\n} from '../inputs/Computer.js';\n\nimport {\n  Vertex,\n} from '../Geometry.js'\nimport Victor from 'victor';\n\n// GCode Actions\nexport const setGCodeFilename = ( text ) => {\n  return {\n    type: 'SET_GCODE_FILENAME',\n    value: text,\n  };\n}\n\nexport const setGCodePre = ( text ) => {\n  localStorage.setItem('gcode_pre', text)\n  return {\n    type: 'SET_GCODE_PRE',\n    value: text,\n  };\n}\n\nexport const setGCodePost = ( text ) => {\n  localStorage.setItem('gcode_post', text)\n  return {\n    type: 'SET_GCODE_POST',\n    value: text,\n  };\n}\n\nexport const toggleReverse = ( ) => {\n  return {\n    type: 'TOGGLE_REVERSE',\n  };\n}\n\nexport const setShowGCode = ( on ) => {\n  return {\n    type: 'SET_SHOW_GCODE',\n    value: on,\n  };\n}\n\n\n// Helper function to take a string and make the user download a text file with that text as the\n// content.\n//\n// I don't really understand this, but I took it from here, and it seems to work:\n// https://stackoverflow.com/a/18197511\n//\nfunction download(filename, text) {\n  var pom = document.createElement('a');\n  pom.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\n  pom.setAttribute('download', filename);\n\n  if (document.createEvent) {\n    var event = document.createEvent('MouseEvents');\n    event.initEvent('click', true, true);\n    pom.dispatchEvent(event);\n  }\n  else {\n    pom.click();\n  }\n}\n\nfunction gcode(vertex) {\n  var command = 'G01' +\n    ' X' + vertex.x.toFixed(3) +\n    ' Y' + vertex.y.toFixed(3)\n  if (vertex.speed > 0.0) {\n    command += ' F' + vertex.f\n  }\n  return command + '\\n'\n}\n\nfunction thetarho(vertex) {\n  return \"\" + vertex.x.toFixed(5) + \" \" + vertex.y.toFixed(5) + \"\\n\";\n}\n\nconst getComments = (state) => {\n\n  let comments = [];\n  comments.push(\"Created by Sandify\");\n  comments.push(\"\");\n  comments.push(\"  https://sandify.org\");\n  comments.push(\"\");\n  comments.push(\"  Sandify Version: \" + state.app.sandifyVersion);\n  comments.push(\"\");\n  comments.push(\"  Machine Type: \" + (state.machine.rectangular ? \"Rectangular\" : \"Polar\"));\n  if (state.machine.rectangular) {\n    comments.push(\"    MinX: \" + state.machine.min_x + \" MaxX: \" + state.machine.max_x + \" MinY: \" + state.machine.min_y + \" MaxY: \" + state.machine.max_y);\n  } else {\n    comments.push(\"    Max Radius: \" + state.machine.max_radius);\n    comments.push(\"    Force Endpoints: \" + state.machine.polarEndpoints);\n  }\n\n  switch (state.app.input) {\n    case 0: // shapes\n      var shapeInfo = state.shapes.shapes.find(shape => shape.name === state.shapes.currentShape);\n\n      comments.push(\"  Content Type: Shapes\");\n      comments.push(\"    Starting Size: \" + state.shapes.startingSize);\n      comments.push(\"    Offset: X: \" + state.transform.xformOffsetX + \" Y: \" + state.transform.xformOffsetY);\n      comments.push(\"    Selected Shape: \" + shapeInfo.name);\n\n      shapeInfo.options.forEach((option) => {\n        comments.push(\"      \" + option.title + \": \" + state.shapes[option.key]);\n      });\n\n      comments.push(\"    Number of Loops: \" + state.transform.numLoops);\n      comments.push(\"    Spin: \" + state.transform.spinEnabled);\n      if (state.transform.spinEnabled) {\n        comments.push(\"      Spin Value: \" + state.transform.spinValue);\n        comments.push(\"      Spin Switchbacks: \" + state.transform.spinSwitchbacks);\n      }\n      comments.push(\"    Grow: \" + state.transform.growEnabled);\n      if (state.transform.growEnabled) {\n        comments.push(\"      Grow Value: \" + state.transform.growValue);\n      }\n      comments.push(\"    Track: \" + state.transform.trackEnabled);\n      if (state.transform.trackEnabled) {\n        comments.push(\"      Track Size: \" + state.transform.trackValue);\n        comments.push(\"      Track Length: \" + state.transform.trackLength);\n        comments.push(\"      Track Grow: \" + state.transform.trackGrowEnabled);\n        if (state.transform.trackGrowEnabled) {\n          comments.push(\"          Track Grow Value: \" + state.transform.trackGrow);\n        }\n      }\n      break;\n    case 2: // wiper\n      comments.push(\"  Content Type: Wiper\");\n      comments.push(\"    Wiper Angle: \" + state.wiper.angleDeg);\n      comments.push(\"    Wiper Size: \"  + state.wiper.size);\n      break;\n    case 3: // thetarho\n      comments.push(\"  Content Type: ThetaRho\");\n      comments.push(\"    Input File: \" + state.file.name);\n      comments.push(\"    Zoom: \"  + state.file.zoom);\n      comments.push(\"    Aspect Ratio: \" + state.file.aspectRatio);\n      break;\n    default: // Dunno\n      comments.push(\"  Content Type: Unknown\");\n      break;\n  }\n  comments.push(\"  Path Reversed: \" + state.app.reverse);\n  comments.push(\"\");\n\n  return comments;\n};\n\nconst gcodeProps = (state, ownProps) => {\n  return {\n    reverse: state.app.reverse,\n    show: state.app.showGCode,\n    vertices: getVertices(state),\n\n    settings: getComments(state),\n    xOffset: (state.machine.min_x + state.machine.max_x) / 2.0,\n    yOffset: (state.machine.min_y + state.machine.max_y) / 2.0,\n    max_radius: state.machine.max_radius,\n\n    filename: state.gcode.filename,\n    pre: state.gcode.pre,\n    post: state.gcode.post,\n  }\n}\n\nconst gcodeDispatch = (dispatch, ownProps) => {\n  return {\n    open: () => {\n      dispatch(setShowGCode(true));\n    },\n    close: () => {\n      dispatch(setShowGCode(false));\n    },\n    toggleReverse: () => {\n      dispatch(toggleReverse());\n    },\n    setFilename: (event) => {\n      dispatch(setGCodeFilename(event.target.value));\n    },\n    setPre: (event) => {\n      dispatch(setGCodePre(event.target.value));\n    },\n    setPost: (event) => {\n      dispatch(setGCodePost(event.target.value));\n    },\n  }\n}\n\n// A class that will encapsulate all the gcode generation. This is currently just a button that\n// converts vertices and a speed into a list of positions. There is a lot more than could exists\n// here.\nclass GCodeGenerator extends Component {\n\n  generateGCode() {\n    var content = \"; \" + this.props.settings.join(\"\\n; \");\n    content += \"\\n\";\n    content += \"; filename: '\" + this.props.filename + \"'\\n\\n\";\n    content += \"; BEGIN PRE\\n\";\n    content += this.props.pre;\n    content += \"; END PRE\\n\";\n\n    console.log(\"offset x: \" + this.props.xOffset + \" y: \" + this.props.yOffset);\n    var centeredVertices = this.props.vertices.map( (vertex) => {\n      return {\n        ...vertex,\n        x: vertex.x + this.props.xOffset,\n        y: vertex.y + this.props.yOffset,\n      }\n    });\n\n    var lines = centeredVertices.map(gcode);\n\n    content += lines.join('');\n\n    content += '\\n';\n    content += \"; BEGIN POST\\n\";\n    content += this.props.post;\n    content += \"; END POST\\n\";\n    var filename = this.props.filename;\n    if (!filename.includes(\".\")) {\n      filename += \".gcode\";\n    }\n    download(filename, content)\n    this.props.close();\n  }\n\n  generateThetaRho() {\n    var content = \"# \" + this.props.settings.join(\"\\n# \");\n    content += \"\\n\";\n    content += \"# filename: '\" + this.props.filename + \"'\\n\\n\";\n    content += \"# BEGIN PRE\\n\";\n    content += this.props.pre;\n    content += \"# END PRE\\n\";\n    content += '\\n';\n\n    // First, downsample larger lines into smaller ones.\n    var maxLength = 2.0;\n    var subsampledVertices = [];\n    var previous = undefined;\n    var next;\n    for (next = 0; next < this.props.vertices.length; next++) {\n      if (previous !== undefined) {\n        var start = Victor.fromObject(this.props.vertices[previous]);\n        var end = Victor.fromObject(this.props.vertices[next]);\n\n        var delta = end.clone().subtract(start);\n        var deltaSegment = end.clone().subtract(start).normalize().multiply(Victor(maxLength, maxLength));\n\n        // This loads up (start, end].\n        for (let step = 0; step < (delta.magnitude() / maxLength) ; step++) {\n          subsampledVertices.push(Vertex(start.x + step * deltaSegment.x,\n                                         start.y + step * deltaSegment.y,\n                                         this.props.vertices[next].f));\n        }\n\n      }\n      previous = next;\n    }\n    // Add in the end.\n    if (previous !== undefined) {\n      subsampledVertices.push(this.props.vertices[this.props.vertices.length - 1]);\n    }\n\n    // Convert to Theta, Rho\n    var trVertices = [];\n    var previousTheta = 0;\n    var previousRawTheta = 0;\n    for (next = 0; next < subsampledVertices.length; ++next) {\n      // Normalize the radius\n      var rho = Victor.fromObject(subsampledVertices[next]).magnitude() / this.props.max_radius;\n\n      // What is the basic theta for this point?\n      var rawTheta = Math.atan2(subsampledVertices[next].x,\n                                subsampledVertices[next].y);\n      // Convert to [0,2pi]\n      rawTheta = (rawTheta + 2.0 * Math.PI) % (2.0 * Math.PI);\n\n      // Compute the difference to the last point.\n      var deltaTheta = rawTheta - previousRawTheta;\n      // Convert to [-pi,pi]\n      if (deltaTheta < -Math.PI) {\n        deltaTheta += 2.0 * Math.PI;\n      }\n      if (deltaTheta > Math.PI) {\n        deltaTheta -= 2.0 * Math.PI;\n      }\n      var theta = previousTheta + deltaTheta;\n      previousRawTheta = rawTheta;\n      previousTheta = theta;\n\n      trVertices.push(Vertex(theta, rho, subsampledVertices[next].f));\n    }\n\n    var lines = trVertices.map(thetarho);\n\n    content += lines.join('');\n\n    content += '\\n';\n    content += \"# BEGIN POST\\n\";\n    content += this.props.post;\n    content += \"# END POST\\n\";\n\n    var filename = this.props.filename;\n    if (!filename.includes(\".\")) {\n      filename += \".thr\";\n    }\n    download(filename, content)\n\n    this.props.close();\n  }\n\n  render() {\n    const reverseActiveClass = (this.props.reverse ? \"active\" : null);\n    return (\n      <div>\n        <Button className=\"finishButton\" bsStyle=\"primary\" bsSize=\"large\" onClick={this.props.open}>Create Code</Button>\n        <Modal show={this.props.show} onHide={this.props.close}>\n          <Modal.Header closeButton>\n            <Modal.Title>Code Parameters</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <FormGroup controlId=\"sandifyFilename\">\n              <ControlLabel>Name of Output</ControlLabel>\n              <FormControl type=\"text\" value={this.props.filename} onChange={this.props.setFilename}/>\n            </FormGroup>\n            <FormGroup controlId=\"preCode\">\n              <ControlLabel>Program Start Code</ControlLabel>\n              <FormControl componentClass=\"textarea\" value={this.props.pre} onChange={this.props.setPre}/>\n            </FormGroup>\n            <FormGroup controlId=\"postCode\">\n              <ControlLabel>Program End Code</ControlLabel>\n              <FormControl componentClass=\"textarea\" value={this.props.post} onChange={this.props.setPost}/>\n            </FormGroup>\n            <ListGroupItem header=\"Reverse Path\" className={reverseActiveClass} onClick={this.props.toggleReverse}>Reverses the Code, starting at the final location</ListGroupItem>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button id=\"code-close\" bsStyle=\"default\" onClick={this.props.close}>Close</Button>\n            <Button id=\"code-gen-gcode\" bsStyle=\"primary\" onClick={this.generateGCode.bind(this)}>Generate GCode</Button>\n            <Button id=\"code-gen-thetarho\" bsStyle=\"primary\" onClick={this.generateThetaRho.bind(this)}>Generate Theta Rho</Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    );\n  }\n}\nGCodeGenerator = connect(gcodeProps, gcodeDispatch)(GCodeGenerator);\n\nexport default GCodeGenerator\n","import React, { Component } from 'react';\nimport './App.css';\nimport { createStore } from 'redux';\nimport { combineReducers } from 'redux';\nimport { Provider } from 'react-redux';\n\nimport app from '../reducers/App.js';\nimport file from '../reducers/File.js';\nimport gcode from '../reducers/GCode.js';\nimport machine from '../reducers/Machine.js';\nimport shapes from '../reducers/Shapes.js';\nimport transform from '../reducers/Transform.js';\nimport wiper from '../reducers/Wiper.js';\nimport Header from './Header';\nimport Documentation from './Documentation';\nimport InputTabs from '../inputs/InputTabs';\nimport MachinePreview from '../machine/MachinePreview';\nimport GCodeGenerator from '../machine/GCode';\n\nconst store =\n  createStore(\n    combineReducers(\n      {\n        app,\n        file,\n        gcode,\n        machine,\n        shapes,\n        transform,\n        wiper,\n      }));\n\nclass App extends Component {\n\n  render() {\n\n    return (\n      <Provider store={store}>\n        <div className=\"App\">\n\n          <div className=\"App-header\">\n            <Header/>\n          </div>\n\n          <div className=\"App-col-7 App-left\">\n            <InputTabs/>\n          </div>\n\n          <div className=\"App-col-5 App-mid\">\n            <div className=\"App-canvas\">\n              <MachinePreview/>\n            </div>\n\n            <div id=\"output\">\n              <GCodeGenerator/>\n            </div>\n          </div>\n          <div className=\"App-col-12 App-doc\">\n            <Documentation/>\n          </div>\n\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import 'bootstrap/dist/css/bootstrap.css';\n// import 'bootstrap/dist/css/bootstrap-theme.css';\nimport App from './App/App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}