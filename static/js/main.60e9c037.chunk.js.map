{"version":3,"sources":["features/app/logo.svg","features/app/appSlice.js","features/theta_rho/fileSlice.js","features/machine/machineSlice.js","features/gcode/gCodeSlice.js","features/wiper/wiperSlice.js","common/Geometry.js","shapes/polygon/polygonSlice.js","shapes/circle/circleSlice.js","shapes/star/starSlice.js","shapes/heart/heartSlice.js","shapes/reuleaux/reuleauxSlice.js","shapes/epicycloid/epicycloidSlice.js","shapes/hypocycloid/hypocycloidSlice.js","shapes/rose/roseSlice.js","shapes/input_text/raysol_cursive.js","shapes/input_text/raysol_sanserif.js","shapes/input_text/Fonts.js","shapes/input_text/inputTextSlice.js","shapes/v1_engineering/Vicious1Vertices.js","shapes/v1_engineering/v1EngineeringSlice.js","features/shapes/registered_shapes.js","shapes/polygon/Polygon.js","shapes/star/Star.js","shapes/circle/Circle.js","shapes/heart/Heart.js","shapes/reuleaux/Reuleaux.js","shapes/epicycloid/Epicycloid.js","shapes/hypocycloid/Hypocycloid.js","shapes/rose/Rose.js","shapes/input_text/InputText.js","shapes/v1_engineering/V1Engineering.js","features/shapes/shapeSlice.js","features/transforms/transformsSlice.js","features/turtle/turtleSlice.js","features/app/Header.js","features/app/Footer.js","features/shapes/Shape.js","features/shapes/ShapeList.js","features/transforms/ScaleTransform.js","features/transforms/RotationTransform.js","features/transforms/TrackTransform.js","features/transforms/Transforms.js","features/wiper/Wiper.js","features/theta_rho/ThetaRho.js","features/app/InputTabs.js","common/LimitEnforcer.js","common/Computer.js","features/machine/RectSettings.js","features/machine/PolarSettings.js","features/gcode/GCodeGenerator.js","features/machine/MachineSettings.js","features/machine/PreviewWindow.js","features/machine/MachinePreview.js","features/app/App.js","index.js"],"names":["module","exports","appSlice","createSlice","name","initialState","sandify_version","input","reducers","chooseInput","state","action","payload","actions","fileSlice","comments","vertices","zoom","aspect_ratio","setFileVertices","setFileName","setFileComments","setFileZoom","toggleFileAspectRatio","machineSlice","rectangular","undefined","localStorage","getItem","rect_expanded","polar_expanded","min_x","parseFloat","max_x","min_y","max_y","max_radius","rect_origin","polar_endpoints","canvas_width","canvas_height","slider_value","toggleMachineRectExpanded","setItem","toggleMachinePolarExpanded","setMachineMinX","setMachineMaxX","setMachineMinY","setMachineMaxY","setMachineMaxRadius","setMachineRectOrigin","newValue","value","i","length","includes","push","toggleMachineEndpoints","setMachineSize","setMachineSlider","gCodeSlice","filename","pre","post","reverse","show","setGCodeFilename","setGCodePre","setGCodePost","setGCodeShow","toggleGCodeReverse","wiperSlice","angle_deg","size","setWiperAngleDeg","setWiperSize","Vertex","x","y","speed","f","polygonSlice","setShapePolygonSides","polygon_sides","circleSlice","setShapeCircleLobes","circle_lobes","starSlice","setShapeStarPoints","star_points","setShapeStarRatio","star_ratio","heartSlice","reuleauxSlice","setShapeReuleauxSides","reuleaux_sides","epicycloidSlice","setShapeEpicycloidA","epicycloid_a","setShapeEpicycloidB","epicycloid_b","hypocycloidSlice","setShapeHypocycloidA","hypocycloid_a","setShapeHypocycloidB","hypocycloid_b","roseSlice","setShapeRoseN","rose_n","setShapeRoseD","rose_d","raysol_cursive","raysol_sanserif","billsey","curve","Array","keys","map","index","angle","Math","PI","cos","sin","billseyConverter","newVertices","prevPoint","forEach","vertex","width","abs","height","concat","cv","raysolConverter","MonospaceFont","ch","upper","toUpperCase","hasOwnProperty","CursiveFont","inputTextSlice","setShapeInputText","input_text","setShapeInputFont","input_font","Vicious1Vertices","v1EngineeringSlice","registeredShapes","polygonReducer","ownProps","shapes","dispatch","onPolygonSizeChange","event","target","points","options","title","key","props","onChange","starReducer","onStarPointsChange","onStarRatioChange","star_scale","step","circleReducer","onCircleLobesChange","circle_points","heartReducer","heart_points","pow","reuleauxReducer","onReuleauxSidesChange","corners","coverageAngle","halfCoverageAngle","c","startAngle","corn","epicycloidReducer","onepicycloidAChange","onepicycloidBChange","link","a","b","hypocycloidReducer","onHypocycloidAChange","onHypocycloidBChange","roseReducer","onRoseNChange","onRoseDChange","n","parseInt","d","thetaClose","resolution","theta","r","inputTextReducer","onInputTextChange","onInputFontChange","prevLetter","chi","shape","letter","search","vi","widthOffset","point","type","choices","v1EngineeringReducer","findShape","find","getInfo","Object","assign","current_shape","shapeSlice","setCurrentShape","reduceReducers","reducer","transformsSlice","starting_size","offset_x","offset_y","num_loops","grow_enabled","grow_value","spin_enabled","spin_value","spin_switchbacks","track_enabled","track_grow_enabled","track_value","track_length","track_grow","setShapeStartingSize","setXFormOffsetX","setXFormOffsetY","setNumLoops","toggleSpin","setSpin","setSpinSwitchbacks","toggleGrow","setGrow","toggleTrack","toggleTrackGrow","setTrack","setTrackLength","setTrackGrow","turtleSlice","Header","Component","render","className","src","logo","alt","Footer","Container","fluid","Row","Col","xs","href","disableEnter","shiftKey","preventDefault","Shape","activeClassName","this","active","optionsRender","option","sm","Form","Label","htmlFor","Dropdown","id","onSelect","onKeyDown","Toggle","variant","Menu","choice","Item","eventKey","Control","optionsListRender","linkRender","cardBodyRender","rel","Card","Body","Accordion","as","onClick","clicked","Collapse","SelectableContext","Provider","connect","transform","x_offset","y_offset","registeredProps","mapState","methods","registeredMethods","mapDispatch","ShapeList","shapeRender","shapeInfo","defaultActiveKey","ScaleTransform","activeKey","activeCallback","FormControl","RotationTransform","switchbacks","onSwitchbacksChange","TrackTransform","activeGrowClassName","active_grow","activeGrowKey","onChangeLength","activeGrowCallback","onChangeGrow","Transforms","onSizeChange","onOffsetXChange","onOffsetYChange","loops","changeLoops","Wiper","min","max","changeAngle","changeSize","wiper","ThetaRho","aspectRatioActive","commentsRender","comment","style","cursor","accept","setVertices","display","toggleAspectRatio","setZoom","file","parseThrFile","rv","reader","FileReader","onload","lines","result","split","has_vertex","ii","line","trim","indexOf","pointStrings","console","log","thetaRhos","previous","max_angle","next","deltaAngle","rhoStep","rho","emergency_break","convertToXY","readAsText","files","InputTabs","handleSelect","Tabs","bind","Tab","pointLocation","size_x","size_y","location","intersection","line_start","line_end","side_start","side_end","clone","subtract","side","lineCrossSidePerp","diff","t","u","add","multiply","Victor","clipLine","quadrant_start","quadrant_end","nearestVertex","boundPoint","sides","intersections","s","int_point","fromObject","Error","lengthSq","temp","midpoint","good","bad","dx","dy","fixed","distance","traceCircle","start","end","endAngle","tracePoints","onSegment","clipLineCircle","rad_start","magnitude","rad_end","nearestVertexCircle","direction","normalize","distanceToLine","dt","sqrt","point1","point2","on","getIntersections","other_point","scale","scale_perc","data","fraction_index","transformed_vertex","offset","loop_period","spin_amount","rotate","loop_index","radius","track","outOfBounds","nearEnough","polishVertices","machine","outPoint","first","last","vFirst","vLast","nextCorner","unshift","gcode","cleanVertices","pt","cleanerVertices","enforceRectLimits","enforcePolarLimits","outputVertices","startLocation","cosa","sina","orig_delta_w","orig_delta_h","delta_w","delta_h","endLocation","nextWidthPoint","nextHeightPoint","corner","transformShapes","j","fraction","getVertices","createSelector","app","wiperState","x_scale","y_scale","thetaRho","getVerticesStats","numPoints","floor","RectSettings","onMinXChange","onMaxXChange","onMinYChange","onMaxYChange","ToggleButtonGroup","origin","onOriginChange","ToggleButton","expanded","PolarSettings","endpointsActiveClass","endpoints","onMaxRadiusChange","toggleEndpoints","download","text","document","createElement","blob","Blob","window","navigator","msSaveOrOpenBlob","URL","createObjectURL","createEvent","initEvent","dispatchEvent","click","revokeObjectURL","command","toFixed","thetarho","getComments","GCodeGenerator","generateGCode","content","settings","join","xOffset","yOffset","close","generateThetaRho","subsampledVertices","delta","deltaSegment","trVertices","previousTheta","previousRawTheta","rawTheta","atan2","deltaTheta","reverseActiveClass","Button","open","Modal","onHide","closeButton","Title","Group","controlId","setFilename","setPre","setPost","toggleReverse","MachineSettings","getTrackVertices","trackVertices","PreviewWindow","componentDidMount","canvas","ReactDOM","findDOMNode","context","getContext","bigBox","getElementById","resize","addEventListener","setTimeout","paint","componentDidUpdate","clearRect","mmToPixelsScale","machine_x","machine_y","use_rect","scale_x","scale_y","mmToPixels","min_scale","moveTo_mm","in_mm","moveTo","lineTo_mm","lineTo","dot_mm","arc","fillStyle","strokeStyle","fill","slice_vertices","sliderValue","begin_fraction","end_fraction","begin_vertex","round","end_vertex","slice","save","beginPath","lineWidth","stroke","drawing_vertices","showTrack","restore","getComputedStyle","getPropertyValue","onResize","MachinePreview","verticesStats","onSlider","store","configureStore","combineReducers","appReducer","fileReducer","gcodeReducer","machineReducer","shapesReducer","transformsReducer","wiperReducer","turtle","turtleReducer","App","lg"],"mappings":"uFAAAA,EAAOC,QAAU,IAA0B,kC,mRCE3C,MAAMC,EAAWC,YAAY,CAC3BC,KAAM,MACNC,aAAc,CACZC,gBAAiB,QACjBC,MAAO,GAETC,SAAU,CACRC,YAAYC,EAAOC,GACjBD,EAAMH,MAAQI,EAAOC,YAMzBH,EACEP,EAASW,QADXJ,YAGaP,QAAf,QCjBA,MAAMY,EAAYX,YAAY,CAC5BC,KAAM,iBACNC,aAAc,CACZD,KAAM,GACNW,SAAU,GACVC,SAAU,GACVC,KAAM,IACNC,cAAc,GAEhBV,SAAU,CACRW,gBAAgBT,EAAOC,GACrBD,EAAMM,SAAWL,EAAOC,SAE1BQ,YAAYV,EAAOC,GACjBD,EAAMN,KAAOO,EAAOC,SAEtBS,gBAAgBX,EAAOC,GACrBD,EAAMK,SAAWJ,EAAOC,SAE1BU,YAAYZ,EAAOC,GACjBD,EAAMO,KAAON,EAAOC,SAEtBW,sBAAsBb,EAAOC,GAC3BD,EAAMQ,cAAgBR,EAAMQ,iB,EAW9BJ,EAAUD,QALZM,E,EAAAA,gBACAC,E,EAAAA,YACAC,E,EAAAA,gBACAC,E,EAAAA,YACAC,E,EAAAA,sBAGaT,QAAf,QCpCA,MAAMU,EAAerB,YAAY,CAC/BC,KAAM,UACNC,aAAc,CACZoB,iBAAaC,IAAcC,aAAaC,QAAQ,wBAAyBD,aAAaC,QAAQ,uBAAyB,EACvHC,eAAe,EACfC,gBAAgB,EAChBC,MAAOC,WAAWL,aAAaC,QAAQ,iBAAmBD,aAAaC,QAAQ,iBAAmB,GAClGK,MAAOD,WAAWL,aAAaC,QAAQ,iBAAmBD,aAAaC,QAAQ,iBAAmB,KAClGM,MAAOF,WAAWL,aAAaC,QAAQ,iBAAmBD,aAAaC,QAAQ,iBAAmB,GAClGO,MAAOH,WAAWL,aAAaC,QAAQ,iBAAmBD,aAAaC,QAAQ,iBAAmB,KAClGQ,WAAYJ,WAAWL,aAAaC,QAAQ,kBAAoBD,aAAaC,QAAQ,kBAAoB,KACzGS,YAAa,GACbC,iBAAiB,EACjBC,aAAc,IACdC,cAAe,IACfC,aAAc,GAEhBjC,SAAU,CACRkC,0BAA0BhC,EAAOC,GAC/BD,EAAMe,aAAc,EACpBf,EAAMmB,eAAiBnB,EAAMmB,cAC7BnB,EAAMoB,gBAAiB,EACvBH,aAAagB,QAAQ,sBAAuB,IAE9CC,2BAA2BlC,EAAOC,GAChCD,EAAMe,aAAc,EACpBf,EAAMmB,eAAgB,EACtBnB,EAAMoB,gBAAkBpB,EAAMoB,eAC9BH,aAAagB,QAAQ,sBAAuB,IAE9CE,eAAenC,EAAOC,GACpBD,EAAMqB,MAAQpB,EAAOC,QACrBe,aAAagB,QAAQ,gBAAiBjC,EAAMqB,QAE9Ce,eAAepC,EAAOC,GACpBD,EAAMuB,MAAQtB,EAAOC,QACrBe,aAAagB,QAAQ,gBAAiBjC,EAAMuB,QAE9Cc,eAAerC,EAAOC,GACpBD,EAAMwB,MAAQvB,EAAOC,QACrBe,aAAagB,QAAQ,gBAAiBjC,EAAMwB,QAE9Cc,eAAetC,EAAOC,GACpBD,EAAMyB,MAAQxB,EAAOC,QACrBe,aAAagB,QAAQ,gBAAiBjC,EAAMyB,QAE9Cc,oBAAoBvC,EAAOC,GACzBD,EAAM0B,WAAazB,EAAOC,QAC1Be,aAAagB,QAAQ,iBAAkBjC,EAAM0B,aAE/Cc,qBAAqBxC,EAAOC,GAC1B,IAAIwC,EAAW,GACXC,EAAQzC,EAAOC,QAEnB,IAAK,IAAIyC,EAAI,EAAGA,EAAID,EAAME,OAASD,IACjC,IAAK3C,EAAM2B,YAAYkB,SAASH,EAAMC,IAAK,CACzCF,EAASK,KAAKJ,EAAMC,IACpB,MAGJ3C,EAAM2B,YAAcc,GAEtBM,uBAAuB/C,EAAOC,GAC5BD,EAAM4B,iBAAmB5B,EAAM4B,iBAEjCoB,eAAehD,EAAOC,GACpBD,EAAM8B,cAAgB7B,EAAOC,QAC7BF,EAAM6B,aAAe5B,EAAOC,SAE9B+C,iBAAiBjD,EAAOC,GACtBD,EAAM+B,aAAe9B,EAAOC,Y,EAiB9BY,EAAaX,QAXf6B,E,EAAAA,0BACAE,E,EAAAA,2BACAC,E,EAAAA,eACAC,E,EAAAA,eACAC,E,EAAAA,eACAC,E,EAAAA,eACAC,E,EAAAA,oBACAC,E,EAAAA,qBACAO,E,EAAAA,uBACAC,E,EAAAA,eACAC,E,EAAAA,iBAGanC,QAAf,QCzFA,MAAMoC,EAAazD,YAAY,CAC7BC,KAAM,QACNC,aAAc,CACZwD,SAAU,UACVC,IAAKnC,aAAaC,QAAQ,aAAeD,aAAaC,QAAQ,aAAe,GAC7EmC,KAAMpC,aAAaC,QAAQ,cAAgBD,aAAaC,QAAQ,cAAgB,GAChFoC,SAAS,EACTC,MAAM,GAERzD,SAAU,CACR0D,iBAAiBxD,EAAOC,GACtBD,EAAMmD,SAAWlD,EAAOC,SAE1BuD,YAAYzD,EAAOC,GACjBD,EAAMoD,IAAMnD,EAAOC,QACnBe,aAAagB,QAAQ,YAAajC,EAAMoD,MAE1CM,aAAa1D,EAAOC,GAClBD,EAAMqD,KAAOpD,EAAOC,QACpBe,aAAagB,QAAQ,aAAcjC,EAAMqD,OAE3CM,aAAa3D,EAAOC,GAClBD,EAAMuD,KAAOtD,EAAOC,SAEtB0D,mBAAmB5D,EAAOC,GACxBD,EAAMsD,SAAWtD,EAAMsD,Y,EAWzBJ,EAAW/C,QALbqD,E,EAAAA,iBACAC,E,EAAAA,YACAC,E,EAAAA,aACAC,E,EAAAA,aACAC,E,EAAAA,mBAGaV,QAAf,QCtCA,MAAMW,EAAapE,YAAY,CAC7BC,KAAM,QACNC,aAAc,CACZmE,UAAW,GACXC,KAAM,IAERjE,SAAU,CACRkE,iBAAiBhE,EAAOC,GACtBD,EAAM8D,UAAY7D,EAAOC,SAE3B+D,aAAajE,EAAOC,GAClBD,EAAM+D,KAAO9D,EAAOC,Y,EAQtB2D,EAAW1D,QAFb6D,E,EAAAA,iBACAC,E,EAAAA,aAGaJ,QAAf,Q,SCpBO,MAAMK,EAAS,CAACC,EAAGC,EAAGC,EAAM,KAC1B,CACLF,EAAGA,EACHC,EAAGA,EACHE,EAAGD,ICLDE,EAAe9E,YAAY,CAC/BC,KAAM,UACNI,SAAU,CACR0E,qBAAqBxE,EAAOC,GAC1BD,EAAMyE,cAAgBxE,EAAOC,YAMjCsE,GACED,EAAapE,QADfqE,qBAGaD,SAAf,QCbA,MAAMG,GAAcjF,YAAY,CAC9BC,KAAM,SACNI,SAAU,CACR6E,oBAAoB3E,EAAOC,GACzBD,EAAM4E,aAAe3E,EAAOC,YAMhCyE,GACED,GAAYvE,QADdwE,oBAGaD,UAAf,QCbA,MAAMG,GAAYpF,YAAY,CAC5BC,KAAM,OACNI,SAAU,CACRgF,mBAAmB9E,EAAOC,GACxBD,EAAM+E,YAAc9E,EAAOC,SAE7B8E,kBAAkBhF,EAAOC,GACvBD,EAAMiF,WAAahF,EAAOC,Y,GAQ5B2E,GAAU1E,QAFZ2E,G,GAAAA,mBACAE,G,GAAAA,kBAGaH,UAAf,QCXeK,OANIzF,YAAY,CAC7BC,KAAM,QACNI,SAAU,KAIZ,QCNA,MAAMqF,GAAgB1F,YAAY,CAChCC,KAAM,WACNI,SAAU,CACRsF,sBAAsBpF,EAAOC,GAC3BD,EAAMqF,eAAiBpF,EAAOC,YAMlCkF,GACED,GAAchF,QADhBiF,sBAGaD,UAAf,QCbA,MAAMG,GAAkB7F,YAAY,CAClCC,KAAM,aACNI,SAAU,CACRyF,oBAAoBvF,EAAOC,GACzBD,EAAMwF,aAAevF,EAAOC,SAE9BuF,oBAAoBzF,EAAOC,GACzBD,EAAM0F,aAAezF,EAAOC,Y,GAQ9BoF,GAAgBnF,QAFlBoF,G,GAAAA,oBACAE,G,GAAAA,oBAGaH,UAAf,QCjBA,MAAMK,GAAmBlG,YAAY,CACnCC,KAAM,cACNI,SAAU,CACR8F,qBAAqB5F,EAAOC,GAC1BD,EAAM6F,cAAgB5F,EAAOC,SAE/B4F,qBAAqB9F,EAAOC,GAC1BD,EAAM+F,cAAgB9F,EAAOC,Y,GAQ/ByF,GAAiBxF,QAFnByF,G,GAAAA,qBACAE,G,GAAAA,qBAGaH,UAAf,QCjBA,MAAMK,GAAYvG,YAAY,CAC5BC,KAAM,OACNI,SAAU,CACRmG,cAAcjG,EAAOC,GACnBD,EAAMkG,OAASjG,EAAOC,SAExBiG,cAAcnG,EAAOC,GACnBD,EAAMoG,OAASnG,EAAOC,Y,GAQxB8F,GAAU7F,QAFZ8F,G,GAAAA,cACAE,G,GAAAA,cAGaH,UAAf,QCnBO,IAAIK,GAAiB,CAC1B,IAAM,CAAE,CAAC,GAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,IAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,IAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,IAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,IAAO,IAChJ,EAAM,CAAE,CAAC,KAAO,GAAQ,CAAC,IAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,IAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,MAAO,GAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,KAAO,KAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,IAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,IAAM,KAAQ,CAAC,IAAM,KAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,KAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,KAAQ,CAAC,IAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,GAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,IAAM,KAAQ,CAAC,IAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,GAAQ,CAAC,MAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,KAAO,IAC31B,EAAM,CAAE,CAAC,KAAO,GAAQ,CAAC,IAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,IAAO,GAAQ,CAAC,IAAO,MAAQ,CAAC,IAAO,KAAQ,CAAC,IAAO,MAAQ,CAAC,IAAO,KAAQ,CAAC,IAAO,MAAQ,CAAC,GAAM,KAAQ,CAAC,GAAM,MAAQ,CAAC,GAAM,KAAQ,CAAC,GAAM,MAAQ,CAAC,GAAM,KAAQ,CAAC,GAAM,MAAQ,CAAC,GAAM,KAAQ,CAAC,GAAM,MAAQ,CAAC,GAAM,KAAQ,CAAC,IAAO,MAAQ,CAAC,IAAO,KAAQ,CAAC,IAAO,MAAQ,CAAC,IAAO,KAAQ,CAAC,IAAO,MAAQ,CAAC,IAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,IAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,IAAO,IACvb,EAAM,CAAE,CAAC,KAAO,GAAQ,CAAC,IAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,IAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,IAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,IAAM,KAAQ,CAAC,KAAM,KAAQ,CAAC,IAAM,KAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,KAAQ,CAAC,IAAM,KAAQ,CAAC,IAAM,KAAQ,CAAC,KAAM,IAAQ,CAAC,IAAM,KAAQ,CAAC,IAAM,KAAQ,CAAC,IAAM,KAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,KAAQ,CAAC,KAAM,KAAQ,CAAC,IAAM,KAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,IAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,IAAO,MAAQ,CAAC,KAAO,IAAQ,CAAC,KAAO,KAAQ,CAAC,KAAO,KAAQ,CAAC,IAAO,KAAQ,CAAC,KAAO,KAAQ,CAAC,IAAO,IAAQ,CAAC,KAAO,KAAQ,CAAC,IAAO,KAAQ,CAAC,KAAO,IACjzB,EAAM,CAAE,CAAC,KAAO,GAAQ,CAAC,IAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,MAAO,GAAQ,CAAC,MAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,KAAO,KAAQ,CAAC,KAAO,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,IAAM,IAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,IAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,IAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,IAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,IAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,IAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,KAAQ,CAAC,KAAO,KAAQ,CAAC,KAAO,KAAQ,CAAC,KAAO,IAAQ,CAAC,KAAO,KAAQ,CAAC,KAAO,KAAQ,CAAC,KAAO,KAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,IAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,IAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,IAAO,IACjzC,EAAM,CAAE,CAAC,KAAO,GAAQ,CAAC,IAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,IAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,IAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,IAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,KAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,KAAQ,CAAC,KAAO,MAAQ,CAAC,IAAM,KAAQ,CAAC,IAAM,MAAQ,CAAC,IAAM,KAAQ,CAAC,IAAM,MAAQ,CAAC,IAAM,KAAQ,CAAC,GAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,GAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,GAAM,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,KAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,KAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,GAAQ,CAAC,IAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,IAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,IAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,IAAO,IACtxn5B,EAAM,CAAE,CAAC,KAAO,GAAQ,CAAC,IAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,IAAO,GAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,KAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,KAAQ,CAAC,KAAO,MAAQ,CAAC,IAAM,KAAQ,CAAC,IAAM,MAAQ,CAAC,IAAM,KAAQ,CAAC,IAAM,MAAQ,CAAC,GAAM,KAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,KAAQ,CAAC,IAAM,KAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,KAAQ,CAAC,GAAM,KAAQ,CAAC,IAAM,MAAQ,CAAC,IAAM,KAAQ,CAAC,IAAM,MAAQ,CAAC,IAAM,KAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,KAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,KAAQ,CAAC,KAAO,MAAQ,CAAC,IAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,IAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,IAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,IAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,IAAO,GAAQ,CAAC,KAAO,IACvvB,EAAM,CAAE,CAAC,KAAO,GAAQ,CAAC,IAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,IAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,GAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,KAAQ,CAAC,IAAM,KAAQ,CAAC,IAAM,MAAQ,CAAC,IAAM,KAAQ,CAAC,IAAM,KAAQ,CAAC,IAAM,KAAQ,CAAC,IAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,GAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,GAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,GAAQ,CAAC,IAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,IAAO,GAAQ,CAAC,KAAO,IACrqlrB,EAAM,CAAE,CAAC,KAAO,GAAQ,CAAC,IAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,IAAO,GAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,IAAO,IAAQ,CAAC,KAAO,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,MAAO,MAAQ,CAAC,IAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,IAClrB,EAAM,CAAE,CAAC,KAAO,GAAQ,CAAC,IAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,IAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,IAAM,KAAQ,CAAC,KAAM,IAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,IAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,KAAM,GAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,IAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,IAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,IAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,IAAO,IACz1B,EAAM,CAAE,CAAC,KAAO,GAAQ,CAAC,IAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,IAAO,KAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,GAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,GAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,KAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,KAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,GAAQ,CAAC,MAAO,GAAQ,CAAC,IAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,IAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,IAAO,GAAQ,CAAC,KAAO,IAC3wB,EAAM,CAAE,CAAC,MAAO,GAAQ,CAAC,MAAO,GAAQ,CAAC,MAAO,GAAQ,CAAC,MAAO,GAAQ,CAAC,MAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,MAAO,GAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,IAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,KAAQ,CAAC,IAAM,KAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,IAAM,IAAQ,CAAC,KAAO,KAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,IAAQ,CAAC,MAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,MAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,IAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,IAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,IAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,IAAO,IACjuB,EAAM,CAAE,CAAC,KAAO,GAAQ,CAAC,IAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,IAAO,IAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAM,GAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,KAAQ,CAAC,IAAM,KAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,KAAQ,CAAC,IAAM,KAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,KAAQ,CAAC,IAAM,KAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,GAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,OACn+B,EAAM,CAAE,CAAC,KAAO,GAAQ,CAAC,IAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,IAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,IAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,IAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,IAAM,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,IAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,IAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,IACl2C,EAAM,CAAE,CAAC,KAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,OAAQ,CAAC,IAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,IAC17B,EAAM,CAAE,CAAC,KAAO,GAAQ,CAAC,IAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,IAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,MAAO,GAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,IAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,KAAQ,CAAC,IAAM,IAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,IAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,MAAQ,CAAC,IAAM,KAAQ,CAAC,IAAM,KAAQ,CAAC,KAAM,KAAQ,CAAC,IAAM,KAAQ,CAAC,KAAM,KAAQ,CAAC,IAAM,KAAQ,CAAC,IAAM,KAAQ,CAAC,IAAM,MAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,KAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,IAAQ,CAAC,IAAO,KAAQ,CAAC,KAAO,KAAQ,CAAC,IAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,IAAO,IAC94B,EAAM,CAAE,CAAC,KAAO,GAAQ,CAAC,IAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,GAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,OAAQ,CAAC,KAAO,OAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,IACpxB,EAAM,CAAE,CAAC,KAAO,GAAQ,CAAC,IAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,IAAO,GAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,KAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,IAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,IACpwB,EAAM,CAAE,CAAC,KAAO,GAAQ,CAAC,IAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,IAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,IAAO,GAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,GAAQ,CAAC,MAAO,GAAQ,CAAC,MAAO,GAAQ,CAAC,MAAO,GAAQ,CAAC,MAAO,IAC1gC,EAAM,CAAE,CAAC,KAAO,GAAQ,CAAC,IAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,IAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,GAAQ,CAAC,MAAO,GAAQ,CAAC,MAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,IAAO,IACj7C,EAAM,CAAE,CAAC,KAAO,GAAQ,CAAC,MAAO,GAAQ,CAAC,IAAO,GAAQ,CAAC,MAAO,GAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,MAAO,GAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,GAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,KAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,MAAO,GAAQ,CAAC,OAAO,GAAQ,CAAC,OAAO,GAAQ,CAAC,OAAO,IAC9hD,EAAM,CAAE,CAAC,MAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,IAAM,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,GAAQ,CAAC,MAAO,GAAQ,CAAC,MAAO,GAAQ,CAAC,MAAO,GAAQ,CAAC,MAAO,IAC3tC,EAAM,CAAE,CAAC,KAAO,GAAQ,CAAC,IAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,IAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,IAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,IAAM,KAAQ,CAAC,IAAM,KAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,GAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,IAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,IAAO,IAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,IAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,KAAQ,CAAC,KAAO,GAAQ,CAAC,IAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,IAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,IAAO,GAAQ,CAAC,KAAO,IACjxB,EAAM,CAAE,CAAC,KAAO,GAAQ,CAAC,IAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,IAAM,KAAQ,CAAC,IAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,KAAQ,CAAC,IAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,IAAO,GAAQ,CAAC,KAAO,IAC1zB,EAAM,CAAE,CAAC,KAAO,GAAQ,CAAC,IAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,IAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,IAAO,GAAQ,CAAC,MAAO,GAAQ,CAAC,MAAO,MAAQ,CAAC,IAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,IAAO,IAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,IAAQ,CAAC,KAAO,MAAQ,CAAC,IAAM,GAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,KAAQ,CAAC,IAAM,KAAQ,CAAC,IAAM,KAAQ,CAAC,IAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,IAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,GAAQ,CAAC,MAAO,MAAQ,CAAC,IAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,GAAQ,CAAC,MAAO,GAAQ,CAAC,MAAO,IACj5B,EAAM,CAAE,CAAC,KAAO,GAAQ,CAAC,IAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,KAAQ,CAAC,IAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,IAAM,KAAQ,CAAC,KAAM,IAAQ,CAAC,KAAM,IAAQ,CAAC,KAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,KAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,KAAQ,CAAC,KAAO,MAAQ,CAAC,IAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,IAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,IAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,IAAO,GAAQ,CAAC,KAAO,IAC7yB,EAAM,CAAE,CAAC,KAAO,GAAQ,CAAC,IAAO,GAAQ,CAAC,KAAO,KAAQ,CAAC,KAAO,KAAQ,CAAC,KAAO,KAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,KAAO,KAAQ,CAAC,KAAO,IAAQ,CAAC,MAAO,KAAQ,CAAC,KAAM,GAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,IAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,IAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,GAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,KAAQ,CAAC,IAAO,KAAQ,CAAC,KAAO,KAAQ,CAAC,IAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,IAC18B,EAAM,CAAE,CAAC,KAAO,GAAQ,CAAC,IAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,IAAO,GAAQ,CAAC,MAAO,GAAQ,CAAC,MAAO,GAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,GAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,IAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,KAAQ,CAAC,IAAM,MAAQ,CAAC,IAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,IAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,GAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,GAAM,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,GAAQ,CAAC,MAAO,IAC7uC,EAAM,CAAE,CAAC,KAAO,GAAQ,CAAC,IAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,IAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,GAAQ,CAAC,MAAO,GAAQ,CAAC,IAAO,IAC5wC,EAAM,CAAE,CAAC,KAAO,GAAQ,CAAC,IAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,IAAO,KAAQ,CAAC,KAAO,KAAQ,CAAC,IAAO,KAAQ,CAAC,KAAO,KAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,KAAO,GAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,IAAM,IAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,IAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,KAAQ,CAAC,KAAO,GAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,KAAQ,CAAC,IAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,IAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,KAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,KAAO,GAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,KAAQ,CAAC,IAAO,KAAQ,CAAC,KAAO,GAAQ,CAAC,IAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,IAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,GAAO,GAAQ,CAAC,MAAO,IAClhD,EAAM,CAAE,CAAC,KAAO,GAAQ,CAAC,IAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,IAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,IAAO,GAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,IAAM,MAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,KAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,OAAO,GAAQ,CAAC,OAAO,GAAQ,CAAC,OAAO,IACviD,EAAM,CAAE,CAAC,KAAO,GAAQ,CAAC,IAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,MAAO,GAAQ,CAAC,MAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,IAAO,GAAQ,CAAC,KAAO,IACh4B,EAAM,CAAE,CAAC,KAAO,GAAQ,CAAC,IAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,IAAO,GAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,GAAM,KAAQ,CAAC,IAAM,KAAQ,CAAC,GAAM,KAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,IAAM,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,IAAM,KAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,IAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,OAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,KAAO,MAAQ,CAAC,IAAO,MAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,KAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,MAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,KAAO,IACpyC,EAAM,CAAE,CAAC,KAAO,GAAQ,CAAC,IAAO,GAAQ,CAAC,MAAO,GAAQ,CAAC,KAAO,IAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,IAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,KAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,IAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,KAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,OAAQ,CAAC,KAAO,KAAQ,CAAC,KAAO,KAAQ,CAAC,KAAO,GAAQ,CAAC,MAAO,GAAQ,CAAC,IAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,IAAO,IAC39B,EAAM,CAAE,CAAC,KAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,IAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,KAAO,KAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,IAAO,KAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,OAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,IAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,KAAO,KAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,IAAO,KAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,OAAQ,CAAC,KAAO,GAAQ,CAAC,IAAO,GAAQ,CAAC,KAAO,IACh5B,EAAM,CAAE,CAAC,MAAO,GAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,IAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,KAAQ,CAAC,KAAM,GAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,GAAQ,CAAC,MAAO,GAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAC93B,EAAM,CAAE,CAAC,KAAO,KAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,KAAO,KAAQ,CAAC,KAAO,IAAQ,CAAC,IAAO,IAAQ,CAAC,KAAO,IAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,IAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,IAAO,MAAQ,CAAC,KAAO,IAChvB,EAAM,CAAE,CAAC,KAAO,GAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,IAAQ,CAAC,KAAO,IAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,KAAO,IAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,KAAO,KAAQ,CAAC,KAAO,IAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,OAAQ,CAAC,KAAO,OAAQ,CAAC,IAAO,OAAQ,CAAC,KAAO,OAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,KAAQ,CAAC,KAAO,KAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,KAAQ,CAAC,KAAO,KAAQ,CAAC,KAAO,KAAQ,CAAC,KAAO,KAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,GAAQ,CAAC,KAAO,KAAQ,CAAC,KAAO,KAAQ,CAAC,KAAO,KAAQ,CAAC,KAAO,KAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,OAAQ,CAAC,KAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,KAAO,MAAQ,CAAC,IAAO,IACviC,EAAM,CAAE,CAAC,KAAO,GAAQ,CAAC,IAAO,GAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,KAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,IAAQ,CAAC,IAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,IAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,IAAO,IAChpB,EAAM,CAAE,CAAC,MAAO,GAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,KAAQ,CAAC,IAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,IAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,OAAQ,CAAC,KAAO,OAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,IAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,IAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,GAAQ,CAAC,MAAO,IAChmC,EAAM,CAAE,CAAC,KAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,GAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,OAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,GAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,IAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,OAAQ,CAAC,KAAO,OAAQ,CAAC,KAAO,OAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,KAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,IAAO,IAChoD,EAAM,CAAE,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,KAAM,GAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,GAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,IAC3iC,EAAM,CAAE,CAAC,KAAO,OAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,OAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,OAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,IAChc,EAAM,CAAE,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,OAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,IAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,IACh2B,EAAM,CAAE,CAAC,MAAO,KAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,KAAQ,CAAC,KAAO,IAAQ,CAAC,IAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,IAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,GAAM,KAAQ,CAAC,GAAM,MAAQ,CAAC,GAAM,MAAQ,CAAC,GAAM,MAAQ,CAAC,IAAO,MAAQ,CAAC,IAAO,MAAQ,CAAC,IAAO,MAAQ,CAAC,IAAO,MAAQ,CAAC,IAAO,MAAQ,CAAC,IAAO,MAAQ,CAAC,IAAO,MAAQ,CAAC,IAAO,MAAQ,CAAC,IAAO,MAAQ,CAAC,IAAO,MAAQ,CAAC,IAAO,MAAQ,CAAC,IAAO,OAAQ,CAAC,IAAO,MAAQ,CAAC,IAAO,MAAQ,CAAC,IAAO,MAAQ,CAAC,IAAO,MAAQ,CAAC,IAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,GAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,IACx9C,EAAM,CAAE,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,KAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,IAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,KAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,GAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,IAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,GAAQ,CAAC,IAAO,GAAQ,CAAC,KAAO,IACt9B,EAAM,CAAE,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,IAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,IAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,M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AAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,IAAQ,CAAC,IAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,IAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,OAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,IACjtD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,IAAQ,CAAC,KAAO,IAAQ,CAAC,KAAO,IAAQ,CAAC,KAAO,IAAQ,CAAC,KAAO,IAAQ,CAAC,KAAO,IAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,KAAQ,CAAC,IAAM,KAAQ,CAAC,IAAM,KAAQ,CAAC,IAAM,KAAQ,CAAC,IAAM,KAAQ,CAAC,IAAM,KAAQ,CAAC,IAAM,KAAQ,CAAC,IAAM,KAAQ,CAAC,IAAM,KAAQ,CAAC,IAAM,KAAQ,CAAC,IAAM,KAAQ,CAAC,IAAM,KAAQ,CAAC,IAAM,KAAQ,CAAC,IAAM,KAAQ,CAAC,IAAM,KAAQ,CAAC,IAAM,KAAQ,CAAC,IAAM,KAAQ,CAAC,IAAM,KAAQ,CAAC,IAAM,KAAQ,CAAC,IAAM,KAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,GAAQ,CAAC,KAAO,IAAQ,CAAC,KAAO,IAAQ,CAAC,KAAO,IAAQ,CAAC,KAAO,IAAQ,CAAC,KAAO,IAAQ,CAAC,KAAO,IAAQ,CAAC,KAAO,IAAQ,CAAC,KAAO,IAAQ,CAAC,KAAO,IAAQ,CAAC,KAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,KAAO,IAAQ,CAAC,KAAO,IAAQ,CAAC,KAAO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C,KAAO,IAAQ,CAAC,KAAO,IAAQ,CAAC,KAAO,IAAQ,CAAC,KAAO,IAAQ,CAAC,KAAO,IAAQ,CAAC,KAAO,IAAQ,CAAC,KAAO,IAAQ,CAAC,KAAO,IAAQ,CAAC,KAAO,IAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,KAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,KAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,GAAQ,CAAC,KAAO,IAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAA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ACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,YAAc,cACrBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,aACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,cACvBA,EAAO,cAAgB,cACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,cACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,aAAe,eACtBA,EAAO,aAAe,eACtBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,cACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,cACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,cACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,aAAe,eACtBA,EAAO,cAAgB,eACvBA,EAAO,aAAe,eACtBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,cACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,gBACvBA,EAAO,cAAgB,gBACvBA,EAAO,cAAgB,gBACvBA,EAAO,aAAe,gBACtBA,EAAO,cAAgB,kBACvBA,EAAO,eAAiB,gBACxBA,EAAO,eAAiB,gBACxBA,EAAO,eAAiB,gBACxBA,EAAO,eAAiB,gBACxBA,EAAO,cAAgB,eACvBA,EAAO,eAAiB,eACxBA,EAAO,cAAgB,eACvBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,cACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,cAAgB,cACvBA,EAAO,aAAe,eACtBA,EAAO,cAAgB,eACvBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,cAAgB,eACvBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,cACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,cAAgB,eACvBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,cACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,cACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,cACxBA,EAAO,cAAgB,eACvBA,EAAO,eAAiB,aACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,cACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,cACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB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","file":"static/js/main.60e9c037.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.a6ab37e6.svg\";","import { createSlice } from \"@reduxjs/toolkit\"\n\nconst appSlice = createSlice({\n  name: 'app',\n  initialState: {\n    sandify_version: \"0.1.8\", // Also change the version in package.json.\n    input: 0,\n  },\n  reducers: {\n    chooseInput(state, action) {\n      state.input = action.payload\n    },\n  }\n})\n\nexport const {\n  chooseInput\n} = appSlice.actions\n\nexport default appSlice.reducer\n","import { createSlice } from \"@reduxjs/toolkit\"\n\nconst fileSlice = createSlice({\n  name: 'theta rho file',\n  initialState: {\n    name: \"\",\n    comments: [],\n    vertices: [],\n    zoom: 100,\n    aspect_ratio: false,\n  },\n  reducers: {\n    setFileVertices(state, action) {\n      state.vertices = action.payload\n    },\n    setFileName(state, action) {\n      state.name = action.payload\n    },\n    setFileComments(state, action) {\n      state.comments = action.payload\n    },\n    setFileZoom(state, action) {\n      state.zoom = action.payload\n    },\n    toggleFileAspectRatio(state, action) {\n      state.aspect_ratio = !state.aspect_ratio\n    },\n  }\n})\n\nexport const {\n  setFileVertices,\n  setFileName,\n  setFileComments,\n  setFileZoom,\n  toggleFileAspectRatio\n} = fileSlice.actions\n\nexport default fileSlice.reducer\n","import { createSlice } from \"@reduxjs/toolkit\"\n\nconst machineSlice = createSlice({\n  name: 'machine',\n  initialState: {\n    rectangular: undefined !== localStorage.getItem('machine_rect_active') ? localStorage.getItem('machine_rect_active') < 2 : true,\n    rect_expanded: false,\n    polar_expanded: false,\n    min_x: parseFloat(localStorage.getItem('machine_min_x') ? localStorage.getItem('machine_min_x') : 0),\n    max_x: parseFloat(localStorage.getItem('machine_max_x') ? localStorage.getItem('machine_max_x') : 500),\n    min_y: parseFloat(localStorage.getItem('machine_min_y') ? localStorage.getItem('machine_min_y') : 0),\n    max_y: parseFloat(localStorage.getItem('machine_max_y') ? localStorage.getItem('machine_max_y') : 500),\n    max_radius: parseFloat(localStorage.getItem('machine_radius') ? localStorage.getItem('machine_radius') : 250),\n    rect_origin: [],\n    polar_endpoints: false,\n    canvas_width: 600,\n    canvas_height: 600,\n    slider_value: 0.0\n  },\n  reducers: {\n    toggleMachineRectExpanded(state, action) {\n      state.rectangular = true\n      state.rect_expanded = !state.rect_expanded\n      state.polar_expanded = false\n      localStorage.setItem('machine_rect_active', 1)\n    },\n    toggleMachinePolarExpanded(state, action) {\n      state.rectangular = false\n      state.rect_expanded = false\n      state.polar_expanded = !state.polar_expanded\n      localStorage.setItem('machine_rect_active', 2)\n    },\n    setMachineMinX(state, action) {\n      state.min_x = action.payload\n      localStorage.setItem('machine_min_x', state.min_x)\n    },\n    setMachineMaxX(state, action) {\n      state.max_x = action.payload\n      localStorage.setItem('machine_max_x', state.max_x)\n    },\n    setMachineMinY(state, action) {\n      state.min_y = action.payload\n      localStorage.setItem('machine_min_y', state.min_y)\n    },\n    setMachineMaxY(state, action) {\n      state.max_y = action.payload\n      localStorage.setItem('machine_max_y', state.max_y)\n    },\n    setMachineMaxRadius(state, action) {\n      state.max_radius = action.payload\n      localStorage.setItem('machine_radius', state.max_radius)\n    },\n    setMachineRectOrigin(state, action) {\n      let newValue = []\n      let value = action.payload\n\n      for (let i = 0; i < value.length ; i++) {\n        if (!state.rect_origin.includes(value[i])) {\n          newValue.push(value[i])\n          break\n        }\n      }\n      state.rect_origin = newValue\n    },\n    toggleMachineEndpoints(state, action) {\n      state.polar_endpoints = !state.polar_endpoints\n    },\n    setMachineSize(state, action) {\n      state.canvas_height = action.payload\n      state.canvas_width = action.payload\n    },\n    setMachineSlider(state, action) {\n      state.slider_value = action.payload\n    }\n  }\n})\n\nexport const {\n  toggleMachineRectExpanded,\n  toggleMachinePolarExpanded,\n  setMachineMinX,\n  setMachineMaxX,\n  setMachineMinY,\n  setMachineMaxY,\n  setMachineMaxRadius,\n  setMachineRectOrigin,\n  toggleMachineEndpoints,\n  setMachineSize,\n  setMachineSlider\n} = machineSlice.actions\n\nexport default machineSlice.reducer\n","import { createSlice } from \"@reduxjs/toolkit\"\n\nconst gCodeSlice = createSlice({\n  name: 'gcode',\n  initialState: {\n    filename: \"sandify\",\n    pre: localStorage.getItem('gcode_pre') ? localStorage.getItem('gcode_pre') : '',\n    post: localStorage.getItem('gcode_post') ? localStorage.getItem('gcode_post') : '',\n    reverse: false,\n    show: false\n  },\n  reducers: {\n    setGCodeFilename(state, action) {\n      state.filename = action.payload\n    },\n    setGCodePre(state, action) {\n      state.pre = action.payload\n      localStorage.setItem('gcode_pre', state.pre)\n    },\n    setGCodePost(state, action) {\n      state.post = action.payload\n      localStorage.setItem('gcode_post', state.post)\n    },\n    setGCodeShow(state, action) {\n      state.show = action.payload\n    },\n    toggleGCodeReverse(state, action) {\n      state.reverse = !state.reverse\n    },\n  }\n})\n\nexport const {\n  setGCodeFilename,\n  setGCodePre,\n  setGCodePost,\n  setGCodeShow,\n  toggleGCodeReverse,\n} = gCodeSlice.actions\n\nexport default gCodeSlice.reducer\n","import { createSlice } from \"@reduxjs/toolkit\"\n\nconst wiperSlice = createSlice({\n  name: 'wiper',\n  initialState: {\n    angle_deg: 15,\n    size: 12,\n  },\n  reducers: {\n    setWiperAngleDeg(state, action) {\n      state.angle_deg = action.payload\n    },\n    setWiperSize(state, action) {\n      state.size = action.payload\n    },\n  }\n})\n\nexport const {\n  setWiperAngleDeg,\n  setWiperSize\n} = wiperSlice.actions\n\nexport default wiperSlice.reducer\n","// A simple struct that we can use everywhere we need vertices. I don't see a\n// problem letting this bloat a little.\n//\nexport const Vertex = (x, y, speed=0) => {\n  return {\n    x: x,\n    y: y,\n    f: speed\n  }\n}\n\n// convert degrees to radians\nexport const degToRad = (deg) => {\n  return deg / 180.0 * Math.PI;\n}\n\n// convert radians to degrees\nexport const radToDeg = (rad) => {\n  return rad * 180.0 / Math.PI;\n}\n","import { createSlice } from \"@reduxjs/toolkit\"\n\nconst polygonSlice = createSlice({\n  name: 'polygon',\n  reducers: {\n    setShapePolygonSides(state, action) {\n      state.polygon_sides = action.payload\n    }\n  }\n})\n\nexport const {\n  setShapePolygonSides\n} = polygonSlice.actions\n\nexport default polygonSlice.reducer\n","import { createSlice } from \"@reduxjs/toolkit\"\n\nconst circleSlice = createSlice({\n  name: 'circle',\n  reducers: {\n    setShapeCircleLobes(state, action) {\n      state.circle_lobes = action.payload\n    }\n  }\n})\n\nexport const {\n  setShapeCircleLobes\n} = circleSlice.actions\n\nexport default circleSlice.reducer\n","import { createSlice } from \"@reduxjs/toolkit\"\n\nconst starSlice = createSlice({\n  name: 'star',\n  reducers: {\n    setShapeStarPoints(state, action) {\n      state.star_points = action.payload\n    },\n    setShapeStarRatio(state, action) {\n      state.star_ratio = action.payload\n    }\n  }\n})\n\nexport const {\n  setShapeStarPoints,\n  setShapeStarRatio\n} = starSlice.actions\n\nexport default starSlice.reducer\n","import { createSlice } from \"@reduxjs/toolkit\"\n\nconst heartSlice = createSlice({\n  name: 'heart',\n  reducers: {\n  }\n})\n\nexport default heartSlice.reducer\n","import { createSlice } from \"@reduxjs/toolkit\"\n\nconst reuleauxSlice = createSlice({\n  name: 'reuleaux',\n  reducers: {\n    setShapeReuleauxSides(state, action) {\n      state.reuleaux_sides = action.payload\n    }\n  }\n})\n\nexport const {\n  setShapeReuleauxSides\n} = reuleauxSlice.actions\n\nexport default reuleauxSlice.reducer\n","import { createSlice } from \"@reduxjs/toolkit\"\n\nconst epicycloidSlice = createSlice({\n  name: 'epicycloid',\n  reducers: {\n    setShapeEpicycloidA(state, action) {\n      state.epicycloid_a = action.payload\n    },\n    setShapeEpicycloidB(state, action) {\n      state.epicycloid_b = action.payload\n    }\n  }\n})\n\nexport const {\n  setShapeEpicycloidA,\n  setShapeEpicycloidB\n} = epicycloidSlice.actions\n\nexport default epicycloidSlice.reducer\n","import { createSlice } from \"@reduxjs/toolkit\"\n\nconst hypocycloidSlice = createSlice({\n  name: 'hypocycloid',\n  reducers: {\n    setShapeHypocycloidA(state, action) {\n      state.hypocycloid_a = action.payload\n    },\n    setShapeHypocycloidB(state, action) {\n      state.hypocycloid_b = action.payload\n    }\n  }\n})\n\nexport const {\n  setShapeHypocycloidA,\n  setShapeHypocycloidB\n} = hypocycloidSlice.actions\n\nexport default hypocycloidSlice.reducer\n","import { createSlice } from \"@reduxjs/toolkit\"\n\nconst roseSlice = createSlice({\n  name: 'rose',\n  reducers: {\n    setShapeRoseN(state, action) {\n      state.rose_n = action.payload\n    },\n    setShapeRoseD(state, action) {\n      state.rose_d = action.payload\n    }\n  }\n})\n\nexport const {\n  setShapeRoseN,\n  setShapeRoseD\n} = roseSlice.actions\n\nexport default roseSlice.reducer\n","export let raysol_cursive = {\n  ' ' : [ [0.000,-1.000], [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.250,-1.000], [0.300,-1.000], [0.350,-1.000], [0.400,-1.000],  ],\n  '0' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.250,-1.000], [0.323,-1.000], [0.335,-0.991], [0.377,-0.947], [0.429,-0.867], [0.444,-0.830], [0.470,-0.720], [0.490,-0.571], [0.490,-0.447], [0.490,-0.323], [0.490,-0.199], [0.490,-0.075], [0.490,0.049], [0.490,0.173], [0.490,0.296], [0.490,0.420], [0.490,0.550], [0.477,0.630], [0.458,0.684], [0.441,0.738], [0.418,0.794], [0.370,0.850], [0.335,0.850], [0.302,0.850], [0.260,0.794], [0.220,0.738], [0.200,0.684], [0.185,0.630], [0.170,0.550], [0.170,0.422], [0.170,0.294], [0.170,0.165], [0.170,0.037], [0.170,-0.091], [0.170,-0.219], [0.170,-0.347], [0.170,-0.476], [0.170,-0.604], [0.185,-0.732], [0.206,-0.845], [0.228,-0.900], [0.264,-0.948], [0.288,-0.971], [0.323,-1.000], [0.385,-1.000], [0.430,-1.000], [0.480,-1.000], [0.530,-1.000], [0.580,-1.000], [0.630,-1.000], [0.680,-1.000],  ],\n  '1' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.200,-0.815], [0.200,-0.630], [0.200,-0.445], [0.200,-0.260], [0.200,-0.075], [0.200,0.110], [0.200,0.295], [0.200,0.480], [0.200,0.665], [0.200,0.850], [0.200,0.665], [0.200,0.480], [0.200,0.295], [0.200,0.110], [0.200,-0.075], [0.200,-0.260], [0.200,-0.445], [0.200,-0.630], [0.200,-0.815], [0.200,-1.000], [0.250,-1.000], [0.300,-1.000], [0.350,-1.000], [0.400,-1.000],  ],\n  '2' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-0.901], [0.260,-0.707], [0.320,-0.463], [0.367,-0.280], [0.388,-0.037], [0.404,0.174], [0.410,0.272], [0.416,0.427], [0.420,0.530], [0.416,0.625], [0.406,0.700], [0.398,0.751], [0.390,0.779], [0.370,0.810], [0.345,0.830], [0.320,0.820], [0.290,0.800], [0.260,0.780], [0.220,0.750], [0.180,0.660], [0.145,0.600], [0.180,0.660], [0.220,0.750], [0.260,0.780], [0.290,0.800], [0.320,0.820], [0.345,0.830], [0.370,0.810], [0.390,0.779], [0.398,0.751], [0.406,0.700], [0.416,0.625], [0.420,0.530], [0.416,0.427], [0.410,0.272], [0.404,0.174], [0.388,-0.037], [0.367,-0.280], [0.320,-0.463], [0.260,-0.707], [0.200,-0.901], [0.250,-0.900], [0.320,-0.820], [0.360,-0.780], [0.400,-0.750], [0.450,-0.770], [0.500,-0.800], [0.550,-0.860], [0.600,-0.950], [0.650,-1.000],  ],\n  '3' : [ [0.050,-1.000], [0.100,-1.000], [0.160,-1.000], [0.194,-1.000], [0.238,-1.000], [0.260,-1.000], [0.290,-0.984], [0.329,-0.960], [0.360,-0.920], [0.381,-0.878], [0.398,-0.843], [0.416,-0.801], [0.430,-0.720], [0.449,-0.631], [0.460,-0.541], [0.461,-0.442], [0.456,-0.359], [0.450,-0.288], [0.442,-0.219], [0.412,-0.109], [0.365,-0.050], [0.320,-0.030], [0.250,-0.009], [0.328,0.027], [0.345,0.056], [0.376,0.120], [0.410,0.200], [0.432,0.322], [0.441,0.433], [0.436,0.533], [0.427,0.631], [0.419,0.700], [0.396,0.796], [0.377,0.840], [0.345,0.850], [0.316,0.840], [0.285,0.830], [0.242,0.800], [0.195,0.760], [0.242,0.800], [0.285,0.830], [0.316,0.840], [0.345,0.850], [0.377,0.840], [0.396,0.796], [0.419,0.700], [0.427,0.631], [0.436,0.533], [0.441,0.433], [0.432,0.322], [0.410,0.200], [0.376,0.120], [0.345,0.056], [0.328,0.027], [0.285,-0.009], [0.320,-0.030], [0.365,-0.050], [0.412,-0.109], [0.442,-0.219], [0.450,-0.288], [0.456,-0.359], [0.461,-0.442], [0.460,-0.541], [0.449,-0.631], [0.430,-0.720], [0.416,-0.801], [0.398,-0.843], [0.381,-0.878], [0.360,-0.920], [0.329,-0.960], [0.290,-0.984], [0.250,-0.970], [0.210,-0.950], [0.170,-0.920], [0.130,-0.800], [0.170,-0.920], [0.210,-0.950], [0.250,-0.970], [0.290,-0.984], [0.329,-0.960], [0.400,-1.000], [0.450,-1.000], [0.500,-1.000], [0.550,-1.000], [0.600,-1.000],  ],\n  '4' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.250,-1.000], [0.300,-1.000], [0.350,-1.000], [0.400,-1.000], [0.450,-1.000], [0.450,-0.815], [0.450,-0.630], [0.450,-0.445], [0.450,-0.260], [0.450,-0.075], [0.450,0.110], [0.450,0.295], [0.450,0.480], [0.450,0.665], [0.450,0.850], [0.400,0.696], [0.350,0.542], [0.300,0.387], [0.250,0.233], [0.200,0.079], [0.150,-0.075], [0.209,-0.075], [0.269,-0.075], [0.328,-0.075], [0.388,-0.075], [0.447,-0.075], [0.506,-0.075], [0.566,-0.075], [0.625,-0.075], [0.670,-0.075], [0.625,-0.075], [0.566,-0.075], [0.506,-0.075], [0.447,-0.075], [0.450,-0.260], [0.450,-0.445], [0.450,-0.630], [0.450,-0.815], [0.450,-1.000], [0.500,-1.000], [0.550,-1.000], [0.600,-1.000], [0.650,-1.000], [0.700,-1.000], [0.750,-1.000], [0.800,-1.000],  ],\n  '5' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.258,-1.000], [0.306,-1.000], [0.357,-1.000], [0.388,-0.996], [0.429,-0.956], [0.468,-0.896], [0.502,-0.794], [0.520,-0.660], [0.525,-0.450], [0.522,-0.271], [0.500,-0.150], [0.468,-0.030], [0.438,0.043], [0.400,0.068], [0.358,0.095], [0.318,0.070], [0.259,0.020], [0.223,-0.024], [0.178,-0.091], [0.178,0.095], [0.178,0.282], [0.178,0.468], [0.178,0.654], [0.178,0.780], [0.211,0.780], [0.244,0.780], [0.277,0.780], [0.310,0.780], [0.343,0.780], [0.377,0.780], [0.430,0.780], [0.500,0.780], [0.430,0.780], [0.377,0.780], [0.343,0.780], [0.310,0.780], [0.277,0.780], [0.244,0.780], [0.211,0.780], [0.178,0.780], [0.178,0.654], [0.178,0.468], [0.178,0.282], [0.178,0.095], [0.178,-0.091], [0.223,-0.024], [0.259,0.020], [0.318,0.070], [0.358,0.095], [0.400,0.068], [0.438,0.043], [0.468,-0.030], [0.500,-0.150], [0.522,-0.271], [0.525,-0.450], [0.520,-0.660], [0.502,-0.794], [0.468,-0.896], [0.429,-0.956], [0.388,-0.996], [0.357,-1.000], [0.306,-1.000], [0.250,-0.960], [0.210,-0.900], [0.170,-0.800], [0.140,-0.700], [0.110,-0.650], [0.090,-0.630], [0.110,-0.650], [0.140,-0.700], [0.170,-0.800], [0.210,-0.900], [0.250,-0.960], [0.306,-1.000], [0.357,-1.000], [0.388,-1.000], [0.480,-1.000], [0.530,-1.000], [0.580,-1.000], [0.630,-1.000], [0.680,-1.000], [0.730,-1.000], [0.780,-1.000],  ],\n  '6' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.250,-1.000], [0.264,-0.948], [0.288,-0.971], [0.323,-1.000], [0.385,-0.991], [0.427,-0.947], [0.479,-0.867], [0.494,-0.830], [0.510,-0.788], [0.543,-0.571], [0.545,-0.454], [0.536,-0.325], [0.527,-0.273], [0.508,-0.191], [0.491,-0.137], [0.468,-0.081], [0.424,-0.035], [0.364,-0.025], [0.328,-0.035], [0.302,-0.045], [0.267,-0.077], [0.195,-0.158], [0.219,-0.036], [0.243,0.086], [0.268,0.209], [0.292,0.331], [0.316,0.453], [0.340,0.576], [0.365,0.698], [0.389,0.820], [0.365,0.698], [0.340,0.576], [0.316,0.453], [0.292,0.331], [0.268,0.209], [0.243,0.086], [0.219,-0.036], [0.195,-0.158], [0.163,-0.309], [0.155,-0.398], [0.150,-0.482], [0.161,-0.650], [0.180,-0.732], [0.206,-0.845], [0.230,-0.900], [0.288,-0.971], [0.323,-1.000], [0.385,-0.991], [0.430,-1.000], [0.480,-1.000], [0.530,-1.000], [0.580,-1.000], [0.630,-1.000], [0.680,-1.000],  ],\n  '7' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.230,-0.815], [0.260,-0.630], [0.290,-0.445], [0.320,-0.260], [0.350,-0.075], [0.380,0.110], [0.410,0.295], [0.440,0.480], [0.470,0.665], [0.500,0.850], [0.456,0.850], [0.413,0.850], [0.369,0.850], [0.325,0.850], [0.281,0.850], [0.237,0.850], [0.194,0.850], [0.150,0.850], [0.194,0.850], [0.237,0.850], [0.281,0.850], [0.325,0.850], [0.369,0.850], [0.413,0.850], [0.456,0.850], [0.500,0.850], [0.470,0.665], [0.440,0.480], [0.410,0.295], [0.380,0.110], [0.350,-0.075], [0.320,-0.260], [0.290,-0.445], [0.260,-0.630], [0.230,-0.815], [0.200,-1.000], [0.250,-1.000], [0.300,-1.000], [0.350,-1.000], [0.400,-1.000], [0.450,-1.000], [0.500,-1.000], [0.550,-1.000], [0.600,-1.000], [0.650,-1.000],  ],\n  '8' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.250,-1.000], [0.327,-0.997], [0.364,-1.000], [0.409,-0.973], [0.444,-0.937], [0.468,-0.855], [0.502,-0.734], [0.516,-0.580], [0.512,-0.468], [0.498,-0.389], [0.469,-0.230], [0.436,-0.114], [0.396,0.002], [0.378,0.040], [0.359,0.081], [0.330,0.120], [0.310,0.160], [0.290,0.216], [0.270,0.270], [0.250,0.350], [0.230,0.450], [0.240,0.566], [0.270,0.683], [0.300,0.750], [0.336,0.789], [0.378,0.820], [0.421,0.789], [0.457,0.750], [0.487,0.683], [0.517,0.566], [0.527,0.450], [0.507,0.350], [0.487,0.270], [0.467,0.216], [0.447,0.160], [0.427,0.120], [0.397,0.081], [0.340,0.040], [0.323,0.002], [0.283,-0.114], [0.250,-0.230], [0.221,-0.389], [0.207,-0.468], [0.202,-0.580], [0.217,-0.734], [0.251,-0.855], [0.274,-0.937], [0.310,-0.973], [0.355,-1.000], [0.392,-0.997], [0.409,-0.973], [0.444,-0.937], [0.468,-0.855], [0.502,-0.734], [0.516,-0.580], [0.512,-0.468], [0.498,-0.389], [0.469,-0.230], [0.436,-0.114], [0.469,-0.230], [0.498,-0.389], [0.512,-0.468], [0.516,-0.580], [0.502,-0.734], [0.468,-0.855], [0.444,-0.937], [0.409,-0.973], [0.450,-1.000], [0.500,-1.000], [0.550,-1.000], [0.600,-1.000], [0.650,-1.000],  ],\n  '9' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.250,-1.000], [0.300,-1.000], [0.350,-1.000], [0.400,-1.000], [0.420,-1.000], [0.422,-0.795], [0.422,-0.609], [0.422,-0.424], [0.422,-0.238], [0.422,-0.052], [0.422,0.133], [0.422,0.319], [0.422,0.505], [0.422,0.691], [0.422,0.850], [0.381,0.850], [0.306,0.850], [0.244,0.800], [0.200,0.700], [0.180,0.540], [0.172,0.353], [0.176,0.196], [0.186,0.099], [0.199,0.027], [0.228,-0.110], [0.260,-0.148], [0.299,-0.140], [0.328,-0.110], [0.363,-0.080], [0.390,-0.060], [0.422,-0.052], [0.422,-0.238], [0.422,-0.424], [0.422,-0.609], [0.422,-0.795], [0.420,-1.000], [0.450,-1.000], [0.500,-1.000], [0.550,-1.000], [0.600,-1.000],  ],\n  'A' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.270,-0.994], [0.314,-0.968], [0.367,-0.911], [0.421,-0.782], [0.467,-0.671], [0.421,-0.782], [0.367,-0.911], [0.314,-0.968], [0.270,-0.994], [0.225,-0.949], [0.181,-0.853], [0.147,-0.764], [0.121,-0.633], [0.102,-0.454], [0.100,-0.300], [0.110,-0.078], [0.134,0.098], [0.167,0.262], [0.199,0.367], [0.256,0.524], [0.306,0.626], [0.375,0.732], [0.465,0.821], [0.509,0.850], [0.507,0.756], [0.506,0.611], [0.505,0.466], [0.504,0.321], [0.503,0.176], [0.502,0.031], [0.501,-0.114], [0.500,-0.259], [0.499,-0.404], [0.497,-0.549], [0.498,-0.623], [0.510,-0.737], [0.561,-0.822], [0.608,-0.900], [0.652,-0.950], [0.713,-1.000],  ],\n  'B' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.150,-0.814], [0.150,-0.629], [0.150,-0.443], [0.150,-0.258], [0.150,-0.072], [0.150,0.114], [0.150,0.299], [0.150,0.485], [0.150,0.670], [0.165,0.700], [0.193,0.750], [0.224,0.800], [0.262,0.835], [0.295,0.840], [0.324,0.839], [0.346,0.820], [0.380,0.779], [0.411,0.725], [0.431,0.667], [0.450,0.580], [0.447,0.461], [0.440,0.383], [0.425,0.261], [0.405,0.150], [0.365,0.050], [0.304,0.000], [0.280,0.000], [0.304,0.000], [0.351,-0.046], [0.382,-0.119], [0.400,-0.147], [0.440,-0.248], [0.465,-0.367], [0.476,-0.441], [0.479,-0.607], [0.477,-0.651], [0.468,-0.741], [0.459,-0.805], [0.410,-0.920], [0.366,-0.971], [0.336,-1.000], [0.280,-1.000], [0.220,-1.000], [0.150,-1.000], [0.220,-1.000], [0.280,-1.000], [0.350,-1.000], [0.400,-1.000], [0.450,-1.000], [0.500,-1.000], [0.550,-1.000], [0.600,-1.000],  ],\n  'C' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-0.960], [0.270,-0.890], [0.233,-0.787], [0.210,-0.720], [0.195,-0.606], [0.180,-0.460], [0.175,-0.320], [0.175,-0.200], [0.175,-0.056], [0.187,0.140], [0.199,0.290], [0.227,0.445], [0.272,0.614], [0.322,0.720], [0.384,0.803], [0.457,0.850], [0.513,0.827], [0.566,0.682], [0.600,0.503], [0.612,0.338], [0.600,0.503], [0.566,0.682], [0.513,0.827], [0.457,0.850], [0.384,0.803], [0.322,0.720], [0.272,0.614], [0.227,0.445], [0.199,0.290], [0.187,0.140], [0.175,-0.056], [0.175,-0.200], [0.175,-0.320], [0.180,-0.460], [0.195,-0.606], [0.233,-0.787], [0.270,-0.890], [0.320,-0.955], [0.401,-1.000], [0.457,-1.000], [0.500,-1.000], [0.520,-1.000], [0.560,-1.000], [0.600,-1.000], [0.650,-1.000], [0.700,-1.000], [0.750,-1.000],  ],\n  'D' : [ [0.073,-1.000], [0.125,-1.000], [0.189,-1.000], [0.236,-1.000], [0.273,-1.000], [0.320,-1.000], [0.376,-1.000], [0.454,-0.973], [0.540,-0.911], [0.562,-0.870], [0.600,-0.771], [0.631,-0.616], [0.641,-0.495], [0.649,-0.309], [0.649,-0.206], [0.637,-0.034], [0.625,0.141], [0.610,0.245], [0.594,0.344], [0.578,0.437], [0.529,0.568], [0.480,0.670], [0.440,0.730], [0.380,0.797], [0.333,0.826], [0.292,0.821], [0.250,0.788], [0.250,0.636], [0.250,0.544], [0.250,0.329], [0.250,0.100], [0.250,-0.110], [0.250,-0.258], [0.250,-0.595], [0.250,-0.715], [0.250,-0.900], [0.273,-1.000], [0.320,-1.000], [0.376,-1.000], [0.440,-1.000], [0.500,-1.000], [0.550,-1.000], [0.600,-1.000], [0.650,-1.000], [0.700,-1.000], [0.750,-1.000], [0.800,-1.000],  ],\n  'E' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-0.900], [0.224,-0.797], [0.186,-0.648], [0.163,-0.500], [0.161,-0.334], [0.182,-0.260], [0.209,-0.210], [0.238,-0.160], [0.290,-0.110], [0.331,-0.068], [0.370,-0.043], [0.420,-0.043], [0.370,-0.043], [0.335,0.000], [0.299,0.067], [0.279,0.094], [0.227,0.195], [0.195,0.293], [0.171,0.441], [0.172,0.575], [0.188,0.702], [0.226,0.799], [0.281,0.850], [0.332,0.850], [0.370,0.850], [0.397,0.850], [0.425,0.850], [0.470,0.850], [0.425,0.850], [0.397,0.850], [0.370,0.850], [0.332,0.850], [0.281,0.850], [0.226,0.799], [0.188,0.702], [0.172,0.575], [0.171,0.441], [0.195,0.293], [0.227,0.195], [0.279,0.094], [0.299,0.067], [0.335,0.000], [0.370,-0.043], [0.420,-0.043], [0.370,-0.043], [0.331,-0.068], [0.290,-0.110], [0.238,-0.160], [0.209,-0.210], [0.182,-0.260], [0.161,-0.334], [0.163,-0.500], [0.186,-0.648], [0.224,-0.797], [0.261,-0.896], [0.294,-0.939], [0.343,-0.979], [0.409,-0.994], [0.462,-0.993], [0.508,-0.992], [0.550,-0.991],  ],\n  'F' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.250,-1.000], [0.300,-1.000], [0.340,-1.000], [0.390,-1.000], [0.426,-0.977], [0.466,-0.897], [0.501,-0.731], [0.502,-0.592], [0.502,-0.453], [0.503,-0.313], [0.503,-0.174], [0.504,-0.035], [0.505,0.104], [0.505,0.243], [0.506,0.383], [0.507,0.522], [0.507,0.661], [0.570,0.640], [0.633,0.617], [0.690,0.650], [0.754,0.695], [0.820,0.750], [0.754,0.695], [0.690,0.650], [0.633,0.617], [0.570,0.640], [0.507,0.661], [0.449,0.705], [0.372,0.765], [0.274,0.765], [0.187,0.664], [0.145,0.400], [0.187,0.664], [0.274,0.765], [0.372,0.765], [0.449,0.705], [0.507,0.661], [0.507,0.522], [0.506,0.383], [0.505,0.243], [0.505,0.104], [0.504,-0.035], [0.436,-0.031], [0.371,-0.011], [0.260,0.009], [0.371,-0.011], [0.436,-0.031], [0.504,-0.035], [0.565,-0.034], [0.632,-0.024], [0.720,-0.014], [0.632,-0.024], [0.565,-0.034], [0.504,-0.035], [0.503,-0.174], [0.503,-0.313], [0.502,-0.453], [0.502,-0.540], [0.500,-0.670], [0.501,-0.731], [0.490,-0.840], [0.455,-0.913], [0.390,-0.980], [0.348,-0.976], [0.332,-0.985], [0.316,-0.985], [0.295,-0.975], [0.266,-0.900], [0.247,-0.840], [0.243,-0.760], [0.248,-0.685], [0.279,-0.622], [0.300,-0.595], [0.337,-0.590], [0.384,-0.595], [0.436,-0.658], [0.509,-0.800], [0.545,-0.883], [0.609,-0.964], [0.635,-1.020], [0.713,-1.060], [0.771,-1.050], [0.827,-1.040], [0.877,-1.000],  ],\n  'G' : [ [0.050,-0.999], [0.101,-0.970], [0.144,-0.912], [0.186,-0.851], [0.229,-0.791], [0.288,-0.672], [0.337,-0.543], [0.359,-0.476], [0.387,-0.374], [0.417,-0.221], [0.446,-0.070], [0.460,0.022], [0.482,0.134], [0.492,0.248], [0.504,0.386], [0.518,0.523], [0.520,0.628], [0.518,0.762], [0.495,0.866], [0.448,0.833], [0.423,0.801], [0.410,0.755], [0.377,0.619], [0.371,0.584], [0.360,0.449], [0.357,0.390], [0.370,0.211], [0.384,0.135], [0.409,0.029], [0.490,-0.111], [0.548,-0.107], [0.616,-0.031], [0.657,0.050], [0.693,0.203], [0.742,0.402], [0.733,0.190], [0.711,-0.188], [0.695,-0.351], [0.670,-0.532], [0.649,-0.656], [0.607,-0.810], [0.562,-0.906], [0.509,-0.967], [0.453,-1.001], [0.400,-0.994], [0.352,-0.972], [0.294,-0.910], [0.268,-0.818], [0.251,-0.729], [0.224,-0.641], [0.190,-0.463], [0.274,-0.532], [0.375,-0.625], [0.461,-0.720], [0.535,-0.765], [0.607,-0.810], [0.671,-0.855], [0.733,-0.871], [0.795,-0.897], [0.876,-0.950], [0.948,-1.000],  ],\n  'H' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.250,-1.000], [0.292,-1.000], [0.292,-0.792], [0.292,-0.638], [0.292,-0.484], [0.292,-0.330], [0.292,-0.176], [0.292,-0.022], [0.292,0.131], [0.292,0.285], [0.292,0.400], [0.292,0.523], [0.280,0.636], [0.267,0.733], [0.230,0.800], [0.160,0.850], [0.230,0.800], [0.267,0.733], [0.280,0.636], [0.292,0.523], [0.292,0.400], [0.292,0.285], [0.292,0.131], [0.292,-0.022], [0.374,0.008], [0.455,0.039], [0.537,0.070], [0.618,0.101], [0.650,0.131], [0.650,0.285], [0.650,0.400], [0.650,0.523], [0.650,0.650], [0.660,0.750], [0.685,0.820], [0.750,0.850], [0.685,0.820], [0.660,0.750], [0.650,0.650], [0.650,0.523], [0.650,0.400], [0.650,0.285], [0.650,0.131], [0.650,-0.022], [0.650,-0.176], [0.650,-0.330], [0.650,-0.484], [0.650,-0.638], [0.650,-0.792], [0.670,-0.900], [0.700,-0.970], [0.750,-0.990], [0.800,-1.000], [0.850,-1.000], [0.900,-1.000],  ],\n  'I' : [ [0.050,-1.000], [0.100,-1.000], [0.170,-1.000], [0.250,-1.000], [0.303,-0.984], [0.350,-1.008], [0.403,-1.017], [0.460,-0.985], [0.493,-0.783], [0.537,-0.632], [0.515,-0.485], [0.489,-0.253], [0.464,-0.068], [0.454,0.156], [0.450,0.276], [0.455,0.533], [0.470,0.691], [0.490,0.796], [0.520,0.869], [0.600,0.871], [0.630,0.867], [0.659,0.751], [0.677,0.664], [0.699,0.380], [0.705,0.170], [0.694,-0.152], [0.685,-0.270], [0.647,-0.549], [0.615,-0.673], [0.592,-0.754], [0.529,-0.876], [0.460,-0.985], [0.403,-1.017], [0.350,-1.008], [0.303,-0.984], [0.247,-0.920], [0.224,-0.828], [0.210,-0.738], [0.186,-0.649], [0.159,-0.470], [0.240,-0.542], [0.338,-0.639], [0.421,-0.736], [0.493,-0.783], [0.564,-0.831], [0.626,-0.879], [0.687,-0.897], [0.748,-0.924], [0.828,-0.970], [0.899,-1.000],  ],\n  'J' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.269,-0.937], [0.349,-0.916], [0.252,-0.672], [0.202,-0.470], [0.177,-0.187], [0.172,-0.008], [0.168,0.261], [0.186,0.552], [0.224,0.752], [0.258,0.813], [0.298,0.844], [0.348,0.854], [0.406,0.845], [0.432,0.795], [0.464,0.650], [0.472,0.576], [0.479,0.379], [0.481,0.171], [0.475,-0.144], [0.470,-0.372], [0.463,-0.594], [0.459,-0.797], [0.451,-1.024], [0.442,-1.194], [0.447,-1.400], [0.433,-1.595], [0.419,-1.766], [0.389,-1.845], [0.355,-1.876], [0.250,-1.878], [0.215,-1.848], [0.182,-1.767], [0.175,-1.599], [0.182,-1.420], [0.203,-1.198], [0.233,-1.068], [0.269,-0.937], [0.346,-0.916], [0.397,-0.935], [0.448,-0.954], [0.499,-0.973], [0.550,-0.992], [0.600,-0.991], [0.650,-0.991], [0.699,-1.000],  ],\n  'K' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.250,-1.000], [0.300,-1.000], [0.318,-0.812], [0.324,-0.655], [0.331,-0.499], [0.337,-0.342], [0.344,-0.185], [0.351,-0.028], [0.341,0.111], [0.331,0.249], [0.322,0.388], [0.312,0.527], [0.302,0.666], [0.292,0.804], [0.260,0.801], [0.224,0.792], [0.186,0.724], [0.158,0.639], [0.131,0.551], [0.158,0.639], [0.186,0.724], [0.224,0.792], [0.260,0.801], [0.292,0.804], [0.302,0.666], [0.312,0.527], [0.322,0.388], [0.331,0.249], [0.341,0.111], [0.351,-0.028], [0.405,0.028], [0.442,0.119], [0.479,0.210], [0.516,0.302], [0.553,0.393], [0.590,0.484], [0.628,0.575], [0.665,0.667], [0.676,0.796], [0.665,0.667], [0.628,0.575], [0.590,0.484], [0.553,0.393], [0.516,0.302], [0.479,0.210], [0.442,0.119], [0.405,0.028], [0.368,-0.063], [0.397,-0.153], [0.427,-0.243], [0.456,-0.332], [0.485,-0.422], [0.515,-0.512], [0.544,-0.601], [0.573,-0.691], [0.602,-0.780], [0.632,-0.870], [0.661,-0.970], [0.718,-1.000], [0.764,-1.000], [0.802,-1.000], [0.848,-1.000], [0.898,-1.000],  ],\n  'L' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.190,-0.990], [0.217,-0.975], [0.239,-0.985], [0.254,-0.985], [0.271,-0.976], [0.306,-0.949], [0.328,-0.913], [0.370,-0.840], [0.401,-0.745], [0.422,-0.670], [0.425,-0.540], [0.435,-0.434], [0.440,-0.285], [0.442,-0.127], [0.437,0.099], [0.436,0.188], [0.445,0.235], [0.441,0.341], [0.457,0.557], [0.463,0.631], [0.485,0.761], [0.513,0.847], [0.526,0.898], [0.570,0.925], [0.604,0.860], [0.624,0.776], [0.636,0.627], [0.630,0.534], [0.618,0.471], [0.571,0.356], [0.553,0.329], [0.499,0.264], [0.475,0.248], [0.388,0.227], [0.367,0.230], [0.294,0.264], [0.227,0.329], [0.168,0.408], [0.227,0.329], [0.294,0.264], [0.367,0.230], [0.388,0.227], [0.475,0.248], [0.499,0.264], [0.553,0.329], [0.571,0.356], [0.618,0.471], [0.630,0.534], [0.636,0.627], [0.624,0.776], [0.604,0.860], [0.570,0.925], [0.526,0.898], [0.513,0.847], [0.485,0.761], [0.463,0.631], [0.457,0.557], [0.441,0.341], [0.445,0.235], [0.436,0.188], [0.437,0.099], [0.442,-0.127], [0.440,-0.285], [0.435,-0.434], [0.425,-0.540], [0.422,-0.670], [0.401,-0.745], [0.370,-0.840], [0.328,-0.913], [0.306,-0.949], [0.271,-0.976], [0.254,-0.985], [0.239,-0.985], [0.217,-0.975], [0.189,-0.900], [0.170,-0.840], [0.166,-0.760], [0.171,-0.685], [0.202,-0.622], [0.223,-0.595], [0.260,-0.590], [0.307,-0.595], [0.358,-0.658], [0.432,-0.800], [0.468,-0.883], [0.532,-0.964], [0.558,-1.000], [0.635,-1.000], [0.694,-1.000], [0.750,-1.000], [0.800,-1.000],  ],\n  'M' : [ [0.050,-1.000], [0.125,-1.000], [0.200,-1.000], [0.275,-1.000], [0.343,-0.941], [0.349,-0.806], [0.355,-0.672], [0.360,-0.537], [0.366,-0.402], [0.372,-0.267], [0.378,-0.133], [0.384,0.002], [0.390,0.137], [0.396,0.271], [0.402,0.406], [0.385,0.553], [0.369,0.672], [0.348,0.807], [0.294,0.861], [0.242,0.812], [0.189,0.731], [0.140,0.603], [0.189,0.731], [0.242,0.812], [0.294,0.861], [0.348,0.807], [0.369,0.672], [0.385,0.553], [0.402,0.406], [0.396,0.271], [0.390,0.137], [0.384,0.002], [0.378,-0.133], [0.372,-0.267], [0.366,-0.402], [0.360,-0.537], [0.355,-0.672], [0.349,-0.806], [0.343,-0.941], [0.349,-0.806], [0.355,-0.672], [0.360,-0.537], [0.366,-0.402], [0.372,-0.267], [0.378,-0.133], [0.384,0.002], [0.390,0.137], [0.396,0.271], [0.402,0.406], [0.428,0.602], [0.471,0.771], [0.542,0.858], [0.622,0.874], [0.660,0.784], [0.684,0.683], [0.699,0.595], [0.725,0.403], [0.720,0.269], [0.714,0.134], [0.709,-0.000], [0.703,-0.135], [0.698,-0.269], [0.693,-0.404], [0.687,-0.539], [0.682,-0.673], [0.676,-0.808], [0.671,-0.942], [0.676,-0.808], [0.682,-0.673], [0.687,-0.539], [0.693,-0.404], [0.698,-0.269], [0.703,-0.135], [0.709,-0.000], [0.714,0.134], [0.720,0.269], [0.725,0.403], [0.753,0.630], [0.796,0.799], [0.822,0.863], [0.871,0.907], [0.953,0.903], [0.984,0.828], [1.007,0.742], [1.022,0.654], [1.030,0.564], [1.028,0.419], [1.026,0.275], [1.024,0.130], [1.022,-0.015], [1.019,-0.159], [1.017,-0.304], [1.015,-0.449], [1.013,-0.593], [1.011,-0.738], [1.009,-0.883], [1.068,-0.953], [1.130,-1.000], [1.177,-1.000], [1.227,-1.000], [1.286,-1.000],  ],\n  'N' : [ [0.075,-1.000], [0.150,-1.000], [0.250,-1.000], [0.334,-0.975], [0.339,-0.910], [0.341,-0.784], [0.343,-0.659], [0.345,-0.533], [0.347,-0.408], [0.349,-0.282], [0.351,-0.157], [0.353,-0.032], [0.355,0.094], [0.357,0.219], [0.359,0.345], [0.342,0.557], [0.328,0.675], [0.311,0.805], [0.277,0.871], [0.239,0.867], [0.196,0.801], [0.166,0.708], [0.138,0.604], [0.166,0.708], [0.196,0.801], [0.239,0.867], [0.277,0.871], [0.311,0.805], [0.328,0.675], [0.342,0.557], [0.359,0.345], [0.357,0.219], [0.355,0.094], [0.353,-0.032], [0.351,-0.157], [0.349,-0.282], [0.347,-0.408], [0.345,-0.533], [0.343,-0.659], [0.341,-0.784], [0.339,-0.910], [0.334,-0.975], [0.339,-0.910], [0.341,-0.784], [0.343,-0.659], [0.345,-0.533], [0.347,-0.408], [0.349,-0.282], [0.351,-0.157], [0.353,-0.032], [0.355,0.094], [0.357,0.219], [0.359,0.345], [0.373,0.480], [0.388,0.636], [0.419,0.776], [0.446,0.860], [0.495,0.896], [0.557,0.897], [0.594,0.837], [0.634,0.739], [0.652,0.651], [0.665,0.473], [0.671,0.278], [0.671,0.160], [0.670,0.042], [0.670,-0.076], [0.669,-0.194], [0.669,-0.312], [0.668,-0.430], [0.668,-0.548], [0.667,-0.665], [0.667,-0.783], [0.666,-0.901], [0.704,-0.962], [0.726,-1.000], [0.768,-1.000], [0.797,-1.000], [0.836,-1.000], [0.885,-1.000],  ],\n  'O' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.250,-1.000], [0.332,-0.981], [0.365,-0.986], [0.420,-0.980], [0.474,-0.937], [0.510,-0.900], [0.536,-0.833], [0.564,-0.766], [0.604,-0.579], [0.624,-0.364], [0.628,-0.246], [0.627,-0.047], [0.615,0.237], [0.610,0.371], [0.580,0.535], [0.540,0.711], [0.460,0.850], [0.420,0.850], [0.382,0.820], [0.336,0.747], [0.295,0.697], [0.256,0.598], [0.224,0.507], [0.196,0.370], [0.173,0.274], [0.159,0.124], [0.150,0.000], [0.150,-0.105], [0.150,-0.200], [0.157,-0.317], [0.180,-0.511], [0.200,-0.600], [0.219,-0.686], [0.245,-0.771], [0.265,-0.860], [0.300,-0.930], [0.332,-0.981], [0.365,-0.986], [0.420,-0.980], [0.550,-1.000], [0.600,-1.000], [0.650,-1.000], [0.700,-1.000], [0.750,-1.000], [0.800,-1.000], [0.850,-1.000],  ],\n  'P' : [ [0.050,-1.000], [0.100,-1.000], [0.140,-1.000], [0.170,-1.000], [0.170,-0.829], [0.170,-0.657], [0.170,-0.486], [0.170,-0.314], [0.170,-0.143], [0.184,-0.140], [0.241,-0.175], [0.280,-0.191], [0.355,-0.158], [0.398,-0.121], [0.457,-0.015], [0.470,0.013], [0.504,0.181], [0.507,0.216], [0.510,0.322], [0.507,0.381], [0.504,0.470], [0.487,0.543], [0.456,0.674], [0.441,0.717], [0.405,0.806], [0.385,0.834], [0.355,0.850], [0.330,0.850], [0.290,0.830], [0.258,0.792], [0.235,0.750], [0.208,0.691], [0.190,0.630], [0.170,0.543], [0.170,0.372], [0.170,0.200], [0.170,0.029], [0.170,-0.143], [0.170,-0.314], [0.170,-0.486], [0.170,-0.657], [0.170,-0.829], [0.170,-1.000], [0.220,-1.000], [0.270,-1.000], [0.320,-1.000], [0.370,-1.000], [0.420,-1.000], [0.470,-1.000], [0.520,-1.000], [0.570,-1.000], [0.600,-1.000], [0.650,-1.000],  ],\n  'Q' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.250,-1.000], [0.300,-1.000], [0.365,-1.000], [0.332,-0.981], [0.300,-0.930], [0.265,-0.860], [0.245,-0.771], [0.219,-0.686], [0.200,-0.600], [0.180,-0.511], [0.157,-0.317], [0.150,-0.200], [0.150,-0.105], [0.150,0.000], [0.159,0.124], [0.173,0.274], [0.196,0.370], [0.224,0.507], [0.256,0.598], [0.295,0.697], [0.336,0.760], [0.382,0.820], [0.420,0.850], [0.480,0.840], [0.540,0.711], [0.580,0.535], [0.610,0.371], [0.625,0.150], [0.627,-0.047], [0.628,-0.246], [0.624,-0.364], [0.604,-0.579], [0.564,-0.766], [0.536,-0.833], [0.510,-0.900], [0.474,-0.937], [0.420,-0.980], [0.365,-1.000], [0.332,-0.981], [0.300,-0.930], [0.265,-0.860], [0.245,-0.771], [0.261,-0.700], [0.282,-0.640], [0.323,-0.580], [0.396,-0.580], [0.455,-0.630], [0.506,-0.700], [0.537,-0.775], [0.595,-0.860], [0.642,-0.936], [0.695,-1.000], [0.741,-1.000], [0.795,-1.000],  ],\n  'R' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.190,-1.000], [0.240,-1.000], [0.240,-0.828], [0.240,-0.656], [0.240,-0.484], [0.240,-0.312], [0.240,-0.140], [0.240,0.033], [0.240,0.205], [0.240,0.377], [0.240,0.549], [0.240,0.780], [0.282,0.800], [0.325,0.800], [0.381,0.800], [0.430,0.800], [0.480,0.800], [0.526,0.753], [0.568,0.650], [0.591,0.566], [0.604,0.507], [0.620,0.370], [0.618,0.250], [0.609,0.150], [0.587,0.081], [0.553,0.006], [0.500,-0.070], [0.434,-0.094], [0.370,-0.110], [0.330,-0.114], [0.300,-0.118], [0.255,-0.112], [0.265,-0.182], [0.310,-0.300], [0.350,-0.450], [0.385,-0.546], [0.401,-0.589], [0.423,-0.647], [0.445,-0.705], [0.468,-0.763], [0.500,-0.840], [0.525,-0.910], [0.548,-0.980], [0.570,-1.020], [0.593,-1.040], [0.637,-1.050], [0.665,-1.040], [0.700,-1.000], [0.750,-1.000],  ],\n  'S' : [ [0.050,-1.000], [0.100,-1.000], [0.140,-0.970], [0.180,-0.920], [0.210,-0.870], [0.230,-0.780], [0.255,-0.660], [0.290,-0.460], [0.320,-0.300], [0.365,-0.150], [0.405,0.000], [0.465,0.106], [0.490,0.200], [0.515,0.319], [0.535,0.430], [0.541,0.537], [0.542,0.647], [0.532,0.737], [0.512,0.807], [0.485,0.840], [0.435,0.850], [0.385,0.840], [0.344,0.820], [0.323,0.788], [0.309,0.727], [0.302,0.637], [0.298,0.570], [0.299,0.470], [0.304,0.400], [0.320,0.285], [0.345,0.130], [0.405,0.000], [0.465,-0.100], [0.513,-0.298], [0.555,-0.430], [0.540,-0.592], [0.520,-0.670], [0.500,-0.750], [0.450,-0.880], [0.400,-0.955], [0.341,-0.970], [0.306,-0.976], [0.280,-0.985], [0.250,-0.985], [0.202,-0.975], [0.175,-0.920], [0.155,-0.840], [0.151,-0.760], [0.156,-0.685], [0.184,-0.622], [0.208,-0.595], [0.249,-0.580], [0.295,-0.580], [0.342,-0.595], [0.393,-0.658], [0.467,-0.800], [0.503,-0.883], [0.567,-0.964], [0.615,-1.020], [0.670,-1.060], [0.729,-1.050], [0.785,-1.000],  ],\n  'T' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.259,-1.000], [0.302,-1.000], [0.340,-0.980], [0.365,-0.957], [0.402,-0.901], [0.422,-0.851], [0.446,-0.742], [0.465,-0.650], [0.476,-0.500], [0.482,-0.344], [0.488,-0.189], [0.494,-0.033], [0.500,0.122], [0.506,0.278], [0.513,0.434], [0.519,0.589], [0.519,0.745], [0.541,0.727], [0.580,0.700], [0.619,0.696], [0.660,0.701], [0.699,0.727], [0.750,0.770], [0.820,0.819], [0.750,0.770], [0.699,0.727], [0.660,0.701], [0.619,0.696], [0.580,0.700], [0.541,0.727], [0.519,0.745], [0.462,0.784], [0.430,0.804], [0.399,0.822], [0.350,0.830], [0.277,0.782], [0.200,0.692], [0.277,0.782], [0.350,0.830], [0.399,0.822], [0.430,0.804], [0.462,0.784], [0.519,0.745], [0.519,0.589], [0.513,0.434], [0.506,0.278], [0.500,0.122], [0.494,-0.033], [0.488,-0.189], [0.482,-0.344], [0.476,-0.500], [0.465,-0.650], [0.341,-0.970], [0.306,-0.976], [0.280,-0.985], [0.250,-0.985], [0.202,-0.975], [0.175,-0.920], [0.155,-0.840], [0.151,-0.760], [0.156,-0.685], [0.184,-0.622], [0.208,-0.595], [0.249,-0.580], [0.295,-0.580], [0.342,-0.595], [0.393,-0.658], [0.467,-0.800], [0.503,-0.883], [0.567,-0.964], [0.615,-1.020], [0.670,-1.060], [0.729,-1.050], [0.785,-1.040], [0.835,-1.020], [0.885,-1.000], [0.935,-1.000],  ],\n  'U' : [ [0.050,-1.000], [0.100,-0.999], [0.150,-0.996], [0.200,-0.994], [0.248,-0.951], [0.295,-0.908], [0.323,-0.852], [0.306,-0.805], [0.289,-0.704], [0.287,-0.492], [0.296,-0.354], [0.305,-0.215], [0.314,-0.076], [0.323,0.062], [0.332,0.201], [0.341,0.340], [0.351,0.478], [0.360,0.617], [0.349,0.682], [0.317,0.784], [0.293,0.813], [0.237,0.783], [0.205,0.699], [0.170,0.577], [0.148,0.506], [0.114,0.443], [0.148,0.506], [0.170,0.577], [0.205,0.699], [0.237,0.783], [0.293,0.813], [0.317,0.784], [0.349,0.682], [0.360,0.617], [0.351,0.478], [0.341,0.340], [0.332,0.201], [0.323,0.062], [0.314,-0.076], [0.305,-0.215], [0.296,-0.354], [0.287,-0.492], [0.289,-0.704], [0.306,-0.805], [0.323,-0.852], [0.348,-0.916], [0.399,-0.968], [0.449,-0.980], [0.493,-0.942], [0.531,-0.882], [0.550,-0.840], [0.569,-0.774], [0.591,-0.723], [0.624,-0.656], [0.631,-0.447], [0.640,-0.304], [0.649,-0.161], [0.657,-0.018], [0.666,0.125], [0.675,0.269], [0.684,0.412], [0.693,0.555], [0.701,0.698], [0.716,0.886], [0.701,0.698], [0.693,0.555], [0.684,0.412], [0.675,0.269], [0.666,0.125], [0.657,-0.018], [0.649,-0.161], [0.640,-0.304], [0.631,-0.447], [0.627,-0.567], [0.624,-0.656], [0.631,-0.791], [0.645,-0.850], [0.662,-0.910], [0.707,-0.960], [0.750,-0.970], [0.798,-1.000], [0.848,-1.000], [0.900,-1.000],  ],\n  'V' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-0.990], [0.250,-0.980], [0.300,-0.950], [0.350,-0.920], [0.380,-0.850], [0.401,-0.769], [0.422,-0.839], [0.442,-0.885], [0.465,-0.940], [0.510,-1.000], [0.570,-0.970], [0.601,-0.917], [0.638,-0.746], [0.658,-0.575], [0.668,-0.428], [0.678,-0.280], [0.688,-0.133], [0.697,0.015], [0.707,0.162], [0.717,0.310], [0.727,0.457], [0.737,0.605], [0.747,0.752], [0.757,0.850], [0.790,0.800], [0.835,0.734], [0.874,0.718], [0.908,0.748], [0.950,0.790], [0.908,0.748], [0.874,0.718], [0.835,0.734], [0.790,0.800], [0.757,0.850], [0.747,0.752], [0.737,0.605], [0.727,0.457], [0.717,0.310], [0.707,0.162], [0.697,0.015], [0.688,-0.133], [0.678,-0.280], [0.668,-0.428], [0.658,-0.575], [0.638,-0.746], [0.601,-0.917], [0.570,-0.970], [0.510,-1.000], [0.465,-0.940], [0.442,-0.885], [0.422,-0.839], [0.401,-0.769], [0.378,-0.575], [0.378,-0.382], [0.378,-0.189], [0.378,0.004], [0.378,0.197], [0.378,0.390], [0.368,0.617], [0.348,0.706], [0.324,0.790], [0.297,0.850], [0.270,0.820], [0.243,0.771], [0.218,0.710], [0.190,0.656], [0.150,0.563], [0.190,0.656], [0.218,0.710], [0.243,0.771], [0.270,0.820], [0.297,0.850], [0.324,0.790], [0.348,0.706], [0.368,0.617], [0.378,0.390], [0.378,0.197], [0.378,0.004], [0.378,-0.189], [0.378,-0.382], [0.378,-0.575], [0.401,-0.769], [0.422,-0.839], [0.442,-0.885], [0.465,-0.940], [0.510,-1.000], [0.570,-0.970], [0.601,-0.917], [0.650,-0.960], [0.700,-0.980], [0.750,-1.000], [0.800,-1.000], [0.850,-1.000], [0.900,-1.000], [0.950,-1.000], [1.000,-1.000], [1.050,-1.000],  ],\n  'W' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.250,-1.000], [0.300,-1.000], [0.325,-0.945], [0.303,-0.836], [0.286,-0.745], [0.269,-0.581], [0.267,-0.491], [0.265,-0.371], [0.268,-0.187], [0.272,-0.003], [0.276,0.181], [0.280,0.366], [0.283,0.550], [0.281,0.702], [0.270,0.778], [0.243,0.870], [0.210,0.837], [0.180,0.700], [0.140,0.550], [0.180,0.700], [0.210,0.837], [0.243,0.870], [0.270,0.778], [0.281,0.702], [0.283,0.550], [0.280,0.366], [0.276,0.181], [0.272,-0.003], [0.268,-0.187], [0.265,-0.371], [0.267,-0.491], [0.269,-0.581], [0.286,-0.745], [0.303,-0.836], [0.325,-0.945], [0.353,-0.969], [0.383,-0.976], [0.427,-0.961], [0.464,-0.927], [0.503,-0.876], [0.537,-0.758], [0.558,-0.656], [0.580,-0.399], [0.582,-0.267], [0.584,-0.136], [0.586,-0.004], [0.587,0.127], [0.589,0.259], [0.591,0.390], [0.593,0.522], [0.594,0.653], [0.596,0.785], [0.599,0.850], [0.596,0.785], [0.594,0.653], [0.593,0.522], [0.591,0.390], [0.589,0.259], [0.587,0.127], [0.586,-0.004], [0.584,-0.136], [0.582,-0.267], [0.580,-0.399], [0.582,-0.714], [0.603,-0.832], [0.635,-0.892], [0.681,-0.970], [0.735,-0.970], [0.785,-0.920], [0.824,-0.865], [0.845,-0.807], [0.850,-0.633], [0.856,-0.459], [0.861,-0.285], [0.866,-0.111], [0.872,0.063], [0.877,0.237], [0.882,0.411], [0.888,0.585], [0.893,0.759], [0.899,0.850], [0.893,0.759], [0.888,0.585], [0.882,0.411], [0.877,0.237], [0.872,0.063], [0.866,-0.111], [0.861,-0.285], [0.856,-0.459], [0.850,-0.633], [0.845,-0.807], [0.890,-0.872], [0.942,-0.920], [0.993,-0.960], [1.044,-1.000], [1.095,-1.000], [1.144,-1.000],  ],\n  'X' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.189,-0.877], [0.228,-0.754], [0.267,-0.631], [0.306,-0.508], [0.345,-0.385], [0.384,-0.262], [0.423,-0.139], [0.462,-0.016], [0.501,0.106], [0.540,0.229], [0.579,0.352], [0.618,0.475], [0.657,0.598], [0.696,0.721], [0.735,0.844], [0.696,0.721], [0.657,0.598], [0.618,0.475], [0.579,0.352], [0.540,0.229], [0.501,0.106], [0.459,0.095], [0.447,0.237], [0.436,0.380], [0.424,0.523], [0.412,0.666], [0.375,0.829], [0.301,0.784], [0.250,0.680], [0.218,0.604], [0.181,0.484], [0.218,0.604], [0.250,0.680], [0.301,0.784], [0.375,0.829], [0.412,0.666], [0.424,0.523], [0.436,0.380], [0.447,0.237], [0.459,0.095], [0.471,-0.048], [0.483,-0.191], [0.495,-0.333], [0.506,-0.476], [0.518,-0.619], [0.530,-0.762], [0.557,-0.880], [0.579,-0.994], [0.610,-1.000], [0.610,-1.000], [0.657,-1.000], [0.714,-1.000], [0.750,-1.000], [0.800,-1.000], [0.850,-1.000],  ],\n  'Y' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.215,-0.900], [0.228,-0.758], [0.221,-0.623], [0.225,-0.474], [0.238,-0.233], [0.250,0.009], [0.263,0.250], [0.275,0.492], [0.278,0.671], [0.262,0.807], [0.241,0.850], [0.200,0.840], [0.150,0.810], [0.200,0.840], [0.241,0.850], [0.262,0.807], [0.278,0.671], [0.275,0.492], [0.263,0.250], [0.250,0.009], [0.238,-0.233], [0.225,-0.474], [0.221,-0.623], [0.228,-0.758], [0.249,-0.880], [0.274,-0.957], [0.307,-0.964], [0.337,-0.937], [0.370,-0.882], [0.403,-0.809], [0.430,-0.720], [0.465,-0.650], [0.509,-0.581], [0.521,-0.432], [0.533,-0.282], [0.545,-0.133], [0.557,0.016], [0.569,0.166], [0.581,0.315], [0.593,0.464], [0.606,0.613], [0.618,0.750], [0.630,0.850], [0.618,0.750], [0.606,0.613], [0.593,0.464], [0.581,0.315], [0.569,0.166], [0.557,0.016], [0.545,-0.133], [0.533,-0.282], [0.521,-0.432], [0.509,-0.581], [0.498,-0.746], [0.487,-0.912], [0.477,-1.077], [0.466,-1.243], [0.455,-1.409], [0.444,-1.574], [0.426,-1.725], [0.400,-1.820], [0.365,-1.850], [0.330,-1.866], [0.280,-1.880], [0.240,-1.820], [0.221,-1.744], [0.216,-1.611], [0.231,-1.506], [0.260,-1.380], [0.300,-1.250], [0.335,-1.123], [0.368,-1.054], [0.420,-1.000], [0.460,-1.000], [0.490,-1.000], [0.547,-1.000], [0.580,-1.000], [0.620,-1.000], [0.670,-1.000], [0.720,-1.000],  ],\n  'Z' : [ [0.050,-1.000], [0.100,-1.000], [0.144,-1.000], [0.190,-0.900], [0.233,-0.753], [0.287,-0.618], [0.368,-0.356], [0.411,-0.181], [0.441,-0.014], [0.461,0.151], [0.469,0.360], [0.448,0.553], [0.440,0.597], [0.412,0.699], [0.370,0.804], [0.330,0.810], [0.262,0.767], [0.201,0.661], [0.185,0.622], [0.150,0.549], [0.185,0.622], [0.201,0.661], [0.262,0.767], [0.330,0.810], [0.370,0.804], [0.412,0.699], [0.440,0.597], [0.448,0.553], [0.469,0.360], [0.461,0.151], [0.441,-0.014], [0.411,-0.181], [0.368,-0.356], [0.287,-0.618], [0.233,-0.753], [0.190,-0.900], [0.226,-0.879], [0.245,-0.858], [0.313,-0.853], [0.331,-0.882], [0.392,-1.192], [0.383,-1.391], [0.380,-1.448], [0.345,-1.705], [0.335,-1.756], [0.293,-1.921], [0.223,-1.934], [0.179,-1.910], [0.161,-1.866], [0.148,-1.810], [0.137,-1.673], [0.145,-1.500], [0.183,-1.354], [0.221,-1.216], [0.260,-1.100], [0.296,-1.015], [0.350,-0.970], [0.380,-0.980], [0.420,-1.000], [0.466,-1.000], [0.500,-1.000], [0.550,-1.000], [0.600,-1.000],  ],\n  'a' : [ [0.050,-0.920], [0.086,-0.730], [0.086,-0.662], [0.090,-0.610], [0.106,-0.540], [0.120,-0.490], [0.129,-0.450], [0.145,-0.400], [0.160,-0.350], [0.175,-0.300], [0.196,-0.260], [0.223,-0.230], [0.254,-0.190], [0.310,-0.140], [0.370,-0.117], [0.399,-0.117], [0.410,-0.250], [0.405,-0.420], [0.400,-0.550], [0.390,-0.650], [0.385,-0.771], [0.380,-0.826], [0.330,-0.920], [0.295,-0.984], [0.250,-1.017], [0.210,-1.040], [0.164,-1.017], [0.135,-0.962], [0.125,-0.935], [0.108,-0.876], [0.089,-0.800], [0.086,-0.730], [0.086,-0.662], [0.090,-0.610], [0.106,-0.540], [0.120,-0.490], [0.129,-0.450], [0.145,-0.400], [0.160,-0.350], [0.175,-0.300], [0.196,-0.260], [0.223,-0.230], [0.254,-0.190], [0.310,-0.140], [0.370,-0.117], [0.399,-0.117], [0.410,-0.250], [0.405,-0.420], [0.400,-0.550], [0.390,-0.650], [0.385,-0.771], [0.380,-0.826], [0.399,-0.950], [0.429,-1.017], [0.460,-1.000], [0.500,-1.000], [0.550,-1.000],  ],\n  'b' : [ [0.025,-1.000], [0.050,-0.970], [0.075,-0.930], [0.100,-0.890], [0.117,-0.860], [0.134,-0.810], [0.151,-0.750], [0.167,-0.660], [0.184,-0.580], [0.201,-0.500], [0.218,-0.390], [0.235,-0.300], [0.252,-0.200], [0.269,-0.080], [0.286,0.000], [0.302,0.090], [0.319,0.209], [0.336,0.302], [0.345,0.395], [0.346,0.526], [0.337,0.633], [0.311,0.718], [0.278,0.799], [0.254,0.808], [0.234,0.795], [0.216,0.777], [0.201,0.733], [0.190,0.663], [0.187,0.511], [0.186,0.358], [0.185,0.205], [0.184,0.052], [0.186,-0.101], [0.187,-0.254], [0.188,-0.407], [0.189,-0.560], [0.190,-0.712], [0.196,-0.865], [0.207,-0.920], [0.224,-0.981], [0.242,-1.000], [0.272,-1.000], [0.294,-0.995], [0.316,-0.974], [0.332,-0.953], [0.347,-0.884], [0.355,-0.821], [0.366,-0.749], [0.374,-0.680], [0.385,-0.600], [0.389,-0.518], [0.394,-0.420], [0.395,-0.310], [0.396,-0.207], [0.437,-0.240], [0.465,-0.260], [0.495,-0.250],  ],\n  'c' : [ [0.020,-0.980], [0.030,-0.940], [0.045,-0.870], [0.057,-0.780], [0.067,-0.740], [0.080,-0.680], [0.096,-0.600], [0.124,-0.480], [0.145,-0.390], [0.160,-0.335], [0.174,-0.300], [0.194,-0.254], [0.212,-0.220], [0.233,-0.185], [0.260,-0.170], [0.285,-0.160], [0.311,-0.150], [0.350,-0.150], [0.380,-0.200], [0.400,-0.300], [0.380,-0.200], [0.350,-0.150], [0.311,-0.150], [0.285,-0.160], [0.260,-0.170], [0.233,-0.185], [0.212,-0.220], [0.194,-0.254], [0.174,-0.300], [0.160,-0.335], [0.145,-0.390], [0.117,-0.553], [0.117,-0.660], [0.119,-0.740], [0.129,-0.848], [0.145,-0.908], [0.155,-0.935], [0.164,-0.962], [0.180,-1.010], [0.209,-1.050], [0.262,-1.070], [0.330,-1.050], [0.375,-1.040], [0.410,-1.030], [0.450,-1.020], [0.500,-1.010], [0.550,-1.000],  ],\n  'd' : [ [0.050,-1.000], [0.080,-0.980], [0.107,-0.900], [0.140,-0.800], [0.164,-0.730], [0.166,-0.662], [0.170,-0.610], [0.175,-0.540], [0.184,-0.450], [0.196,-0.360], [0.210,-0.300], [0.250,-0.220], [0.276,-0.180], [0.303,-0.160], [0.370,-0.125], [0.410,-0.117], [0.460,-0.117], [0.410,-0.117], [0.370,-0.125], [0.303,-0.160], [0.276,-0.180], [0.250,-0.220], [0.210,-0.300], [0.196,-0.360], [0.184,-0.450], [0.175,-0.540], [0.170,-0.610], [0.166,-0.662], [0.164,-0.730], [0.169,-0.800], [0.188,-0.876], [0.215,-0.962], [0.244,-1.017], [0.270,-1.028], [0.300,-1.025], [0.330,-1.017], [0.375,-0.984], [0.410,-0.920], [0.470,-0.840], [0.510,-0.826], [0.510,-0.771], [0.510,-0.650], [0.510,-0.550], [0.510,-0.420], [0.510,-0.250], [0.510,0.000], [0.510,0.200], [0.510,0.400], [0.510,0.600], [0.510,0.800], [0.510,0.600], [0.510,0.400], [0.510,0.200], [0.510,0.000], [0.510,-0.250], [0.510,-0.420], [0.510,-0.550], [0.510,-0.650], [0.510,-0.771], [0.510,-0.826], [0.515,-0.900], [0.529,-0.950], [0.559,-1.017], [0.590,-1.044], [0.628,-1.033], [0.660,-1.030], [0.700,-1.000],  ],\n  'e' : [ [0.050,-1.000], [0.100,-1.000], [0.171,-0.950], [0.222,-0.890], [0.270,-0.850], [0.296,-0.800], [0.316,-0.720], [0.330,-0.660], [0.336,-0.600], [0.339,-0.550], [0.341,-0.470], [0.339,-0.400], [0.334,-0.344], [0.329,-0.300], [0.324,-0.263], [0.314,-0.200], [0.304,-0.160], [0.286,-0.130], [0.261,-0.110], [0.236,-0.100], [0.211,-0.110], [0.186,-0.130], [0.168,-0.160], [0.158,-0.200], [0.148,-0.263], [0.143,-0.300], [0.138,-0.344], [0.133,-0.400], [0.131,-0.470], [0.133,-0.550], [0.136,-0.600], [0.142,-0.660], [0.156,-0.720], [0.176,-0.800], [0.201,-0.850], [0.248,-0.900], [0.300,-0.950], [0.356,-0.970], [0.400,-1.000], [0.450,-1.000], [0.500,-1.000],  ],\n  'f' : [ [0.025,-1.000], [0.045,-0.991], [0.063,-0.984], [0.085,-0.950], [0.113,-0.910], [0.133,-0.880], [0.155,-0.860], [0.189,-0.830], [0.220,-0.771], [0.250,-0.720], [0.265,-0.600], [0.275,-0.500], [0.285,-0.400], [0.295,-0.300], [0.305,-0.200], [0.315,-0.120], [0.325,-0.020], [0.332,0.079], [0.342,0.175], [0.356,0.278], [0.364,0.398], [0.372,0.520], [0.361,0.640], [0.340,0.710], [0.315,0.725], [0.285,0.730], [0.250,0.714], [0.220,0.692], [0.194,0.653], [0.175,0.550], [0.173,0.429], [0.172,0.277], [0.173,0.124], [0.174,-0.075], [0.174,-0.277], [0.174,-0.400], [0.175,-0.528], [0.174,-0.650], [0.174,-0.778], [0.174,-0.910], [0.174,-1.050], [0.172,-1.170], [0.170,-1.300], [0.168,-1.400], [0.165,-1.550], [0.165,-1.670], [0.164,-1.800], [0.160,-1.960], [0.190,-1.959], [0.220,-1.958], [0.249,-1.950], [0.279,-1.900], [0.300,-1.850], [0.319,-1.800], [0.324,-1.700], [0.319,-1.600], [0.314,-1.500], [0.307,-1.400], [0.299,-1.300], [0.289,-1.200], [0.275,-1.120], [0.260,-1.070], [0.225,-0.960], [0.247,-0.980], [0.275,-1.020], [0.300,-1.050], [0.334,-1.030], [0.376,-1.020], [0.425,-1.010], [0.475,-1.000], [0.525,-1.000],  ],\n  'g' : [ [0.020,-0.990], [0.039,-0.970], [0.069,-0.930], [0.085,-0.905], [0.120,-0.853], [0.140,-0.820], [0.167,-0.771], [0.187,-0.730], [0.206,-0.670], [0.226,-0.614], [0.235,-0.581], [0.255,-0.526], [0.275,-0.472], [0.294,-0.417], [0.310,-0.370], [0.329,-0.330], [0.354,-0.281], [0.372,-0.250], [0.399,-0.230], [0.429,-0.210], [0.459,-0.190], [0.489,-0.176], [0.519,-0.180], [0.530,-0.220], [0.528,-0.300], [0.526,-0.380], [0.524,-0.460], [0.522,-0.540], [0.520,-0.620], [0.518,-0.700], [0.516,-0.780], [0.514,-0.860], [0.512,-0.940], [0.480,-0.970], [0.449,-1.000], [0.399,-1.030], [0.359,-1.044], [0.310,-1.030], [0.269,-1.000], [0.235,-0.962], [0.209,-0.870], [0.196,-0.771], [0.187,-0.730], [0.206,-0.670], [0.226,-0.614], [0.235,-0.581], [0.255,-0.526], [0.275,-0.472], [0.294,-0.417], [0.310,-0.370], [0.329,-0.330], [0.354,-0.281], [0.372,-0.250], [0.399,-0.230], [0.429,-0.210], [0.459,-0.190], [0.489,-0.176], [0.519,-0.180], [0.530,-0.220], [0.528,-0.300], [0.526,-0.380], [0.524,-0.460], [0.522,-0.540], [0.520,-0.620], [0.518,-0.700], [0.516,-0.780], [0.514,-0.860], [0.512,-0.940], [0.510,-1.020], [0.508,-1.100], [0.506,-1.180], [0.504,-1.260], [0.502,-1.340], [0.500,-1.420], [0.498,-1.500], [0.496,-1.580], [0.494,-1.660], [0.492,-1.740], [0.490,-1.820], [0.488,-1.900], [0.486,-1.980], [0.450,-1.975], [0.410,-1.967], [0.380,-1.955], [0.350,-1.920], [0.320,-1.870], [0.290,-1.800], [0.270,-1.720], [0.260,-1.660], [0.250,-1.580], [0.255,-1.520], [0.270,-1.470], [0.294,-1.398], [0.312,-1.350], [0.334,-1.300], [0.369,-1.240], [0.409,-1.190], [0.439,-1.150], [0.470,-1.100], [0.514,-1.050], [0.558,-1.040], [0.610,-1.030], [0.650,-1.020], [0.700,-1.000],  ],\n  'h' : [ [0.027,-0.910], [0.042,-0.858], [0.065,-0.794], [0.079,-0.738], [0.099,-0.681], [0.116,-0.624], [0.130,-0.568], [0.147,-0.515], [0.163,-0.460], [0.178,-0.400], [0.192,-0.360], [0.205,-0.310], [0.225,-0.257], [0.254,-0.173], [0.284,-0.120], [0.299,-0.060], [0.323,0.000], [0.339,0.079], [0.354,0.163], [0.363,0.218], [0.377,0.275], [0.383,0.360], [0.388,0.440], [0.389,0.541], [0.383,0.651], [0.377,0.740], [0.352,0.798], [0.319,0.830], [0.284,0.830], [0.239,0.793], [0.209,0.751], [0.189,0.674], [0.174,0.526], [0.174,0.426], [0.174,0.324], [0.174,0.192], [0.174,0.059], [0.174,-0.073], [0.174,-0.205], [0.174,-0.338], [0.174,-0.470], [0.174,-0.603], [0.174,-0.735], [0.174,-0.868], [0.174,-1.000], [0.176,-0.868], [0.178,-0.735], [0.194,-0.680], [0.216,-0.601], [0.230,-0.529], [0.247,-0.436], [0.263,-0.374], [0.280,-0.292], [0.298,-0.250], [0.332,-0.230], [0.367,-0.220], [0.399,-0.230], [0.437,-0.270], [0.451,-0.344], [0.447,-0.436], [0.444,-0.516], [0.440,-0.607], [0.440,-0.702], [0.448,-0.807], [0.463,-0.919], [0.497,-0.975], [0.541,-1.009], [0.591,-1.000],  ],\n  'i' : [ [0.050,-1.005], [0.102,-1.020], [0.150,-1.029], [0.170,-0.974], [0.186,-0.912], [0.195,-0.822], [0.196,-0.722], [0.197,-0.672], [0.201,-0.582], [0.204,-0.512], [0.207,-0.412], [0.207,-0.312], [0.208,-0.242], [0.210,-0.112], [0.210,-0.242], [0.211,-0.312], [0.209,-0.412], [0.212,-0.512], [0.214,-0.582], [0.217,-0.672], [0.217,-0.722], [0.218,-0.822], [0.226,-0.912], [0.240,-0.975], [0.260,-1.029], [0.305,-1.050], [0.344,-1.010], [0.398,-1.000],  ],\n  'j' : [ [0.025,-0.970], [0.058,-0.939], [0.077,-0.890], [0.094,-0.849], [0.111,-0.796], [0.117,-0.767], [0.133,-0.719], [0.147,-0.682], [0.160,-0.625], [0.173,-0.569], [0.187,-0.498], [0.197,-0.427], [0.202,-0.386], [0.212,-0.304], [0.219,-0.193], [0.225,-0.132], [0.225,-0.191], [0.225,-0.272], [0.225,-0.400], [0.225,-0.539], [0.225,-0.679], [0.225,-0.818], [0.225,-0.958], [0.225,-1.097], [0.225,-1.237], [0.225,-1.377], [0.225,-1.516], [0.225,-1.656], [0.216,-1.728], [0.205,-1.799], [0.192,-1.856], [0.174,-1.875], [0.150,-1.880], [0.128,-1.860], [0.115,-1.834], [0.101,-1.728], [0.095,-1.599], [0.094,-1.499], [0.102,-1.399], [0.115,-1.313], [0.128,-1.257], [0.142,-1.201], [0.155,-1.144], [0.168,-1.088], [0.177,-1.060], [0.193,-1.025], [0.210,-0.993], [0.226,-0.961], [0.240,-0.948], [0.258,-0.938], [0.278,-0.938], [0.300,-0.957], [0.325,-0.977], [0.350,-1.000],  ],\n  'k' : [ [0.025,-0.950], [0.045,-0.900], [0.062,-0.850], [0.080,-0.800], [0.100,-0.720], [0.121,-0.662], [0.141,-0.608], [0.160,-0.553], [0.175,-0.526], [0.198,-0.434], [0.226,-0.341], [0.254,-0.248], [0.282,-0.156], [0.310,-0.063], [0.327,-0.008], [0.344,0.046], [0.356,0.101], [0.366,0.155], [0.388,0.233], [0.398,0.288], [0.409,0.344], [0.420,0.400], [0.430,0.456], [0.441,0.512], [0.450,0.590], [0.454,0.673], [0.434,0.720], [0.409,0.730], [0.385,0.730], [0.355,0.730], [0.325,0.720], [0.295,0.700], [0.265,0.646], [0.235,0.587], [0.210,0.473], [0.200,0.360], [0.200,0.246], [0.200,0.132], [0.200,0.019], [0.200,-0.063], [0.200,-0.153], [0.200,-0.243], [0.200,-0.333], [0.200,-0.423], [0.200,-0.513], [0.200,-0.602], [0.200,-0.692], [0.200,-0.782], [0.200,-0.872], [0.200,-0.962], [0.200,-1.071], [0.200,-0.962], [0.200,-0.872], [0.200,-0.782], [0.200,-0.692], [0.200,-0.602], [0.208,-0.513], [0.234,-0.500], [0.274,-0.490], [0.314,-0.480], [0.364,-0.460], [0.404,-0.430], [0.444,-0.400], [0.469,-0.350], [0.484,-0.308], [0.478,-0.240], [0.464,-0.180], [0.446,-0.145], [0.424,-0.112], [0.384,-0.140], [0.354,-0.200], [0.304,-0.300], [0.274,-0.400], [0.254,-0.470], [0.225,-0.520], [0.244,-0.570], [0.268,-0.608], [0.287,-0.662], [0.307,-0.717], [0.326,-0.771], [0.340,-0.826], [0.348,-0.853], [0.366,-0.908], [0.385,-0.962], [0.405,-1.017], [0.429,-1.070], [0.454,-1.100], [0.479,-1.090], [0.504,-1.070], [0.529,-1.050], [0.554,-1.030], [0.571,-1.020], [0.595,-1.000], [0.626,-1.020], [0.650,-1.000],  ],\n  'l' : [ [0.035,-0.950], [0.057,-0.891], [0.073,-0.835], [0.085,-0.800], [0.101,-0.749], [0.114,-0.693], [0.132,-0.636], [0.150,-0.580], [0.170,-0.522], [0.180,-0.466], [0.200,-0.411], [0.222,-0.355], [0.237,-0.300], [0.256,-0.210], [0.270,-0.140], [0.284,-0.060], [0.295,-0.009], [0.300,0.037], [0.308,0.090], [0.314,0.149], [0.322,0.204], [0.326,0.260], [0.333,0.338], [0.340,0.400], [0.344,0.490], [0.349,0.591], [0.350,0.646], [0.344,0.727], [0.324,0.789], [0.303,0.833], [0.282,0.845], [0.265,0.850], [0.235,0.844], [0.204,0.827], [0.190,0.771], [0.185,0.716], [0.181,0.668], [0.179,0.601], [0.179,0.499], [0.179,0.397], [0.179,0.295], [0.179,0.193], [0.179,0.091], [0.179,-0.011], [0.179,-0.113], [0.179,-0.215], [0.179,-0.317], [0.179,-0.419], [0.179,-0.521], [0.178,-0.623], [0.178,-0.726], [0.178,-0.828], [0.183,-0.901], [0.202,-0.959], [0.225,-0.990], [0.256,-0.997], [0.284,-1.024], [0.317,-1.040], [0.355,-1.020], [0.398,-1.010], [0.450,-1.000], [0.500,-1.000], [0.550,-1.000],  ],\n  'm' : [ [0.039,-0.950], [0.059,-0.908], [0.068,-0.880], [0.088,-0.826], [0.098,-0.799], [0.117,-0.744], [0.127,-0.717], [0.137,-0.690], [0.147,-0.662], [0.159,-0.620], [0.174,-0.560], [0.186,-0.526], [0.191,-0.499], [0.197,-0.472], [0.205,-0.444], [0.219,-0.400], [0.229,-0.370], [0.245,-0.335], [0.264,-0.281], [0.274,-0.254], [0.284,-0.226], [0.294,-0.199], [0.310,-0.170], [0.333,-0.156], [0.355,-0.140], [0.382,-0.145], [0.391,-0.172], [0.393,-0.196], [0.396,-0.256], [0.400,-0.316], [0.403,-0.376], [0.406,-0.436], [0.409,-0.496], [0.403,-0.548], [0.398,-0.600], [0.392,-0.652], [0.386,-0.704], [0.381,-0.756], [0.375,-0.808], [0.369,-0.860], [0.364,-0.913], [0.358,-0.965], [0.352,-1.017], [0.358,-0.965], [0.364,-0.913], [0.369,-0.860], [0.375,-0.808], [0.381,-0.756], [0.386,-0.704], [0.392,-0.652], [0.398,-0.600], [0.403,-0.548], [0.409,-0.496], [0.421,-0.444], [0.437,-0.400], [0.450,-0.363], [0.460,-0.335], [0.470,-0.308], [0.479,-0.281], [0.489,-0.254], [0.499,-0.226], [0.519,-0.180], [0.539,-0.150], [0.568,-0.127], [0.597,-0.117], [0.607,-0.145], [0.616,-0.172], [0.626,-0.199], [0.632,-0.243], [0.638,-0.286], [0.644,-0.330], [0.650,-0.374], [0.656,-0.417], [0.649,-0.474], [0.642,-0.532], [0.635,-0.589], [0.628,-0.646], [0.621,-0.703], [0.614,-0.760], [0.608,-0.818], [0.601,-0.875], [0.594,-0.932], [0.594,-0.989], [0.594,-0.932], [0.601,-0.875], [0.608,-0.818], [0.614,-0.760], [0.621,-0.703], [0.628,-0.646], [0.635,-0.589], [0.642,-0.532], [0.649,-0.474], [0.656,-0.417], [0.665,-0.390], [0.680,-0.350], [0.695,-0.308], [0.705,-0.281], [0.715,-0.240], [0.734,-0.199], [0.744,-0.172], [0.759,-0.145], [0.799,-0.120], [0.841,-0.145], [0.861,-0.199], [0.871,-0.226], [0.881,-0.281], [0.876,-0.338], [0.871,-0.395], [0.866,-0.452], [0.861,-0.509], [0.856,-0.565], [0.851,-0.622], [0.846,-0.679], [0.841,-0.736], [0.837,-0.793], [0.832,-0.850], [0.832,-0.908], [0.851,-0.962], [0.861,-0.989], [0.880,-1.020], [0.930,-1.030], [0.959,-1.030], [0.987,-1.015], [1.018,-1.010], [1.050,-1.000],  ],\n  'n' : [ [0.020,-1.000], [0.039,-1.000], [0.050,-0.950], [0.060,-0.900], [0.070,-0.810], [0.085,-0.700], [0.100,-0.600], [0.115,-0.500], [0.130,-0.350], [0.150,-0.200], [0.172,-0.063], [0.195,0.000], [0.220,-0.030], [0.235,-0.090], [0.244,-0.145], [0.249,-0.200], [0.254,-0.250], [0.256,-0.308], [0.253,-0.374], [0.253,-0.439], [0.253,-0.504], [0.253,-0.570], [0.253,-0.635], [0.253,-0.701], [0.253,-0.766], [0.253,-0.831], [0.253,-0.897], [0.253,-0.962], [0.253,-0.897], [0.253,-0.831], [0.253,-0.766], [0.253,-0.701], [0.253,-0.635], [0.253,-0.570], [0.253,-0.504], [0.253,-0.439], [0.253,-0.374], [0.270,-0.360], [0.285,-0.330], [0.299,-0.308], [0.309,-0.281], [0.319,-0.254], [0.328,-0.226], [0.345,-0.190], [0.365,-0.145], [0.386,-0.090], [0.407,-0.063], [0.436,-0.063], [0.456,-0.090], [0.465,-0.117], [0.475,-0.145], [0.480,-0.200], [0.485,-0.250], [0.485,-0.350], [0.485,-0.420], [0.485,-0.500], [0.485,-0.570], [0.485,-0.640], [0.485,-0.690], [0.485,-0.750], [0.485,-0.800], [0.485,-0.853], [0.485,-0.908], [0.490,-0.970], [0.509,-1.030], [0.544,-1.040], [0.569,-1.030], [0.602,-1.000],  ],\n  'o' : [ [0.050,-0.930], [0.079,-0.850], [0.095,-0.790], [0.110,-0.730], [0.120,-0.680], [0.126,-0.640], [0.140,-0.581], [0.151,-0.540], [0.157,-0.500], [0.170,-0.450], [0.185,-0.390], [0.195,-0.363], [0.204,-0.335], [0.219,-0.290], [0.234,-0.254], [0.244,-0.226], [0.253,-0.199], [0.263,-0.172], [0.284,-0.160], [0.309,-0.140], [0.344,-0.140], [0.369,-0.160], [0.381,-0.172], [0.394,-0.200], [0.403,-0.220], [0.410,-0.250], [0.420,-0.281], [0.424,-0.338], [0.423,-0.395], [0.426,-0.451], [0.425,-0.508], [0.421,-0.565], [0.418,-0.622], [0.413,-0.679], [0.405,-0.735], [0.395,-0.792], [0.385,-0.849], [0.378,-0.900], [0.365,-0.960], [0.350,-1.010], [0.325,-1.050], [0.300,-1.070], [0.270,-1.080], [0.234,-1.065], [0.219,-1.040], [0.204,-1.005], [0.185,-0.962], [0.175,-0.935], [0.165,-0.908], [0.155,-0.880], [0.149,-0.850], [0.139,-0.800], [0.129,-0.750], [0.122,-0.700], [0.126,-0.640], [0.140,-0.581], [0.151,-0.540], [0.157,-0.500], [0.170,-0.450], [0.185,-0.390], [0.195,-0.363], [0.204,-0.335], [0.219,-0.290], [0.234,-0.254], [0.244,-0.226], [0.253,-0.199], [0.263,-0.172], [0.284,-0.160], [0.308,-0.200], [0.320,-0.250], [0.335,-0.290], [0.350,-0.310], [0.370,-0.330], [0.390,-0.340], [0.410,-0.340], [0.430,-0.340], [0.450,-0.340], [0.470,-0.335], [0.490,-0.330], [0.510,-0.320], [0.530,-0.300], [0.550,-0.280], [0.570,-0.250],  ],\n  'p' : [ [0.040,-1.017], [0.077,-0.977], [0.106,-0.890], [0.124,-0.793], [0.137,-0.692], [0.149,-0.590], [0.161,-0.489], [0.171,-0.428], [0.186,-0.377], [0.198,-0.286], [0.214,-0.234], [0.219,-0.327], [0.218,-0.454], [0.217,-0.581], [0.216,-0.708], [0.215,-0.835], [0.213,-0.962], [0.212,-1.089], [0.211,-1.216], [0.210,-1.343], [0.209,-1.470], [0.208,-1.597], [0.207,-1.724], [0.206,-1.851], [0.207,-1.724], [0.208,-1.597], [0.209,-1.470], [0.210,-1.343], [0.211,-1.216], [0.212,-1.089], [0.213,-0.962], [0.215,-0.835], [0.216,-0.708], [0.217,-0.581], [0.218,-0.454], [0.219,-0.327], [0.220,-0.200], [0.214,-0.234], [0.239,-0.182], [0.257,-0.131], [0.281,-0.099], [0.300,-0.077], [0.314,-0.066], [0.332,-0.055], [0.359,-0.063], [0.390,-0.088], [0.417,-0.165], [0.424,-0.197], [0.443,-0.275], [0.453,-0.406], [0.454,-0.495], [0.455,-0.627], [0.447,-0.708], [0.440,-0.800], [0.427,-0.845], [0.406,-0.891], [0.383,-0.915], [0.346,-0.961], [0.312,-0.954], [0.280,-0.950], [0.250,-0.930], [0.280,-0.950], [0.312,-0.954], [0.346,-0.961], [0.367,-0.955], [0.399,-0.972], [0.449,-0.988], [0.479,-0.996], [0.517,-1.020], [0.550,-1.020], [0.586,-1.010], [0.620,-1.000],  ],\n  'q' : [ [0.020,-0.990], [0.039,-0.970], [0.069,-0.930], [0.085,-0.905], [0.108,-0.853], [0.127,-0.799], [0.137,-0.771], [0.162,-0.720], [0.176,-0.670], [0.196,-0.614], [0.205,-0.581], [0.225,-0.526], [0.245,-0.472], [0.264,-0.417], [0.280,-0.370], [0.299,-0.330], [0.324,-0.281], [0.342,-0.250], [0.369,-0.230], [0.399,-0.210], [0.429,-0.190], [0.459,-0.176], [0.489,-0.180], [0.500,-0.220], [0.498,-0.300], [0.496,-0.380], [0.494,-0.460], [0.492,-0.540], [0.490,-0.620], [0.488,-0.700], [0.486,-0.780], [0.484,-0.860], [0.482,-0.940], [0.450,-0.970], [0.419,-1.000], [0.369,-1.030], [0.329,-1.044], [0.280,-1.030], [0.239,-1.000], [0.205,-0.962], [0.179,-0.870], [0.166,-0.771], [0.176,-0.670], [0.196,-0.614], [0.205,-0.581], [0.225,-0.526], [0.245,-0.472], [0.264,-0.417], [0.280,-0.370], [0.299,-0.330], [0.324,-0.281], [0.342,-0.250], [0.369,-0.230], [0.399,-0.210], [0.429,-0.190], [0.459,-0.176], [0.489,-0.180], [0.500,-0.220], [0.498,-0.300], [0.496,-0.380], [0.494,-0.460], [0.492,-0.540], [0.490,-0.620], [0.488,-0.700], [0.486,-0.780], [0.484,-0.860], [0.482,-0.940], [0.480,-1.020], [0.478,-1.100], [0.476,-1.180], [0.474,-1.260], [0.472,-1.340], [0.470,-1.420], [0.468,-1.500], [0.466,-1.580], [0.464,-1.660], [0.462,-1.740], [0.460,-1.820], [0.458,-1.900], [0.456,-1.980], [0.480,-1.975], [0.510,-1.967], [0.530,-1.955], [0.550,-1.920], [0.570,-1.870], [0.590,-1.800], [0.610,-1.720], [0.620,-1.660], [0.625,-1.580], [0.620,-1.520], [0.610,-1.470], [0.590,-1.398], [0.570,-1.350], [0.550,-1.300], [0.530,-1.240], [0.510,-1.190], [0.500,-1.150], [0.500,-1.080], [0.528,-1.050], [0.560,-1.030], [0.590,-1.010], [0.620,-1.000], [0.670,-1.000], [0.720,-1.000],  ],\n  'r' : [ [0.050,-1.000], [0.100,-0.960], [0.130,-0.900], [0.150,-0.850], [0.170,-0.800], [0.182,-0.700], [0.195,-0.600], [0.205,-0.490], [0.213,-0.420], [0.220,-0.350], [0.229,-0.270], [0.235,-0.200], [0.310,-0.200], [0.360,-0.200], [0.410,-0.200], [0.460,-0.200], [0.510,-0.200], [0.510,-0.250], [0.505,-0.350], [0.500,-0.450], [0.490,-0.550], [0.480,-0.650], [0.475,-0.750], [0.490,-0.850], [0.510,-0.900], [0.550,-0.950], [0.600,-0.980], [0.660,-1.000], [0.730,-1.000],  ],\n  's' : [ [0.039,-0.980], [0.079,-0.935], [0.099,-0.900], [0.117,-0.860], [0.150,-0.799], [0.184,-0.700], [0.225,-0.600], [0.245,-0.520], [0.260,-0.450], [0.265,-0.360], [0.265,-0.300], [0.250,-0.150], [0.300,-0.240], [0.330,-0.300], [0.360,-0.350], [0.384,-0.400], [0.410,-0.450], [0.430,-0.548], [0.440,-0.600], [0.445,-0.651], [0.450,-0.703], [0.445,-0.755], [0.435,-0.807], [0.420,-0.859], [0.400,-0.910], [0.372,-0.954], [0.334,-1.000], [0.304,-1.017], [0.275,-1.020], [0.245,-1.017], [0.220,-1.000], [0.180,-0.970], [0.140,-0.930], [0.180,-0.970], [0.220,-1.000], [0.245,-1.017], [0.275,-1.020], [0.304,-1.017], [0.334,-1.000], [0.372,-0.954], [0.399,-0.980], [0.424,-1.000], [0.449,-1.000], [0.474,-1.000], [0.500,-1.000], [0.550,-1.000],  ],\n  't' : [ [0.050,-1.000], [0.100,-1.000], [0.140,-1.000], [0.175,-1.000], [0.220,-1.000], [0.262,-1.000], [0.285,-0.967], [0.294,-0.787], [0.302,-0.607], [0.311,-0.426], [0.320,-0.246], [0.328,-0.066], [0.337,0.115], [0.346,0.295], [0.325,0.295], [0.307,0.295], [0.274,0.295], [0.242,0.295], [0.200,0.295], [0.150,0.295], [0.100,0.295], [0.150,0.295], [0.200,0.295], [0.242,0.295], [0.274,0.295], [0.307,0.295], [0.325,0.295], [0.372,0.295], [0.405,0.295], [0.429,0.295], [0.461,0.295], [0.494,0.295], [0.527,0.295], [0.575,0.295], [0.625,0.295], [0.575,0.295], [0.527,0.295], [0.494,0.295], [0.461,0.295], [0.429,0.295], [0.405,0.295], [0.372,0.295], [0.346,0.295], [0.354,0.475], [0.363,0.655], [0.372,0.836], [0.372,0.655], [0.372,0.475], [0.372,0.295], [0.372,0.115], [0.372,-0.066], [0.372,-0.246], [0.372,-0.426], [0.372,-0.607], [0.372,-0.787], [0.372,-0.967], [0.387,-1.022], [0.424,-1.035], [0.475,-1.015], [0.526,-1.005], [0.575,-1.000], [0.625,-1.000], [0.675,-1.000], [0.725,-1.000],  ],\n  'u' : [ [0.025,-0.970], [0.050,-0.950], [0.075,-0.930], [0.092,-0.910], [0.105,-0.887], [0.120,-0.835], [0.130,-0.783], [0.140,-0.730], [0.150,-0.670], [0.168,-0.652], [0.172,-0.594], [0.176,-0.536], [0.180,-0.478], [0.184,-0.420], [0.188,-0.363], [0.191,-0.305], [0.195,-0.247], [0.199,-0.189], [0.202,-0.131], [0.199,-0.189], [0.195,-0.247], [0.191,-0.305], [0.188,-0.363], [0.184,-0.420], [0.180,-0.478], [0.176,-0.536], [0.172,-0.594], [0.168,-0.652], [0.165,-0.710], [0.161,-0.768], [0.157,-0.826], [0.153,-0.884], [0.149,-0.942], [0.153,-1.000], [0.170,-1.020], [0.195,-1.030], [0.225,-1.020], [0.250,-1.010], [0.271,-0.990], [0.295,-0.970], [0.320,-0.950], [0.343,-0.930], [0.362,-0.910], [0.380,-0.880], [0.395,-0.840], [0.401,-0.787], [0.403,-0.731], [0.405,-0.676], [0.408,-0.620], [0.410,-0.565], [0.412,-0.509], [0.414,-0.454], [0.416,-0.398], [0.418,-0.342], [0.421,-0.287], [0.423,-0.231], [0.425,-0.162], [0.427,-0.102], [0.425,-0.162], [0.423,-0.231], [0.421,-0.287], [0.418,-0.342], [0.416,-0.398], [0.414,-0.454], [0.412,-0.509], [0.410,-0.565], [0.408,-0.620], [0.419,-0.697], [0.423,-0.760], [0.430,-0.820], [0.440,-0.880], [0.445,-0.940], [0.465,-1.000], [0.497,-1.020], [0.530,-1.020], [0.555,-1.010], [0.600,-1.000],  ],\n  'v' : [ [0.018,-0.996], [0.030,-0.940], [0.041,-0.883], [0.053,-0.826], [0.065,-0.770], [0.077,-0.713], [0.089,-0.656], [0.101,-0.581], [0.108,-0.516], [0.120,-0.459], [0.132,-0.403], [0.144,-0.346], [0.156,-0.289], [0.167,-0.233], [0.189,-0.174], [0.205,-0.145], [0.228,-0.129], [0.253,-0.138], [0.268,-0.164], [0.280,-0.189], [0.287,-0.232], [0.293,-0.282], [0.299,-0.324], [0.299,-0.362], [0.297,-0.404], [0.296,-0.453], [0.294,-0.502], [0.293,-0.550], [0.292,-0.599], [0.290,-0.648], [0.289,-0.696], [0.287,-0.745], [0.286,-0.794], [0.290,-0.848], [0.300,-0.907], [0.309,-0.956], [0.326,-1.004], [0.349,-1.032], [0.373,-1.008], [0.396,-0.976], [0.405,-0.926], [0.414,-0.875], [0.422,-0.824], [0.431,-0.773], [0.433,-0.718], [0.443,-0.665], [0.446,-0.604], [0.452,-0.554], [0.459,-0.465], [0.465,-0.375], [0.472,-0.285], [0.479,-0.195], [0.521,-0.204], [0.565,-0.228], [0.597,-0.243], [0.622,-0.250],  ],\n  'w' : [ [0.017,-0.994], [0.029,-0.962], [0.049,-0.907], [0.060,-0.879], [0.072,-0.850], [0.086,-0.794], [0.100,-0.738], [0.114,-0.681], [0.127,-0.625], [0.141,-0.569], [0.154,-0.499], [0.167,-0.416], [0.180,-0.332], [0.193,-0.248], [0.206,-0.165], [0.212,-0.123], [0.210,-0.222], [0.207,-0.322], [0.205,-0.421], [0.202,-0.520], [0.199,-0.620], [0.201,-0.683], [0.206,-0.783], [0.211,-0.863], [0.230,-0.943], [0.255,-0.995], [0.291,-1.015], [0.333,-0.987], [0.346,-0.931], [0.360,-0.875], [0.374,-0.819], [0.385,-0.763], [0.396,-0.707], [0.405,-0.651], [0.414,-0.595], [0.418,-0.496], [0.423,-0.397], [0.427,-0.298], [0.432,-0.199], [0.436,-0.150], [0.443,-0.216], [0.450,-0.332], [0.457,-0.448], [0.464,-0.564], [0.471,-0.680], [0.478,-0.797], [0.485,-0.913], [0.510,-0.992], [0.536,-0.999], [0.560,-0.987], [0.581,-0.926], [0.597,-0.877], [0.610,-0.821], [0.624,-0.765], [0.631,-0.698], [0.638,-0.602], [0.642,-0.549], [0.648,-0.444], [0.654,-0.338], [0.660,-0.233], [0.667,-0.150], [0.699,-0.160], [0.732,-0.180], [0.763,-0.200], [0.797,-0.250],  ],\n  'x' : [ [0.050,-1.000], [0.100,-1.000], [0.129,-0.923], [0.154,-0.860], [0.179,-0.797], [0.203,-0.733], [0.228,-0.670], [0.253,-0.607], [0.277,-0.543], [0.307,-0.472], [0.327,-0.417], [0.351,-0.353], [0.376,-0.290], [0.401,-0.227], [0.425,-0.163], [0.450,-0.100], [0.470,-0.050], [0.450,-0.100], [0.425,-0.163], [0.401,-0.227], [0.376,-0.290], [0.351,-0.353], [0.327,-0.417], [0.307,-0.472], [0.262,-0.580], [0.245,-0.525], [0.224,-0.446], [0.202,-0.367], [0.180,-0.287], [0.158,-0.208], [0.137,-0.129], [0.115,-0.050], [0.137,-0.129], [0.158,-0.208], [0.180,-0.287], [0.202,-0.367], [0.224,-0.446], [0.245,-0.525], [0.262,-0.580], [0.289,-0.683], [0.311,-0.763], [0.332,-0.842], [0.354,-0.921], [0.376,-1.000], [0.400,-1.044], [0.422,-1.051], [0.449,-1.070], [0.470,-1.065], [0.491,-1.060], [0.508,-1.040], [0.530,-1.025], [0.550,-1.010], [0.580,-1.000],  ],\n  'y' : [ [0.020,-0.990], [0.039,-0.969], [0.058,-0.944], [0.073,-0.922], [0.085,-0.880], [0.098,-0.837], [0.110,-0.795], [0.123,-0.752], [0.135,-0.710], [0.147,-0.667], [0.160,-0.625], [0.172,-0.582], [0.185,-0.540], [0.197,-0.497], [0.210,-0.455], [0.222,-0.412], [0.235,-0.370], [0.247,-0.328], [0.260,-0.285], [0.272,-0.243], [0.302,-0.220], [0.322,-0.219], [0.345,-0.237], [0.355,-0.264], [0.360,-0.308], [0.356,-0.358], [0.353,-0.403], [0.344,-0.496], [0.335,-0.588], [0.326,-0.681], [0.317,-0.773], [0.308,-0.866], [0.307,-0.940], [0.312,-1.002], [0.323,-1.029], [0.334,-1.056], [0.345,-1.083], [0.358,-1.108], [0.373,-1.128], [0.394,-1.136], [0.414,-1.136], [0.455,-1.125], [0.493,-1.083], [0.512,-1.043], [0.555,-0.951], [0.559,-0.868], [0.563,-0.785], [0.567,-0.701], [0.571,-0.618], [0.575,-0.535], [0.579,-0.451], [0.583,-0.368], [0.587,-0.285], [0.591,-0.229], [0.587,-0.285], [0.583,-0.368], [0.579,-0.451], [0.575,-0.535], [0.571,-0.618], [0.567,-0.701], [0.563,-0.785], [0.559,-0.868], [0.555,-0.951], [0.551,-1.034], [0.547,-1.118], [0.543,-1.201], [0.539,-1.284], [0.535,-1.368], [0.531,-1.451], [0.527,-1.534], [0.523,-1.617], [0.519,-1.701], [0.514,-1.784], [0.510,-1.867], [0.493,-1.923], [0.463,-1.938], [0.423,-1.948], [0.384,-1.958], [0.347,-1.949], [0.319,-1.929], [0.308,-1.902], [0.298,-1.875], [0.287,-1.848], [0.277,-1.811], [0.274,-1.767], [0.278,-1.706], [0.293,-1.661], [0.300,-1.621], [0.314,-1.574], [0.322,-1.535], [0.333,-1.492], [0.342,-1.464], [0.351,-1.437], [0.360,-1.409], [0.369,-1.382], [0.377,-1.354], [0.386,-1.326], [0.411,-1.296], [0.440,-1.265], [0.468,-1.234], [0.497,-1.203], [0.578,-1.130], [0.611,-1.084], [0.644,-1.048], [0.677,-1.027], [0.710,-1.006], [0.740,-1.000],  ],\n  'z' : [ [0.020,-0.960], [0.039,-0.908], [0.049,-0.880], [0.068,-0.826], [0.078,-0.799], [0.098,-0.744], [0.108,-0.717], [0.127,-0.662], [0.137,-0.635], [0.157,-0.581], [0.169,-0.540], [0.186,-0.490], [0.196,-0.460], [0.215,-0.410], [0.229,-0.370], [0.259,-0.300], [0.289,-0.220], [0.303,-0.172], [0.323,-0.130], [0.339,-0.110], [0.362,-0.117], [0.382,-0.145], [0.391,-0.172], [0.401,-0.199], [0.411,-0.226], [0.417,-0.300], [0.411,-0.363], [0.399,-0.450], [0.384,-0.529], [0.362,-0.608], [0.342,-0.662], [0.319,-0.750], [0.294,-0.826], [0.274,-0.880], [0.264,-0.908], [0.235,-0.989], [0.225,-1.017], [0.235,-0.989], [0.264,-0.908], [0.274,-0.880], [0.294,-0.826], [0.323,-0.826], [0.339,-0.860], [0.352,-0.908], [0.362,-0.935], [0.378,-0.980], [0.391,-1.044], [0.394,-1.071], [0.391,-1.098], [0.391,-1.153], [0.391,-1.207], [0.384,-1.350], [0.369,-1.450], [0.354,-1.537], [0.342,-1.589], [0.333,-1.616], [0.313,-1.698], [0.303,-1.725], [0.290,-1.760], [0.270,-1.834], [0.254,-1.861], [0.236,-1.880], [0.215,-1.861], [0.205,-1.834], [0.179,-1.770], [0.166,-1.725], [0.159,-1.670], [0.166,-1.616], [0.178,-1.566], [0.196,-1.507], [0.205,-1.480], [0.215,-1.453], [0.225,-1.425], [0.235,-1.398], [0.245,-1.371], [0.254,-1.344], [0.264,-1.316], [0.274,-1.289], [0.295,-1.254], [0.315,-1.210], [0.336,-1.170], [0.356,-1.130], [0.377,-1.100], [0.397,-1.070], [0.418,-1.050], [0.438,-1.030], [0.459,-1.020], [0.479,-1.005], [0.500,-1.000], [0.525,-0.990], [0.550,-0.990], [0.575,-1.000],  ],\n  'a*' : [ [0.040,-0.280], [0.080,-0.250], [0.120,-0.230], [0.160,-0.190], [0.200,-0.180], [0.254,-0.170], [0.310,-0.140], [0.370,-0.117], [0.399,-0.117], [0.410,-0.250], [0.405,-0.420], [0.400,-0.550], [0.390,-0.650], [0.385,-0.771], [0.380,-0.826], [0.330,-0.920], [0.295,-0.984], [0.250,-1.017], [0.210,-1.040], [0.164,-1.017], [0.135,-0.962], [0.125,-0.935], [0.108,-0.876], [0.089,-0.800], [0.086,-0.730], [0.086,-0.662], [0.090,-0.610], [0.106,-0.540], [0.120,-0.490], [0.129,-0.450], [0.145,-0.400], [0.160,-0.350], [0.175,-0.300], [0.196,-0.260], [0.223,-0.230], [0.254,-0.170], [0.310,-0.140], [0.370,-0.117], [0.399,-0.117], [0.410,-0.250], [0.405,-0.420], [0.400,-0.550], [0.390,-0.650], [0.385,-0.771], [0.380,-0.826], [0.399,-0.950], [0.429,-1.017], [0.460,-1.000], [0.500,-1.000],  ],\n  'b*' : [ [0.025,-0.260], [0.050,-0.270], [0.075,-0.260], [0.105,-0.260], [0.135,-0.265], [0.165,-0.260], [0.195,-0.240], [0.215,-0.210], [0.230,-0.150], [0.244,-0.080], [0.261,0.000], [0.277,0.090], [0.294,0.209], [0.311,0.302], [0.320,0.395], [0.321,0.526], [0.312,0.633], [0.286,0.718], [0.253,0.799], [0.229,0.808], [0.209,0.795], [0.191,0.777], [0.176,0.733], [0.165,0.663], [0.162,0.511], [0.161,0.358], [0.160,0.205], [0.159,0.052], [0.161,-0.101], [0.162,-0.254], [0.163,-0.407], [0.164,-0.560], [0.165,-0.712], [0.171,-0.865], [0.182,-0.920], [0.199,-0.981], [0.217,-1.000], [0.247,-1.000], [0.269,-0.995], [0.291,-0.974], [0.307,-0.953], [0.322,-0.884], [0.330,-0.821], [0.341,-0.749], [0.349,-0.680], [0.360,-0.600], [0.364,-0.518], [0.369,-0.420], [0.370,-0.310], [0.371,-0.207], [0.412,-0.240], [0.440,-0.260], [0.470,-0.250],  ],\n  'c*' : [ [0.050,-0.240], [0.103,-0.230], [0.143,-0.220], [0.183,-0.200], [0.216,-0.180], [0.243,-0.170], [0.268,-0.160], [0.294,-0.150], [0.333,-0.150], [0.363,-0.200], [0.383,-0.300], [0.363,-0.200], [0.333,-0.150], [0.294,-0.150], [0.268,-0.160], [0.243,-0.170], [0.216,-0.185], [0.195,-0.220], [0.177,-0.254], [0.157,-0.300], [0.143,-0.335], [0.128,-0.390], [0.100,-0.553], [0.100,-0.660], [0.102,-0.740], [0.112,-0.848], [0.128,-0.908], [0.138,-0.935], [0.147,-0.962], [0.163,-1.010], [0.192,-1.050], [0.245,-1.070], [0.313,-1.050], [0.358,-1.040], [0.393,-1.030], [0.433,-1.020], [0.483,-1.010], [0.533,-1.000],  ],\n  'd*' : [ [0.040,-0.260], [0.080,-0.270], [0.120,-0.260], [0.160,-0.240], [0.200,-0.220], [0.250,-0.220], [0.276,-0.180], [0.303,-0.160], [0.370,-0.125], [0.410,-0.117], [0.460,-0.117], [0.410,-0.117], [0.370,-0.125], [0.303,-0.160], [0.276,-0.180], [0.250,-0.220], [0.210,-0.300], [0.196,-0.360], [0.184,-0.450], [0.175,-0.540], [0.170,-0.610], [0.166,-0.662], [0.164,-0.730], [0.169,-0.800], [0.188,-0.876], [0.215,-0.962], [0.244,-1.017], [0.270,-1.028], [0.300,-1.025], [0.330,-1.017], [0.375,-0.984], [0.410,-0.920], [0.470,-0.840], [0.510,-0.826], [0.510,-0.771], [0.510,-0.650], [0.510,-0.550], [0.510,-0.420], [0.510,-0.250], [0.510,0.000], [0.510,0.200], [0.510,0.400], [0.510,0.600], [0.510,0.800], [0.510,0.600], [0.510,0.400], [0.510,0.200], [0.510,0.000], [0.510,-0.250], [0.510,-0.420], [0.510,-0.550], [0.510,-0.650], [0.510,-0.771], [0.510,-0.826], [0.515,-0.900], [0.529,-0.950], [0.559,-1.017], [0.590,-1.044], [0.628,-1.033], [0.660,-1.030], [0.700,-1.010], [0.750,-1.000],  ],\n  'e*' : [ [0.050,-0.250], [0.080,-0.265], [0.100,-0.280], [0.120,-0.300], [0.136,-0.320], [0.155,-0.360], [0.185,-0.400], [0.225,-0.460], [0.265,-0.480], [0.295,-0.470], [0.325,-0.390], [0.333,-0.344], [0.334,-0.300], [0.329,-0.263], [0.319,-0.200], [0.309,-0.160], [0.291,-0.130], [0.266,-0.110], [0.241,-0.100], [0.216,-0.110], [0.191,-0.130], [0.173,-0.160], [0.153,-0.200], [0.138,-0.250], [0.136,-0.320], [0.136,-0.390], [0.136,-0.460], [0.138,-0.550], [0.141,-0.600], [0.147,-0.660], [0.153,-0.720], [0.165,-0.800], [0.175,-0.860], [0.195,-0.900], [0.215,-0.940], [0.245,-0.970], [0.285,-0.980], [0.325,-0.990], [0.365,-1.000], [0.400,-1.000], [0.450,-1.000],  ],\n  'f*' : [ [0.025,-0.300], [0.045,-0.350], [0.065,-0.440], [0.085,-0.540], [0.105,-0.600], [0.125,-0.650], [0.145,-0.700], [0.165,-0.750], [0.189,-0.830], [0.220,-0.771], [0.250,-0.720], [0.265,-0.600], [0.275,-0.500], [0.285,-0.400], [0.295,-0.300], [0.305,-0.200], [0.315,-0.120], [0.325,-0.020], [0.332,0.079], [0.342,0.175], [0.356,0.278], [0.364,0.398], [0.372,0.520], [0.361,0.640], [0.340,0.710], [0.315,0.725], [0.285,0.730], [0.250,0.714], [0.220,0.692], [0.194,0.653], [0.175,0.550], [0.173,0.429], [0.172,0.277], [0.173,0.124], [0.174,-0.075], [0.174,-0.277], [0.174,-0.400], [0.175,-0.528], [0.174,-0.650], [0.174,-0.778], [0.174,-0.910], [0.174,-1.050], [0.172,-1.170], [0.170,-1.300], [0.168,-1.400], [0.165,-1.550], [0.165,-1.670], [0.164,-1.800], [0.160,-1.960], [0.190,-1.959], [0.220,-1.958], [0.249,-1.950], [0.279,-1.900], [0.300,-1.850], [0.319,-1.800], [0.324,-1.700], [0.319,-1.600], [0.314,-1.500], [0.307,-1.400], [0.299,-1.300], [0.289,-1.200], [0.275,-1.120], [0.260,-1.070], [0.225,-0.960], [0.247,-0.980], [0.275,-1.020], [0.300,-1.050], [0.334,-1.030], [0.376,-1.020], [0.425,-1.010], [0.475,-1.000],  ],\n  'g*' : [ [0.040,-0.260], [0.080,-0.270], [0.120,-0.280], [0.160,-0.290], [0.200,-0.280], [0.230,-0.285], [0.264,-0.281], [0.282,-0.250], [0.309,-0.230], [0.339,-0.210], [0.369,-0.190], [0.399,-0.176], [0.429,-0.180], [0.440,-0.220], [0.438,-0.300], [0.436,-0.380], [0.434,-0.460], [0.432,-0.540], [0.430,-0.620], [0.428,-0.700], [0.426,-0.780], [0.424,-0.860], [0.422,-0.940], [0.390,-0.970], [0.359,-1.000], [0.309,-1.030], [0.269,-1.044], [0.220,-1.030], [0.179,-1.000], [0.145,-0.962], [0.119,-0.870], [0.106,-0.771], [0.104,-0.720], [0.116,-0.670], [0.136,-0.614], [0.145,-0.581], [0.165,-0.526], [0.185,-0.472], [0.204,-0.417], [0.220,-0.370], [0.239,-0.330], [0.264,-0.281], [0.282,-0.250], [0.309,-0.230], [0.339,-0.210], [0.369,-0.190], [0.399,-0.176], [0.429,-0.180], [0.440,-0.220], [0.438,-0.300], [0.436,-0.380], [0.434,-0.460], [0.432,-0.540], [0.430,-0.620], [0.428,-0.700], [0.426,-0.780], [0.424,-0.860], [0.422,-0.940], [0.420,-1.020], [0.418,-1.100], [0.416,-1.180], [0.414,-1.260], [0.412,-1.340], [0.410,-1.420], [0.408,-1.500], [0.406,-1.580], [0.404,-1.660], [0.402,-1.740], [0.400,-1.820], [0.398,-1.900], [0.396,-1.980], [0.360,-1.975], [0.320,-1.967], [0.290,-1.955], [0.260,-1.920], [0.230,-1.870], [0.200,-1.800], [0.180,-1.720], [0.170,-1.660], [0.160,-1.580], [0.165,-1.520], [0.180,-1.470], [0.204,-1.398], [0.222,-1.350], [0.244,-1.300], [0.279,-1.240], [0.319,-1.190], [0.349,-1.150], [0.380,-1.100], [0.424,-1.050], [0.468,-1.040], [0.520,-1.030], [0.570,-1.020], [0.620,-1.000],  ],\n  'h*' : [ [0.040,-0.280], [0.080,-0.310], [0.120,-0.330], [0.160,-0.340], [0.190,-0.330], [0.178,-0.400], [0.192,-0.360], [0.205,-0.310], [0.225,-0.257], [0.254,-0.173], [0.284,-0.120], [0.299,-0.060], [0.323,0.000], [0.339,0.079], [0.354,0.163], [0.363,0.218], [0.377,0.275], [0.383,0.360], [0.388,0.440], [0.389,0.541], [0.383,0.651], [0.377,0.740], [0.352,0.798], [0.319,0.830], [0.284,0.830], [0.239,0.793], [0.209,0.751], [0.189,0.674], [0.174,0.526], [0.174,0.426], [0.174,0.324], [0.174,0.192], [0.174,0.059], [0.174,-0.073], [0.174,-0.205], [0.174,-0.338], [0.174,-0.470], [0.174,-0.603], [0.174,-0.735], [0.174,-0.868], [0.174,-1.000], [0.176,-0.868], [0.178,-0.735], [0.194,-0.680], [0.216,-0.601], [0.230,-0.529], [0.247,-0.436], [0.263,-0.374], [0.280,-0.292], [0.298,-0.250], [0.332,-0.230], [0.367,-0.220], [0.399,-0.230], [0.437,-0.270], [0.451,-0.344], [0.447,-0.436], [0.444,-0.516], [0.440,-0.607], [0.440,-0.702], [0.448,-0.807], [0.463,-0.919], [0.497,-0.975], [0.541,-1.009], [0.591,-1.000],  ],\n  'i*' : [ [0.030,-0.270], [0.049,-0.272], [0.070,-0.262], [0.090,-0.243], [0.113,-0.174], [0.137,-0.105], [0.133,-0.235], [0.132,-0.305], [0.128,-0.405], [0.127,-0.505], [0.127,-0.575], [0.127,-0.665], [0.127,-0.715], [0.126,-0.815], [0.129,-0.905], [0.142,-0.968], [0.159,-1.023], [0.204,-1.048], [0.254,-1.020],  ],\n  'j*' : [ [0.020,-0.257], [0.036,-0.265], [0.056,-0.270], [0.076,-0.280], [0.096,-0.260], [0.116,-0.240], [0.136,-0.210], [0.156,-0.180], [0.176,-0.160], [0.186,-0.140], [0.196,-0.134], [0.210,-0.120], [0.225,-0.132], [0.225,-0.191], [0.225,-0.272], [0.225,-0.400], [0.225,-0.539], [0.225,-0.679], [0.225,-0.818], [0.225,-0.958], [0.225,-1.097], [0.225,-1.237], [0.225,-1.377], [0.225,-1.516], [0.225,-1.656], [0.216,-1.728], [0.205,-1.799], [0.192,-1.856], [0.174,-1.875], [0.150,-1.880], [0.128,-1.860], [0.115,-1.834], [0.101,-1.728], [0.095,-1.599], [0.094,-1.499], [0.102,-1.399], [0.115,-1.313], [0.128,-1.257], [0.142,-1.201], [0.155,-1.144], [0.168,-1.088], [0.177,-1.060], [0.193,-1.025], [0.210,-0.993], [0.226,-0.961], [0.240,-0.948], [0.258,-0.938], [0.278,-0.938], [0.300,-0.957], [0.325,-0.977], [0.350,-1.000],  ],\n  'k*' : [ [0.025,-0.270], [0.050,-0.300], [0.070,-0.320], [0.090,-0.370], [0.110,-0.400], [0.130,-0.400], [0.160,-0.380], [0.190,-0.350], [0.198,-0.434], [0.226,-0.341], [0.254,-0.248], [0.282,-0.156], [0.310,-0.063], [0.327,-0.008], [0.344,0.046], [0.356,0.101], [0.366,0.155], [0.388,0.233], [0.398,0.288], [0.409,0.344], [0.420,0.400], [0.430,0.456], [0.441,0.512], [0.450,0.590], [0.454,0.673], [0.434,0.720], [0.409,0.730], [0.385,0.730], [0.355,0.730], [0.325,0.720], [0.295,0.700], [0.265,0.646], [0.235,0.587], [0.210,0.473], [0.200,0.360], [0.200,0.246], [0.200,0.132], [0.200,0.019], [0.200,-0.063], [0.200,-0.153], [0.200,-0.243], [0.200,-0.333], [0.200,-0.423], [0.200,-0.513], [0.200,-0.602], [0.200,-0.692], [0.200,-0.782], [0.200,-0.872], [0.200,-0.962], [0.200,-1.071], [0.200,-0.962], [0.200,-0.872], [0.200,-0.782], [0.200,-0.692], [0.200,-0.602], [0.208,-0.513], [0.234,-0.500], [0.274,-0.490], [0.314,-0.480], [0.364,-0.460], [0.404,-0.430], [0.444,-0.400], [0.469,-0.350], [0.484,-0.308], [0.478,-0.240], [0.464,-0.180], [0.446,-0.145], [0.424,-0.112], [0.384,-0.140], [0.354,-0.200], [0.304,-0.300], [0.274,-0.400], [0.254,-0.470], [0.225,-0.520], [0.244,-0.570], [0.268,-0.608], [0.287,-0.662], [0.307,-0.717], [0.326,-0.771], [0.340,-0.826], [0.348,-0.853], [0.366,-0.908], [0.385,-0.962], [0.405,-1.017], [0.429,-1.070], [0.454,-1.100], [0.479,-1.090], [0.504,-1.070], [0.529,-1.050], [0.554,-1.030], [0.571,-1.020], [0.595,-1.000], [0.626,-1.000], [0.650,-1.000],  ],\n  'l*' : [ [0.018,-0.260], [0.032,-0.280], [0.052,-0.300], [0.072,-0.350], [0.092,-0.400], [0.122,-0.430], [0.142,-0.450], [0.167,-0.460], [0.180,-0.466], [0.200,-0.411], [0.222,-0.355], [0.237,-0.300], [0.256,-0.210], [0.270,-0.140], [0.284,-0.060], [0.295,-0.009], [0.300,0.037], [0.308,0.090], [0.314,0.149], [0.322,0.204], [0.326,0.260], [0.333,0.338], [0.340,0.400], [0.344,0.490], [0.349,0.591], [0.350,0.646], [0.344,0.727], [0.324,0.789], [0.303,0.833], [0.282,0.845], [0.265,0.850], [0.235,0.844], [0.204,0.827], [0.190,0.771], [0.185,0.716], [0.181,0.668], [0.179,0.601], [0.179,0.499], [0.179,0.397], [0.179,0.295], [0.179,0.193], [0.179,0.091], [0.179,-0.011], [0.179,-0.113], [0.179,-0.215], [0.179,-0.317], [0.179,-0.419], [0.179,-0.521], [0.178,-0.623], [0.178,-0.726], [0.178,-0.828], [0.183,-0.901], [0.202,-0.959], [0.225,-0.990], [0.256,-0.997], [0.284,-1.024], [0.317,-1.040], [0.355,-1.020], [0.398,-1.010], [0.450,-1.000], [0.500,-1.000], [0.550,-1.000],  ],\n  'm*' : [ [0.020,-0.250], [0.050,-0.240], [0.080,-0.240], [0.110,-0.230], [0.140,-0.220], [0.160,-0.200], [0.185,-0.160], [0.205,-0.140], [0.232,-0.145], [0.241,-0.172], [0.243,-0.196], [0.246,-0.256], [0.250,-0.316], [0.253,-0.376], [0.256,-0.436], [0.259,-0.496], [0.253,-0.548], [0.248,-0.600], [0.242,-0.652], [0.236,-0.704], [0.231,-0.756], [0.225,-0.808], [0.219,-0.860], [0.214,-0.913], [0.208,-0.965], [0.202,-1.017], [0.208,-0.965], [0.214,-0.913], [0.219,-0.860], [0.225,-0.808], [0.231,-0.756], [0.236,-0.704], [0.242,-0.652], [0.248,-0.600], [0.253,-0.548], [0.259,-0.496], [0.271,-0.444], [0.287,-0.400], [0.300,-0.363], [0.310,-0.335], [0.320,-0.308], [0.329,-0.281], [0.339,-0.254], [0.349,-0.226], [0.369,-0.180], [0.389,-0.150], [0.418,-0.127], [0.447,-0.117], [0.457,-0.145], [0.466,-0.172], [0.476,-0.199], [0.482,-0.243], [0.488,-0.286], [0.494,-0.330], [0.500,-0.374], [0.506,-0.417], [0.499,-0.474], [0.492,-0.532], [0.485,-0.589], [0.478,-0.646], [0.471,-0.703], [0.464,-0.760], [0.458,-0.818], [0.451,-0.875], [0.444,-0.932], [0.444,-0.989], [0.444,-0.932], [0.451,-0.875], [0.458,-0.818], [0.464,-0.760], [0.471,-0.703], [0.478,-0.646], [0.485,-0.589], [0.492,-0.532], [0.499,-0.474], [0.506,-0.417], [0.515,-0.390], [0.530,-0.350], [0.545,-0.308], [0.555,-0.281], [0.565,-0.240], [0.584,-0.199], [0.594,-0.172], [0.609,-0.145], [0.649,-0.120], [0.691,-0.145], [0.711,-0.199], [0.721,-0.226], [0.731,-0.281], [0.726,-0.338], [0.721,-0.395], [0.716,-0.452], [0.711,-0.509], [0.706,-0.565], [0.701,-0.622], [0.696,-0.679], [0.691,-0.736], [0.687,-0.793], [0.682,-0.850], [0.682,-0.908], [0.701,-0.962], [0.711,-0.989], [0.730,-1.020], [0.780,-1.030], [0.809,-1.030], [0.837,-1.020], [0.868,-1.015], [0.920,-1.010], [0.970,-1.000],  ],\n  'n*' : [ [0.030,-0.230], [0.060,-0.210], [0.090,-0.190], [0.120,-0.130], [0.140,-0.080], [0.155,-0.050], [0.171,-0.030], [0.195,0.000], [0.220,-0.030], [0.235,-0.090], [0.244,-0.145], [0.249,-0.200], [0.254,-0.250], [0.256,-0.308], [0.253,-0.374], [0.253,-0.439], [0.253,-0.504], [0.253,-0.570], [0.253,-0.635], [0.253,-0.701], [0.253,-0.766], [0.253,-0.831], [0.253,-0.897], [0.253,-0.962], [0.253,-0.897], [0.253,-0.831], [0.253,-0.766], [0.253,-0.701], [0.253,-0.635], [0.253,-0.570], [0.253,-0.504], [0.253,-0.439], [0.253,-0.374], [0.270,-0.360], [0.285,-0.330], [0.299,-0.308], [0.309,-0.281], [0.319,-0.254], [0.328,-0.226], [0.345,-0.190], [0.365,-0.145], [0.386,-0.090], [0.407,-0.063], [0.436,-0.063], [0.456,-0.090], [0.465,-0.117], [0.475,-0.145], [0.480,-0.200], [0.485,-0.250], [0.485,-0.350], [0.485,-0.420], [0.485,-0.500], [0.485,-0.570], [0.485,-0.640], [0.485,-0.690], [0.485,-0.750], [0.485,-0.800], [0.485,-0.853], [0.485,-0.908], [0.490,-0.970], [0.509,-1.030], [0.544,-1.040], [0.569,-1.030], [0.602,-1.000], [0.640,-1.000],  ],\n  'o*' : [ [0.030,-0.275], [0.060,-0.280], [0.090,-0.270], [0.120,-0.260], [0.150,-0.250], [0.180,-0.240], [0.204,-0.254], [0.214,-0.226], [0.223,-0.199], [0.233,-0.172], [0.254,-0.160], [0.279,-0.140], [0.314,-0.140], [0.339,-0.160], [0.351,-0.172], [0.364,-0.200], [0.373,-0.220], [0.380,-0.250], [0.390,-0.281], [0.394,-0.338], [0.393,-0.395], [0.396,-0.451], [0.395,-0.508], [0.391,-0.565], [0.388,-0.622], [0.383,-0.679], [0.375,-0.735], [0.365,-0.792], [0.355,-0.849], [0.348,-0.900], [0.335,-0.960], [0.320,-1.010], [0.295,-1.050], [0.270,-1.070], [0.240,-1.080], [0.204,-1.065], [0.189,-1.040], [0.174,-1.005], [0.155,-0.962], [0.145,-0.935], [0.135,-0.908], [0.125,-0.880], [0.119,-0.850], [0.109,-0.800], [0.099,-0.750], [0.092,-0.700], [0.096,-0.640], [0.110,-0.581], [0.121,-0.540], [0.127,-0.500], [0.140,-0.450], [0.155,-0.390], [0.165,-0.363], [0.174,-0.335], [0.189,-0.290], [0.204,-0.254], [0.214,-0.226], [0.223,-0.199], [0.233,-0.172], [0.254,-0.160], [0.278,-0.200], [0.290,-0.250], [0.305,-0.290], [0.320,-0.310], [0.340,-0.330], [0.360,-0.340], [0.380,-0.340], [0.400,-0.340], [0.420,-0.340], [0.440,-0.335], [0.460,-0.330], [0.480,-0.320], [0.500,-0.300], [0.520,-0.280], [0.540,-0.250],  ],\n  'p*' : [ [0.025,-0.255], [0.050,-0.260], [0.080,-0.260], [0.110,-0.260], [0.140,-0.240], [0.164,-0.234], [0.169,-0.327], [0.168,-0.454], [0.167,-0.581], [0.166,-0.708], [0.165,-0.835], [0.163,-0.962], [0.162,-1.089], [0.161,-1.216], [0.160,-1.343], [0.159,-1.470], [0.158,-1.597], [0.157,-1.724], [0.156,-1.851], [0.157,-1.724], [0.158,-1.597], [0.159,-1.470], [0.160,-1.343], [0.161,-1.216], [0.162,-1.089], [0.163,-0.962], [0.165,-0.835], [0.166,-0.708], [0.167,-0.581], [0.168,-0.454], [0.169,-0.327], [0.170,-0.200], [0.164,-0.234], [0.189,-0.182], [0.207,-0.131], [0.231,-0.099], [0.250,-0.077], [0.264,-0.066], [0.282,-0.055], [0.309,-0.063], [0.340,-0.088], [0.367,-0.165], [0.374,-0.197], [0.393,-0.275], [0.403,-0.406], [0.404,-0.495], [0.405,-0.627], [0.397,-0.708], [0.390,-0.800], [0.377,-0.845], [0.356,-0.891], [0.333,-0.915], [0.296,-0.961], [0.262,-0.954], [0.230,-0.950], [0.200,-0.930], [0.230,-0.950], [0.262,-0.954], [0.296,-0.961], [0.317,-0.955], [0.349,-0.972], [0.399,-0.988], [0.429,-0.996], [0.467,-1.020], [0.500,-1.020], [0.536,-1.010], [0.570,-1.000],  ],\n  'q*' : [ [0.030,-0.255], [0.060,-0.260], [0.090,-0.265], [0.120,-0.270], [0.150,-0.290], [0.180,-0.310], [0.210,-0.300], [0.240,-0.290], [0.270,-0.270], [0.302,-0.250], [0.329,-0.230], [0.359,-0.210], [0.389,-0.190], [0.419,-0.176], [0.449,-0.180], [0.460,-0.220], [0.458,-0.300], [0.456,-0.380], [0.454,-0.460], [0.452,-0.540], [0.450,-0.620], [0.448,-0.700], [0.446,-0.780], [0.444,-0.860], [0.442,-0.940], [0.410,-0.970], [0.379,-1.000], [0.329,-1.030], [0.289,-1.044], [0.240,-1.030], [0.199,-1.000], [0.165,-0.962], [0.139,-0.870], [0.126,-0.771], [0.122,-0.720], [0.136,-0.670], [0.156,-0.614], [0.165,-0.581], [0.185,-0.526], [0.205,-0.472], [0.224,-0.417], [0.240,-0.370], [0.259,-0.330], [0.284,-0.281], [0.302,-0.250], [0.329,-0.230], [0.359,-0.210], [0.389,-0.190], [0.419,-0.176], [0.449,-0.180], [0.460,-0.220], [0.458,-0.300], [0.456,-0.380], [0.454,-0.460], [0.452,-0.540], [0.450,-0.620], [0.448,-0.700], [0.446,-0.780], [0.444,-0.860], [0.442,-0.940], [0.440,-1.020], [0.438,-1.100], [0.436,-1.180], [0.434,-1.260], [0.432,-1.340], [0.430,-1.420], [0.428,-1.500], [0.426,-1.580], [0.424,-1.660], [0.422,-1.740], [0.420,-1.820], [0.418,-1.900], [0.416,-1.980], [0.440,-1.975], [0.470,-1.967], [0.490,-1.955], [0.510,-1.920], [0.530,-1.870], [0.550,-1.800], [0.570,-1.720], [0.580,-1.660], [0.585,-1.580], [0.580,-1.520], [0.570,-1.470], [0.550,-1.398], [0.530,-1.350], [0.510,-1.300], [0.490,-1.240], [0.470,-1.190], [0.460,-1.150], [0.460,-1.080], [0.488,-1.050], [0.520,-1.030], [0.550,-1.020], [0.580,-1.015], [0.600,-1.010], [0.650,-1.005], [0.710,-1.000],  ],\n  'r*' : [ [0.050,-0.280], [0.100,-0.290], [0.100,-0.150], [0.150,-0.150], [0.200,-0.150], [0.250,-0.150], [0.300,-0.150], [0.300,-0.250], [0.295,-0.350], [0.290,-0.450], [0.280,-0.550], [0.270,-0.650], [0.265,-0.750], [0.280,-0.850], [0.300,-0.900], [0.340,-0.950], [0.390,-0.980], [0.450,-1.000],  ],\n  's*' : [ [0.050,-0.250], [0.100,-0.260], [0.130,-0.280], [0.160,-0.310], [0.190,-0.350], [0.220,-0.350], [0.250,-0.340], [0.280,-0.330], [0.310,-0.310], [0.330,-0.300], [0.355,-0.270], [0.390,-0.245], [0.440,-0.215], [0.482,-0.200], [0.483,-0.280], [0.488,-0.335], [0.495,-0.415], [0.503,-0.490], [0.510,-0.548], [0.510,-0.600], [0.510,-0.651], [0.505,-0.703], [0.500,-0.755], [0.495,-0.807], [0.485,-0.859], [0.460,-0.910], [0.387,-0.980], [0.360,-0.965], [0.322,-0.940], [0.292,-0.880], [0.263,-0.800], [0.233,-0.700], [0.208,-0.600], [0.195,-0.500], [0.190,-0.400], [0.195,-0.500], [0.208,-0.600], [0.233,-0.700], [0.263,-0.800], [0.292,-0.880], [0.322,-0.940], [0.360,-0.965], [0.387,-0.980], [0.412,-1.000], [0.437,-1.010], [0.462,-1.020], [0.500,-1.030], [0.550,-1.020], [0.600,-1.010], [0.650,-1.000],  ],\n  't*' : [ [0.050,-0.300], [0.100,-0.350], [0.150,-0.400], [0.200,-0.380], [0.250,-0.300], [0.300,-0.200], [0.328,-0.066], [0.337,0.115], [0.346,0.295], [0.325,0.295], [0.307,0.295], [0.274,0.295], [0.242,0.295], [0.200,0.295], [0.150,0.295], [0.100,0.295], [0.150,0.295], [0.200,0.295], [0.242,0.295], [0.274,0.295], [0.307,0.295], [0.325,0.295], [0.372,0.295], [0.405,0.295], [0.429,0.295], [0.461,0.295], [0.494,0.295], [0.527,0.295], [0.575,0.295], [0.625,0.295], [0.575,0.295], [0.527,0.295], [0.494,0.295], [0.461,0.295], [0.429,0.295], [0.405,0.295], [0.372,0.295], [0.346,0.295], [0.354,0.475], [0.363,0.655], [0.372,0.836], [0.372,0.655], [0.372,0.475], [0.372,0.295], [0.372,0.115], [0.372,-0.066], [0.372,-0.246], [0.372,-0.426], [0.372,-0.607], [0.372,-0.787], [0.372,-0.967], [0.387,-1.022], [0.424,-1.035], [0.475,-1.015], [0.526,-1.005], [0.575,-1.000], [0.625,-1.000], [0.675,-1.000], [0.725,-1.000],  ],\n  'u*' : [ [0.025,-0.260], [0.050,-0.270], [0.075,-0.260], [0.095,-0.260], [0.115,-0.240], [0.135,-0.200], [0.160,-0.170], [0.180,-0.140], [0.202,-0.131], [0.199,-0.189], [0.195,-0.247], [0.191,-0.305], [0.188,-0.363], [0.184,-0.420], [0.180,-0.478], [0.176,-0.536], [0.172,-0.594], [0.168,-0.652], [0.165,-0.710], [0.161,-0.768], [0.157,-0.826], [0.153,-0.884], [0.149,-0.942], [0.153,-1.000], [0.170,-1.020], [0.195,-1.030], [0.225,-1.020], [0.250,-1.010], [0.271,-0.990], [0.295,-0.970], [0.320,-0.950], [0.343,-0.930], [0.362,-0.910], [0.380,-0.880], [0.395,-0.840], [0.401,-0.787], [0.403,-0.731], [0.405,-0.676], [0.408,-0.620], [0.410,-0.565], [0.412,-0.509], [0.414,-0.454], [0.416,-0.398], [0.418,-0.342], [0.421,-0.287], [0.423,-0.231], [0.425,-0.162], [0.427,-0.102], [0.425,-0.162], [0.423,-0.231], [0.421,-0.287], [0.418,-0.342], [0.416,-0.398], [0.414,-0.454], [0.412,-0.509], [0.410,-0.565], [0.408,-0.620], [0.419,-0.697], [0.423,-0.760], [0.430,-0.820], [0.440,-0.880], [0.445,-0.940], [0.465,-1.000], [0.497,-1.020], [0.530,-1.020], [0.555,-1.010], [0.600,-1.000],  ],\n  'v*' : [ [0.030,-0.260], [0.060,-0.240], [0.080,-0.220], [0.095,-0.190], [0.110,-0.170], [0.124,-0.140], [0.143,-0.138], [0.158,-0.164], [0.170,-0.189], [0.177,-0.232], [0.183,-0.282], [0.189,-0.324], [0.189,-0.362], [0.187,-0.404], [0.186,-0.453], [0.184,-0.502], [0.183,-0.550], [0.182,-0.599], [0.180,-0.648], [0.179,-0.696], [0.177,-0.745], [0.176,-0.794], [0.180,-0.848], [0.190,-0.907], [0.199,-0.956], [0.216,-1.004], [0.239,-1.032], [0.263,-1.008], [0.286,-0.976], [0.295,-0.926], [0.304,-0.875], [0.312,-0.824], [0.321,-0.773], [0.323,-0.718], [0.333,-0.665], [0.336,-0.604], [0.342,-0.554], [0.349,-0.465], [0.355,-0.375], [0.362,-0.285], [0.369,-0.195], [0.411,-0.204], [0.455,-0.228], [0.487,-0.243], [0.512,-0.250],  ],\n  'w*' : [ [0.030,-0.225], [0.060,-0.210], [0.090,-0.170], [0.110,-0.150], [0.132,-0.123], [0.130,-0.222], [0.127,-0.322], [0.125,-0.421], [0.122,-0.520], [0.119,-0.620], [0.121,-0.683], [0.126,-0.783], [0.131,-0.863], [0.150,-0.943], [0.175,-0.995], [0.211,-1.015], [0.253,-0.987], [0.266,-0.931], [0.280,-0.875], [0.294,-0.819], [0.305,-0.763], [0.316,-0.707], [0.325,-0.651], [0.334,-0.595], [0.338,-0.496], [0.343,-0.397], [0.347,-0.298], [0.352,-0.199], [0.356,-0.150], [0.363,-0.216], [0.370,-0.332], [0.377,-0.448], [0.384,-0.564], [0.391,-0.680], [0.398,-0.797], [0.405,-0.913], [0.430,-0.992], [0.456,-0.999], [0.480,-0.987], [0.501,-0.926], [0.517,-0.877], [0.530,-0.821], [0.544,-0.765], [0.551,-0.698], [0.558,-0.602], [0.562,-0.549], [0.568,-0.444], [0.574,-0.338], [0.580,-0.233], [0.587,-0.150], [0.619,-0.160], [0.652,-0.180], [0.683,-0.200], [0.717,-0.250],  ],\n  'x*' : [ [0.025,-0.200], [0.050,-0.150], [0.075,-0.080], [0.115,-0.050], [0.137,-0.129], [0.158,-0.208], [0.180,-0.287], [0.202,-0.367], [0.224,-0.446], [0.245,-0.525], [0.262,-0.580], [0.253,-0.607], [0.228,-0.670], [0.203,-0.733], [0.179,-0.797], [0.154,-0.860], [0.129,-0.923], [0.100,-1.000], [0.129,-0.923], [0.154,-0.860], [0.179,-0.797], [0.203,-0.733], [0.228,-0.670], [0.253,-0.607], [0.277,-0.543], [0.307,-0.472], [0.327,-0.417], [0.351,-0.353], [0.376,-0.290], [0.401,-0.227], [0.425,-0.163], [0.450,-0.100], [0.470,-0.050], [0.450,-0.100], [0.425,-0.163], [0.401,-0.227], [0.376,-0.290], [0.351,-0.353], [0.327,-0.417], [0.307,-0.472], [0.277,-0.543], [0.262,-0.580], [0.289,-0.683], [0.311,-0.763], [0.332,-0.842], [0.354,-0.921], [0.376,-1.000], [0.400,-1.044], [0.422,-1.051], [0.449,-1.070], [0.470,-1.065], [0.491,-1.060], [0.508,-1.040], [0.530,-1.025], [0.550,-1.010], [0.580,-1.000],  ],\n  'y*' : [ [0.025,-0.260], [0.050,-0.270], [0.075,-0.260], [0.095,-0.260], [0.115,-0.250], [0.135,-0.240], [0.155,-0.220], [0.180,-0.220], [0.200,-0.219], [0.223,-0.237], [0.234,-0.264], [0.238,-0.308], [0.235,-0.358], [0.232,-0.403], [0.223,-0.496], [0.214,-0.588], [0.204,-0.681], [0.195,-0.773], [0.186,-0.866], [0.185,-0.940], [0.191,-1.002], [0.202,-1.029], [0.212,-1.056], [0.223,-1.083], [0.236,-1.108], [0.252,-1.128], [0.272,-1.136], [0.292,-1.136], [0.333,-1.125], [0.372,-1.083], [0.390,-1.043], [0.433,-0.951], [0.437,-0.868], [0.441,-0.785], [0.445,-0.701], [0.449,-0.618], [0.453,-0.535], [0.457,-0.451], [0.461,-0.368], [0.466,-0.285], [0.470,-0.229], [0.466,-0.285], [0.461,-0.368], [0.457,-0.451], [0.453,-0.535], [0.449,-0.618], [0.445,-0.701], [0.441,-0.785], [0.437,-0.868], [0.433,-0.951], [0.429,-1.034], [0.425,-1.118], [0.421,-1.201], [0.417,-1.284], [0.413,-1.368], [0.409,-1.451], [0.405,-1.534], [0.401,-1.617], [0.397,-1.701], [0.393,-1.784], [0.389,-1.867], [0.371,-1.923], [0.341,-1.938], [0.302,-1.948], [0.262,-1.958], [0.225,-1.949], [0.198,-1.929], [0.187,-1.902], [0.176,-1.875], [0.165,-1.848], [0.156,-1.811], [0.153,-1.767], [0.157,-1.706], [0.171,-1.661], [0.179,-1.621], [0.192,-1.574], [0.201,-1.535], [0.212,-1.492], [0.221,-1.464], [0.229,-1.437], [0.238,-1.409], [0.247,-1.382], [0.256,-1.354], [0.265,-1.326], [0.289,-1.296], [0.318,-1.265], [0.347,-1.234], [0.376,-1.203], [0.457,-1.130], [0.489,-1.084], [0.522,-1.048], [0.555,-1.027], [0.589,-1.006], [0.619,-1.000],  ],\n  'z*' : [ [0.025,-0.260], [0.050,-0.270], [0.080,-0.280], [0.110,-0.280], [0.140,-0.280], [0.170,-0.280], [0.200,-0.260], [0.220,-0.240], [0.239,-0.210], [0.253,-0.172], [0.273,-0.130], [0.289,-0.110], [0.312,-0.117], [0.332,-0.145], [0.350,-0.172], [0.360,-0.199], [0.370,-0.250], [0.367,-0.300], [0.361,-0.363], [0.349,-0.450], [0.334,-0.529], [0.312,-0.608], [0.292,-0.662], [0.269,-0.750], [0.244,-0.826], [0.224,-0.880], [0.214,-0.908], [0.185,-0.989], [0.175,-1.017], [0.185,-0.989], [0.214,-0.908], [0.224,-0.880], [0.244,-0.826], [0.273,-0.826], [0.289,-0.860], [0.302,-0.908], [0.312,-0.935], [0.328,-0.980], [0.341,-1.044], [0.344,-1.071], [0.341,-1.098], [0.341,-1.153], [0.341,-1.207], [0.334,-1.350], [0.319,-1.450], [0.304,-1.537], [0.292,-1.589], [0.283,-1.616], [0.263,-1.698], [0.253,-1.725], [0.240,-1.760], [0.220,-1.834], [0.204,-1.861], [0.186,-1.880], [0.165,-1.861], [0.155,-1.834], [0.129,-1.770], [0.116,-1.725], [0.109,-1.670], [0.116,-1.616], [0.128,-1.566], [0.146,-1.507], [0.155,-1.480], [0.165,-1.453], [0.175,-1.425], [0.185,-1.398], [0.195,-1.371], [0.204,-1.344], [0.214,-1.316], [0.224,-1.289], [0.245,-1.254], [0.265,-1.210], [0.286,-1.170], [0.306,-1.130], [0.327,-1.100], [0.347,-1.070], [0.368,-1.050], [0.388,-1.030], [0.409,-1.020], [0.429,-1.005], [0.450,-1.000], [0.480,-0.990], [0.510,-0.990], [0.540,-1.000],  ],\n  ',' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.210,-0.900], [0.230,-0.800], [0.270,-0.900], [0.280,-1.000], [0.290,-1.100], [0.290,-1.200], [0.270,-1.300], [0.250,-1.400], [0.210,-1.500], [0.150,-1.600], [0.210,-1.500], [0.250,-1.400], [0.270,-1.300], [0.290,-1.200], [0.290,-1.100], [0.280,-1.000], [0.270,-0.900], [0.230,-0.800], [0.270,-0.900], [0.280,-1.000], [0.350,-1.000], [0.400,-1.000], [0.450,-1.000], [0.500,-1.000],  ],\n  '?' : [ [0.050,-1.000], [0.100,-1.000], [0.160,-1.000], [0.200,-1.000], [0.250,-1.000], [0.250,-1.000], [0.250,-0.900], [0.250,-0.800], [0.250,-0.700], [0.250,-0.600], [0.250,-0.500], [0.250,-0.400], [0.250,-0.300], [0.250,-0.150], [0.310,-0.120], [0.345,-0.100], [0.376,-0.070], [0.410,0.020], [0.432,0.100], [0.441,0.222], [0.440,0.380], [0.436,0.533], [0.427,0.631], [0.419,0.700], [0.396,0.796], [0.377,0.840], [0.345,0.850], [0.316,0.860], [0.285,0.850], [0.242,0.800], [0.200,0.750], [0.125,0.650], [0.200,0.750], [0.242,0.800], [0.285,0.850], [0.316,0.860], [0.345,0.850], [0.377,0.840], [0.396,0.796], [0.419,0.700], [0.427,0.631], [0.436,0.533], [0.440,0.380], [0.441,0.222], [0.432,0.100], [0.410,0.020], [0.376,-0.070], [0.345,-0.100], [0.310,-0.120], [0.250,-0.150], [0.250,-0.300], [0.250,-0.400], [0.250,-0.500], [0.250,-0.600], [0.250,-0.700], [0.250,-0.800], [0.250,-0.900], [0.250,-1.000], [0.360,-1.000], [0.330,-0.850], [0.250,-0.750], [0.170,-0.850], [0.140,-1.000], [0.170,-1.150], [0.250,-1.250], [0.330,-1.150], [0.360,-1.000], [0.250,-1.000], [0.350,-1.000], [0.400,-1.000], [0.450,-1.000], [0.500,-1.000], [0.550,-1.000], [0.600,-1.000], [0.650,-1.000],  ],\n  '&' : [ [0.050,-1.000], [0.100,-1.000], [0.140,-1.000], [0.202,-0.990], [0.250,-0.985], [0.295,-0.985], [0.371,-0.970], [0.430,-0.955], [0.480,-0.880], [0.530,-0.750], [0.570,-0.670], [0.600,-0.592], [0.650,-0.450], [0.710,-0.300], [0.650,-0.450], [0.600,-0.592], [0.570,-0.670], [0.530,-0.750], [0.480,-0.880], [0.430,-0.955], [0.371,-0.970], [0.295,-0.985], [0.250,-0.985], [0.202,-0.990], [0.175,-0.920], [0.160,-0.870], [0.150,-0.780], [0.145,-0.660], [0.150,-0.460], [0.180,-0.300], [0.240,-0.150], [0.290,-0.070], [0.320,-0.020], [0.390,0.030], [0.445,0.106], [0.470,0.200], [0.495,0.319], [0.515,0.430], [0.521,0.537], [0.522,0.647], [0.512,0.737], [0.492,0.807], [0.465,0.840], [0.415,0.850], [0.375,0.850], [0.335,0.840], [0.294,0.820], [0.273,0.788], [0.259,0.727], [0.252,0.637], [0.248,0.570], [0.249,0.470], [0.254,0.400], [0.270,0.285], [0.295,0.130], [0.340,0.000], [0.380,-0.200], [0.420,-0.400], [0.450,-0.600], [0.480,-0.800], [0.510,-1.000], [0.550,-1.050], [0.600,-1.050], [0.645,-1.020], [0.700,-1.000], [0.759,-1.000], [0.815,-1.000], [0.860,-1.000],  ],\n  '$' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.250,-1.000], [0.300,-1.000], [0.300,-1.300], [0.300,-1.000], [0.300,-0.700], [0.300,-0.400], [0.300,-0.100], [0.300,0.200], [0.300,0.500], [0.300,0.900], [0.320,0.900], [0.320,0.500], [0.320,0.200], [0.320,-0.100], [0.320,-0.400], [0.320,-0.700], [0.320,-1.000], [0.320,-1.300], [0.320,-1.000], [0.384,-1.000], [0.429,-0.990], [0.464,-0.937], [0.488,-0.855], [0.522,-0.734], [0.536,-0.580], [0.532,-0.468], [0.518,-0.389], [0.489,-0.300], [0.456,-0.240], [0.416,-0.240], [0.370,-0.240], [0.320,-0.240], [0.279,-0.240], [0.240,-0.230], [0.200,-0.190], [0.180,-0.160], [0.160,-0.110], [0.130,-0.030], [0.110,0.060], [0.100,0.210], [0.110,0.326], [0.140,0.443], [0.170,0.510], [0.206,0.549], [0.250,0.570], [0.300,0.570], [0.348,0.570], [0.400,0.570], [0.450,0.570], [0.500,0.570], [0.450,0.570], [0.400,0.570], [0.348,0.570], [0.300,0.570], [0.250,0.570], [0.206,0.549], [0.170,0.510], [0.140,0.443], [0.110,0.326], [0.100,0.210], [0.110,0.060], [0.130,-0.030], [0.160,-0.110], [0.180,-0.160], [0.200,-0.190], [0.240,-0.230], [0.279,-0.240], [0.320,-0.240], [0.370,-0.240], [0.416,-0.240], [0.456,-0.240], [0.489,-0.300], [0.518,-0.389], [0.532,-0.468], [0.536,-0.580], [0.522,-0.734], [0.488,-0.855], [0.464,-0.937], [0.429,-0.990], [0.384,-1.000], [0.300,-1.000], [0.250,-1.000], [0.200,-1.000], [0.150,-1.000], [0.100,-1.000], [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.250,-1.000], [0.300,-1.000], [0.350,-1.000], [0.400,-1.000], [0.450,-1.000], [0.500,-1.000], [0.550,-1.000], [0.600,-1.000], [0.650,-1.000],  ],\n  '!' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.250,-1.000], [0.300,-1.000], [0.300,-0.700], [0.300,-0.400], [0.300,-0.100], [0.300,0.200], [0.300,0.500], [0.300,0.850], [0.300,0.500], [0.300,0.200], [0.300,-0.100], [0.300,-0.400], [0.300,-0.700], [0.300,-1.000], [0.410,-1.000], [0.380,-0.850], [0.300,-0.750], [0.220,-0.850], [0.190,-1.000], [0.220,-1.150], [0.300,-1.250], [0.380,-1.150], [0.410,-1.000], [0.300,-1.000], [0.400,-1.000], [0.450,-1.000], [0.500,-1.000], [0.550,-1.000],  ],\n};\n","export let raysol_sanserif = {\n  ' ' : [ [0.000,-1.000], [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.250,-1.000], [0.300,-1.000], [0.350,-1.000], [0.400,-1.000],  ],\n  '0' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.250,-1.000], [0.320,-0.888], [0.370,-0.775], [0.400,-0.663], [0.425,-0.550], [0.450,-0.438], [0.470,-0.325], [0.490,-0.213], [0.494,-0.085], [0.490,0.062], [0.470,0.175], [0.450,0.287], [0.425,0.400], [0.400,0.512], [0.370,0.625], [0.320,0.737], [0.250,0.850], [0.180,0.737], [0.130,0.625], [0.100,0.512], [0.075,0.400], [0.050,0.287], [0.030,0.175], [0.010,0.062], [0.006,-0.085], [0.010,-0.213], [0.030,-0.325], [0.050,-0.438], [0.075,-0.550], [0.100,-0.663], [0.130,-0.775], [0.180,-0.888], [0.250,-1.000], [0.300,-1.000], [0.350,-1.000], [0.400,-1.000], [0.450,-1.000], [0.500,-1.000],  ],\n  '1' : [ [0.050,-1.000], [0.050,-0.815], [0.050,-0.630], [0.050,-0.445], [0.050,-0.260], [0.050,-0.075], [0.050,0.110], [0.050,0.295], [0.050,0.480], [0.050,0.665], [0.050,0.850], [0.050,0.665], [0.050,0.480], [0.050,0.295], [0.050,0.110], [0.050,-0.075], [0.050,-0.260], [0.050,-0.445], [0.050,-0.630], [0.050,-0.815], [0.050,-1.000], [0.100,-1.000],  ],\n  '2' : [ [0.050,-1.000], [0.100,-1.000], [0.050,-1.000], [0.104,-0.780], [0.158,-0.560], [0.212,-0.340], [0.266,-0.120], [0.320,0.100], [0.360,0.250], [0.385,0.400], [0.390,0.550], [0.375,0.650], [0.345,0.750], [0.310,0.810], [0.265,0.845], [0.225,0.850], [0.185,0.845], [0.140,0.810], [0.105,0.750], [0.075,0.650], [0.050,0.550], [0.075,0.650], [0.105,0.750], [0.140,0.810], [0.185,0.845], [0.225,0.850], [0.265,0.845], [0.310,0.810], [0.345,0.750], [0.375,0.650], [0.390,0.550], [0.385,0.400], [0.360,0.250], [0.320,0.100], [0.266,-0.120], [0.212,-0.340], [0.158,-0.560], [0.104,-0.780], [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.250,-1.000], [0.300,-1.000], [0.350,-1.000], [0.400,-1.000], [0.450,-1.000], [0.450,-1.000], [0.500,-0.750], [0.500,-1.000], [0.550,-1.000],  ],\n  '3' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.200,-1.000], [0.240,-0.995], [0.285,-0.960], [0.320,-0.900], [0.350,-0.800], [0.365,-0.700], [0.360,-0.550], [0.335,-0.400], [0.280,-0.250], [0.200,0.000], [0.150,0.000], [0.200,0.000], [0.295,0.100], [0.335,0.250], [0.360,0.400], [0.365,0.550], [0.350,0.650], [0.320,0.750], [0.285,0.810], [0.240,0.845], [0.200,0.850], [0.160,0.845], [0.115,0.810], [0.080,0.750], [0.050,0.650], [0.025,0.550], [0.050,0.650], [0.080,0.750], [0.115,0.810], [0.160,0.845], [0.200,0.850], [0.240,0.845], [0.285,0.810], [0.320,0.750], [0.350,0.650], [0.365,0.550], [0.360,0.400], [0.335,0.250], [0.295,0.100], [0.200,0.000], [0.150,0.000], [0.200,0.000], [0.280,-0.250], [0.335,-0.400], [0.360,-0.550], [0.365,-0.700], [0.350,-0.800], [0.320,-0.900], [0.285,-0.960], [0.240,-0.995], [0.200,-1.000], [0.160,-0.995], [0.115,-0.960], [0.080,-0.900], [0.050,-0.800], [0.025,-0.700], [0.000,-0.590], [0.025,-0.700], [0.050,-0.800], [0.080,-0.900], [0.115,-0.960], [0.160,-0.995], [0.200,-1.000], [0.200,-1.000], [0.250,-1.000], [0.300,-1.000], [0.350,-1.000], [0.400,-1.000],  ],\n  '4' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.250,-1.000], [0.300,-1.000], [0.350,-1.000], [0.350,-0.800], [0.350,-0.600], [0.350,-0.400], [0.350,-0.200], [0.350,-0.075], [0.300,-0.075], [0.250,-0.075], [0.200,-0.075], [0.150,-0.075], [0.100,-0.075], [0.040,-0.075], [0.050,0.000], [0.050,0.200], [0.050,0.400], [0.050,0.600], [0.050,0.800], [0.050,0.850], [0.050,0.800], [0.050,0.600], [0.050,0.400], [0.050,0.200], [0.050,0.000], [0.050,-0.075], [0.100,-0.075], [0.150,-0.075], [0.200,-0.075], [0.250,-0.075], [0.300,-0.075], [0.350,-0.075], [0.400,-0.075], [0.475,-0.075], [0.550,-0.075], [0.475,-0.075], [0.400,-0.075], [0.350,-0.075], [0.350,0.000], [0.350,0.200], [0.350,0.400], [0.350,0.600], [0.350,0.800], [0.350,0.850], [0.350,0.800], [0.350,0.600], [0.350,0.400], [0.350,0.200], [0.350,0.000], [0.350,-0.075], [0.350,-0.200], [0.350,-0.400], [0.350,-0.600], [0.350,-0.800], [0.350,-1.000], [0.400,-1.000], [0.450,-1.000], [0.500,-1.000], [0.550,-1.000], [0.600,-1.000],  ],\n  '5' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.250,-1.000], [0.250,-0.950], [0.290,-0.945], [0.335,-0.910], [0.370,-0.850], [0.400,-0.750], [0.415,-0.650], [0.420,-0.500], [0.410,-0.300], [0.385,-0.150], [0.330,0.000], [0.250,0.130], [0.160,0.120], [0.080,0.090], [0.090,0.280], [0.100,0.470], [0.110,0.660], [0.120,0.850], [0.170,0.850], [0.220,0.850], [0.270,0.850], [0.320,0.850], [0.400,0.850], [0.470,0.850], [0.400,0.850], [0.320,0.850], [0.270,0.850], [0.220,0.850], [0.170,0.850], [0.120,0.850], [0.110,0.660], [0.100,0.470], [0.090,0.280], [0.080,0.090], [0.160,0.120], [0.250,0.130], [0.330,0.000], [0.385,-0.150], [0.410,-0.300], [0.420,-0.500], [0.415,-0.650], [0.400,-0.750], [0.370,-0.850], [0.335,-0.910], [0.290,-0.945], [0.250,-0.950], [0.210,-0.945], [0.165,-0.910], [0.130,-0.850], [0.100,-0.800], [0.075,-0.720], [0.045,-0.570], [0.075,-0.720], [0.100,-0.800], [0.130,-0.850], [0.165,-0.910], [0.210,-0.945], [0.250,-0.950], [0.250,-1.000], [0.300,-1.000], [0.350,-1.000], [0.400,-1.000], [0.450,-1.000], [0.500,-1.000],  ],\n  '6' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.250,-1.000], [0.210,-0.950], [0.250,-0.945], [0.295,-0.910], [0.330,-0.850], [0.360,-0.750], [0.375,-0.650], [0.370,-0.500], [0.345,-0.350], [0.300,-0.200], [0.260,-0.120], [0.210,-0.100], [0.160,-0.120], [0.260,-0.120], [0.210,-0.100], [0.160,-0.120], [0.120,-0.200], [0.075,-0.350], [0.050,-0.500], [0.066,-0.365], [0.082,-0.230], [0.098,-0.095], [0.114,0.040], [0.130,0.175], [0.146,0.310], [0.162,0.445], [0.178,0.580], [0.194,0.715], [0.210,0.850], [0.194,0.715], [0.178,0.580], [0.162,0.445], [0.146,0.310], [0.130,0.175], [0.114,0.040], [0.098,-0.095], [0.082,-0.230], [0.066,-0.365], [0.050,-0.500], [0.045,-0.650], [0.060,-0.750], [0.090,-0.850], [0.125,-0.910], [0.170,-0.945], [0.210,-0.950], [0.250,-1.000], [0.300,-1.000], [0.350,-1.000], [0.400,-1.000],  ],\n  '7' : [ [0.050,-1.000], [0.100,-1.000], [0.130,-0.815], [0.160,-0.630], [0.190,-0.445], [0.220,-0.260], [0.250,-0.075], [0.280,0.110], [0.310,0.295], [0.340,0.480], [0.370,0.665], [0.400,0.850], [0.356,0.850], [0.312,0.850], [0.269,0.850], [0.225,0.850], [0.181,0.850], [0.138,0.850], [0.094,0.850], [0.025,0.850], [0.094,0.850], [0.138,0.850], [0.181,0.850], [0.225,0.850], [0.269,0.850], [0.312,0.850], [0.356,0.850], [0.400,0.850], [0.370,0.665], [0.340,0.480], [0.310,0.295], [0.280,0.110], [0.250,-0.075], [0.220,-0.260], [0.190,-0.445], [0.160,-0.630], [0.130,-0.815], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.250,-1.000], [0.300,-1.000], [0.350,-1.000], [0.400,-1.000], [0.450,-1.000],  ],\n  '8' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.200,-0.950], [0.240,-0.945], [0.285,-0.910], [0.320,-0.850], [0.350,-0.750], [0.365,-0.650], [0.360,-0.500], [0.335,-0.350], [0.290,-0.200], [0.250,-0.050], [0.200,-0.050], [0.150,-0.050], [0.105,0.100], [0.065,0.250], [0.040,0.400], [0.035,0.550], [0.050,0.650], [0.080,0.750], [0.115,0.810], [0.160,0.845], [0.200,0.850], [0.240,0.845], [0.285,0.810], [0.320,0.750], [0.350,0.650], [0.365,0.550], [0.360,0.400], [0.335,0.250], [0.295,0.100], [0.250,-0.050], [0.200,-0.050], [0.150,-0.050], [0.110,-0.200], [0.065,-0.350], [0.040,-0.500], [0.035,-0.650], [0.050,-0.750], [0.080,-0.850], [0.115,-0.910], [0.160,-0.945], [0.200,-0.950], [0.200,-1.000], [0.250,-1.000], [0.300,-1.000], [0.350,-1.000], [0.400,-1.000],  ],\n  '9' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.250,-1.000], [0.300,-1.000], [0.350,-1.000], [0.380,-1.000], [0.380,-0.800], [0.380,-0.600], [0.380,-0.400], [0.380,-0.200], [0.380,0.000], [0.380,0.200], [0.380,0.400], [0.350,0.250], [0.310,0.100], [0.215,0.000], [0.120,0.100], [0.080,0.250], [0.055,0.400], [0.050,0.550], [0.065,0.650], [0.095,0.750], [0.130,0.810], [0.175,0.845], [0.215,0.850], [0.255,0.845], [0.300,0.810], [0.335,0.750], [0.365,0.650], [0.380,0.550], [0.380,0.400], [0.380,0.200], [0.380,0.000], [0.380,-0.200], [0.380,-0.400], [0.380,-0.600], [0.380,-0.800], [0.380,-1.000], [0.400,-1.000], [0.450,-1.000],  ],\n  'A' : [ [0.050,-1.000], [0.075,-0.815], [0.100,-0.630], [0.125,-0.445], [0.150,-0.260], [0.175,-0.075], [0.200,0.110], [0.225,0.295], [0.250,0.480], [0.275,0.665], [0.300,0.850], [0.325,0.665], [0.350,0.480], [0.375,0.295], [0.400,0.110], [0.425,-0.075], [0.450,-0.260], [0.400,-0.260], [0.350,-0.260], [0.300,-0.260], [0.250,-0.260], [0.200,-0.260], [0.150,-0.260], [0.200,-0.260], [0.250,-0.260], [0.300,-0.260], [0.350,-0.260], [0.400,-0.260], [0.450,-0.260], [0.475,-0.445], [0.500,-0.630], [0.525,-0.815], [0.550,-1.000],  ],\n  'B' : [ [0.050,-1.000], [0.050,-0.900], [0.050,-0.800], [0.050,-0.700], [0.050,-0.600], [0.050,-0.500], [0.050,-0.400], [0.050,-0.300], [0.050,-0.200], [0.050,-0.100], [0.050,0.000], [0.050,0.100], [0.050,0.200], [0.050,0.300], [0.050,0.400], [0.050,0.500], [0.050,0.600], [0.050,0.700], [0.050,0.800], [0.050,0.850], [0.090,0.850], [0.130,0.850], [0.170,0.850], [0.210,0.850], [0.250,0.850], [0.270,0.840], [0.300,0.810], [0.330,0.750], [0.350,0.710], [0.370,0.650], [0.390,0.550], [0.410,0.450], [0.410,0.400], [0.390,0.300], [0.370,0.200], [0.350,0.140], [0.330,0.100], [0.300,0.040], [0.270,0.010], [0.250,0.000], [0.210,0.000], [0.170,0.000], [0.130,0.000], [0.090,0.000], [0.050,0.000], [0.090,0.000], [0.130,0.000], [0.170,0.000], [0.210,0.000], [0.250,0.000], [0.270,-0.010], [0.300,-0.040], [0.330,-0.100], [0.350,-0.140], [0.370,-0.200], [0.390,-0.300], [0.410,-0.400], [0.420,-0.500], [0.410,-0.600], [0.390,-0.700], [0.370,-0.800], [0.350,-0.860], [0.330,-0.900], [0.300,-0.960], [0.270,-0.990], [0.250,-1.000], [0.210,-1.000], [0.170,-1.000], [0.130,-1.000], [0.090,-1.000], [0.050,-1.000], [0.090,-1.000], [0.130,-1.000], [0.170,-1.000], [0.210,-1.000], [0.250,-1.000], [0.330,-1.000], [0.380,-1.000], [0.450,-1.000],  ],\n  'C' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.250,-1.000], [0.300,-1.000], [0.300,-0.950], [0.260,-0.945], [0.215,-0.910], [0.180,-0.850], [0.150,-0.750], [0.125,-0.650], [0.100,-0.540], [0.080,-0.400], [0.060,-0.230], [0.050,-0.050], [0.060,0.130], [0.080,0.300], [0.100,0.440], [0.125,0.550], [0.150,0.650], [0.180,0.750], [0.215,0.810], [0.260,0.845], [0.300,0.850], [0.340,0.845], [0.385,0.810], [0.420,0.750], [0.450,0.650], [0.475,0.550], [0.450,0.650], [0.420,0.750], [0.385,0.810], [0.340,0.845], [0.300,0.850], [0.260,0.845], [0.215,0.810], [0.180,0.750], [0.150,0.650], [0.125,0.550], [0.100,0.440], [0.080,0.300], [0.060,0.130], [0.050,-0.050], [0.060,-0.230], [0.080,-0.400], [0.100,-0.540], [0.125,-0.650], [0.150,-0.750], [0.180,-0.850], [0.215,-0.910], [0.260,-0.945], [0.300,-0.950], [0.340,-0.945], [0.385,-0.910], [0.420,-0.850], [0.450,-0.750], [0.475,-0.650], [0.450,-0.750], [0.420,-0.850], [0.385,-0.910], [0.340,-0.945], [0.300,-0.950], [0.300,-1.000], [0.250,-1.000], [0.220,-1.000], [0.250,-1.000], [0.300,-1.000], [0.350,-1.000], [0.400,-1.000], [0.450,-1.000], [0.500,-1.000],  ],\n  'D' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.240,-0.945], [0.285,-0.910], [0.320,-0.850], [0.350,-0.750], [0.375,-0.650], [0.400,-0.540], [0.420,-0.400], [0.440,-0.230], [0.450,-0.050], [0.440,0.130], [0.420,0.300], [0.400,0.440], [0.375,0.550], [0.350,0.650], [0.320,0.750], [0.285,0.810], [0.240,0.845], [0.200,0.850], [0.160,0.850], [0.115,0.850], [0.080,0.850], [0.050,0.800], [0.050,0.700], [0.050,0.600], [0.050,0.500], [0.050,0.400], [0.050,0.300], [0.050,0.200], [0.050,0.100], [0.050,0.000], [0.050,-0.100], [0.050,-0.200], [0.050,-0.300], [0.050,-0.400], [0.050,-0.500], [0.050,-0.600], [0.050,-0.700], [0.050,-0.800], [0.050,-0.900], [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.250,-1.000], [0.300,-1.000], [0.350,-1.000], [0.400,-1.000], [0.450,-1.000], [0.500,-1.000],  ],\n  'E' : [ [0.050,-1.000], [0.050,-1.000], [0.050,-0.900], [0.050,-0.800], [0.050,-0.700], [0.050,-0.600], [0.050,-0.500], [0.050,-0.400], [0.050,-0.300], [0.050,-0.200], [0.050,-0.100], [0.050,0.000], [0.090,0.000], [0.050,0.000], [0.090,0.000], [0.130,0.000], [0.170,0.000], [0.210,0.000], [0.250,0.000], [0.290,0.000], [0.330,0.000], [0.370,0.000], [0.330,0.000], [0.290,0.000], [0.250,0.000], [0.210,0.000], [0.170,0.000], [0.130,0.000], [0.050,0.000], [0.050,0.100], [0.050,0.200], [0.050,0.300], [0.050,0.400], [0.050,0.500], [0.050,0.600], [0.050,0.700], [0.050,0.800], [0.050,0.850], [0.090,0.850], [0.130,0.850], [0.170,0.850], [0.210,0.850], [0.250,0.850], [0.290,0.850], [0.330,0.850], [0.370,0.850], [0.370,0.750], [0.370,0.550], [0.370,0.750], [0.330,0.850], [0.290,0.850], [0.250,0.850], [0.210,0.850], [0.170,0.850], [0.130,0.850], [0.090,0.850], [0.050,0.850], [0.050,0.800], [0.050,0.700], [0.050,0.600], [0.050,0.500], [0.050,0.400], [0.050,0.300], [0.050,0.200], [0.050,0.100], [0.050,0.000], [0.050,-0.100], [0.050,-0.200], [0.050,-0.300], [0.050,-0.400], [0.050,-0.500], [0.050,-0.600], [0.050,-0.700], [0.050,-0.800], [0.050,-0.900], [0.050,-1.000], [0.090,-1.000], [0.130,-1.000], [0.170,-1.000], [0.210,-1.000], [0.250,-1.000], [0.290,-1.000], [0.330,-1.000], [0.370,-0.900], [0.370,-0.700], [0.370,-0.900], [0.370,-1.000], [0.420,-1.000],  ],\n  'F' : [ [0.050,-1.000], [0.050,-1.000], [0.050,-0.900], [0.050,-0.800], [0.050,-0.700], [0.050,-0.600], [0.050,-0.500], [0.050,-0.400], [0.050,-0.300], [0.050,-0.200], [0.050,-0.100], [0.050,0.000], [0.090,0.000], [0.050,0.000], [0.090,0.000], [0.130,0.000], [0.170,0.000], [0.210,0.000], [0.250,0.000], [0.290,0.000], [0.250,0.000], [0.210,0.000], [0.170,0.000], [0.130,0.000], [0.050,0.000], [0.050,0.850], [0.090,0.850], [0.130,0.850], [0.170,0.850], [0.210,0.850], [0.250,0.850], [0.290,0.850], [0.330,0.850], [0.370,0.850], [0.330,0.850], [0.290,0.850], [0.250,0.850], [0.210,0.850], [0.170,0.850], [0.130,0.850], [0.090,0.850], [0.050,0.850], [0.050,0.800], [0.050,0.700], [0.050,0.600], [0.050,0.500], [0.050,0.400], [0.050,0.300], [0.050,0.200], [0.050,0.100], [0.050,0.000], [0.050,-0.100], [0.050,-0.200], [0.050,-0.300], [0.050,-0.400], [0.050,-0.500], [0.050,-0.600], [0.050,-0.700], [0.050,-0.800], [0.050,-0.900], [0.050,-1.000], [0.090,-1.000], [0.130,-1.000], [0.170,-1.000], [0.210,-1.000], [0.250,-1.000], [0.290,-1.000], [0.330,-1.000], [0.370,-1.000],  ],\n  'G' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.250,-1.000], [0.250,-0.950], [0.290,-0.945], [0.335,-0.910], [0.370,-0.850], [0.400,-0.750], [0.425,-0.650], [0.450,-0.540], [0.470,-0.400], [0.490,-0.230], [0.500,-0.050], [0.450,-0.050], [0.400,-0.050], [0.350,-0.050], [0.300,-0.050], [0.250,-0.050], [0.300,-0.050], [0.350,-0.050], [0.400,-0.050], [0.450,-0.050], [0.500,-0.050], [0.490,-0.230], [0.470,-0.400], [0.450,-0.540], [0.425,-0.650], [0.400,-0.750], [0.370,-0.850], [0.335,-0.910], [0.290,-0.945], [0.250,-0.950], [0.210,-0.945], [0.165,-0.910], [0.130,-0.850], [0.100,-0.750], [0.075,-0.650], [0.050,-0.540], [0.030,-0.400], [0.010,-0.230], [0.000,-0.050], [0.010,0.130], [0.030,0.300], [0.050,0.440], [0.075,0.550], [0.100,0.650], [0.130,0.750], [0.165,0.810], [0.210,0.845], [0.250,0.850], [0.290,0.845], [0.335,0.810], [0.370,0.750], [0.400,0.650], [0.370,0.750], [0.335,0.810], [0.290,0.845], [0.250,0.850], [0.210,0.845], [0.165,0.810], [0.130,0.750], [0.100,0.650], [0.075,0.550], [0.050,0.440], [0.030,0.300], [0.010,0.130], [0.000,-0.050], [0.010,-0.230], [0.030,-0.400], [0.050,-0.540], [0.075,-0.650], [0.100,-0.750], [0.130,-0.850], [0.165,-0.910], [0.210,-0.945], [0.250,-0.950], [0.250,-1.000], [0.300,-1.000], [0.350,-1.000], [0.400,-1.000], [0.450,-1.000], [0.500,-1.000], [0.550,-1.000],  ],\n  'H' : [ [0.050,-1.000], [0.050,-0.900], [0.050,-0.800], [0.050,-0.700], [0.050,-0.600], [0.050,-0.500], [0.050,-0.400], [0.050,-0.300], [0.050,-0.200], [0.050,-0.100], [0.050,0.000], [0.090,0.000], [0.050,0.000], [0.090,0.000], [0.130,0.000], [0.170,0.000], [0.210,0.000], [0.250,0.000], [0.290,0.000], [0.330,0.000], [0.370,0.000], [0.410,0.000], [0.450,0.000], [0.450,0.100], [0.450,0.200], [0.450,0.300], [0.450,0.400], [0.450,0.500], [0.450,0.600], [0.450,0.700], [0.450,0.800], [0.450,0.850], [0.450,0.800], [0.450,0.700], [0.450,0.600], [0.450,0.500], [0.450,0.400], [0.450,0.300], [0.450,0.200], [0.450,0.100], [0.450,0.000], [0.410,0.000], [0.370,0.000], [0.330,0.000], [0.290,0.000], [0.250,0.000], [0.210,0.000], [0.170,0.000], [0.130,0.000], [0.090,0.000], [0.050,0.000], [0.090,0.000], [0.050,0.000], [0.050,0.100], [0.050,0.200], [0.050,0.300], [0.050,0.400], [0.050,0.500], [0.050,0.600], [0.050,0.700], [0.050,0.800], [0.050,0.850], [0.050,0.800], [0.050,0.700], [0.050,0.600], [0.050,0.500], [0.050,0.400], [0.050,0.300], [0.050,0.200], [0.050,0.100], [0.050,0.000], [0.050,-0.100], [0.050,0.000], [0.090,0.000], [0.050,0.000], [0.090,0.000], [0.130,0.000], [0.170,0.000], [0.210,0.000], [0.250,0.000], [0.290,0.000], [0.330,0.000], [0.370,0.000], [0.410,0.000], [0.450,0.000], [0.450,-0.100], [0.450,-0.200], [0.450,-0.300], [0.450,-0.400], [0.450,-0.500], [0.450,-0.600], [0.450,-0.700], [0.450,-0.800], [0.450,-0.900], [0.450,-1.000], [0.500,-1.000],  ],\n  'I' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.200,-0.900], [0.200,-0.800], [0.200,-0.700], [0.200,-0.600], [0.200,-0.500], [0.200,-0.400], [0.200,-0.300], [0.200,-0.200], [0.200,-0.100], [0.200,0.000], [0.200,0.100], [0.200,0.200], [0.200,0.300], [0.200,0.400], [0.200,0.500], [0.200,0.600], [0.200,0.700], [0.200,0.800], [0.200,0.850], [0.150,0.850], [0.100,0.850], [0.050,0.850], [0.100,0.850], [0.150,0.850], [0.200,0.850], [0.250,0.850], [0.300,0.850], [0.350,0.850], [0.300,0.850], [0.250,0.850], [0.200,0.800], [0.200,0.700], [0.200,0.600], [0.200,0.500], [0.200,0.400], [0.200,0.300], [0.200,0.200], [0.200,0.100], [0.200,0.000], [0.200,-0.100], [0.200,-0.200], [0.200,-0.300], [0.200,-0.400], [0.200,-0.500], [0.200,-0.600], [0.200,-0.700], [0.200,-0.800], [0.200,-0.900], [0.200,-1.000], [0.150,-0.900], [0.100,-0.900], [0.050,-0.900], [0.100,-0.900], [0.150,-0.900], [0.200,-0.900], [0.250,-0.900], [0.300,-0.900], [0.350,-0.900], [0.300,-0.900], [0.250,-0.900], [0.200,-0.900], [0.200,-1.000], [0.250,-1.000], [0.300,-1.000], [0.350,-1.000], [0.400,-1.000],  ],\n  'J' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.230,-1.000], [0.250,-0.990], [0.280,-0.960], [0.310,-0.900], [0.330,-0.860], [0.350,-0.800], [0.370,-0.700], [0.390,-0.600], [0.400,-0.500], [0.400,-0.400], [0.400,-0.300], [0.400,-0.200], [0.400,-0.100], [0.400,0.000], [0.400,0.100], [0.400,0.200], [0.400,0.300], [0.400,0.400], [0.400,0.500], [0.400,0.600], [0.400,0.700], [0.400,0.800], [0.400,0.850], [0.400,0.800], [0.400,0.700], [0.400,0.600], [0.400,0.500], [0.400,0.400], [0.400,0.300], [0.400,0.200], [0.400,0.100], [0.400,0.000], [0.400,-0.100], [0.400,-0.200], [0.400,-0.300], [0.400,-0.400], [0.400,-0.500], [0.390,-0.600], [0.370,-0.700], [0.350,-0.800], [0.330,-0.860], [0.310,-0.900], [0.280,-0.960], [0.250,-0.990], [0.230,-1.000], [0.200,-1.000], [0.170,-1.000], [0.150,-0.990], [0.120,-0.960], [0.090,-0.900], [0.070,-0.860], [0.050,-0.800], [0.030,-0.700], [0.010,-0.600], [0.000,-0.500], [0.010,-0.600], [0.030,-0.700], [0.050,-0.800], [0.070,-0.860], [0.090,-0.900], [0.120,-0.960], [0.150,-0.990], [0.170,-1.000], [0.200,-1.000], [0.250,-1.000], [0.300,-1.000], [0.350,-1.000], [0.400,-1.000], [0.450,-1.000],  ],\n  'K' : [ [0.050,-1.000], [0.050,-1.000], [0.050,-0.900], [0.050,-0.800], [0.050,-0.700], [0.050,-0.600], [0.050,-0.500], [0.050,-0.400], [0.050,-0.300], [0.050,-0.200], [0.050,-0.100], [0.050,0.000], [0.050,0.100], [0.050,0.200], [0.050,0.300], [0.050,0.400], [0.050,0.500], [0.050,0.600], [0.050,0.700], [0.050,0.800], [0.050,0.850], [0.050,0.800], [0.050,0.700], [0.050,0.600], [0.050,0.500], [0.050,0.400], [0.050,0.300], [0.050,0.200], [0.050,0.100], [0.050,0.000], [0.132,0.085], [0.164,0.170], [0.196,0.255], [0.228,0.340], [0.260,0.425], [0.292,0.510], [0.324,0.595], [0.356,0.680], [0.388,0.765], [0.420,0.850], [0.388,0.765], [0.356,0.680], [0.324,0.595], [0.292,0.510], [0.260,0.425], [0.228,0.340], [0.196,0.255], [0.164,0.170], [0.132,0.085], [0.100,0.000], [0.132,-0.100], [0.164,-0.200], [0.196,-0.300], [0.228,-0.400], [0.260,-0.500], [0.292,-0.600], [0.324,-0.700], [0.356,-0.800], [0.388,-0.900], [0.420,-1.000], [0.470,-1.000],  ],\n  'L' : [ [0.050,-1.000], [0.050,-0.900], [0.050,-0.800], [0.050,-0.700], [0.050,-0.600], [0.050,-0.500], [0.050,-0.400], [0.050,-0.300], [0.050,-0.200], [0.050,-0.100], [0.050,0.000], [0.050,0.100], [0.050,0.200], [0.050,0.300], [0.050,0.400], [0.050,0.500], [0.050,0.600], [0.050,0.700], [0.050,0.800], [0.050,0.850], [0.050,0.800], [0.050,0.700], [0.050,0.600], [0.050,0.500], [0.050,0.400], [0.050,0.300], [0.050,0.200], [0.050,0.100], [0.050,0.000], [0.050,-0.100], [0.050,-0.200], [0.050,-0.300], [0.050,-0.400], [0.050,-0.500], [0.050,-0.600], [0.050,-0.700], [0.050,-0.800], [0.050,-0.900], [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.250,-1.000], [0.300,-1.000], [0.350,-1.000], [0.400,-1.000], [0.450,-1.000], [0.450,-0.750], [0.450,-0.600], [0.450,-0.750], [0.450,-0.900], [0.450,-1.000], [0.400,-1.000], [0.450,-1.000], [0.500,-1.000],  ],\n  'M' : [ [0.050,-1.000], [0.050,-1.000], [0.070,-0.815], [0.090,-0.630], [0.110,-0.445], [0.130,-0.260], [0.150,-0.075], [0.170,0.110], [0.190,0.295], [0.210,0.480], [0.230,0.665], [0.250,0.850], [0.270,0.665], [0.290,0.480], [0.310,0.295], [0.330,0.110], [0.350,-0.075], [0.370,-0.260], [0.390,-0.445], [0.410,-0.630], [0.430,-0.815], [0.450,-1.000], [0.470,-0.815], [0.490,-0.630], [0.510,-0.445], [0.530,-0.260], [0.550,-0.075], [0.570,0.110], [0.590,0.295], [0.610,0.480], [0.630,0.665], [0.650,0.850], [0.670,0.665], [0.690,0.480], [0.710,0.295], [0.730,0.110], [0.750,-0.075], [0.770,-0.260], [0.790,-0.445], [0.810,-0.630], [0.830,-0.815], [0.850,-1.000], [0.900,-1.000],  ],\n  'N' : [ [0.050,-1.000], [0.050,-0.900], [0.050,-0.800], [0.050,-0.700], [0.050,-0.600], [0.050,-0.500], [0.050,-0.400], [0.050,-0.300], [0.050,-0.200], [0.050,-0.100], [0.050,0.000], [0.050,0.100], [0.050,0.200], [0.050,0.300], [0.050,0.400], [0.050,0.500], [0.050,0.600], [0.050,0.700], [0.050,0.800], [0.050,0.850], [0.100,0.665], [0.150,0.480], [0.200,0.295], [0.250,0.110], [0.300,-0.075], [0.350,-0.260], [0.400,-0.445], [0.450,-0.630], [0.500,-0.815], [0.550,-1.000], [0.550,-0.900], [0.550,-0.800], [0.550,-0.700], [0.550,-0.600], [0.550,-0.500], [0.550,-0.400], [0.550,-0.300], [0.550,-0.200], [0.550,-0.100], [0.550,0.000], [0.550,0.100], [0.550,0.200], [0.550,0.300], [0.550,0.400], [0.550,0.500], [0.550,0.600], [0.550,0.700], [0.550,0.800], [0.550,0.850], [0.550,0.800], [0.550,0.700], [0.550,0.600], [0.550,0.500], [0.550,0.400], [0.550,0.300], [0.550,0.200], [0.550,0.100], [0.550,0.000], [0.550,-0.100], [0.550,-0.200], [0.550,-0.300], [0.550,-0.400], [0.550,-0.500], [0.550,-0.600], [0.550,-0.700], [0.550,-0.800], [0.550,-0.900], [0.550,-1.000], [0.600,-1.000],  ],\n  'O' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.250,-1.000], [0.300,-1.000], [0.300,-0.950], [0.340,-0.945], [0.385,-0.910], [0.420,-0.850], [0.450,-0.750], [0.475,-0.650], [0.500,-0.540], [0.520,-0.400], [0.540,-0.230], [0.550,-0.050], [0.540,0.130], [0.520,0.300], [0.500,0.440], [0.475,0.550], [0.450,0.650], [0.420,0.750], [0.385,0.810], [0.340,0.845], [0.300,0.850], [0.260,0.845], [0.215,0.810], [0.180,0.750], [0.150,0.650], [0.125,0.550], [0.100,0.440], [0.080,0.300], [0.060,0.130], [0.050,-0.050], [0.060,-0.230], [0.080,-0.400], [0.100,-0.540], [0.125,-0.650], [0.150,-0.750], [0.180,-0.850], [0.215,-0.910], [0.260,-0.945], [0.300,-0.950], [0.300,-1.000], [0.350,-1.000], [0.400,-1.000], [0.450,-1.000], [0.500,-1.000], [0.550,-1.000], [0.600,-1.000],  ],\n  'P' : [ [0.050,-1.000], [0.050,-0.900], [0.050,-0.800], [0.050,-0.700], [0.050,-0.600], [0.050,-0.500], [0.050,-0.400], [0.050,-0.300], [0.050,-0.200], [0.050,-0.100], [0.050,0.000], [0.090,0.000], [0.130,0.000], [0.170,0.000], [0.210,0.000], [0.250,0.000], [0.270,0.010], [0.300,0.040], [0.330,0.100], [0.350,0.140], [0.370,0.200], [0.390,0.300], [0.410,0.400], [0.410,0.450], [0.390,0.550], [0.370,0.650], [0.350,0.710], [0.330,0.750], [0.300,0.810], [0.270,0.840], [0.250,0.850], [0.210,0.850], [0.170,0.850], [0.130,0.850], [0.090,0.850], [0.050,0.850], [0.050,0.800], [0.050,0.700], [0.050,0.600], [0.050,0.500], [0.050,0.400], [0.050,0.300], [0.050,0.200], [0.050,0.100], [0.050,0.000], [0.050,-0.100], [0.050,-0.200], [0.050,-0.300], [0.050,-0.400], [0.050,-0.500], [0.050,-0.600], [0.050,-0.700], [0.050,-0.800], [0.050,-0.900], [0.050,-1.000], [0.090,-1.000], [0.130,-1.000], [0.170,-1.000], [0.210,-1.000], [0.250,-1.000], [0.290,-1.000], [0.330,-1.000], [0.370,-1.000], [0.410,-1.000], [0.450,-1.000],  ],\n  'Q' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.250,-1.000], [0.300,-1.000], [0.300,-0.950], [0.340,-0.945], [0.385,-0.910], [0.420,-0.850], [0.450,-0.750], [0.475,-0.650], [0.500,-0.540], [0.520,-0.400], [0.540,-0.230], [0.550,-0.050], [0.540,0.130], [0.520,0.300], [0.500,0.440], [0.475,0.550], [0.450,0.650], [0.420,0.750], [0.385,0.810], [0.340,0.845], [0.300,0.850], [0.260,0.845], [0.215,0.810], [0.180,0.750], [0.150,0.650], [0.125,0.550], [0.100,0.440], [0.080,0.300], [0.060,0.130], [0.050,-0.050], [0.060,-0.230], [0.080,-0.400], [0.100,-0.540], [0.125,-0.650], [0.150,-0.750], [0.180,-0.850], [0.215,-0.910], [0.260,-0.945], [0.300,-0.950], [0.300,-1.000], [0.350,-1.000], [0.400,-1.000], [0.450,-1.000], [0.470,-1.080], [0.490,-1.160], [0.510,-1.240], [0.450,-1.000], [0.450,-1.000], [0.510,-1.240], [0.490,-1.160], [0.470,-1.080], [0.450,-1.000], [0.430,-0.920], [0.410,-0.840], [0.390,-0.760], [0.370,-0.680], [0.350,-0.600], [0.370,-0.680], [0.390,-0.760], [0.410,-0.840], [0.430,-0.920], [0.450,-1.000], [0.500,-1.000], [0.550,-1.000], [0.600,-1.000],  ],\n  'R' : [ [0.050,-1.000], [0.050,-0.900], [0.050,-0.800], [0.050,-0.700], [0.050,-0.600], [0.050,-0.500], [0.050,-0.400], [0.050,-0.300], [0.050,-0.200], [0.050,-0.100], [0.050,0.000], [0.050,0.100], [0.050,0.200], [0.050,0.300], [0.050,0.400], [0.050,0.500], [0.050,0.600], [0.050,0.700], [0.050,0.800], [0.050,0.850], [0.090,0.850], [0.130,0.850], [0.170,0.850], [0.210,0.850], [0.250,0.850], [0.270,0.840], [0.300,0.810], [0.330,0.750], [0.350,0.710], [0.370,0.650], [0.390,0.550], [0.410,0.450], [0.410,0.400], [0.390,0.300], [0.370,0.200], [0.350,0.140], [0.330,0.100], [0.300,0.040], [0.270,0.010], [0.250,0.000], [0.210,0.000], [0.170,0.000], [0.130,0.000], [0.090,0.000], [0.050,0.000], [0.090,0.000], [0.130,0.000], [0.170,0.000], [0.210,0.000], [0.230,-0.100], [0.250,-0.200], [0.270,-0.300], [0.290,-0.400], [0.310,-0.500], [0.330,-0.600], [0.350,-0.700], [0.370,-0.800], [0.390,-0.900], [0.410,-1.000], [0.450,-1.000],  ],\n  'S' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.250,-1.000], [0.250,-0.950], [0.290,-0.945], [0.335,-0.910], [0.370,-0.850], [0.400,-0.750], [0.415,-0.650], [0.410,-0.500], [0.385,-0.350], [0.330,-0.200], [0.250,-0.050], [0.170,0.100], [0.115,0.250], [0.090,0.400], [0.085,0.550], [0.100,0.650], [0.130,0.750], [0.165,0.810], [0.210,0.845], [0.250,0.850], [0.290,0.845], [0.335,0.810], [0.370,0.750], [0.400,0.650], [0.425,0.550], [0.400,0.650], [0.370,0.750], [0.335,0.810], [0.290,0.845], [0.250,0.850], [0.210,0.845], [0.165,0.810], [0.130,0.750], [0.100,0.650], [0.085,0.550], [0.090,0.400], [0.115,0.250], [0.170,0.100], [0.250,-0.050], [0.330,-0.200], [0.385,-0.350], [0.410,-0.500], [0.415,-0.650], [0.400,-0.750], [0.370,-0.850], [0.335,-0.910], [0.290,-0.945], [0.250,-0.950], [0.210,-0.945], [0.165,-0.910], [0.130,-0.850], [0.100,-0.750], [0.075,-0.650], [0.050,-0.540], [0.075,-0.650], [0.100,-0.750], [0.130,-0.850], [0.165,-0.910], [0.210,-0.945], [0.250,-0.950], [0.250,-1.000], [0.250,-0.950], [0.300,-1.000], [0.350,-1.000], [0.400,-1.000], [0.450,-1.000],  ],\n  'T' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.250,-1.000], [0.300,-1.000], [0.350,-1.000], [0.350,-0.900], [0.350,-0.800], [0.350,-0.700], [0.350,-0.600], [0.350,-0.500], [0.350,-0.400], [0.350,-0.300], [0.350,-0.200], [0.350,-0.100], [0.350,0.000], [0.350,0.100], [0.350,0.200], [0.350,0.300], [0.350,0.400], [0.350,0.500], [0.350,0.600], [0.350,0.700], [0.350,0.800], [0.350,0.850], [0.300,0.850], [0.250,0.850], [0.200,0.850], [0.150,0.850], [0.100,0.850], [0.050,0.850], [0.100,0.850], [0.150,0.850], [0.200,0.850], [0.250,0.850], [0.300,0.850], [0.350,0.850], [0.400,0.850], [0.450,0.850], [0.500,0.850], [0.550,0.850], [0.600,0.850], [0.650,0.850], [0.600,0.850], [0.550,0.850], [0.500,0.850], [0.450,0.850], [0.400,0.850], [0.350,0.800], [0.350,0.700], [0.350,0.600], [0.350,0.500], [0.350,0.400], [0.350,0.300], [0.350,0.200], [0.350,0.100], [0.350,0.000], [0.350,-0.100], [0.350,-0.200], [0.350,-0.300], [0.350,-0.400], [0.350,-0.500], [0.350,-0.600], [0.350,-0.700], [0.350,-0.800], [0.350,-0.900], [0.350,-1.000], [0.400,-1.000], [0.450,-1.000], [0.500,-1.000], [0.550,-1.000], [0.600,-1.000], [0.650,-1.000],  ],\n  'U' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.250,-1.000], [0.300,-1.000], [0.300,-0.950], [0.340,-0.945], [0.385,-0.910], [0.420,-0.850], [0.450,-0.750], [0.475,-0.650], [0.500,-0.540], [0.520,-0.400], [0.540,-0.230], [0.550,-0.050], [0.550,0.050], [0.550,0.150], [0.550,0.250], [0.550,0.350], [0.550,0.450], [0.550,0.550], [0.550,0.650], [0.550,0.750], [0.550,0.850], [0.550,0.750], [0.550,0.650], [0.550,0.550], [0.550,0.450], [0.550,0.350], [0.550,0.250], [0.550,0.150], [0.550,0.050], [0.550,-0.050], [0.540,-0.230], [0.520,-0.400], [0.500,-0.540], [0.475,-0.650], [0.450,-0.750], [0.420,-0.850], [0.385,-0.910], [0.340,-0.945], [0.300,-0.950], [0.260,-0.945], [0.215,-0.910], [0.180,-0.850], [0.150,-0.750], [0.125,-0.650], [0.100,-0.540], [0.080,-0.400], [0.060,-0.230], [0.050,-0.050], [0.050,0.050], [0.050,0.150], [0.050,0.250], [0.050,0.350], [0.050,0.450], [0.050,0.550], [0.050,0.650], [0.050,0.750], [0.050,0.850], [0.050,0.750], [0.050,0.650], [0.050,0.550], [0.050,0.450], [0.050,0.350], [0.050,0.250], [0.050,0.150], [0.050,0.050], [0.050,-0.050], [0.060,-0.230], [0.080,-0.400], [0.100,-0.540], [0.125,-0.650], [0.150,-0.750], [0.180,-0.850], [0.215,-0.910], [0.260,-0.945], [0.300,-0.950], [0.300,-1.000], [0.350,-1.000], [0.400,-1.000], [0.450,-1.000], [0.500,-1.000], [0.550,-1.000], [0.600,-1.000],  ],\n  'V' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.250,-1.000], [0.300,-1.000], [0.350,-1.000], [0.380,-0.815], [0.410,-0.630], [0.440,-0.445], [0.470,-0.260], [0.500,-0.075], [0.530,0.110], [0.560,0.295], [0.590,0.480], [0.620,0.665], [0.650,0.850], [0.620,0.665], [0.590,0.480], [0.560,0.295], [0.530,0.110], [0.500,-0.075], [0.470,-0.260], [0.440,-0.445], [0.410,-0.630], [0.380,-0.815], [0.350,-1.000], [0.320,-0.815], [0.290,-0.630], [0.260,-0.445], [0.230,-0.260], [0.200,-0.075], [0.170,0.110], [0.140,0.295], [0.110,0.480], [0.080,0.665], [0.050,0.850], [0.080,0.665], [0.110,0.480], [0.140,0.295], [0.170,0.110], [0.200,-0.075], [0.230,-0.260], [0.260,-0.445], [0.290,-0.630], [0.320,-0.815], [0.350,-1.000], [0.400,-1.000], [0.450,-1.000], [0.500,-1.000], [0.550,-1.000], [0.600,-1.000], [0.650,-1.000], [0.700,-1.000],  ],\n  'W' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.250,-1.000], [0.250,-1.000], [0.230,-0.815], [0.210,-0.630], [0.190,-0.445], [0.170,-0.260], [0.150,-0.075], [0.130,0.110], [0.110,0.295], [0.090,0.480], [0.070,0.665], [0.050,0.850], [0.070,0.665], [0.090,0.480], [0.110,0.295], [0.130,0.110], [0.150,-0.075], [0.170,-0.260], [0.190,-0.445], [0.210,-0.630], [0.230,-0.815], [0.250,-1.000], [0.270,-0.815], [0.290,-0.630], [0.310,-0.445], [0.330,-0.260], [0.350,-0.075], [0.370,0.110], [0.390,0.295], [0.410,0.480], [0.430,0.665], [0.450,0.850], [0.470,0.665], [0.490,0.480], [0.510,0.295], [0.530,0.110], [0.550,-0.075], [0.570,-0.260], [0.590,-0.445], [0.610,-0.630], [0.630,-0.815], [0.650,-1.000], [0.670,-0.815], [0.690,-0.630], [0.710,-0.445], [0.730,-0.260], [0.750,-0.075], [0.770,0.110], [0.790,0.295], [0.810,0.480], [0.830,0.665], [0.850,0.850], [0.830,0.665], [0.810,0.480], [0.790,0.295], [0.770,0.110], [0.750,-0.075], [0.730,-0.260], [0.710,-0.445], [0.690,-0.630], [0.670,-0.815], [0.650,-1.000], [0.700,-1.000], [0.750,-1.000], [0.800,-1.000], [0.850,-1.000], [0.900,-1.000],  ],\n  'X' : [ [0.050,-1.000], [0.110,-0.815], [0.170,-0.630], [0.230,-0.445], [0.290,-0.260], [0.350,-0.075], [0.410,0.110], [0.470,0.295], [0.530,0.480], [0.590,0.665], [0.650,0.850], [0.590,0.665], [0.530,0.480], [0.470,0.295], [0.410,0.110], [0.350,-0.075], [0.290,0.110], [0.230,0.295], [0.170,0.480], [0.110,0.665], [0.050,0.850], [0.110,0.665], [0.170,0.480], [0.230,0.295], [0.290,0.110], [0.350,-0.075], [0.410,-0.260], [0.470,-0.445], [0.530,-0.630], [0.590,-0.815], [0.650,-1.000], [0.700,-1.000],  ],\n  'Y' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.250,-1.000], [0.300,-1.000], [0.350,-1.000], [0.350,-0.900], [0.350,-0.800], [0.350,-0.700], [0.350,-0.600], [0.350,-0.500], [0.350,-0.400], [0.350,-0.300], [0.350,-0.200], [0.350,-0.100], [0.350,-0.075], [0.410,0.110], [0.470,0.295], [0.530,0.480], [0.590,0.665], [0.650,0.850], [0.590,0.665], [0.530,0.480], [0.470,0.295], [0.410,0.110], [0.350,-0.075], [0.290,0.110], [0.230,0.295], [0.170,0.480], [0.110,0.665], [0.050,0.850], [0.110,0.665], [0.170,0.480], [0.230,0.295], [0.290,0.110], [0.350,-0.075], [0.350,-0.100], [0.350,-0.200], [0.350,-0.300], [0.350,-0.400], [0.350,-0.500], [0.350,-0.600], [0.350,-0.700], [0.350,-0.800], [0.350,-0.900], [0.350,-1.000], [0.400,-1.000], [0.450,-1.000], [0.500,-1.000], [0.550,-1.000], [0.600,-1.000], [0.650,-1.000], [0.700,-1.000],  ],\n  'Z' : [ [0.050,-1.000], [0.110,-0.815], [0.170,-0.630], [0.230,-0.445], [0.290,-0.260], [0.350,-0.075], [0.410,0.110], [0.470,0.295], [0.530,0.480], [0.590,0.665], [0.650,0.850], [0.550,0.850], [0.450,0.850], [0.350,0.850], [0.250,0.850], [0.150,0.850], [0.050,0.850], [0.150,0.850], [0.250,0.850], [0.350,0.850], [0.450,0.850], [0.550,0.850], [0.650,0.850], [0.590,0.665], [0.530,0.480], [0.470,0.295], [0.410,0.110], [0.350,-0.075], [0.290,-0.260], [0.230,-0.445], [0.170,-0.630], [0.110,-0.815], [0.050,-0.980], [0.150,-0.980], [0.250,-0.980], [0.350,-0.980], [0.450,-0.980], [0.550,-0.980], [0.650,-0.980], [0.650,-1.000], [0.700,-1.000],  ],\n  'a' : [ [0.040,-1.000], [0.090,-1.000], [0.140,-1.000], [0.220,-1.000], [0.260,-1.000], [0.300,-1.000], [0.340,-1.000], [0.380,-1.000], [0.380,-0.900], [0.380,-0.800], [0.380,-0.700], [0.380,-0.600], [0.380,-0.500], [0.380,-0.400], [0.380,-0.300], [0.380,-0.200], [0.380,-0.100], [0.380,0.000], [0.340,0.000], [0.300,0.000], [0.260,0.000], [0.220,0.000], [0.200,-0.010], [0.170,-0.040], [0.140,-0.100], [0.120,-0.140], [0.100,-0.200], [0.080,-0.300], [0.060,-0.400], [0.050,-0.500], [0.060,-0.600], [0.080,-0.700], [0.100,-0.800], [0.120,-0.860], [0.140,-0.900], [0.170,-0.960], [0.200,-0.990], [0.220,-1.000], [0.260,-1.000], [0.300,-1.000], [0.340,-1.000], [0.430,-1.000],  ],\n  'b' : [ [0.050,-1.000], [0.090,-1.000], [0.130,-1.000], [0.170,-1.000], [0.210,-1.000], [0.250,-1.000], [0.270,-0.990], [0.300,-0.960], [0.330,-0.900], [0.350,-0.860], [0.370,-0.800], [0.390,-0.700], [0.410,-0.600], [0.420,-0.500], [0.410,-0.400], [0.390,-0.300], [0.370,-0.200], [0.350,-0.140], [0.330,-0.100], [0.300,-0.040], [0.270,-0.010], [0.250,0.000], [0.210,0.000], [0.170,0.000], [0.130,0.000], [0.090,0.000], [0.050,0.000], [0.050,0.100], [0.050,0.200], [0.050,0.300], [0.050,0.400], [0.050,0.500], [0.050,0.600], [0.050,0.700], [0.050,0.800], [0.050,0.850], [0.050,0.800], [0.050,0.700], [0.050,0.600], [0.050,0.500], [0.050,0.400], [0.050,0.300], [0.050,0.200], [0.050,0.100], [0.050,0.000], [0.050,-0.100], [0.050,-0.200], [0.050,-0.300], [0.050,-0.400], [0.050,-0.500], [0.050,-0.600], [0.050,-0.700], [0.050,-0.800], [0.050,-0.900], [0.050,-1.000], [0.010,-1.000], [0.050,-1.000], [0.090,-1.000], [0.130,-1.000], [0.170,-1.000], [0.210,-1.000], [0.250,-1.000], [0.330,-1.000], [0.380,-1.000], [0.450,-1.000],  ],\n  'c' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.220,-1.000], [0.200,-0.990], [0.170,-0.960], [0.140,-0.900], [0.120,-0.860], [0.100,-0.800], [0.080,-0.700], [0.060,-0.600], [0.050,-0.500], [0.060,-0.400], [0.080,-0.300], [0.100,-0.200], [0.120,-0.140], [0.140,-0.100], [0.170,-0.040], [0.200,-0.010], [0.220,0.000], [0.260,0.000], [0.300,0.000], [0.340,0.000], [0.380,0.000], [0.340,0.000], [0.300,0.000], [0.260,0.000], [0.220,0.000], [0.200,-0.010], [0.170,-0.040], [0.140,-0.100], [0.120,-0.140], [0.100,-0.200], [0.080,-0.300], [0.060,-0.400], [0.050,-0.500], [0.060,-0.600], [0.080,-0.700], [0.100,-0.800], [0.120,-0.860], [0.140,-0.900], [0.170,-0.960], [0.200,-0.990], [0.220,-1.000], [0.260,-1.000], [0.300,-1.000], [0.340,-1.000], [0.380,-1.000],  ],\n  'd' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.220,-1.000], [0.260,-1.000], [0.300,-1.000], [0.340,-1.000], [0.380,-1.000], [0.420,-1.000], [0.420,-0.900], [0.420,-0.800], [0.420,-0.700], [0.420,-0.600], [0.420,-0.500], [0.420,-0.400], [0.420,-0.300], [0.420,-0.200], [0.420,-0.100], [0.420,0.000], [0.420,0.100], [0.420,0.200], [0.420,0.300], [0.420,0.400], [0.420,0.500], [0.420,0.600], [0.420,0.700], [0.420,0.800], [0.420,0.850], [0.420,0.800], [0.420,0.700], [0.420,0.600], [0.420,0.500], [0.420,0.400], [0.420,0.300], [0.420,0.200], [0.420,0.100], [0.420,0.000], [0.380,0.000], [0.340,0.000], [0.300,0.000], [0.260,0.000], [0.220,0.000], [0.200,-0.010], [0.170,-0.040], [0.140,-0.100], [0.120,-0.140], [0.100,-0.200], [0.080,-0.300], [0.060,-0.400], [0.050,-0.500], [0.060,-0.600], [0.080,-0.700], [0.100,-0.800], [0.120,-0.860], [0.140,-0.900], [0.170,-0.960], [0.200,-0.990], [0.220,-1.000], [0.260,-1.000], [0.300,-1.000], [0.340,-1.000], [0.380,-1.000], [0.420,-1.000], [0.470,-1.000],  ],\n  'e' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.220,-1.000], [0.200,-0.990], [0.170,-0.960], [0.140,-0.900], [0.120,-0.860], [0.100,-0.800], [0.075,-0.700], [0.060,-0.600], [0.056,-0.500], [0.105,-0.500], [0.150,-0.500], [0.195,-0.500], [0.240,-0.500], [0.280,-0.500], [0.305,-0.500], [0.350,-0.500], [0.395,-0.500], [0.440,-0.500], [0.425,-0.400], [0.415,-0.300], [0.390,-0.200], [0.370,-0.140], [0.350,-0.100], [0.320,-0.040], [0.290,-0.010], [0.260,0.000], [0.220,0.000], [0.200,-0.010], [0.170,-0.040], [0.140,-0.100], [0.120,-0.140], [0.100,-0.200], [0.075,-0.300], [0.060,-0.400], [0.060,-0.600], [0.075,-0.700], [0.100,-0.800], [0.120,-0.860], [0.140,-0.900], [0.170,-0.960], [0.200,-0.990], [0.260,-1.000], [0.300,-1.000], [0.340,-1.000], [0.380,-1.000], [0.420,-1.000], [0.480,-1.000],  ],\n  'f' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.250,-1.000], [0.250,-0.900], [0.250,-0.800], [0.250,-0.700], [0.250,-0.600], [0.250,-0.500], [0.250,-0.400], [0.250,-0.300], [0.250,-0.200], [0.250,-0.100], [0.250,0.000], [0.300,0.000], [0.350,0.000], [0.400,0.000], [0.475,0.000], [0.400,0.000], [0.350,0.000], [0.300,0.000], [0.250,0.000], [0.200,0.000], [0.150,0.000], [0.100,0.000], [0.025,0.000], [0.100,0.000], [0.150,0.000], [0.200,0.000], [0.250,0.000], [0.250,0.100], [0.250,0.200], [0.250,0.300], [0.260,0.450], [0.275,0.550], [0.300,0.650], [0.320,0.710], [0.340,0.750], [0.370,0.810], [0.400,0.840], [0.420,0.850], [0.460,0.850], [0.500,0.850], [0.460,0.850], [0.420,0.850], [0.400,0.840], [0.370,0.810], [0.340,0.750], [0.320,0.710], [0.300,0.650], [0.275,0.550], [0.260,0.450], [0.250,0.300], [0.250,0.200], [0.250,0.100], [0.250,0.000], [0.250,-0.100], [0.250,-0.200], [0.250,-0.300], [0.250,-0.400], [0.250,-0.500], [0.250,-0.600], [0.250,-0.700], [0.250,-0.800], [0.250,-0.900], [0.250,-1.000], [0.300,-1.000], [0.350,-1.000], [0.400,-1.000], [0.450,-1.000], [0.500,-1.000], [0.550,-1.000],  ],\n  'g' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.260,-1.000], [0.300,-1.000], [0.340,-1.000], [0.380,-1.000], [0.380,-1.100], [0.380,-1.200], [0.380,-1.300], [0.380,-1.400], [0.370,-1.550], [0.355,-1.650], [0.330,-1.750], [0.310,-1.810], [0.290,-1.850], [0.260,-1.910], [0.230,-1.940], [0.210,-1.950], [0.170,-1.950], [0.130,-1.950], [0.090,-1.950], [0.130,-1.950], [0.170,-1.950], [0.210,-1.950], [0.230,-1.940], [0.260,-1.910], [0.290,-1.850], [0.310,-1.810], [0.330,-1.750], [0.355,-1.650], [0.370,-1.550], [0.380,-1.400], [0.380,-1.300], [0.380,-1.200], [0.380,-1.100], [0.380,-1.000], [0.380,-0.900], [0.380,-0.800], [0.380,-0.700], [0.380,-0.600], [0.380,-0.500], [0.380,-0.400], [0.380,-0.300], [0.380,-0.200], [0.380,-0.100], [0.380,0.000], [0.340,0.000], [0.300,0.000], [0.260,0.000], [0.220,0.000], [0.200,-0.010], [0.170,-0.040], [0.140,-0.100], [0.120,-0.140], [0.100,-0.200], [0.080,-0.300], [0.060,-0.400], [0.050,-0.500], [0.060,-0.600], [0.080,-0.700], [0.100,-0.800], [0.120,-0.860], [0.140,-0.900], [0.170,-0.960], [0.200,-0.990], [0.220,-1.000], [0.260,-1.000], [0.300,-1.000], [0.340,-1.000], [0.420,-1.000],  ],\n  'h' : [ [0.050,-1.000], [0.050,-0.900], [0.050,-0.800], [0.050,-0.700], [0.050,-0.600], [0.050,-0.500], [0.050,-0.400], [0.050,-0.300], [0.050,-0.200], [0.050,-0.100], [0.050,0.000], [0.050,0.100], [0.050,0.200], [0.050,0.300], [0.050,0.400], [0.050,0.500], [0.050,0.600], [0.050,0.700], [0.050,0.800], [0.050,0.800], [0.050,0.850], [0.050,0.700], [0.050,0.600], [0.050,0.500], [0.050,0.400], [0.050,0.300], [0.050,0.200], [0.050,0.100], [0.050,0.000], [0.050,-0.200], [0.060,-0.150], [0.090,-0.110], [0.140,-0.050], [0.190,0.000], [0.250,0.000], [0.300,-0.050], [0.350,-0.110], [0.380,-0.150], [0.390,-0.200], [0.390,-0.300], [0.390,-0.400], [0.390,-0.500], [0.390,-0.600], [0.390,-0.700], [0.390,-0.800], [0.390,-0.900], [0.390,-1.000], [0.440,-1.000],  ],\n  'i' : [ [0.050,-1.000], [0.050,-0.900], [0.050,-0.800], [0.050,-0.700], [0.050,-0.600], [0.050,-0.500], [0.050,-0.400], [0.050,-0.300], [0.050,-0.200], [0.050,-0.100], [0.050,0.000], [0.050,-0.100], [0.050,-0.200], [0.050,-0.300], [0.050,-0.400], [0.050,-0.500], [0.050,-0.600], [0.050,-0.700], [0.050,-0.800], [0.050,-0.900], [0.050,-1.000], [0.100,-1.000],  ],\n  'j' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.250,-1.000], [0.290,-1.000], [0.290,-0.900], [0.290,-0.800], [0.290,-0.700], [0.290,-0.600], [0.290,-0.500], [0.290,-0.400], [0.290,-0.300], [0.290,-0.200], [0.290,-0.100], [0.290,0.000], [0.290,-0.100], [0.290,-0.200], [0.290,-0.300], [0.290,-0.400], [0.290,-0.500], [0.290,-0.600], [0.290,-0.700], [0.290,-0.800], [0.290,-0.900], [0.290,-1.000], [0.290,-1.100], [0.290,-1.200], [0.290,-1.300], [0.290,-1.400], [0.280,-1.550], [0.265,-1.650], [0.240,-1.750], [0.220,-1.810], [0.200,-1.850], [0.170,-1.910], [0.140,-1.940], [0.120,-1.950], [0.080,-1.950], [0.040,-1.950], [0.000,-1.950], [0.040,-1.950], [0.080,-1.950], [0.120,-1.950], [0.140,-1.940], [0.170,-1.910], [0.200,-1.850], [0.220,-1.810], [0.240,-1.750], [0.265,-1.650], [0.280,-1.550], [0.290,-1.400], [0.290,-1.300], [0.290,-1.200], [0.290,-1.100], [0.290,-1.000], [0.260,-1.000], [0.290,-1.000], [0.340,-1.000],  ],\n  'k' : [ [0.050,-1.000], [0.050,-0.900], [0.050,-0.800], [0.050,-0.700], [0.050,-0.600], [0.050,-0.500], [0.050,-0.400], [0.050,-0.300], [0.050,-0.200], [0.050,-0.100], [0.050,0.000], [0.050,0.100], [0.050,0.200], [0.050,0.300], [0.050,0.400], [0.050,0.500], [0.050,0.600], [0.050,0.700], [0.050,0.800], [0.050,0.800], [0.050,0.850], [0.050,0.700], [0.050,0.600], [0.050,0.500], [0.050,0.400], [0.050,0.300], [0.050,0.200], [0.050,0.100], [0.050,0.000], [0.050,-0.100], [0.050,-0.200], [0.050,-0.300], [0.050,-0.400], [0.050,-0.500], [0.108,-0.422], [0.167,-0.343], [0.225,-0.265], [0.283,-0.187], [0.342,-0.108], [0.400,-0.030], [0.342,-0.108], [0.283,-0.187], [0.225,-0.265], [0.167,-0.343], [0.108,-0.422], [0.050,-0.500], [0.108,-0.583], [0.167,-0.667], [0.225,-0.750], [0.283,-0.833], [0.342,-0.917], [0.400,-1.000], [0.450,-1.000],  ],\n  'l' : [ [0.050,-1.000], [0.050,-0.900], [0.050,-0.800], [0.050,-0.700], [0.050,-0.600], [0.050,-0.500], [0.050,-0.400], [0.050,-0.300], [0.050,-0.200], [0.050,-0.100], [0.050,0.000], [0.050,0.100], [0.050,0.200], [0.050,0.300], [0.050,0.400], [0.050,0.500], [0.050,0.600], [0.050,0.700], [0.050,0.800], [0.050,0.800], [0.050,0.850], [0.050,0.700], [0.050,0.600], [0.050,0.500], [0.050,0.400], [0.050,0.300], [0.050,0.200], [0.050,0.100], [0.050,0.000], [0.050,-0.100], [0.050,-0.200], [0.050,-0.300], [0.050,-0.400], [0.050,-0.500], [0.050,-0.600], [0.050,-0.700], [0.050,-0.800], [0.050,-0.900], [0.050,-1.000], [0.100,-1.000],  ],\n  'm' : [ [0.050,-1.000], [0.050,-0.900], [0.050,-0.800], [0.050,-0.700], [0.050,-0.600], [0.050,-0.500], [0.050,-0.400], [0.050,-0.300], [0.050,-0.200], [0.050,-0.100], [0.090,-0.070], [0.150,-0.040], [0.190,-0.020], [0.230,-0.020], [0.270,-0.040], [0.330,-0.070], [0.360,-0.100], [0.370,-0.200], [0.370,-0.300], [0.370,-0.400], [0.370,-0.500], [0.370,-0.600], [0.370,-0.700], [0.370,-0.800], [0.370,-0.900], [0.370,-1.025], [0.370,-0.900], [0.370,-0.800], [0.370,-0.700], [0.370,-0.600], [0.370,-0.500], [0.370,-0.400], [0.370,-0.300], [0.370,-0.200], [0.380,-0.100], [0.410,-0.070], [0.470,-0.040], [0.510,-0.020], [0.550,-0.020], [0.590,-0.040], [0.650,-0.070], [0.680,-0.100], [0.690,-0.200], [0.690,-0.300], [0.690,-0.400], [0.690,-0.500], [0.690,-0.600], [0.690,-0.700], [0.690,-0.800], [0.690,-0.900], [0.690,-1.000], [0.740,-1.000],  ],\n  'n' : [ [0.050,-1.000], [0.050,-0.900], [0.050,-0.800], [0.050,-0.700], [0.050,-0.600], [0.050,-0.500], [0.050,-0.400], [0.050,-0.300], [0.050,-0.200], [0.050,-0.100], [0.090,-0.070], [0.150,-0.040], [0.190,-0.020], [0.230,-0.020], [0.270,-0.040], [0.330,-0.070], [0.360,-0.100], [0.370,-0.200], [0.370,-0.300], [0.370,-0.400], [0.370,-0.500], [0.370,-0.600], [0.370,-0.700], [0.370,-0.800], [0.370,-0.900], [0.370,-1.000], [0.420,-1.000],  ],\n  'o' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.250,-1.000], [0.300,-1.000], [0.350,-1.000], [0.380,-1.000], [0.400,-0.990], [0.430,-0.960], [0.460,-0.900], [0.480,-0.860], [0.500,-0.800], [0.520,-0.700], [0.540,-0.600], [0.550,-0.500], [0.540,-0.400], [0.520,-0.300], [0.500,-0.200], [0.480,-0.140], [0.460,-0.100], [0.430,-0.040], [0.400,-0.010], [0.380,0.000], [0.340,0.000], [0.300,0.000], [0.260,0.000], [0.220,0.000], [0.200,-0.010], [0.170,-0.040], [0.140,-0.100], [0.120,-0.140], [0.100,-0.200], [0.080,-0.300], [0.060,-0.400], [0.050,-0.500], [0.060,-0.600], [0.080,-0.700], [0.100,-0.800], [0.120,-0.860], [0.140,-0.900], [0.170,-0.960], [0.200,-0.990], [0.220,-1.000], [0.250,-1.000], [0.300,-1.000], [0.350,-1.000], [0.400,-1.000], [0.450,-1.000], [0.500,-1.000], [0.550,-1.000], [0.600,-1.000],  ],\n  'p' : [ [0.050,-1.000], [0.050,-1.100], [0.050,-1.200], [0.050,-1.300], [0.050,-1.400], [0.050,-1.500], [0.050,-1.600], [0.050,-1.700], [0.050,-1.800], [0.050,-1.900], [0.050,-1.500], [0.050,-1.900], [0.050,-1.800], [0.050,-1.700], [0.050,-1.600], [0.050,-1.500], [0.050,-1.400], [0.050,-1.300], [0.050,-1.200], [0.050,-1.100], [0.090,-1.000], [0.130,-1.000], [0.170,-1.000], [0.210,-1.000], [0.230,-0.990], [0.260,-0.960], [0.290,-0.900], [0.310,-0.860], [0.330,-0.800], [0.350,-0.700], [0.370,-0.600], [0.380,-0.500], [0.370,-0.400], [0.350,-0.300], [0.330,-0.200], [0.310,-0.140], [0.290,-0.100], [0.260,-0.040], [0.230,-0.010], [0.210,0.000], [0.170,0.000], [0.130,0.000], [0.090,0.000], [0.050,0.000], [0.050,-0.100], [0.050,-0.200], [0.050,-0.300], [0.050,-0.400], [0.050,-0.500], [0.050,-0.600], [0.050,-0.700], [0.050,-0.800], [0.050,-0.900], [0.050,-1.000], [0.090,-1.000], [0.130,-1.000], [0.170,-1.000], [0.210,-1.000], [0.290,-1.000], [0.340,-1.000], [0.390,-1.000], [0.430,-1.000],  ],\n  'q' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.220,-1.000], [0.260,-1.000], [0.300,-1.000], [0.340,-1.000], [0.380,-1.000], [0.380,-1.100], [0.380,-1.200], [0.380,-1.300], [0.380,-1.400], [0.390,-1.550], [0.405,-1.650], [0.430,-1.750], [0.450,-1.810], [0.470,-1.850], [0.500,-1.910], [0.530,-1.940], [0.550,-1.950], [0.590,-1.950], [0.630,-1.950], [0.670,-1.950], [0.630,-1.950], [0.590,-1.950], [0.550,-1.950], [0.530,-1.940], [0.500,-1.910], [0.470,-1.850], [0.450,-1.810], [0.430,-1.750], [0.405,-1.650], [0.390,-1.550], [0.380,-1.400], [0.380,-1.300], [0.380,-1.200], [0.380,-1.100], [0.380,-1.000], [0.380,-0.900], [0.380,-0.800], [0.380,-0.700], [0.380,-0.600], [0.380,-0.500], [0.380,-0.400], [0.380,-0.300], [0.380,-0.200], [0.380,-0.100], [0.380,0.000], [0.340,0.000], [0.300,0.000], [0.260,0.000], [0.220,0.000], [0.200,-0.010], [0.170,-0.040], [0.140,-0.100], [0.120,-0.140], [0.100,-0.200], [0.080,-0.300], [0.060,-0.400], [0.050,-0.500], [0.060,-0.600], [0.080,-0.700], [0.100,-0.800], [0.120,-0.860], [0.140,-0.900], [0.170,-0.960], [0.200,-0.990], [0.220,-1.000], [0.260,-1.000], [0.300,-1.000], [0.340,-1.000], [0.420,-1.000], [0.480,-1.000], [0.540,-1.000], [0.600,-1.000], [0.650,-1.000], [0.720,-1.000],  ],\n  'r' : [ [0.050,-1.000], [0.050,-0.900], [0.050,-0.800], [0.050,-0.700], [0.050,-0.600], [0.050,-0.500], [0.050,-0.400], [0.050,-0.300], [0.050,-0.200], [0.050,-0.100], [0.050,0.000], [0.050,-0.100], [0.050,0.100], [0.050,0.150], [0.050,0.100], [0.050,-0.100], [0.090,-0.070], [0.150,-0.040], [0.190,-0.010], [0.230,0.000], [0.270,-0.010], [0.310,-0.040], [0.350,-0.100], [0.310,-0.040], [0.270,-0.010], [0.230,0.000], [0.190,-0.010], [0.150,-0.040], [0.090,-0.070], [0.050,-0.100], [0.050,-0.200], [0.050,-0.300], [0.050,-0.400], [0.050,-0.500], [0.050,-0.600], [0.050,-0.700], [0.050,-0.800], [0.050,-0.900], [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.250,-1.000], [0.300,-1.000], [0.350,-1.000], [0.400,-1.000],  ],\n  's' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.250,-1.000], [0.300,-1.000], [0.330,-1.000], [0.350,-0.990], [0.380,-0.960], [0.410,-0.900], [0.430,-0.860], [0.450,-0.800], [0.445,-0.740], [0.430,-0.700], [0.390,-0.650], [0.350,-0.600], [0.300,-0.550], [0.250,-0.500], [0.200,-0.450], [0.150,-0.400], [0.110,-0.350], [0.070,-0.300], [0.060,-0.210], [0.070,-0.140], [0.090,-0.100], [0.120,-0.040], [0.150,-0.010], [0.170,0.000], [0.210,0.000], [0.250,0.000], [0.290,0.000], [0.330,0.000], [0.350,-0.010], [0.380,-0.040], [0.410,-0.100], [0.430,-0.140], [0.410,-0.100], [0.380,-0.040], [0.350,-0.010], [0.330,0.000], [0.290,0.000], [0.250,0.000], [0.210,0.000], [0.170,0.000], [0.150,-0.010], [0.120,-0.040], [0.090,-0.100], [0.070,-0.140], [0.060,-0.210], [0.070,-0.300], [0.110,-0.350], [0.150,-0.400], [0.200,-0.450], [0.250,-0.500], [0.300,-0.550], [0.350,-0.600], [0.390,-0.650], [0.430,-0.700], [0.445,-0.740], [0.450,-0.800], [0.430,-0.860], [0.410,-0.900], [0.380,-0.960], [0.350,-0.990], [0.330,-1.000], [0.300,-1.000], [0.250,-1.000], [0.200,-1.000], [0.170,-1.000], [0.150,-0.990], [0.120,-0.960], [0.090,-0.900], [0.070,-0.860], [0.035,-0.800], [0.070,-0.860], [0.090,-0.900], [0.120,-0.960], [0.150,-0.990], [0.170,-1.000], [0.200,-1.000], [0.250,-1.000], [0.300,-1.000], [0.350,-1.000], [0.400,-1.000], [0.450,-1.000], [0.500,-1.000],  ],\n  't' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.220,-1.000], [0.220,-0.900], [0.220,-0.800], [0.220,-0.700], [0.220,-0.600], [0.220,-0.500], [0.220,-0.400], [0.220,-0.300], [0.220,-0.200], [0.220,-0.100], [0.220,0.000], [0.220,0.100], [0.220,0.200], [0.220,0.300], [0.220,0.350], [0.220,0.450], [0.180,0.450], [0.140,0.450], [0.100,0.450], [0.025,0.450], [0.100,0.450], [0.140,0.450], [0.180,0.450], [0.220,0.450], [0.260,0.450], [0.300,0.450], [0.340,0.450], [0.415,0.450], [0.340,0.450], [0.300,0.450], [0.260,0.450], [0.220,0.450], [0.220,0.550], [0.220,0.650], [0.220,0.750], [0.220,0.850], [0.220,0.750], [0.220,0.650], [0.220,0.550], [0.220,0.450], [0.220,0.350], [0.220,0.300], [0.220,0.200], [0.220,0.100], [0.220,0.000], [0.220,-0.100], [0.220,-0.200], [0.220,-0.300], [0.220,-0.400], [0.220,-0.500], [0.220,-0.600], [0.220,-0.700], [0.220,-0.800], [0.220,-0.900], [0.220,-1.000], [0.270,-1.000], [0.320,-1.000], [0.390,-1.000], [0.450,-1.000],  ],\n  'u' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.250,-1.000], [0.190,-0.980], [0.150,-0.960], [0.090,-0.930], [0.060,-0.900], [0.050,-0.800], [0.050,-0.700], [0.050,-0.600], [0.050,-0.500], [0.050,-0.400], [0.050,-0.300], [0.050,-0.200], [0.050,-0.100], [0.050,0.000], [0.050,-0.100], [0.050,-0.200], [0.050,-0.300], [0.050,-0.400], [0.050,-0.500], [0.050,-0.600], [0.050,-0.700], [0.050,-0.800], [0.060,-0.900], [0.090,-0.930], [0.150,-0.960], [0.190,-0.980], [0.230,-1.000], [0.270,-0.980], [0.310,-0.960], [0.370,-0.930], [0.400,-0.900], [0.410,-0.900], [0.410,-0.800], [0.410,-0.700], [0.410,-0.600], [0.410,-0.500], [0.410,-0.400], [0.410,-0.300], [0.410,-0.200], [0.410,-0.100], [0.410,0.000], [0.410,-0.100], [0.410,-0.200], [0.410,-0.300], [0.410,-0.400], [0.410,-0.500], [0.410,-0.600], [0.410,-0.700], [0.410,-0.800], [0.410,-0.900], [0.410,-1.000], [0.460,-1.000],  ],\n  'v' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.275,-1.000], [0.253,-0.900], [0.230,-0.800], [0.208,-0.700], [0.185,-0.600], [0.163,-0.500], [0.140,-0.400], [0.117,-0.300], [0.095,-0.200], [0.073,-0.100], [0.050,0.000], [0.073,-0.100], [0.095,-0.200], [0.117,-0.300], [0.140,-0.400], [0.163,-0.500], [0.185,-0.600], [0.208,-0.700], [0.230,-0.800], [0.253,-0.900], [0.275,-1.000], [0.297,-0.900], [0.320,-0.800], [0.343,-0.700], [0.365,-0.600], [0.388,-0.500], [0.410,-0.400], [0.432,-0.300], [0.455,-0.200], [0.478,-0.100], [0.500,0.000], [0.478,-0.100], [0.455,-0.200], [0.432,-0.300], [0.410,-0.400], [0.388,-0.500], [0.365,-0.600], [0.343,-0.700], [0.320,-0.800], [0.297,-0.900], [0.275,-1.000], [0.325,-1.000], [0.390,-1.000], [0.450,-1.000], [0.500,-1.000], [0.550,-1.000],  ],\n  'w' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.185,-0.900], [0.170,-0.800], [0.155,-0.700], [0.140,-0.600], [0.125,-0.500], [0.110,-0.400], [0.095,-0.300], [0.080,-0.200], [0.065,-0.100], [0.050,0.000], [0.065,-0.100], [0.080,-0.200], [0.095,-0.300], [0.110,-0.400], [0.125,-0.500], [0.140,-0.600], [0.155,-0.700], [0.170,-0.800], [0.185,-0.900], [0.200,-1.000], [0.215,-0.900], [0.230,-0.800], [0.245,-0.700], [0.260,-0.600], [0.275,-0.500], [0.290,-0.400], [0.305,-0.300], [0.320,-0.200], [0.335,-0.100], [0.350,0.000], [0.365,-0.100], [0.380,-0.200], [0.395,-0.300], [0.410,-0.400], [0.425,-0.500], [0.440,-0.600], [0.455,-0.700], [0.470,-0.800], [0.485,-0.900], [0.500,-1.000], [0.515,-0.900], [0.530,-0.800], [0.545,-0.700], [0.560,-0.600], [0.575,-0.500], [0.590,-0.400], [0.605,-0.300], [0.620,-0.200], [0.635,-0.100], [0.650,0.000], [0.635,-0.100], [0.620,-0.200], [0.605,-0.300], [0.590,-0.400], [0.575,-0.500], [0.560,-0.600], [0.545,-0.700], [0.530,-0.800], [0.515,-0.900], [0.500,-1.000], [0.550,-1.000], [0.600,-1.000], [0.650,-1.000], [0.700,-1.000],  ],\n  'x' : [ [0.045,-0.900], [0.090,-0.800], [0.135,-0.700], [0.180,-0.600], [0.225,-0.500], [0.270,-0.400], [0.315,-0.300], [0.360,-0.200], [0.405,-0.100], [0.450,0.000], [0.405,-0.100], [0.360,-0.200], [0.315,-0.300], [0.270,-0.400], [0.225,-0.500], [0.180,-0.400], [0.135,-0.300], [0.090,-0.200], [0.045,-0.100], [0.000,0.000], [0.045,-0.100], [0.090,-0.200], [0.135,-0.300], [0.180,-0.400], [0.225,-0.500], [0.270,-0.600], [0.315,-0.700], [0.360,-0.800], [0.405,-0.900], [0.450,-1.000],  ],\n  'y' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.275,-1.000], [0.253,-0.900], [0.230,-0.800], [0.208,-0.700], [0.185,-0.600], [0.163,-0.500], [0.140,-0.400], [0.117,-0.300], [0.095,-0.200], [0.073,-0.100], [0.050,0.000], [0.073,-0.100], [0.095,-0.200], [0.117,-0.300], [0.140,-0.400], [0.163,-0.500], [0.185,-0.600], [0.208,-0.700], [0.230,-0.800], [0.253,-0.900], [0.275,-1.000], [0.297,-0.900], [0.320,-0.800], [0.343,-0.700], [0.365,-0.600], [0.388,-0.500], [0.410,-0.400], [0.432,-0.300], [0.455,-0.200], [0.478,-0.100], [0.500,0.000], [0.478,-0.100], [0.455,-0.200], [0.432,-0.300], [0.410,-0.400], [0.388,-0.500], [0.365,-0.600], [0.343,-0.700], [0.320,-0.800], [0.297,-0.900], [0.275,-1.000], [0.253,-1.100], [0.230,-1.200], [0.208,-1.300], [0.185,-1.400], [0.163,-1.500], [0.140,-1.600], [0.117,-1.700], [0.140,-1.600], [0.163,-1.500], [0.185,-1.400], [0.208,-1.300], [0.230,-1.200], [0.253,-1.100], [0.275,-1.000], [0.325,-1.000], [0.375,-1.000], [0.425,-1.000], [0.475,-1.000], [0.550,-1.000],  ],\n  'z' : [ [0.050,-1.000], [0.095,-0.900], [0.140,-0.800], [0.185,-0.700], [0.230,-0.600], [0.275,-0.500], [0.320,-0.400], [0.365,-0.300], [0.410,-0.200], [0.455,-0.100], [0.500,0.000], [0.450,0.000], [0.400,0.000], [0.350,0.000], [0.300,0.000], [0.250,0.000], [0.200,0.000], [0.150,0.000], [0.100,0.000], [0.050,0.000], [0.100,0.000], [0.150,0.000], [0.200,0.000], [0.250,0.000], [0.300,0.000], [0.350,0.000], [0.400,0.000], [0.450,0.000], [0.500,0.000], [0.455,-0.100], [0.410,-0.200], [0.365,-0.300], [0.320,-0.400], [0.275,-0.500], [0.230,-0.600], [0.185,-0.700], [0.140,-0.800], [0.095,-0.900], [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.250,-1.000], [0.300,-1.000], [0.350,-1.000], [0.400,-1.000], [0.450,-1.000], [0.500,-1.000], [0.550,-1.000],  ],\n  'a*' : [ [0.050,-1.000], [0.100,-1.000],  ],\n  'b*' : [ [0.050,-1.000], [0.100,-1.000],  ],\n  'c*' : [ [0.050,-1.000], [0.100,-1.000],  ],\n  'd*' : [ [0.050,-1.000], [0.100,-1.000],  ],\n  'e*' : [ [0.050,-1.000], [0.100,-1.000],  ],\n  'f*' : [ [0.050,-1.000], [0.100,-1.000],  ],\n  'g*' : [ [0.050,-1.000], [0.100,-1.000],  ],\n  'h*' : [ [0.050,-1.000], [0.100,-1.000],  ],\n  'i*' : [ [0.050,-1.000], [0.100,-1.000],  ],\n  'j*' : [ [0.050,-1.000], [0.100,-1.000],  ],\n  'k*' : [ [0.050,-1.000], [0.100,-1.000],  ],\n  'l*' : [ [0.050,-1.000], [0.100,-1.000],  ],\n  'm*' : [ [0.050,-1.000], [0.100,-1.000],  ],\n  'n*' : [ [0.050,-1.000], [0.100,-1.000],  ],\n  'o*' : [ [0.050,-1.000], [0.100,-1.000],  ],\n  'p*' : [ [0.050,-1.000], [0.100,-1.000],  ],\n  'q*' : [ [0.050,-1.000], [0.100,-1.000],  ],\n  'r*' : [ [0.050,-1.000], [0.100,-1.000],  ],\n  's*' : [ [0.050,-1.000], [0.100,-1.000],  ],\n  't*' : [ [0.050,-1.000], [0.100,-1.000],  ],\n  'u*' : [ [0.050,-1.000], [0.100,-1.000],  ],\n  'v*' : [ [0.050,-1.000], [0.100,-1.000],  ],\n  'w*' : [ [0.050,-1.000], [0.100,-1.000],  ],\n  'x*' : [ [0.050,-1.000], [0.100,-1.000],  ],\n  'y*' : [ [0.050,-1.000], [0.100,-1.000],  ],\n  'z*' : [ [0.050,-1.000], [0.100,-1.000],  ],\n  ',' : [ [0.050,-1.000], [0.100,-1.000], [0.110,-0.900], [0.130,-0.800], [0.170,-0.900], [0.180,-1.000], [0.190,-1.100], [0.190,-1.200], [0.170,-1.300], [0.150,-1.400], [0.110,-1.500], [0.050,-1.600], [0.110,-1.500], [0.150,-1.400], [0.170,-1.300], [0.190,-1.200], [0.190,-1.100], [0.180,-1.000], [0.170,-0.900], [0.130,-0.800], [0.170,-0.900], [0.180,-1.000], [0.250,-1.000],  ],\n  '?' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.250,-1.000], [0.250,-0.900], [0.250,-0.800], [0.250,-0.700], [0.250,-0.600], [0.250,-0.500], [0.250,-0.400], [0.250,-0.300], [0.250,-0.200], [0.250,-0.170], [0.266,-0.120], [0.280,-0.070], [0.300,0.010], [0.320,0.100], [0.340,0.170], [0.360,0.250], [0.370,0.300], [0.380,0.350], [0.385,0.400], [0.388,0.480], [0.390,0.550], [0.385,0.600], [0.375,0.650], [0.365,0.700], [0.345,0.750], [0.330,0.790], [0.310,0.810], [0.285,0.835], [0.265,0.845], [0.245,0.850], [0.225,0.850], [0.200,0.846], [0.185,0.845], [0.160,0.830], [0.140,0.810], [0.120,0.785], [0.105,0.750], [0.088,0.700], [0.075,0.650], [0.060,0.600], [0.050,0.550], [0.060,0.600], [0.075,0.650], [0.088,0.700], [0.105,0.750], [0.120,0.785], [0.140,0.810], [0.160,0.830], [0.185,0.845], [0.200,0.846], [0.225,0.850], [0.245,0.850], [0.265,0.845], [0.285,0.835], [0.310,0.810], [0.330,0.790], [0.345,0.750], [0.365,0.700], [0.375,0.650], [0.385,0.600], [0.390,0.550], [0.388,0.480], [0.385,0.400], [0.380,0.350], [0.370,0.300], [0.360,0.250], [0.340,0.170], [0.320,0.100], [0.300,0.010], [0.280,-0.070], [0.266,-0.120], [0.250,-0.170], [0.250,-0.200], [0.250,-0.250], [0.250,-0.300], [0.250,-0.350], [0.250,-0.400], [0.250,-0.450], [0.250,-0.500], [0.250,-0.550], [0.250,-0.600], [0.250,-0.650], [0.250,-0.700], [0.250,-0.750], [0.250,-0.800], [0.250,-0.850], [0.250,-0.900], [0.250,-0.950], [0.250,-1.000], [0.200,-1.000], [0.250,-1.000], [0.360,-1.000], [0.330,-0.850], [0.250,-0.750], [0.170,-0.850], [0.140,-1.000], [0.170,-1.150], [0.250,-1.250], [0.330,-1.150], [0.360,-1.000], [0.250,-1.000], [0.300,-1.000], [0.350,-1.000], [0.400,-1.000],  ],\n  '&' : [ [0.050,-1.000], [0.102,-0.990], [0.150,-0.985], [0.195,-0.985], [0.271,-0.970], [0.330,-0.955], [0.380,-0.880], [0.430,-0.750], [0.470,-0.670], [0.500,-0.592], [0.550,-0.450], [0.610,-0.300], [0.550,-0.450], [0.500,-0.592], [0.470,-0.670], [0.430,-0.750], [0.380,-0.880], [0.330,-0.955], [0.271,-0.970], [0.195,-0.985], [0.150,-0.985], [0.102,-0.990], [0.075,-0.920], [0.060,-0.870], [0.050,-0.780], [0.045,-0.660], [0.050,-0.460], [0.080,-0.300], [0.140,-0.150], [0.190,-0.070], [0.220,-0.020], [0.290,0.030], [0.345,0.106], [0.370,0.200], [0.395,0.319], [0.415,0.430], [0.421,0.537], [0.422,0.647], [0.412,0.737], [0.392,0.807], [0.365,0.840], [0.315,0.850], [0.275,0.850], [0.235,0.840], [0.194,0.820], [0.173,0.788], [0.159,0.727], [0.152,0.637], [0.148,0.570], [0.149,0.470], [0.154,0.400], [0.170,0.285], [0.195,0.130], [0.240,0.000], [0.280,-0.200], [0.320,-0.400], [0.350,-0.600], [0.380,-0.800], [0.410,-1.000], [0.450,-1.050], [0.500,-1.050], [0.545,-1.020], [0.600,-1.000], [0.659,-1.000],  ],\n  '$' : [ [0.060,-1.000], [0.130,-1.000], [0.180,-1.000], [0.230,-1.000], [0.280,-1.000], [0.280,-1.000], [0.280,-1.400], [0.280,-1.000], [0.280,-0.700], [0.280,-0.400], [0.280,-0.100], [0.280,0.200], [0.280,0.500], [0.280,0.900], [0.300,0.900], [0.300,0.500], [0.300,0.200], [0.300,-0.100], [0.300,-0.400], [0.300,-0.700], [0.300,-1.000], [0.300,-1.400], [0.300,-1.000], [0.280,-1.000], [0.280,-1.100], [0.350,-1.145], [0.395,-1.110], [0.430,-1.050], [0.460,-0.950], [0.475,-0.850], [0.470,-0.700], [0.445,-0.550], [0.390,-0.400], [0.280,-0.250], [0.170,-0.100], [0.115,0.050], [0.090,0.200], [0.085,0.350], [0.100,0.450], [0.130,0.550], [0.165,0.610], [0.210,0.645], [0.280,0.650], [0.350,0.645], [0.395,0.610], [0.430,0.550], [0.460,0.450], [0.485,0.350], [0.460,0.450], [0.430,0.550], [0.395,0.610], [0.350,0.645], [0.280,0.650], [0.210,0.645], [0.165,0.610], [0.130,0.550], [0.100,0.450], [0.085,0.350], [0.090,0.200], [0.115,0.050], [0.170,-0.100], [0.280,-0.250], [0.390,-0.400], [0.445,-0.550], [0.470,-0.700], [0.475,-0.850], [0.460,-0.950], [0.430,-1.050], [0.395,-1.110], [0.350,-1.145], [0.280,-1.150], [0.210,-1.145], [0.165,-1.110], [0.130,-1.050], [0.100,-0.950], [0.075,-0.850], [0.050,-0.740], [0.075,-0.850], [0.100,-0.950], [0.130,-1.050], [0.165,-1.110], [0.210,-1.145], [0.280,-1.150], [0.280,-1.000], [0.330,-1.000], [0.380,-1.000], [0.430,-1.000], [0.480,-1.000], [0.530,-1.000],  ],\n  '!' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.150,-0.700], [0.150,-0.400], [0.150,-0.100], [0.150,0.200], [0.150,0.500], [0.150,0.850], [0.150,0.500], [0.150,0.200], [0.150,-0.100], [0.150,-0.400], [0.150,-0.700], [0.150,-1.000], [0.260,-1.000], [0.230,-0.850], [0.150,-0.750], [0.070,-0.850], [0.040,-1.000], [0.070,-1.150], [0.150,-1.250], [0.230,-1.150], [0.260,-1.000], [0.150,-1.000], [0.250,-1.000], [0.300,-1.000],  ],\n};\n","import { Vertex } from '../../common/Geometry'\nimport { raysol_cursive } from './raysol_cursive'\nimport { raysol_sanserif } from './raysol_sanserif'\n\nconst fontSpacing = 1.5;\n\n// Format for vertices: [x,y,b] where in a 0:7(8) by -1:7 grid defining x,y and b defines the line or curve.\n// Bulge directions could be represented by a 0:4 list starting at none, then NE and going clockwise.\n// 4  1\n// 3  2\nlet billsey = {\n  ' ': [ [8,-1,0] ],\n  'A': [ [0,0,0], [3.5,7,0], [7,0,0], [5,3.5,0], [2,3.5,0], [0,0,0], [0,-1,0], [8,-1,0] ],\n  'B': [ [0,0,0], [0,7,0], [3.5,7,0], [7,5.25,1], [3.5,3.5,2], [0,3.5,0], [3.5,3.5,0], [7,1.75,1], [3.5,0,2], [0,0,0], [0,-1,0], [8,-1,0] ],\n  'C': [ [3.5,-1,0], [3.5,0,0], [0,3.5,3], [3.5,7,4], [7,5.25,1], [3.5,7,1], [0,3.5,4], [3.5,0,3], [7,1.75,2], [3.5,0,2], [3.5,-1,0], [8,-1,0] ],\n  'D': [ [0,0,0], [0,7,0], [3.5,7,0], [7,3.5,1], [3.5,0,2], [0,0,0], [0,-1,0], [8,-1,0] ],\n  'E': [ [0,0,0], [0,7,0], [7,7,0], [0,7,0], [0,3.5,0], [3.5,3.5,0], [0,3.5,0], [0,0,0], [7,0,0], [0,0,0], [0,-1,0], [8,-1,0] ],\n  'F': [ [0,0,0], [0,7,0], [7,7,0], [0,7,0], [0,3.5,0], [3.5,3.5,0], [0,3.5,0], [0,0,0], [0,-1,0], [8,-1,0] ],\n  'G': [ [3.5,-1,0], [3.5,0,0], [0,3.5,3], [3.5,7,4], [7,5.25,1], [3.5,7,1], [0,3.5,4], [3.5,0,3], [7,1.75,2], [5.25,1.75,0], [7,1.75,0], [3.5,0,2], [3.5,-1,0], [8,-1,0] ],\n  'H': [ [0,0,0], [0,7,0], [0,3.5,0], [7,3.5,0], [7,7,0], [7,0,0], [7,3.5,0], [0,3.5,0], [0,0,0], [0,-1,0], [8,-1,0] ],\n  'I': [ [3.5,-1,0], [3.5,7,0], [0,7,0], [7,7,0], [3.5,7,0], [3.5,0,0], [0,0,0], [7,0,0], [3.5,0,0], [3.5,-1,0], [8,-1,0] ],\n  'J': [ [3.5,-1,0], [3.5,0,0], [0,1.75,3], [3.5,0,3], [7,1.75,2], [7,7,0], [7,1.75,0], [3.5,0,2], [3.5,-1,0], [8,-1,0] ],\n  'K': [ [0,0,0], [0,7,0], [0,1.75,0], [3.5,3.5,0], [7,7,0], [3.5,3.5,0], [7,0,0], [3.5,3.5,0], [0,1.75,0], [0,0,0], [0,-1,0], [8,-1,0] ],\n  'L': [ [0,0,0], [0,7,0], [0,0,0], [7,0,0], [0,0,0], [0,-1,0], [8,-1,0] ],\n  'M': [ [0,0,0], [0,7,0], [3.5,0,0], [7,7,0], [7,0,0], [7,7,0], [3.5,0,0], [0,7,0], [0,0,0], [0,-1,0], [8,-1,0] ],\n  'N': [ [0,0,0], [0,7,0], [7,0,0], [7,7,0], [7,0,0], [0,7,0], [0,0,0], [0,-1,0], [8,-1,0] ],\n  'O': [ [3.5,-1,0], [3.5, 0, 0], [0, 3.5, 3], [3.5, 7, 4], [7.0, 3.5, 1], [3.5, 0, 2], [3.5, -1, 0], [8, -1, 0] ],\n  'P': [ [0,0,0], [0,7,0], [3.5,7,0], [7,5.25,1], [3.5,3.5,2], [0,3.5,0], [0,0,0], [0,-1,0], [8,-1,0] ],\n  'Q': [ [3.5,-1,0], [3.5, 0, 0], [0, 3.5, 3], [3.5, 7, 4], [7.0, 3.5, 1], [3.5, 0, 2], [4.325,0.5,4], [6.075,0,0], [7,0.5,2], [6.075,0,2], [4.325,0.5,0], [3.5,0,4], [3.5, -1, 0], [8, -1, 0] ],\n  'R': [ [0,0,0], [0,7,0], [3.5,7,0], [7,5.25,1], [3.5,3.5,2], [7,0,0], [3.5,3.5,0], [0,3.5,0], [0,0,0], [0,-1,0], [8,-1,0] ],\n  'S': [ [3.5,-1,0], [3.5,0,0], [0,1.75,3], [3.5,0,3], [7,1.75,2], [3.5,3.5,1], [0,5.25,3], [3.5,7,4], [7,5.25,1], [3.5,7,1], [0,5.25,4], [3.5,3.5,3], [7,1.75,1], [3.5,0,2], [3.5,-1,0], [8,-1,0] ],\n  'T': [ [3.5,-1,0], [3.5,7,0], [0,7,0], [7,7,0], [3.5,7,0], [3.5,0,0], [3.5,-1,0], [8,-1,0] ],\n  'U': [ [3.5,-1,0], [3.5,0,0], [0,3.5,3], [0,7,0], [0,3.5,0], [3.5,0,3], [7,3.5,2], [7,7,0], [7,3.5,0], [3.5,0,2], [3.5,-1,0], [8,-1,0] ],\n  'V': [ [3.5,-1,0], [3.5,0,0], [0,7,0], [3.5,0,0], [7,7,0], [3.5,0,0], [3.5,-1,0], [8,-1,0] ],\n  'W': [ [1.75,-1,0], [1.75,0,0], [0,7,0], [1.75,0,0], [3.5,7,0], [5.25,0,0], [7,7,0], [5.25,0,0], [3.5,7,0], [1.75,0,0], [1.75,-1,0], [8,-1,0] ],\n  'X': [ [0,0,0], [7,7,0], [3.5,3.5,0], [0,7,0], [7,0,0], [3.5,3.5,0], [0,0,0], [0,-1,0], [8,-1,0] ],\n  'Y': [ [3.5,-1,0], [3.5,3.5,0], [0,7,0], [3.5,3.5,0], [7,7,0], [3.5,3.5,0], [3.5,-1,0], [8,-1,0] ],\n  'Z': [ [0,0,0], [7,0,0], [0,0,0], [7,7,0], [0,7,0], [7,7,0], [0,0,0], [0,-1,0], [8,-1,0] ],\n  '0': [ [3.5,-1,0], [3.5,0,0], [6,3.5,2], [3.5,7,1], [1,3.5,4], [3.5,0,3], [3.5,-1,0], [8,-1,0] ],\n  '1': [ [0,-1,0], [0,0,0], [0,0,0], [7,0,0], [3.5,0,0], [3.5,7,0], [1.5,6,2], [3.5,7,2], [3.5,0,0], [0,0,0], [0,-1,0], [8,-1,0] ],\n  '2': [ [1,-1,0], [1,0,0], [6,5.25,0], [3.5,7,1], [1,5.25,4], [3.5,7,4], [6,5.25,1], [1,0,0], [6,0,0], [1,0,0], [1,-1,0], [8,-1,0] ],\n  '3': [ [3.5,-1,0], [3.5,0,0], [1,1.75,3], [3.5,0,3], [6,1.75,2], [3.5,3.5,1], [6,5.25,2], [3.5,7,1], [1,5.25,4], [3.5,7,4], [6,5.25,1], [3.5,3.5,2], [6,1.75,1], [3.5,0,2], [3.5,-1,0], [8,-1,0] ],\n  '4': [ [3.5,-1,0], [3.5,0,0], [3.5,7,0], [1,3.5,0], [6,3.5,0], [3.5,3.5,0], [3.5,-1,0], [8,-1,0] ],\n  '5': [ [3.5,-1,0], [3.5,0,0], [1,1.75,3], [3.5,0,3], [6,1.75,2], [3.5,3.5,1],[1,3.5,0], [1,7,0], [6,7,0], [1,7,0], [1,3.5,0], [3.5,3.5,0], [6,1.75,1], [3.5,0,2], [3.5,-1,0], [8,-1,0] ],\n  '6': [ [3.5,-1,0], [3.5,0,0], [1,1.75,3], [5.25,7,4], [1,1.75,4], [3.5,0,3],[6,1.75,2], [3.5,3.5,1], [1,1.75,4], [3.5,0,3], [3.5,-1,0], [8,-1,0] ],\n  '7': [ [3.5,-1,0], [3.5,0,0], [6,7,0], [1,7,0], [6,7,0], [3.5,0,0], [3.5,-1,0], [8,-1,0] ],\n  '8': [ [3.5,-1,0], [3.5,0,0], [1,1.75,3], [6,5.25,0], [3.5,7,1], [1,5.25,4], [6,1.75,0], [3.5,0,2], [3.5,-1,0], [8,-1,0] ],\n  '9': [ [3.5,-1,0], [3.5,0,0], [6,5.25,2], [3.5,7,1], [1,5.25,4], [3.5,3.5,3], [6,5.25,2], [3.5,0,2], [3.5,-1,0], [8,-1,0] ],\n  '$': [ [3.5,-1,0], [3.5,0.5,0], [0,2.00,3], [3.5,0.5,3], [7,2.00,2], [3.5,3.5,1], [0,5.00,3], [3.5,6.5,4], [7,5.00,1], [3.5,6.5,1], [3.5, 7, 0], [3.5, 0, 0], [3.5,-1,0], [8,-1,0] ],\n  '.': [ [3.5,-1,0], [3.5,0.5,0], [3,1,3], [3.5,1.5,4], [4,1,1], [3.5,0.5,2], [3.5,-1,0], [8,-1,0] ],\n};\n\n// This is a clever way to create a range from 0..32, and then compute an x,y for each of those\n// points on the unit circle from zero to pi/2.\nconst curve = [...Array(32).keys()].map((index) => {\n  let angle = (index+1) * Math.PI/2.0/32.0;\n  return Vertex(Math.cos(angle), Math.sin(angle));\n});\n\nconst billseyConverter = (vertices) => {\n  let newVertices = [];\n  let prevPoint = Vertex(0,0);\n  vertices.forEach( (vertex) => {\n    switch (vertex[2]) {\n    case 0:\n    default:\n      newVertices.push(Vertex(vertex[0] / 8.0, vertex[1] / 4.0));\n      break;\n    case 1: // NE\n      if (vertex[1] < prevPoint[1]) { // clockwise\n        let width = Math.abs(vertex[0] - prevPoint[0]) / 8.0;\n        let height = Math.abs(vertex[1] - prevPoint[1]) / 4.0;\n        newVertices = newVertices.concat(curve.map( cv => Vertex(cv.x * width + prevPoint[0] / 8.0, cv.y * height + vertex[1] / 4.0)).reverse());\n      } else { // ccwise\n        let width = Math.abs(vertex[0] - prevPoint[0]) / 8.0;\n        let height = Math.abs(vertex[1] - prevPoint[1]) / 4.0;\n        newVertices = newVertices.concat(curve.map( cv => Vertex(cv.x * width + vertex[0] / 8.0, cv.y * height + prevPoint[1] / 4.0)));\n      }\n      newVertices.push(Vertex(vertex[0] / 8.0, vertex[1] / 4.0));\n      break;\n    case 2: // SE\n      if (vertex[1] < prevPoint[1]) { // clockwise\n        let width = Math.abs(vertex[0] - prevPoint[0]) / 8.0;\n        let height = -Math.abs(vertex[1] - prevPoint[1]) / 4.0;\n        newVertices = newVertices.concat(curve.map( cv => Vertex(cv.x * width + vertex[0] / 8.0, cv.y * height + prevPoint[1] / 4.0)));\n      } else { // ccwise\n        let width = Math.abs(vertex[0] - prevPoint[0]) / 8.0;\n        let height = -Math.abs(vertex[1] - prevPoint[1]) / 4.0;\n        newVertices = newVertices.concat(curve.map( cv => Vertex(cv.x * width + prevPoint[0] / 8.0, cv.y * height + vertex[1] / 4.0)).reverse());\n      }\n      newVertices.push(Vertex(vertex[0] / 8.0, vertex[1] / 4.0));\n      break;\n    case 3: // SW\n      if (vertex[1] > prevPoint[1]) { // clockwise\n        let width = -Math.abs(vertex[0] - prevPoint[0]) / 8.0;\n        let height = -Math.abs(vertex[1] - prevPoint[1]) / 4.0;\n        newVertices = newVertices.concat(curve.map( cv => Vertex(cv.x * width + prevPoint[0] / 8.0, cv.y * height + vertex[1] / 4.0)).reverse());\n      } else { // ccwise\n        let width = -Math.abs(vertex[0] - prevPoint[0]) / 8.0;\n        let height = -Math.abs(vertex[1] - prevPoint[1]) / 4.0;\n        newVertices = newVertices.concat(curve.map( cv => Vertex(cv.x * width + vertex[0] / 8.0, cv.y * height + prevPoint[1] / 4.0)));\n      }\n      newVertices.push(Vertex(vertex[0] / 8.0, vertex[1] / 4.0));\n      break;\n    case 4: // NW\n      if (vertex[1] > prevPoint[1]) { // clockwise\n        let width = -Math.abs(vertex[0] - prevPoint[0]) / 8.0;\n        let height = Math.abs(vertex[1] - prevPoint[1]) / 4.0;\n        newVertices = newVertices.concat(curve.map( cv => Vertex(cv.x * width + vertex[0] / 8.0, cv.y * height + prevPoint[1] / 4.0)));\n      } else { // ccwise\n        let width = -Math.abs(vertex[0] - prevPoint[0]) / 8.0;\n        let height = Math.abs(vertex[1] - prevPoint[1]) / 4.0;\n        newVertices = newVertices.concat(curve.map( cv => Vertex(cv.x * width + prevPoint[0] / 8.0, cv.y * height + vertex[1] / 4.0)).reverse());\n      }\n      newVertices.push(Vertex(vertex[0] / 8.0, vertex[1] / 4.0));\n      break;\n    }\n    prevPoint = vertex;\n  });\n\n  return {\n    max_x: fontSpacing,\n    vertices: newVertices,\n  };\n}\n\nconst raysolConverter = (vertices) => {\n  let newVertices = [];\n  vertices.forEach( (vertex) => {\n    newVertices.push(Vertex(vertex[0], vertex[1]));\n  });\n\n  return {\n    max_x: fontSpacing,\n    vertices: newVertices,\n  };\n}\n\nexport const MonospaceFont = (ch) => {\n  let upper = ch.toUpperCase();\n  if (billsey.hasOwnProperty(upper)) {\n    return billseyConverter(billsey[upper]);\n  } else {\n    return billseyConverter(billsey[' ']);\n  }\n}\n\nexport const CursiveFont = (ch) => {\n  if (raysol_cursive.hasOwnProperty(ch)) {\n    return raysolConverter(raysol_cursive[ch]);\n  } else {\n    return raysolConverter(raysol_cursive[' ']);\n  }\n}\n\nexport const SansSerifFont = (ch) => {\n  if (raysol_cursive.hasOwnProperty(ch)) {\n    return raysolConverter(raysol_sanserif[ch]);\n  } else {\n    return raysolConverter(raysol_sanserif[' ']);\n  }\n}\n","import { createSlice } from \"@reduxjs/toolkit\"\n\nconst inputTextSlice = createSlice({\n  name: 'inputText',\n  reducers: {\n    setShapeInputText(state, action) {\n      state.input_text = action.payload\n    },\n    setShapeInputFont(state, action) {\n      state.input_font = action.payload\n    }\n  }\n})\n\nexport const {\n  setShapeInputText,\n  setShapeInputFont\n} = inputTextSlice.actions\n\nexport default inputTextSlice.reducer\n","import { Vertex } from '../../common/Geometry'\n\nlet Vicious1Vertices = () => {\n  return [\n    Vertex(-0.745613252629, 0.342139688058),\n    Vertex(-0.722681883112, 0.350763810109),\n    Vertex(-0.700286039815, 0.359363989838),\n    Vertex(-0.683380317501, 0.365945196632),\n    Vertex(-0.666520036737, 0.372640251609),\n    Vertex(-0.649705686141, 0.379449643388),\n    Vertex(-0.632937754332, 0.386372394731),\n    Vertex(-0.61621672993, 0.393408994259),\n    Vertex(-0.59954407879, 0.400558464732),\n    Vertex(-0.582920289531, 0.40782080615),\n    Vertex(-0.566345850773, 0.415195529896),\n    Vertex(-0.549821739752, 0.42268214735),\n    Vertex(-0.533348933706, 0.430280658513),\n    Vertex(-0.516927921255, 0.437990574764),\n    Vertex(-0.500559191017, 0.445811896105),\n    Vertex(-0.484244208848, 0.453743645298),\n    Vertex(-0.467982974749, 0.461785822342),\n    Vertex(-0.451776954575, 0.46993793862),\n    Vertex(-0.435626636946, 0.478199505511),\n    Vertex(-0.417042020391, 0.487809171708),\n    Vertex(-0.398529230801, 0.497557117029),\n    Vertex(-0.380089734033, 0.507441875618),\n    Vertex(-0.361724018706, 0.517463936093),\n    Vertex(-0.343433550675, 0.527621343979),\n    Vertex(-0.325218818561, 0.537915076515),\n    Vertex(-0.307080799601, 0.548343667842),\n    Vertex(-0.289020959651, 0.558906629343),\n    Vertex(-0.271040275948, 0.569603472399),\n    Vertex(-0.253139237112, 0.580433708391),\n    Vertex(-0.235319797618, 0.591396360082),\n    Vertex(-0.217581468846, 0.60249142747),\n    Vertex(-0.199926693892, 0.61371793332),\n    Vertex(-0.182355472755, 0.625075389011),\n    Vertex(-0.164869271291, 0.636562817306),\n    Vertex(-0.147469066739, 0.648180218206),\n    Vertex(-0.130155347716, 0.659926125854),\n    Vertex(-0.112929580079, 0.671800540249),\n    Vertex(-0.0957922524482, 0.683802484155),\n    Vertex(-0.0787448306786, 0.695931957571),\n    Vertex(-0.0617878033894, 0.708187006022),\n    Vertex(-0.0449226364371, 0.720568118127),\n    Vertex(-0.0281493298216, 0.733074316648),\n    Vertex(-0.0114698380183, 0.745704624347),\n    Vertex(0.00511535035415, 0.758458552606),\n    Vertex(0.021605258058, 0.771335124187),\n    Vertex(0.0379993964745, 0.78433433909),\n    Vertex(0.0542962997473, 0.79745424284),\n    Vertex(0.0689143087782, 0.809362371934),\n    Vertex(0.0834609794625, 0.821357963795),\n    Vertex(0.0979358231812, 0.833440041186),\n    Vertex(0.112337862697, 0.845608604107),\n    Vertex(0.12666660939, 0.857863652558),\n    Vertex(0.140921574643, 0.870203720682),\n    Vertex(0.155102758455, 0.882629297099),\n    Vertex(0.169209183589, 0.895138915952),\n    Vertex(0.181539967956, 0.906207597924),\n    Vertex(0.193955771996, 0.91718051061),\n    Vertex(0.206455618473, 0.928057165389),\n    Vertex(0.219038530147, 0.938837562262),\n    Vertex(0.22146207946, 0.940840899396),\n    Vertex(0.223916411758, 0.942806124262),\n    Vertex(0.226401527041, 0.944732748242),\n    Vertex(0.228916936691, 0.946620282717),\n    Vertex(0.230887047745, 0.948104706671),\n    Vertex(0.232926054052, 0.949493361338),\n    Vertex(0.235029069424, 0.950783803623),\n    Vertex(0.237191207672, 0.951972124576),\n    Vertex(0.239407582608, 0.953055881104),\n    Vertex(0.241672819425, 0.954032630111),\n    Vertex(0.243982520555, 0.954900417123),\n    Vertex(0.246330822571, 0.955656799046),\n    Vertex(0.248847209458, 0.956426373676),\n    Vertex(0.251395845187, 0.957082100124),\n    Vertex(0.253971354951, 0.957622512531),\n    Vertex(0.256568363942, 0.958047610898),\n    Vertex(0.259181985973, 0.958355440751),\n    Vertex(0.261806846237, 0.958546002088),\n    Vertex(0.264437081308, 0.958618806291),\n    Vertex(0.267068293617, 0.958573364741),\n    Vertex(0.269695108356, 0.958410166058),\n    Vertex(0.2723116621, 0.95812921024),\n    Vertex(0.274913068661, 0.957731474526),\n    Vertex(0.277493953231, 0.957217447535),\n    Vertex(0.280048941005, 0.956588595122),\n    Vertex(0.282573634412, 0.955845405908),\n    Vertex(0.285062170027, 0.954989834366),\n    Vertex(0.287510150281, 0.954023834973),\n    Vertex(0.289695253613, 0.953107674698),\n    Vertex(0.291880845564, 0.952108937844),\n    Vertex(0.301388879047, 0.947138218659),\n    Vertex(0.310845118937, 0.942069775711),\n    Vertex(0.320249076614, 0.936904097619),\n    Vertex(0.329599286221, 0.931642650239),\n    Vertex(0.363485000908, 0.912453612212),\n    Vertex(0.397329182996, 0.8931922586),\n    Vertex(0.431132321104, 0.873858589404),\n    Vertex(0.464893926612, 0.854453093243),\n    Vertex(0.498613999522, 0.834975281497),\n    Vertex(0.532292539832, 0.815425642786),\n    Vertex(0.565929058925, 0.795804177109),\n    Vertex(0.599524045418, 0.776110884466),\n    Vertex(0.614195802519, 0.767461354237),\n    Vertex(0.628780096852, 0.758665238364),\n    Vertex(0.643274973942, 0.749722536847),\n    Vertex(0.657679456551, 0.740634715542),\n    Vertex(0.663100193664, 0.737124966608),\n    Vertex(0.668459853424, 0.733522380099),\n    Vertex(0.673756481358, 0.729827933253),\n    Vertex(0.678988611609, 0.72604211469),\n    Vertex(0.681833350338, 0.72394251965),\n    Vertex(0.684601864533, 0.721743246372),\n    Vertex(0.687290245243, 0.719446737951),\n    Vertex(0.689896049373, 0.717056903336),\n    Vertex(0.692415367973, 0.714576674241),\n    Vertex(0.694845269331, 0.71200800514),\n    Vertex(0.697182821733, 0.709355293604),\n    Vertex(0.699425093466, 0.706621471345),\n    Vertex(0.70031242523, 0.705263599663),\n    Vertex(0.70110301047, 0.703846605105),\n    Vertex(0.701792940234, 0.702378794191),\n    Vertex(0.702378794191, 0.700866030346),\n    Vertex(0.702858129247, 0.699316131471),\n    Vertex(0.703228502307, 0.697736426848),\n    Vertex(0.703487470278, 0.696135222997),\n    Vertex(0.703634544541, 0.694519360583),\n    Vertex(0.703808492838, 0.692484263226),\n    Vertex(0.704005894839, 0.688243540547),\n    Vertex(0.704113390977, 0.683999886156),\n    Vertex(0.704130981255, 0.679754765908),\n    Vertex(0.704059154289, 0.675510622897),\n    Vertex(0.703896932843, 0.671268434362),\n    Vertex(0.703645294154, 0.667031132015),\n    Vertex(0.703303749604, 0.662799693094),\n    Vertex(0.702872787811, 0.658576560692),\n    Vertex(0.701225165173, 0.648144060414),\n    Vertex(0.699422161753, 0.637737456933),\n    Vertex(0.697463288931, 0.627358704724),\n    Vertex(0.695350012565, 0.617010735501),\n    Vertex(0.693864122754, 0.60962184181),\n    Vertex(0.691242194203, 0.596705692105),\n    Vertex(0.688638833167, 0.58378514483),\n    Vertex(0.686055016884, 0.570860688605),\n    Vertex(0.683489768115, 0.557932812049),\n    Vertex(0.679173798139, 0.53578860744),\n    Vertex(0.675031287842, 0.513610688133),\n    Vertex(0.671063214461, 0.491401008603),\n    Vertex(0.667269089377, 0.469161523326),\n    Vertex(0.663649889828, 0.446892232301),\n    Vertex(0.660205127196, 0.424595578622),\n    Vertex(0.65693480148, 0.402273028147),\n    Vertex(0.653839889918, 0.379925069493),\n    Vertex(0.65092039251, 0.357553168517),\n    Vertex(0.648176309256, 0.335159768314),\n    Vertex(0.645608128774, 0.312745357501),\n    Vertex(0.643215362447, 0.290311401936),\n    Vertex(0.641387928086, 0.272862824121),\n    Vertex(0.640313455316, 0.262524627274),\n    Vertex(0.639318138793, 0.252178123907),\n    Vertex(0.638402467138, 0.241824779876),\n    Vertex(0.637566440349, 0.231464595183),\n    Vertex(0.636809569807, 0.221098058444),\n    Vertex(0.636132344132, 0.210726146899),\n    Vertex(0.635534763324, 0.200349349165),\n    Vertex(0.635016338763, 0.189968153863),\n    Vertex(0.634136336281, 0.166283334136),\n    Vertex(0.633371647838, 0.14259411684),\n    Vertex(0.632722273436, 0.118901479213),\n    Vertex(0.632187724454, 0.0952059098725),\n    Vertex(0.631768489513, 0.0715078974381),\n    Vertex(0.631464568611, 0.0478084191472),\n    Vertex(0.63127547313, 0.0241079636186),\n    Vertex(0.631201691689, 0.000406530852484),\n    Vertex(0.631270098323, -0.0222394852774),\n    Vertex(0.631441114908, -0.0448845241697),\n    Vertex(0.631715230062, -0.0675285858243),\n    Vertex(0.632092443786, -0.0901711816225),\n    Vertex(0.63257226746, -0.112811822945),\n    Vertex(0.633154701085, -0.135450021174),\n    Vertex(0.63384023328, -0.158085776309),\n    Vertex(0.634628864044, -0.180717622493),\n    Vertex(0.635306089719, -0.195449968327),\n    Vertex(0.636126969325, -0.210174984878),\n    Vertex(0.637091014243, -0.22489120629),\n    Vertex(0.638198713093, -0.239597655326),\n    Vertex(0.639449577254, -0.254292377511),\n    Vertex(0.640843606728, -0.268974395606),\n    Vertex(0.642380801514, -0.283642243756),\n    Vertex(0.644060672993, -0.298293967485),\n    Vertex(0.64612020129, -0.31581290641),\n    Vertex(0.6482320118, -0.333325493289),\n    Vertex(0.65039757038, -0.350831239505),\n    Vertex(0.652615411173, -0.368331122296),\n    Vertex(0.654741880247, -0.384873800832),\n    Vertex(0.656970959272, -0.401402798041),\n    Vertex(0.659303625486, -0.417918113923),\n    Vertex(0.661739390269, -0.434418282622),\n    Vertex(0.664278253622, -0.450902815519),\n    Vertex(0.666919726926, -0.467371223995),\n    Vertex(0.66966381018, -0.483822530812),\n    Vertex(0.672510992004, -0.500256735972),\n    Vertex(0.675460295159, -0.516672862235),\n    Vertex(0.678512696885, -0.533069932364),\n    Vertex(0.681666731323, -0.54944794636),\n    Vertex(0.684923375712, -0.565805926984),\n    Vertex(0.688253801542, -0.582478578124),\n    Vertex(0.691624294115, -0.599143411363),\n    Vertex(0.695033876193, -0.615799938082),\n    Vertex(0.698483036394, -0.632448158282),\n    Vertex(0.700362264349, -0.641257466863),\n    Vertex(0.702110053844, -0.650093649478),\n    Vertex(0.703725916259, -0.658955240272),\n    Vertex(0.705209362975, -0.667839796151),\n    Vertex(0.705560191283, -0.670609776202),\n    Vertex(0.705811829972, -0.673129583421),\n    Vertex(0.705988709982, -0.675296119238),\n    Vertex(0.706054184903, -0.677469495719),\n    Vertex(0.706007766116, -0.679642872199),\n    Vertex(0.70584945362, -0.681811362492),\n    Vertex(0.705579736035, -0.683968614552),\n    Vertex(0.705199590599, -0.686109253572),\n    Vertex(0.704709505929, -0.688227904745),\n    Vertex(0.704111436502, -0.690317727409),\n    Vertex(0.702891355326, -0.694066410943),\n    Vertex(0.701505632372, -0.697756460219),\n    Vertex(0.699955733497, -0.701380545956),\n    Vertex(0.698245567651, -0.704932316108),\n    Vertex(0.696378555166, -0.708403464156),\n    Vertex(0.694358116374, -0.711788126674),\n    Vertex(0.692188648844, -0.715079462999),\n    Vertex(0.689874061527, -0.718270143849),\n    Vertex(0.688711148751, -0.719521985248),\n    Vertex(0.687505237521, -0.720732294048),\n    Vertex(0.686256816453, -0.721899115774),\n    Vertex(0.684968817262, -0.723021473187),\n    Vertex(0.683641728566, -0.724097900432),\n    Vertex(0.68227750484, -0.725126443034),\n    Vertex(0.68087761194, -0.726106612373),\n    Vertex(0.679444492961, -0.727036942593),\n    Vertex(0.669607619016, -0.733287843069),\n    Vertex(0.659707713245, -0.739438576688),\n    Vertex(0.649746730121, -0.745489632069),\n    Vertex(0.639724669646, -0.751439054737),\n    Vertex(0.626066307964, -0.75960143201),\n    Vertex(0.588245257356, -0.781929357292),\n    Vertex(0.550379253818, -0.804180569421),\n    Vertex(0.512467808729, -0.826354091159),\n    Vertex(0.474510922092, -0.848449922505),\n    Vertex(0.436509082523, -0.87046806346),\n    Vertex(0.398462290023, -0.892408514024),\n    Vertex(0.360370544593, -0.914271274197),\n    Vertex(0.322234334851, -0.936056343978),\n    Vertex(0.311636192795, -0.942000391839),\n    Vertex(0.303639945919, -0.946411153865),\n    Vertex(0.301535464691, -0.947610713051),\n    Vertex(0.299393848434, -0.94874333146),\n    Vertex(0.29721754024, -0.949807054616),\n    Vertex(0.295008494586, -0.9508013939),\n    Vertex(0.292769154566, -0.951725372076),\n    Vertex(0.290501474654, -0.952577523286),\n    Vertex(0.288207897946, -0.95335784753),\n    Vertex(0.285890867534, -0.954064878953),\n    Vertex(0.282197886545, -0.955003515693),\n    Vertex(0.278465327432, -0.955768692754),\n    Vertex(0.274700519477, -0.956358455661),\n    Vertex(0.270912257819, -0.956772315796),\n    Vertex(0.267109337597, -0.957008318683),\n    Vertex(0.263299088092, -0.957066464322),\n    Vertex(0.259490304444, -0.956946752712),\n    Vertex(0.255691781792, -0.956649183855),\n    Vertex(0.251910849416, -0.956174246369),\n    Vertex(0.248156302456, -0.95552340611),\n    Vertex(0.244436447432, -0.954697640316),\n    Vertex(0.240758613626, -0.953699392081),\n    Vertex(0.240319833932, -0.953534238922),\n    Vertex(0.238502171947, -0.952568728147),\n    Vertex(0.236709918141, -0.951555821348),\n    Vertex(0.234945026988, -0.950496007142),\n    Vertex(0.233208964345, -0.949390262768),\n    Vertex(0.23150270745, -0.948239076844),\n    Vertex(0.22982723354, -0.94704293799),\n    Vertex(0.228184008471, -0.945803312061),\n    Vertex(0.226574009482, -0.944520687677),\n    Vertex(0.224074235635, -0.942570121375),\n    Vertex(0.212583875626, -0.933021043911),\n    Vertex(0.201218113415, -0.923323914947),\n    Vertex(0.189977926239, -0.913481666195),\n    Vertex(0.178866245811, -0.903494297655),\n    Vertex(0.161323853183, -0.887790577622),\n    Vertex(0.143655885521, -0.872228557044),\n    Vertex(0.125862831443, -0.856809213159),\n    Vertex(0.107946156805, -0.841533523206),\n    Vertex(0.0899073274635, -0.82640295304),\n    Vertex(0.0717468320377, -0.811418479899),\n    Vertex(0.0534666250026, -0.796580103784),\n    Vertex(0.0350671949772, -0.781890267787),\n    Vertex(0.0165500078179, -0.767348483291),\n    Vertex(-0.00208395923779, -0.752956704771),\n    Vertex(-0.0208327517145, -0.738715420845),\n    Vertex(-0.0396958809936, -0.724625608751),\n    Vertex(-0.0586718812184, -0.710688245726),\n    Vertex(-0.0777597751514, -0.69690382039),\n    Vertex(-0.0969580969362, -0.683274287218),\n    Vertex(-0.116265380716, -0.66979964621),\n    Vertex(-0.135680649254, -0.656480874603),\n    Vertex(-0.155202436693, -0.643318949635),\n    Vertex(-0.174829765796, -0.630314359925),\n    Vertex(-0.194561170706, -0.617469059948),\n    Vertex(-0.214395674185, -0.604782561085),\n    Vertex(-0.234331321759, -0.592256329193),\n    Vertex(-0.254367624808, -0.579891341509),\n    Vertex(-0.274502628858, -0.567688086652),\n    Vertex(-0.29394086248, -0.556123456584),\n    Vertex(-0.313469979201, -0.54471371868),\n    Vertex(-0.333088513165, -0.533458384321),\n    Vertex(-0.352795975753, -0.522359407981),\n    Vertex(-0.372590901108, -0.511416789662),\n    Vertex(-0.392471334756, -0.500631017982),\n    Vertex(-0.412437276696, -0.490003070179),\n    Vertex(-0.432486283835, -0.47953392349),\n    Vertex(-0.452617867553, -0.469224066534),\n    Vertex(-0.472830073375, -0.459073499311),\n    Vertex(-0.493122412682, -0.449083687678),\n    Vertex(-0.513493419618, -0.439255120252),\n    Vertex(-0.533941628327, -0.429588285654),\n    Vertex(-0.554465572951, -0.420083183884),\n    Vertex(-0.575064276254, -0.410741769415),\n    Vertex(-0.595736272379, -0.401563065011),\n    Vertex(-0.61648009547, -0.392549025148),\n    Vertex(-0.637294768288, -0.383699161205),\n    Vertex(-0.658179313597, -0.37501493904),\n    Vertex(-0.679131776921, -0.366496358653),\n    Vertex(-0.698898362385, -0.3585812225),\n    Vertex(-0.718729934152, -0.350830262268),\n    Vertex(-0.738624537745, -0.34324250072),\n    Vertex(-0.758581195928, -0.33581989233),\n    Vertex(-0.778598442844, -0.32856194848),\n    Vertex(-0.798674812635, -0.32146915779),\n    Vertex(-0.818809328066, -0.314542497496),\n    Vertex(-0.83900003466, -0.307782456217),\n    Vertex(-0.849647527216, -0.304229708827),\n    Vertex(-0.859482935305, -0.301024369413),\n    Vertex(-0.86930319621, -0.297772122593),\n    Vertex(-0.879107821313, -0.294472968367),\n    Vertex(-0.888896810615, -0.291126906735),\n    Vertex(-0.898669186876, -0.287733937697),\n    Vertex(-0.908425927336, -0.284294061253),\n    Vertex(-0.918165566137, -0.28080825464),\n    Vertex(-0.927888591898, -0.277275540622),\n    Vertex(-0.931015263683, -0.276110673371),\n    Vertex(-0.934077437785, -0.27478553915),\n    Vertex(-0.937066807683, -0.273304046909),\n    Vertex(-0.939975066859, -0.271669128361),\n    Vertex(-0.942794886029, -0.269885669693),\n    Vertex(-0.945518447293, -0.267958557094),\n    Vertex(-0.948138909988, -0.265892676752),\n    Vertex(-0.950648456212, -0.263693892093),\n    Vertex(-0.953040245302, -0.261368066543),\n    Vertex(-0.955308902451, -0.258921063527),\n    Vertex(-0.957447586996, -0.256360212328),\n    Vertex(-0.959450435511, -0.25369186499),\n    Vertex(-0.961260768213, -0.251131991028),\n    Vertex(-0.962993410524, -0.248518368997),\n    Vertex(-0.96464591935, -0.245853930609),\n    Vertex(-0.966217317453, -0.24314063034),\n    Vertex(-0.972878657732, -0.231316055063),\n    Vertex(-0.972926053757, -0.0130031238537),\n    Vertex(-0.972925565138, 0.00628803550555),\n    Vertex(-0.97291628138, 0.0249869888634),\n    Vertex(-0.972898202484, 0.0430570898088),\n    Vertex(-0.972858135742, 0.0776097691758),\n    Vertex(-0.972741844464, 0.112162448543),\n    Vertex(-0.972548351414, 0.146714639291),\n    Vertex(-0.972277656592, 0.181266341421),\n    Vertex(-0.972203875151, 0.189501034277),\n    Vertex(-0.972085629398, 0.197735727134),\n    Vertex(-0.971922919333, 0.205968954135),\n    Vertex(-0.971715256338, 0.214201692516),\n    Vertex(-0.971568670694, 0.217132916776),\n    Vertex(-0.971310679961, 0.220056811754),\n    Vertex(-0.970942749994, 0.222968491261),\n    Vertex(-0.970464880795, 0.225864534966),\n    Vertex(-0.969878049601, 0.228740056681),\n    Vertex(-0.96918274503, 0.231591636074),\n    Vertex(-0.968380432939, 0.234414875576),\n    Vertex(-0.967472090565, 0.237205866236),\n    Vertex(-0.966500716365, 0.23992551855),\n    Vertex(-0.965406210223, 0.242597774839),\n    Vertex(-0.964191015235, 0.245217260296),\n    Vertex(-0.962857085875, 0.247778600114),\n    Vertex(-0.961408331095, 0.250276908105),\n    Vertex(-0.959846705368, 0.252705832225),\n    Vertex(-0.958176117646, 0.255061463523),\n    Vertex(-0.956399499642, 0.257337938573),\n    Vertex(-0.954520760305, 0.259531348425),\n    Vertex(-0.952544297207, 0.261636318272),\n    Vertex(-0.950473530677, 0.263649427781),\n    Vertex(-0.948313346904, 0.265565790766),\n    Vertex(-0.946067654839, 0.267381009657),\n    Vertex(-0.94374134067, 0.269092641359),\n    Vertex(-0.941339779204, 0.270695799685),\n    Vertex(-0.93886736801, 0.27218804154),\n    Vertex(-0.936329481894, 0.273565946593),\n    Vertex(-0.933731007046, 0.274826094512),\n    Vertex(-0.93107829551, 0.27596701944),\n    Vertex(-0.928375744855, 0.276985301047),\n    Vertex(-0.913861323012, 0.282438287001),\n    Vertex(-0.899294130338, 0.287750550737),\n    Vertex(-0.884676121307, 0.292920137779),\n    Vertex(-0.870008761776, 0.297948025366),\n    Vertex(-0.854391527272, 0.303278856616),\n    Vertex(-0.838793348902, 0.308665390412),\n    Vertex(-0.823214226666, 0.314107138133),\n    Vertex(-0.807654649182, 0.319603611161),\n    Vertex(-0.792114127832, 0.325155298116),\n    Vertex(-0.776593639853, 0.330761710377),\n    Vertex(-0.761093185246, 0.336423336564),\n    Vertex(-0.745613252629, 0.342139688058),\n  ];\n}\n\nexport default Vicious1Vertices;\n","import { createSlice } from \"@reduxjs/toolkit\"\n\nconst v1EngineeringSlice = createSlice({\n  name: 'v1Engineering',\n  reducers: {\n  }\n})\n\nexport default v1EngineeringSlice.reducer\n","import { Polygon } from '../../shapes/polygon/Polygon.js'\nimport { Circle } from '../../shapes/circle/Circle.js'\nimport { Star } from '../../shapes/star/Star.js'\nimport { Heart } from '../../shapes/heart/Heart.js'\nimport { Reuleaux } from '../../shapes/reuleaux/Reuleaux.js'\nimport { Epicycloid } from '../../shapes/epicycloid/Epicycloid.js'\nimport { Hypocycloid } from '../../shapes/hypocycloid/Hypocycloid.js'\nimport { Rose } from '../../shapes/rose/Rose.js'\nimport { InputText } from '../../shapes/input_text/InputText.js'\nimport { V1Engineering } from '../../shapes/v1_engineering/V1Engineering.js'\n\nexport const registeredShapes = [Polygon, Star, Circle, Heart, Reuleaux, Epicycloid,\n  Hypocycloid, Rose, InputText, V1Engineering];\n\nexport const findShape = (name) => {\n  return registeredShapes.find(shape => shape.getInfo().name === name)\n}\n","import { Vertex } from '../../common/Geometry.js';\nimport polygonReducer, { setShapePolygonSides } from './polygonSlice.js'\n\nexport class Polygon {\n  static initialState() {\n    return {\n      polygon_sides: 4\n    }\n  }\n\n  static reducer(state, action) {\n    return polygonReducer(state, action)\n  }\n\n  static mapState(state, ownProps) {\n    return {\n      polygon_sides: state.shapes.polygon_sides,\n    }\n  }\n\n  static mapDispatch(dispatch, ownProps) {\n    return {\n      onPolygonSizeChange: (event) => {\n        dispatch(setShapePolygonSides(event.target.value));\n      },\n    }\n  }\n\n  static getInfo() {\n    return {\n      name: \"Polygon\",\n      vertices: (state) => {\n        let points = [];\n        for (let i=0; i<state.shapes.polygon_sides; i++) {\n          let angle = Math.PI * 2.0 / state.shapes.polygon_sides * (0.5 + i);\n          points.push(Vertex(Math.cos(angle), Math.sin(angle)))\n        }\n        return points;\n      },\n      options: [\n        {\n          title: \"Number of sides\",\n          key: \"polygon_sides\",\n          value: (props) => { return props.polygon_sides },\n          onChange: (props) => { return props.onPolygonSizeChange },\n        },\n      ],\n    }\n  }\n}\n","import { Vertex } from '../../common/Geometry'\nimport starReducer, {\n  setShapeStarRatio,\n  setShapeStarPoints\n} from './starSlice.js'\n\nexport class Star {\n  static initialState() {\n    return {\n      star_points: 5,\n      star_ratio: 0.5\n    }\n  }\n\n  static reducer(state, action) {\n    return starReducer(state, action)\n  }\n\n  static mapState(state, ownProps) {\n    return {\n      star_points:   state.shapes.star_points,\n      star_ratio:    state.shapes.star_ratio,\n    }\n  }\n\n  static mapDispatch(dispatch, ownProps) {\n    return {\n      onStarPointsChange: (event) => {\n        dispatch(setShapeStarPoints(event.target.value));\n      },\n      onStarRatioChange: (event) => {\n        dispatch(setShapeStarRatio(event.target.value));\n      },\n    }\n  }\n\n  static getInfo() {\n    return {\n      name: \"Star\",\n      vertices: (state) => {\n        let star_points = [];\n        for (let i=0; i<state.shapes.star_points * 2; i++) {\n          let angle = Math.PI * 2.0 / (2.0 * state.shapes.star_points) * i;\n          let star_scale = 1.0;\n          if (i % 2 === 0) {\n            star_scale *= state.shapes.star_ratio;\n          }\n          star_points.push(Vertex(star_scale * Math.cos(angle), star_scale * Math.sin(angle)))\n        }\n        return star_points\n      },\n      options: [\n        {\n          title: \"Number of points\",\n          key: \"starPoints\",\n          value: (props) => { return props.star_points },\n          onChange: (props) => { return props.onStarPointsChange },\n        },\n        {\n          title: \"Size of points\",\n          key: \"starRatio\",\n          value: (props) => { return props.star_ratio },\n          onChange: (props) => { return props.onStarRatioChange },\n          step: 0.05,\n        },\n      ],\n    };\n  }\n}\n","import { Vertex } from '../../common/Geometry'\nimport circleReducer, { setShapeCircleLobes } from './circleSlice.js'\n\nexport class Circle {\n  static initialState() {\n    return {\n      circle_lobes: 1\n    }\n  }\n\n  static reducer(state, action) {\n    return circleReducer(state, action)\n  }\n\n  static mapState(state, ownProps) {\n    return {\n      circle_lobes: state.shapes.circle_lobes,\n    }\n  }\n\n  static mapDispatch(dispatch, ownProps) {\n    return {\n      onCircleLobesChange: (event) => {\n        dispatch(setShapeCircleLobes(event.target.value));\n      },\n    }\n  }\n\n  static getInfo() {\n    return {\n      name: \"Circle\",\n      vertices: (state) => {\n        let circle_points = []\n        for (let i=0; i<128; i++) {\n          let angle = Math.PI * 2.0 / 128.0 * i\n          circle_points.push(Vertex(Math.cos(angle), Math.sin(state.shapes.circle_lobes * angle)/state.shapes.circle_lobes))\n        }\n        return circle_points\n      },\n      options: [\n        {\n          title: \"Number of lobes\",\n          key: \"circleLobes\",\n          value: (props) => { return props.circle_lobes },\n          onChange: (props) => { return props.onCircleLobesChange },\n        },\n      ],\n    }\n  }\n}\n","import { Vertex } from '../../common/Geometry'\nimport heartReducer from './heartSlice.js'\n\nexport class Heart {\n  static initialState() {\n    return {}\n  }\n\n  static reducer(state, action) {\n    return heartReducer(state, action)\n  }\n\n  static mapState(state, ownProps) {\n    return {\n\n    }\n  }\n\n  static mapDispatch(dispatch, ownProps) {\n    return {\n\n    }\n  }\n\n  static getInfo() {\n    return {\n      name: \"Heart\",\n      vertices: (state) => {\n        let heart_points = []\n        for (let i=0; i<128; i++) {\n          let angle = Math.PI * 2.0 / 128.0 * i\n          // heart equation from: http://mathworld.wolfram.com/HeartCurve.html\n          heart_points.push(Vertex(1.0 * Math.pow(Math.sin(angle), 3),\n                                   13.0/16.0 * Math.cos(angle) +\n                                   -5.0/16.0 * Math.cos(2.0 * angle) +\n                                   -2.0/16.0 * Math.cos(3.0 * angle) +\n                                   -1.0/16.0 * Math.cos(4.0 * angle)))\n        }\n        return heart_points\n      },\n      options: [\n      ],\n    }\n  }\n}\n","import { Vertex } from '../../common/Geometry'\nimport reuleauxReducer, { setShapeReuleauxSides } from './reuleauxSlice.js'\n\nexport class Reuleaux {\n  static initialState() {\n    return {\n      reuleaux_sides: 3\n    }\n  }\n\n  static reducer(state, action) {\n    return reuleauxReducer(state, action)\n  }\n\n  static mapState(state, ownProps) {\n    return {\n      reuleaux_sides: state.shapes.reuleaux_sides,\n    }\n  }\n\n  static mapDispatch(dispatch, ownProps) {\n    return {\n      onReuleauxSidesChange: (event) => {\n        dispatch(setShapeReuleauxSides(event.target.value));\n      },\n    }\n  }\n\n  static getInfo() {\n    return {\n      name: \"Reuleaux\",\n      vertices: (state) => {\n        let points = []\n        // Construct an equalateral triangle\n        let corners = []\n        // Initial location at PI/2\n        let angle = Math.PI/2.0;\n        // How much of the circle in one side?\n        let coverageAngle = Math.PI/state.shapes.reuleaux_sides;\n        let halfCoverageAngle = 0.5 * coverageAngle;\n        for (let c=0; c<state.shapes.reuleaux_sides; c++) {\n          let startAngle = angle + Math.PI - halfCoverageAngle;\n          corners.push( [Vertex(Math.cos(angle), Math.sin(angle)), startAngle] );\n          angle += 2.0 * Math.PI / state.shapes.reuleaux_sides;\n        }\n        let length = 0.5 / Math.cos(Math.PI/2.0/state.shapes.reuleaux_sides);\n        for (let corn=0; corn < corners.length; corn++) {\n          for (let i=0; i<128; i++) {\n            let angle = coverageAngle  * (i / 128.0) + corners[corn][1];\n            points.push(Vertex(length * corners[corn][0].x + Math.cos(angle),\n                               length * corners[corn][0].y + Math.sin(angle)));\n          }\n        }\n        return points;\n      },\n      options: [\n        {\n          title: \"Number of sides\",\n          key: \"reuleauxSides\",\n          value: (props) => { return props.reuleaux_sides },\n          onChange: (props) => { return props.onReuleauxSidesChange },\n          step: 1,\n        },\n      ],\n    }\n  }\n}\n","import { Vertex } from '../../common/Geometry'\nimport epicycloidReducer, {\n  setShapeEpicycloidA,\n  setShapeEpicycloidB\n} from './epicycloidSlice.js'\n\nexport class Epicycloid {\n  static initialState() {\n    return {\n      epicycloid_a: 1.0,\n      epicycloid_b: .25\n    }\n  }\n\n  static reducer(state, action) {\n    return epicycloidReducer(state, action)\n  }\n\n  static mapState(state, ownProps) {\n    return {\n      epicycloid_a: state.shapes.epicycloid_a,\n      epicycloid_b: state.shapes.epicycloid_b,\n    }\n  }\n\n  static mapDispatch(dispatch, ownProps) {\n    return {\n      onepicycloidAChange: (event) => {\n        dispatch(setShapeEpicycloidA(event.target.value));\n      },\n      onepicycloidBChange: (event) => {\n        dispatch(setShapeEpicycloidB(event.target.value));\n      },\n    }\n  }\n\n  static getInfo() {\n    return {\n      name: \"Clover\",\n      link: \"http://mathworld.wolfram.com/Epicycloid.html\",\n      vertices: (state) => {\n        let points = []\n        let a = parseFloat(state.shapes.epicycloid_a)\n        let b = parseFloat(state.shapes.epicycloid_b)\n\n        for (let i=0; i<128; i++) {\n          let angle = Math.PI * 2.0 / 128.0 * i\n          points.push(Vertex(0.5 * (a + b) * Math.cos(angle) - 0.5 * b * Math.cos(((a + b) / b) * angle),\n                             0.5 * (a + b) * Math.sin(angle) - 0.5 * b * Math.sin(((a + b) / b) * angle)))\n        }\n        return points\n      },\n      options: [\n        {\n          title: \"Large circle radius\",\n          key: \"epicycloidA\",\n          value: (props) => { return props.epicycloid_a },\n          onChange: (props) => { return props.onepicycloidAChange },\n          step: 0.1,\n        },\n        {\n          title: \"Small circle radius\",\n          key: \"epicycloidB\",\n          value: (props) => { return props.epicycloid_b },\n          onChange: (props) => { return props.onepicycloidBChange },\n          step: 0.1,\n        },\n      ],\n    };\n  }\n}\n","import { Vertex } from '../../common/Geometry'\nimport hypocycloidReducer, {\n  setShapeHypocycloidA,\n  setShapeHypocycloidB\n} from './hypocycloidSlice.js'\n\nexport class Hypocycloid {\n  static initialState() {\n    return {\n      hypocycloid_a: 1.5,\n      hypocycloid_b: .25\n    }\n  }\n\n  static reducer(state, action) {\n    return hypocycloidReducer(state, action)\n  }\n\n  static mapState(state, ownProps) {\n    return {\n      hypocycloid_a: state.shapes.hypocycloid_a,\n      hypocycloid_b: state.shapes.hypocycloid_b,\n    }\n  }\n\n  static mapDispatch(dispatch, ownProps) {\n    return {\n      onHypocycloidAChange: (event) => {\n        dispatch(setShapeHypocycloidA(event.target.value));\n      },\n      onHypocycloidBChange: (event) => {\n        dispatch(setShapeHypocycloidB(event.target.value));\n      },\n    }\n  }\n\n  static getInfo() {\n    return {\n      name: \"Web\",\n      link: \"http://mathworld.wolfram.com/Hypocycloid.html\",\n      vertices: (state) => {\n        let points = []\n        let a = parseFloat(state.shapes.hypocycloid_a)\n        let b = parseFloat(state.shapes.hypocycloid_b)\n\n        for (let i=0; i<128; i++) {\n          let angle = Math.PI * 2.0 / 128.0 * i\n          points.push(Vertex(1.0 * (a - b) * Math.cos(angle) + b * Math.cos(((a - b) / b) * angle),\n                                1.0 * (a - b) * Math.sin(angle) - b * Math.sin(((a - b) / b) * angle)))\n        }\n        return points\n      },\n      options: [\n        {\n          title: \"Large circle radius\",\n          key: \"hypocycloidA\",\n          value: (props) => { return props.hypocycloid_a },\n          onChange: (props) => { return props.onHypocycloidAChange },\n          step: 0.1,\n        },\n        {\n          title: \"Small circle radius\",\n          key: \"hypocycloidB\",\n          value: (props) => { return props.hypocycloid_b },\n          onChange: (props) => { return props.onHypocycloidBChange },\n          step: 0.1,\n        },\n      ],\n    };\n  }\n}\n","import { Vertex } from '../../common/Geometry'\nimport roseReducer, {\n  setShapeRoseN,\n  setShapeRoseD\n} from './roseSlice.js'\n\nexport class Rose {\n  static initialState() {\n    return {\n      rose_n: 3,\n      rose_d: 2\n    }\n  }\n\n  static reducer(state, action) {\n    return roseReducer(state, action)\n  }\n\n  static mapState(state, ownProps) {\n    return {\n      rose_n: state.shapes.rose_n,\n      rose_d: state.shapes.rose_d,\n    }\n  }\n\n  static mapDispatch(dispatch, ownProps) {\n    return {\n      onRoseNChange: (event) => {\n        dispatch(setShapeRoseN(event.target.value));\n      },\n      onRoseDChange: (event) => {\n        dispatch(setShapeRoseD(event.target.value));\n      },\n    }\n  }\n\n  static getInfo() {\n    return {\n      name: \"Rose\",\n      link: \"http://mathworld.wolfram.com/Rose.html\",\n      vertices: (state) => {\n        let points = []\n        let a = 2\n        let n = parseInt(state.shapes.rose_n)\n        let d = parseInt(state.shapes.rose_d)\n        let p = (n * d % 2 === 0) ? 2 : 1\n        let thetaClose = d * p * 32 * n;\n        let resolution = 64 * n;\n\n        for (let i=0; i<thetaClose+1; i++) {\n          let theta = Math.PI * 2.0 / (resolution) * i\n          let r = 0.5 * a * Math.sin((n / d) * theta)\n          points.push(Vertex(r * Math.cos(theta), r * Math.sin(theta)))\n        }\n        return points\n      },\n      options: [\n        {\n          title: \"Numerator\",\n          key: \"roseN\",\n          value: (props) => { return props.rose_n },\n          onChange: (props) => { return props.onRoseNChange },\n          step: 1,\n        },\n        {\n          title: \"Denominator\",\n          key: \"roseD\",\n          value: (props) => { return props.rose_d },\n          onChange: (props) => { return props.onRoseDChange },\n          step: 1,\n        },\n      ],\n    };\n  }\n}\n","import { CursiveFont, SansSerifFont, MonospaceFont } from './Fonts'\nimport { Vertex } from '../../common/Geometry'\nimport inputTextReducer, {\n  setShapeInputText,\n  setShapeInputFont\n} from './inputTextSlice.js'\n\nexport class InputText {\n  static initialState() {\n    return {\n      input_text: \"Sandify\",\n      input_font: \"Cursive\",\n    }\n  }\n\n  static reducer(state, action) {\n    return inputTextReducer(state, action)\n  }\n\n  static mapState(state, ownProps) {\n    return {\n      input_text: state.shapes.input_text,\n      input_font: state.shapes.input_font,\n    }\n  }\n\n  static mapDispatch(dispatch, ownProps) {\n    return {\n      onInputTextChange: (event) => {\n        dispatch(setShapeInputText(event.target.value));\n      },\n      onInputFontChange: (event) => {\n        dispatch(setShapeInputFont(event));\n      },\n    }\n  }\n\n  static getInfo() {\n    return {\n      name: \"Text\",\n      vertices: (state) => {\n        let points = [];\n        let prevLetter = \"\";\n        let x = 0.0;\n        for (let chi = 0; chi < state.shapes.input_text.length; chi++) {\n          var letter = state.shapes.input_text[chi];\n          if (prevLetter === 'b' || prevLetter === 'v' || prevLetter === \"o\" || prevLetter === 'w') {\n            prevLetter = letter\n            if (letter.search('/[a-z]/') === -1 && state.shapes.input_font === 'Cursive')\n            {\n              letter = letter + \"*\";\n            }\n          }\n          else {\n            prevLetter = letter\n          }\n\n          var shape;\n          if (state.shapes.input_font === 'Cursive') {\n            shape = CursiveFont(letter);\n          } else if (state.shapes.input_font === 'Sans Serif') {\n            shape = SansSerifFont(letter);\n          } else if (state.shapes.input_font === 'Monospace') {\n            shape = MonospaceFont(letter);\n          } else {\n            // Internal error, but I'm going to just recover\n            shape = CursiveFont(letter);\n          }\n\n\n          for (let vi = 0; vi < shape.vertices.length; vi++) {\n            points.push(Vertex(shape.vertices[vi].x + x, shape.vertices[vi].y));\n          }\n          x += shape.vertices[shape.vertices.length-1].x;\n        }\n        let widthOffset = x / 2.0;\n        return points.map( (point) => {\n          return Vertex(point.x - widthOffset, point.y);\n        });\n      },\n      options: [\n        {\n          title: \"Text\",\n          type: \"textarea\",\n          key: \"inputText\",\n          value: (props) => { return props.input_text },\n          onChange: (props) => { return props.onInputTextChange }\n        },\n        {\n          title: \"Font\",\n          type: \"dropdown\",\n          choices: [\"Cursive\", \"Sans Serif\", \"Monospace\"],\n          value: (props) => { return props.input_font },\n          onChange: (props) => { return props.onInputFontChange }\n        },\n      ],\n    }\n  }\n}\n","import Vicious1Vertices from './Vicious1Vertices'\nimport v1EngineeringReducer from './v1EngineeringSlice.js'\n\nexport class V1Engineering {\n  static initialState() {\n    return {}\n  }\n\n  static reducer(state, action) {\n    return v1EngineeringReducer(state, action)\n  }\n\n  static mapState(state, ownProps) {\n    return {\n\n    }\n  }\n\n  static mapDispatch(dispatch, ownProps) {\n    return {\n\n    }\n  }\n\n  static getInfo() {\n    return {\n      name: \"V1Engineering\",\n      vertices: (state) => {\n        return Vicious1Vertices();\n      },\n      options: [],\n    }\n  }\n}\n","import { createSlice } from \"@reduxjs/toolkit\"\nimport reduceReducers from 'reduce-reducers'\nimport { registeredShapes } from './registered_shapes.js'\n\nconst initialState = Object.assign({\n  current_shape: \"Polygon\",\n}, ...registeredShapes.map((shape) => shape.initialState()))\n\nconst shapeSlice = createSlice({\n  name: 'shapes',\n  initialState: initialState,\n  reducers: {\n    setCurrentShape(state, action) {\n      state.current_shape = action.payload\n    },\n  }\n})\n\nexport const {\n  setCurrentShape,\n} = shapeSlice.actions\n\nexport default reduceReducers(shapeSlice.reducer, ...registeredShapes.map((shape) => shape.reducer));\n","import { createSlice } from \"@reduxjs/toolkit\"\n\nconst transformsSlice = createSlice({\n  name: 'transforms',\n  initialState: {\n    starting_size: 10.0,\n    offset_x: 0.0,\n    offset_y: 0.0,\n    num_loops: 10,\n    grow_enabled: true,\n    grow_value: 100,\n    spin_enabled: false,\n    spin_value: 2,\n    spin_switchbacks: 0,\n    track_enabled: false,\n    track_grow_enabled: false,\n    track_value: 10,\n    track_length: 0.2,\n    track_grow: 50.0,\n  },\n  reducers: {\n    setShapeStartingSize(state, action) {\n      state.starting_size = action.payload\n    },\n    setXFormOffsetX(state, action) {\n      state.offset_x = parseFloat(action.payload)\n    },\n    setXFormOffsetY(state, action) {\n      state.offset_y = parseFloat(action.payload)\n    },\n    setNumLoops(state, action) {\n      state.num_loops = action.payload\n    },\n    toggleSpin(state, action) {\n      state.spin_enabled = !state.spin_enabled\n    },\n    setSpin(state, action) {\n      state.spin_value = action.payload\n    },\n    setSpinSwitchbacks(state, action) {\n      state.spin_switchbacks = action.payload >= 0 ? action.payload : 0\n    },\n    toggleGrow(state, action) {\n      state.grow_enabled = !state.grow_enabled\n    },\n    setGrow(state, action) {\n      state.grow_value = action.payload\n    },\n    toggleTrack(state, action) {\n      state.track_enabled = !state.track_enabled\n    },\n    toggleTrackGrow(state, action) {\n      state.track_grow_enabled = !state.track_grow_enabled\n    },\n    setTrack(state, action) {\n      state.track_value = action.payload\n    },\n    setTrackLength(state, action) {\n      state.track_length = action.payload\n    },\n    setTrackGrow(state, action) {\n      state.track_grow = action.payload\n    },\n  }\n})\n\nexport const {\n  setShapeStartingSize,\n  setXFormOffsetX,\n  setXFormOffsetY,\n  setNumLoops,\n  toggleSpin,\n  setSpin,\n  setSpinSwitchbacks,\n  toggleGrow,\n  setGrow,\n  toggleTrack,\n  toggleTrackGrow,\n  setTrack,\n  setTrackLength,\n  setTrackGrow\n} = transformsSlice.actions\n\nexport default transformsSlice.reducer\n","import { createSlice } from \"@reduxjs/toolkit\"\n\nconst turtleSlice = createSlice({\n  name: 'turtle',\n  initialState: {\n  },\n  reducers: {\n  }\n})\n\nexport default turtleSlice.reducer\n","import React, { Component } from 'react'\nimport logo from './logo.svg'\nimport './Header.scss'\n\nclass Header extends Component {\n  render() {\n    return (\n      <header>\n        <div className=\"d-flex align-items-center justify-content-center\">\n          <img src={logo} className=\"app-logo mr-2\" alt=\"logo\" />\n          <h2 className=\"d-inline m-0\">sandify</h2>\n        </div>\n        <p>create patterns for robots that draw in sand with ball bearings</p>\n      </header>\n    );\n  }\n}\n\nexport default Header\n","import React, { Component } from 'react'\nimport {\n  Col,\n  Container,\n  Row\n} from 'react-bootstrap'\n\nclass Footer extends Component {\n  render () {\n    return (\n      <footer className=\"py-5\">\n        <Container fluid>\n          <Row className=\"mx-3\">\n            <Col xs={3}>\n              <h3>About</h3>\n              <p>\n                Sandify is working on a solution to turn your\n                cold, empty hearted, emotionless sand tables into\n                cold, empty hearted emotionless sand table robots with enchanting patterns.\n              </p>\n              <p>\n                Sandify is a labor of love, but if you'd like to support me financially,\n                I do have a <a href=\"https://github.com/sponsors/jeffeb3\">Donation system set up <b>with github matching donations</b></a>. Or just <a href=\"https://www.paypal.me/jeffeb3\">PayPal</a>.\n              </p>\n            </Col>\n\n            <Col xs={3}>\n              <h3>Sand Machine</h3>\n              <p>\n                Anything that uses gcode can be used with sandify.\n                But the machine this was designed for is the ZenXY from V1Engineering.com:\n                <br />\n                <a href=\"https://docs.v1engineering.com/zenxy/\">ZenXY on V1Engineering.com</a>\n                <br />\n                <a href=\"https://www.thingiverse.com/thing:2477901\">ZenXY Thingiverse Page</a>\n              </p>\n              <p>\n                ZenXY was inspired by the awesome Sisyphus Kinetic Art Table by <a href=\"https://sisyphus-industries.com/\">Sisyphus Industries</a>, which is also now supported.\n              </p>\n              <p>\n                Sandify was created by users in the\n                <a href=\"https://forum.v1engineering.com/t/does-this-count-as-a-build/6037\"> V1Engineering.com Forum</a>\n              </p>\n            </Col>\n\n            <Col xs={3}>\n              <h3>Github</h3>\n              Sandify is hosted on github.io\n              <p>\n                <a href=\"https://github.com/jeffeb3/sandify\">Sandify Source Code</a>\n              </p>\n              <p>\n                Please post any problems, feature requests or comments in the github issues:\n                <br />\n                <a href=\"https://github.com/jeffeb3/sandify/issues\">Sandify Issue Tracker</a>\n              </p>\n              <p>\n                Sandify is a community project. We want and need developers:\n                <br />\n                <a href=\"https://github.com/jeffeb3/sandify/wiki#developer-info\">Help Sandify</a>\n              </p>\n            </Col>\n\n            <Col xs={3}>\n              <h3>License</h3>\n              <p>\n                Sandify is licensed under the MIT license.\n              </p>\n              <p>\n                Patterns that you create and gcode generated with sandify are not covered\n                under the sandify license (they are your work, and are your copyright).\n                <br />\n                <a href=\"https://raw.githubusercontent.com/jeffeb3/sandify/master/LICENSE\">Sandify License</a>\n              </p>\n            </Col>\n          </Row>\n        </Container>\n      </footer>\n    );\n  }\n}\n\nexport default Footer\n","import { connect } from 'react-redux'\nimport React, { Component } from 'react'\nimport {\n  Col,\n  Form,\n  Card,\n  Accordion,\n  Dropdown,\n  Row\n} from 'react-bootstrap'\nimport SelectableContext from \"react-bootstrap/SelectableContext\";\nimport {\n  setCurrentShape,\n} from './shapeSlice'\nimport { registeredShapes } from './registered_shapes.js'\nimport './Shape.css'\n\nexport const disableEnter = (event) => {\n  if (event.key === 'Enter' && event.shiftKey === false) {\n    event.preventDefault();\n  }\n}\n\nconst mapState = (state, ownProps) => {\n  let props = {\n    current_shape: state.shapes.current_shape,\n    starting_size: state.transform.starting_size,\n    x_offset: state.transform.offset_x,\n    y_offset: state.transform.offset_y,\n  };\n\n  let registeredProps = registeredShapes.map((shape) => shape.mapState(state, ownProps));\n  return Object.assign(props, ...registeredProps);\n}\n\nconst mapDispatch = (dispatch, ownProps) => {\n  let methods = {\n    setCurrentShape: (name) => {\n      dispatch(setCurrentShape(name));\n    },\n  };\n  let registeredMethods = registeredShapes.map((shape) => shape.mapDispatch(dispatch, ownProps));\n\n  return Object.assign(methods, ...registeredMethods);\n}\n\nclass Shape extends Component {\n  render() {\n    var activeClassName = this.props.active ? 'active' : ''\n    var optionsRender = this.props.options.map( (option, index) => {\n      if (option.type && option.type === \"dropdown\") {\n        return <Row className=\"align-items-center pb-2\" key={index}>\n                <Col sm={4}>\n                  <Form.Label htmlFor=\"options-dropdown\">\n                    {option.title}\n                  </Form.Label>\n                </Col>\n\n                <Col sm={8}>\n                  <Dropdown\n                    id=\"options-dropdown\"\n                    onSelect={(event) => {\n                       option.onChange(this.props)(event);\n                    }}\n                    onKeyDown={disableEnter}>\n                    <Dropdown.Toggle variant=\"secondary\">\n                      {option.value(this.props)}\n                     </Dropdown.Toggle>\n\n                    <Dropdown.Menu>\n                      {option.choices.map((choice) => {\n                         return <Dropdown.Item key={choice} eventKey={choice}>{choice}</Dropdown.Item>\n                      })}\n                    </Dropdown.Menu>\n                  </Dropdown>\n                </Col>\n               </Row>\n      } else {\n        return  <Row className=\"align-items-center pb-2\" key={index}>\n                  <Col sm={4}>\n                    <Form.Label htmlFor=\"options-step\">\n                      {option.title}\n                    </Form.Label>\n                  </Col>\n\n                  <Col sm={8}>\n                    <Form.Control\n                      id=\"options-step\"\n                      type={option.type ? option.type : \"number\"}\n                      step={option.step ? option.step : 1}\n                      value={option.value(this.props)}\n                      onChange={(event) => {\n                        option.onChange(this.props)(event)\n                      }}\n                      onKeyDown={disableEnter} />\n                 </Col>\n                </Row>\n      }\n    })\n\n    var optionsListRender = undefined\n    var linkRender = undefined\n    var cardBodyRender = <div></div>\n\n    if (this.props.link) {\n      linkRender = <p className=\"mb-0 mt-3\">See <a target=\"_blank\" rel=\"noopener noreferrer\" href={this.props.link}>{this.props.link}</a> for ideas.</p>;\n    }\n\n    if (this.props.options.length >= 1) {\n      optionsListRender =\n        <div className=\"shape-options\">\n          {optionsRender}\n          {linkRender}\n        </div>\n    }\n\n    if (this.props.options.length > 0) {\n      cardBodyRender =\n        <Card.Body>\n          {optionsListRender}\n        </Card.Body>\n    }\n\n    return (\n      <Card className={`${activeClassName} overflow-auto`}>\n        <Accordion.Toggle as={Card.Header} eventKey={this.props.index} onClick={this.props.clicked}>{this.props.name}</Accordion.Toggle>\n        <Accordion.Collapse eventKey={this.props.index}>\n          {/**\n            Wrapping the shape content inside a selectable context to get around a bug\n            where a nested dropdown can close the parent accordion.\n            https://github.com/react-bootstrap/react-bootstrap/issues/4176#issuecomment-549999503\n          **/}\n          <SelectableContext.Provider value={false}>\n            { cardBodyRender }\n          </SelectableContext.Provider>\n        </Accordion.Collapse>\n      </Card>\n    )\n  }\n}\n\nexport default connect(mapState, mapDispatch)(Shape)\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Accordion\n} from 'react-bootstrap'\nimport {\n  setCurrentShape,\n} from './shapeSlice'\nimport { registeredShapes } from './registered_shapes.js'\nimport Shape from './Shape'\n\nconst mapState = (state, ownProps) => {\n  return {\n    current_shape: state.shapes.current_shape,\n  }\n}\n\nconst mapDispatch = (dispatch, ownProps) => {\n  return {\n    setCurrentShape: (name) => {\n      dispatch(setCurrentShape(name));\n    },\n  }\n}\n\nclass ShapeList extends Component {\n  render() {\n    var shapeRender = registeredShapes.map((shape, index) => {\n      let shapeInfo = shape.getInfo(this)\n      return <Shape\n               key={shapeInfo.name}\n               name={shapeInfo.name}\n               active={shapeInfo.name === this.props.current_shape}\n               link={shapeInfo.link || \"\"}\n               index={index}\n               options={shapeInfo.options}\n               clicked={() => { this.props.setCurrentShape(shapeInfo.name); }} />\n    })\n\n    return (\n      <div>\n        <Accordion defaultActiveKey={0}>\n          {shapeRender}\n        </Accordion>\n      </div>\n    )\n  }\n}\n\nexport default connect(mapState, mapDispatch)(ShapeList)\n","import React, { Component } from 'react'\nimport {\n  Col,\n  Row,\n  Accordion,\n  FormControl,\n  Form,\n  Card,\n} from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport { disableEnter } from '../shapes/Shape'\nimport {\n  toggleGrow,\n  setGrow\n} from './transformsSlice'\n\nconst mapState = (state, ownProps) => {\n  return {\n    active: state.transform.grow_enabled,\n    value: state.transform.grow_value,\n  }\n}\n\nconst mapDispatch = (dispatch, ownProps) => {\n  return {\n    activeCallback: () => {\n      dispatch(toggleGrow());\n    },\n    onChange: (event) => {\n      dispatch(setGrow(event.target.value));\n    },\n  }\n}\n\nclass ScaleTransform extends Component {\n  render() {\n    var activeClassName = this.props.active ? 'active' : ''\n    var activeKey = this.props.active ? 0 : null\n\n    return (\n      <Accordion defaultActiveKey={activeKey}>\n        <Card className={`${activeClassName} overflow-auto`}>\n          <Accordion.Toggle as={Card.Header} eventKey={0} onClick={this.props.activeCallback}>\n            <h4>Grow</h4>\n            Grows or shrinks the shape a little bit for each copy\n          </Accordion.Toggle>\n\n          <Accordion.Collapse eventKey={0}>\n            <Card.Body>\n              <Row className=\"align-items-center pb-2\">\n                <Col sm={4}>\n                  <Form.Label htmlFor=\"scale-step\">\n                    Grow step\n                  </Form.Label>\n                </Col>\n\n                <Col sm={8}>\n                  <FormControl id=\"scale-step\" type=\"number\" value={this.props.value} onChange={this.props.onChange} onKeyDown={disableEnter} />\n                </Col>\n              </Row>\n            </Card.Body>\n          </Accordion.Collapse>\n        </Card>\n      </Accordion>\n    )\n  }\n}\nexport default connect(mapState, mapDispatch)(ScaleTransform)\n","import React, { Component } from 'react'\nimport {\n  Accordion,\n  Col,\n  Row,\n  Form,\n  Card,\n} from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport { disableEnter } from '../shapes/Shape'\nimport {\n  toggleSpin,\n  setSpin,\n  setSpinSwitchbacks,\n} from './transformsSlice'\n\nconst mapState = (state, ownProps) => {\n  return {\n    active: state.transform.spin_enabled,\n    value: state.transform.spin_value,\n    switchbacks: state.transform.spin_switchbacks,\n  }\n}\n\nconst mapDispatch = (dispatch, ownProps) => {\n  return {\n    activeCallback: () => {\n      dispatch(toggleSpin());\n    },\n    onChange: (event) => {\n      dispatch(setSpin(event.target.value));\n    },\n    onSwitchbacksChange: (event) => {\n      dispatch(setSpinSwitchbacks(event.target.value));\n    },\n  }\n}\n\nclass RotationTransform extends Component {\n  render() {\n    var activeClassName = this.props.active ? 'active' : ''\n    var activeKey = this.props.active ? 0 : null\n\n    return (\n      <Accordion defaultActiveKey={activeKey}>\n        <Card className={`${activeClassName} overflow-auto`}>\n          <Accordion.Toggle as={Card.Header} eventKey={0} onClick={this.props.activeCallback}>\n            <h4>Spin</h4>\n            Spins the shape a little bit for each copy\n          </Accordion.Toggle>\n\n          <Accordion.Collapse eventKey={0}>\n            <Card.Body>\n              <Row className=\"align-items-center pb-2\">\n                <Col sm={4}>\n                  <Form.Label htmlFor=\"rotate-step\">\n                    Spin step (can be negative)\n                  </Form.Label>\n                </Col>\n\n                <Col sm={8}>\n                  <Form.Control id=\"rotate-step\" type=\"number\" step=\"0.1\" value={this.props.value} onChange={this.props.onChange} onKeyDown={disableEnter} />\n                </Col>\n              </Row>\n\n              <Row className=\"align-items-center pb-2\">\n                <Col sm={4}>\n                  <Form.Label htmlFor=\"rotate-switchbacks\">\n                    Switchbacks\n                  </Form.Label>\n                </Col>\n\n                <Col sm={8}>\n                  <Form.Control id=\"rotate-switchbacks\" type=\"number\" step=\"1\" value={this.props.switchbacks} onChange={this.props.onSwitchbacksChange} onKeyDown={disableEnter} />\n                </Col>\n              </Row>\n            </Card.Body>\n          </Accordion.Collapse>\n        </Card>\n      </Accordion>\n    )\n  }\n}\n\nexport default connect(mapState, mapDispatch)(RotationTransform)\n","import React, { Component } from 'react'\nimport {\n  Accordion,\n  Col,\n  Row,\n  Form,\n  FormControl,\n  Card,\n} from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport { disableEnter } from '../shapes/Shape'\nimport {\n  toggleTrack,\n  toggleTrackGrow,\n  setTrack,\n  setTrackLength,\n  setTrackGrow\n} from './transformsSlice'\n\nconst mapState = (state, ownProps) => {\n  return {\n    active: state.transform.track_enabled,\n    active_grow: state.transform.track_grow_enabled,\n    value: state.transform.track_value,\n    length: state.transform.track_length,\n    track_grow: state.transform.track_grow,\n  }\n}\n\nconst mapDispatch = (dispatch, ownProps) => {\n  return {\n    activeCallback: () => {\n      dispatch(toggleTrack());\n    },\n    activeGrowCallback: () => {\n      dispatch(toggleTrackGrow());\n    },\n    onChange: (event) => {\n      dispatch(setTrack(event.target.value));\n    },\n    onChangeLength: (event) => {\n      dispatch(setTrackLength(event.target.value));\n    },\n    onChangeGrow: (event) => {\n      dispatch(setTrackGrow(event.target.value));\n    },\n  }\n}\n\nclass TrackTransform extends Component {\n  render() {\n    var activeClassName = this.props.active ? 'active' : ''\n    var activeKey = this.props.active ? 0 : null\n    var activeGrowClassName = this.props.active_grow ? 'active' : ''\n    var activeGrowKey = this.props.active_grow ? 0 : null\n\n    return (\n      <Accordion defaultActiveKey={activeKey}>\n        <Card className={`${activeClassName} overflow-auto`}>\n          <Accordion.Toggle as={Card.Header} eventKey={0} onClick={this.props.activeCallback}>\n            <h4>Track</h4>\n            Moves the shape along a track (shown in green)\n          </Accordion.Toggle>\n\n          <Accordion.Collapse eventKey={0}>\n            <Card.Body>\n              <Row className=\"align-items-center pb-2\">\n                <Col sm={4}>\n                  <Form.Label htmlFor=\"track-size\">\n                    Track size\n                  </Form.Label>\n                </Col>\n                <Col sm={8}>\n                  <FormControl id=\"track-size\" type=\"number\" value={this.props.value} onChange={this.props.onChange} onKeyDown={disableEnter} />\n                </Col>\n              </Row>\n\n              <Row className=\"align-items-center pb-2\">\n                <Col sm={4}>\n                  <Form.Label htmlFor=\"track-length\">\n                    Track length\n                  </Form.Label>\n                </Col>\n                <Col sm={8}>\n                  <FormControl id=\"track-length\" type=\"number\" value={this.props.length} step=\"0.05\" onChange={this.props.onChangeLength} onKeyDown={disableEnter} />\n                </Col>\n              </Row>\n\n              <Accordion defaultActiveKey={activeGrowKey} className=\"mt-3\">\n                <Card className={`${activeGrowClassName} overflow-auto`}>\n                  <Accordion.Toggle as={Card.Header} eventKey={0} onClick={this.props.activeGrowCallback}>\n                    <h4>Grow</h4>\n                    Grows or shrinks the track a little bit for each step\n                  </Accordion.Toggle>\n\n                  <Accordion.Collapse eventKey={0}>\n                    <Card.Body>\n                      <Row className=\"align-items-center pb-2\">\n                        <Col sm={4}>\n                          <Form.Label htmlFor=\"scale-step\">\n                            Track Grow Step\n                          </Form.Label>\n                        </Col>\n\n                        <Col sm={8}>\n                          <FormControl id=\"scale-step\" type=\"number\" value={this.props.track_grow} onChange={this.props.onChangeGrow} onKeyDown={disableEnter} />\n                        </Col>\n                      </Row>\n                    </Card.Body>\n                  </Accordion.Collapse>\n                </Card>\n              </Accordion>\n            </Card.Body>\n          </Accordion.Collapse>\n        </Card>\n      </Accordion>\n    )\n  }\n}\nexport default connect(mapState, mapDispatch)(TrackTransform)\n","import React, { Component } from 'react'\nimport {\n  Col,\n  Form,\n  FormControl,\n  Accordion,\n  Card,\n  Row\n} from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport { disableEnter } from '../shapes/Shape'\nimport ShapeList from '../shapes/ShapeList'\nimport {\n  setShapeStartingSize,\n  setNumLoops,\n  setXFormOffsetX,\n  setXFormOffsetY,\n} from './transformsSlice'\nimport ScaleTransform from './ScaleTransform'\nimport RotationTransform from './RotationTransform'\nimport TrackTransform from './TrackTransform'\n\nconst mapState = (state, ownProps) => {\n  return {\n    loops: state.transform.num_loops,\n    starting_size: state.transform.starting_size,\n    x_offset: state.transform.offset_x,\n    y_offset: state.transform.offset_y,\n  }\n}\n\nconst mapDispatch = (dispatch, ownProps) => {\n  return {\n    changeLoops: (event) => {\n      dispatch(setNumLoops(event.target.value));\n    },\n    onSizeChange: (event) => {\n      dispatch(setShapeStartingSize(event.target.value));\n    },\n    onOffsetXChange: (event) => {\n      dispatch(setXFormOffsetX(event.target.value));\n    },\n    onOffsetYChange: (event) => {\n      dispatch(setXFormOffsetY(event.target.value));\n    },\n  }\n}\n\nclass Transforms extends Component {\n  render() {\n    return (\n      <div className=\"transforms\">\n        <Card className=\"p-3\">\n          <h4>Select a shape</h4>\n          <ShapeList />\n        </Card>\n\n        <Card className=\"mt-3 p-3\">\n          <h4>Modifiers</h4>\n          <Row className=\"align-items-center pt-3 pb-2\">\n            <Col sm={4}>\n              <Form.Label htmlFor=\"shape-size\">\n                Starting size\n              </Form.Label>\n            </Col>\n\n            <Col sm={8}>\n              <FormControl id=\"shape-size\" type=\"number\" value={this.props.starting_size} onChange={this.props.onSizeChange} onKeyDown={disableEnter} />\n            </Col>\n          </Row>\n\n          <Row className=\"align-items-center pb-2\">\n            <Col sm={4}>\n              <Form.Label htmlFor=\"shape-offset\">\n              Offset\n              </Form.Label>\n            </Col>\n\n            <Col sm={8}>\n              <div className=\"d-flex align-items-center\">\n                <span>X</span>\n                <FormControl type=\"number\" className=\"ml-2\" value={this.props.x_offset} onChange={this.props.onOffsetXChange} onKeyDown={disableEnter} />\n                <span className=\"ml-2\">Y</span>\n                <FormControl className=\"ml-2\" type=\"number\" value={this.props.y_offset} onChange={this.props.onOffsetYChange} onKeyDown={disableEnter} />\n              </div>\n            </Col>\n          </Row>\n\n          <Row className=\"align-items-center pb-2\">\n            <Col sm={4}>\n              <Form.Label htmlFor=\"loop-count\">\n                Number of loops\n              </Form.Label>\n            </Col>\n\n            <Col sm={8}>\n              <FormControl id=\"loop-count\" type=\"number\" value={this.props.loops} onChange={this.props.changeLoops} onKeyDown={disableEnter} />\n            </Col>\n          </Row>\n\n          <Accordion className=\"pt-4\">\n            <ScaleTransform />\n            <RotationTransform />\n            <TrackTransform />\n          </Accordion>\n        </Card>\n      </div>\n    )\n  }\n}\n\nexport default connect(mapState, mapDispatch)(Transforms)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport {\n    Col,\n    Row,\n    Form,\n    FormControl,\n    Card,\n} from 'react-bootstrap'\nimport {\n  setWiperAngleDeg,\n  setWiperSize\n} from './wiperSlice'\n\nconst mapState = (state, ownProps) => {\n  return {\n    angle_deg: state.wiper.angle_deg,\n    size: state.wiper.size,\n  }\n}\n\nconst mapDispatch = (dispatch, ownProps) => {\n  return {\n    changeAngle: (event) => {\n      dispatch(setWiperAngleDeg(parseFloat(event.target.value)))\n    },\n    changeSize: (event) => {\n      dispatch(setWiperSize(parseFloat(event.target.value)))\n    },\n  }\n}\n\nclass Wiper extends Component {\n  render() {\n    return (\n      <div className=\"wiper\">\n        <Card className=\"p-3\">\n          <h4>Wiper Settings</h4>\n          <Row className=\"align-items-center pt-3 pb-2\">\n            <Col sm={4}>\n              <Form.Label htmlFor=\"angle\">\n                Wiper Angle\n              </Form.Label>\n            </Col>\n            <Col sm={8}>\n              <FormControl id=\"angle\" type=\"number\" min=\"0\" max=\"180\" step=\"0.5\" value={this.props.angle_deg} onChange={this.props.changeAngle} />\n            </Col>\n          </Row>\n\n          <Row className=\"align-items-center pb-2\">\n            <Col sm={4}>\n              <Form.Label htmlFor=\"size\">\n                Wiper Size\n              </Form.Label>\n            </Col>\n            <Col sm={8}>\n              <FormControl id=\"size\" type=\"number\" step=\"0.1\" value={this.props.size} onChange={this.props.changeSize} />\n            </Col>\n          </Row>\n        </Card>\n      </div>\n    );\n  }\n}\n\nWiper = connect(mapState, mapDispatch)(Wiper)\nexport default Wiper\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport {\n    Accordion,\n    Card,\n    Col,\n    Form,\n    Row,\n} from 'react-bootstrap'\nimport {\n  setFileName,\n  setFileComments,\n  setFileVertices,\n  setFileZoom,\n  toggleFileAspectRatio\n} from './fileSlice'\n\nconst mapState = (state, ownProps) => {\n  return {\n    name: state.file.name,\n    comments: state.file.comments,\n    vertices: state.file.vertices,\n    zoom: state.file.zoom,\n    aspect_ratio: state.file.aspect_ratio,\n  }\n}\n\nconst mapDispatch = (dispatch, ownProps) => {\n  var convertToXY = (thetaRhos) => {\n    var vertices = []\n    var previous = undefined;\n    var max_angle = Math.PI / 64.0;\n    for (let ii = 0; ii < thetaRhos.length; ii++) {\n      var next = thetaRhos[ii];\n      if (previous) {\n        if (Math.abs(next[0] - previous[0]) < max_angle) {\n          // These sin, cos elements are inverted. I'm not sure why\n          vertices.push({\n                        x: previous[1] * Math.sin(previous[0]),\n                        y: previous[1] * Math.cos(previous[0]),\n                        f: 1000,\n          });\n        } else {\n          // We need to do some interpolating.\n          let deltaAngle = next[0] - previous[0];\n          let rhoStep = max_angle / Math.abs(deltaAngle) * (next[1] - previous[1]);\n          var rho = previous[1];\n          if (deltaAngle > 0.0) {\n            var emergency_break = 0;\n            for (let angle = previous[0]; angle < next[0]; angle += max_angle, rho += rhoStep) {\n              vertices.push({\n                            x: rho * Math.sin(angle),\n                            y: rho * Math.cos(angle),\n                            f: 1000,\n              });\n              if (emergency_break++ > 100000) {\n                break;\n              }\n            }\n          } else {\n            for (let angle = previous[0]; angle > next[0]; angle -= max_angle, rho += rhoStep) {\n              vertices.push({\n                            x: rho * Math.sin(angle),\n                            y: rho * Math.cos(angle),\n                            f: 1000,\n              });\n              if (emergency_break++ > 100000) {\n                break;\n              }\n            }\n          }\n        }\n      }\n      previous = next;\n    }\n    return vertices;\n  }\n\n  var parseThrFile = (file) => {\n    var rv = {};\n    rv.comments = [];\n    rv.vertices = [];\n\n    var reader = new FileReader();\n\n    reader.onload = (event) => {\n      var text = reader.result;\n      var lines = text.split('\\n');\n      var has_vertex = false;\n      for (let ii = 0; ii < lines.length; ii++) {\n        var line = lines[ii].trim();\n        if (line.length === 0) {\n          // blank lines\n          continue;\n        }\n        if (line.indexOf(\"#\") === 0 && !has_vertex) {\n          rv.comments.push(lines[ii]);\n        }\n\n        if (line.indexOf(\"#\") !== 0) {\n          has_vertex = true;\n          // This is a point, let's try to read it.\n          var pointStrings = line.split(/\\s+/);\n          if (pointStrings.length !== 2) {\n            // AAAH\n            console.log(pointStrings);\n            continue;\n          }\n          rv.vertices.push([parseFloat(pointStrings[0]), parseFloat(pointStrings[1])]);\n        }\n      }\n\n      dispatch(setFileComments(rv.comments));\n      dispatch(setFileVertices(convertToXY(rv.vertices)));\n    }\n\n    reader.readAsText(file);\n  }\n\n  return {\n    setVertices: (event: any) => {\n      var file = event.target.files[0];\n      dispatch(setFileName(file.name));\n      parseThrFile(file);\n    },\n    setZoom: (event) => {\n      dispatch(setFileZoom(parseFloat(event.target.value)));\n    },\n    toggleAspectRatio: (event) => {\n      dispatch(toggleFileAspectRatio());\n    },\n  }\n}\n\nconst disableEnter = (event) => {\n  if (event.key === 'Enter' && event.shiftKey === false) {\n    event.preventDefault();\n  }\n};\n\nclass ThetaRho extends Component {\n  render() {\n    var aspectRatioActive = this.props.aspect_ratio ? 'active' : ''\n    var commentsRender = this.props.comments.map((comment) => {\n      return <span>{comment}<br/></span>\n    })\n\n    return (\n      <div className=\"theta-rho\">\n        <Card className=\"p-3\">\n          <h4>Theta Rho Input</h4>\n\n          <Accordion className=\"mb-4 pt-3\">\n            <Card>\n              <Card.Header as={Form.Label} htmlFor=\"fileUpload\" style={{ cursor: \"pointer\" }}>\n                <h4>Load file</h4>\n                Import a Sisyphus style theta rho (.thr) file into Sandify\n                <Form.Control\n                    id=\"fileUpload\"\n                    type=\"file\"\n                    accept=\".thr\"\n                    onChange={this.props.setVertices}\n                    style={{ display: \"none\" }} />\n              </Card.Header>\n            </Card>\n          </Accordion>\n\n          <div className=\"mb-4\">\n            Name: {this.props.name} <br />\n            Comments:\n            <div className=\"ml-3\">\n              { commentsRender }\n            </div>\n            Number of points: {this.props.vertices.length }\n          </div>\n\n          <Accordion>\n            <Card className={`${aspectRatioActive} overflow-auto`}>\n              <Accordion.Toggle as={Card.Header} eventKey={0} onClick={this.props.toggleAspectRatio}>\n                <h4>Keep Aspect Ratio</h4>\n                Keeps original aspect ratio\n              </Accordion.Toggle>\n            </Card>\n          </Accordion>\n\n          <Row className=\"align-items-center pt-3\">\n            <Col sm={4}>\n              <Form.Label htmlFor=\"thr-zoom\">\n                Zoom\n              </Form.Label>\n            </Col>\n            <Col sm={8}>\n              <Form.Control type=\"number\" value={this.props.zoom} onChange={this.props.setZoom} onKeyDown={disableEnter} />\n            </Col>\n          </Row>\n        </Card>\n\n        <Card className=\"mt-3 p-3\">\n          <h4>Where to get .thr files</h4>\n          <ul className=\"list-unstyled\">\n            <li><a href=\"https://reddit.com/u/markyland\">Markyland on Reddit</a></li>\n            <li><a href=\"https://github.com/Dithermaster/sisyphus/\">Dithermaster's github</a></li>\n            <li><a href=\"https://github.com/SlightlyLoony/JSisyphus\">JSisyphus by Slightly Loony</a></li>\n            <li><a href=\"https://reddit.com/r/SisyphusIndustries\">Sisyphus on Reddit</a></li>\n            <li><a href=\"https://sisyphus-industries.com/community/community-tracks\">Sisyphus Community</a></li>\n            <li><a href=\"http://thejuggler.net/sisyphus/\">The Juggler</a></li>\n          </ul>\n\n          <h5 className=\"mt-3\">Note about copyrights</h5>\n          <p>Be careful and respectful. Understand that the original author put their labor, intensity, and ideas into this art. The creators have a right to own it (and they have a copyright, even if it doesn't say so).</p>\n          <p>If you don't have permisson (a license) to use their art, then you shouldn't be. If you do have permission to use their art, then you should be thankful, and I'm sure they would appreciate you sending them a note of thanks. A picture of your table creating their shared art would probably make them smile.</p>\n          <p>Someone posting the .thr file to a forum or subreddit probably wants it to be shared, and drawing it on your home table is probably OK. Just be careful if you want to use them for something significant without explicit permission.</p>\n          <p>I am not a lawyer.</p>\n        </Card>\n      </div>\n    )\n  }\n}\n\nexport default connect(mapState, mapDispatch)(ThetaRho)\n","import React, { Component } from 'react'\nimport {\n    Tab,\n    Tabs,\n} from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport Transforms from '../transforms/Transforms.js'\nimport Wiper from '../wiper/Wiper.js'\nimport ThetaRho from '../theta_rho/ThetaRho.js'\nimport { chooseInput} from '../app/appSlice.js'\n\nclass InputTabs extends Component {\n  handleSelect(key) {\n    this.props.dispatch(chooseInput(key))\n  }\n\n  render() {\n    return (\n       <Tabs defaultActiveKey=\"shapes\" onSelect={this.handleSelect.bind(this)} id=\"input-tabs\">\n         <Tab eventKey=\"shapes\" title=\"Shapes\">\n           <Transforms />\n         </Tab>\n\n         <Tab eventKey=\"wiper\" title=\"Wiper\">\n           <Wiper />\n         </Tab>\n\n         <Tab eventKey=\"code\" title=\"Code\">\n           <ThetaRho />\n         </Tab>\n       </Tabs>\n    )\n  }\n}\n\nexport default connect()(InputTabs)\n","import { Vertex } from './Geometry'\nimport Victor from 'victor'\n\n// Determines which of 8 neighbor areas the point is in:\n//   https://stackoverflow.com/questions/3746274/line-intersection-with-aabb-rectangle\n//\n//           |          |\n//   0b1001  |  0b0001  |  0b0101\n//           |          |\n// ------------------------------ y_max\n//           |          |\n//   0b1000  |  0b0000  |  0b0100\n//           |          |\n// ------------------------------ y_min\n//           |          |\n//   0b1010  |  0b0010  |  0b0110\n//           |          |\n//         x_min      x_max\n//\nfunction pointLocation(point, size_x, size_y) {\n  var location = 0b0;\n  if (point.x < -size_x) {\n    location += 0b1000;\n  } else if (point.x > size_x) {\n    location += 0b0100;\n  }\n\n  if (point.y < -size_y) {\n    location += 0b0001;\n  } else if (point.y > size_y) {\n    location += 0b0010;\n  }\n\n  return location;\n}\n\n// Determine intersection with one of the sides\nfunction intersection(line_start, line_end, side_start, side_end) {\n  var line = line_end.clone().subtract(line_start);\n  var side = side_end.clone().subtract(side_start);\n  var lineCrossSidePerp = line.x * side.y - line.y * side.x;\n\n  // if line Cross side === 0, it means the lines are parallel so have infinite intersection points\n  if (lineCrossSidePerp === 0) {\n    return null;\n  }\n\n  var diff = side_start.clone().subtract(line_start);\n  var t = (diff.x * side.y - diff.y * side.x) / lineCrossSidePerp;\n  if (t < 0 || t >= 1) {\n    return null;\n  }\n\n  var u = (diff.x * line.y - diff.y * line.x) / lineCrossSidePerp;\n  if (u < 0 || u >= 1) {\n    return null;\n  }\n\n  var intersection = line_start.clone().add(line.clone().multiply(Victor(t, t)));\n  return intersection;\n}\n\n// This method is the guts of logic for this limits enforcer. It will take a single line (defined by\n// start and end) and if the line goes out of bounds, returns the vertices around the outside edge\n// to follow around without messing up the shape of the vertices.\n//\nfunction clipLine(line_start, line_end, size_x, size_y) {\n  var quadrant_start = pointLocation(line_start, size_x, size_y);\n  var quadrant_end = pointLocation(line_end, size_x, size_y);\n\n  if (quadrant_start === 0b0000 && quadrant_end === 0b0000) {\n    // The line is inside the boundaries\n    return [line_start, line_end];\n  }\n\n  if (quadrant_start === quadrant_end) {\n    // We are in the same box, and we are out of bounds.\n    return [nearestVertex(line_start, size_x, size_y), nearestVertex(line_end, size_x, size_y)];\n  }\n\n  if (quadrant_start & quadrant_end) {\n    // These points are all on one side of the box.\n    return [nearestVertex(line_start, size_x, size_y), nearestVertex(line_end, size_x, size_y)];\n  }\n\n  if (quadrant_start === 0b000) {\n    // We are exiting the box. Return the start, the intersection with the boundary, and the closest\n    // boundary point to the exited point.\n    var line = [line_start];\n    line.push(boundPoint(line_start, line_end, size_x, size_y));\n    line.push(nearestVertex(line_end, size_x, size_y));\n    return line;\n  }\n\n  if (quadrant_end === 0b000) {\n    // We are re-entering the box.\n    return [boundPoint(line_end, line_start, size_x, size_y), line_end];\n  }\n\n  // We have reached a terrible place, where both points are oob, but it might intersect with the\n  // work area.\n\n  // First, define the boundaries as lines.\n  const sides = [\n    // left\n    [Victor(-size_x, -size_y), Victor(-size_x, size_y)],\n    // right\n    [Victor(size_x, -size_y), Victor(size_x, size_y)],\n    // bottom\n    [Victor(-size_x, -size_y), Victor(size_x, -size_y)],\n    // top\n    [Victor(-size_x, size_y), Victor(size_x, size_y)],\n  ]\n\n  // Count up the number of boundary lines intersect with our line segment.\n  var intersections = []\n  for (var s=0; s<sides.length; s++) {\n    var int_point = intersection(Victor.fromObject(line_start),\n                                 Victor.fromObject(line_end),\n                                 sides[s][0],\n                                 sides[s][1]);\n    if (int_point) {\n      intersections.push(Vertex(int_point.x, int_point.y));\n    }\n  }\n\n  if (intersections.length !== 0) {\n    if (intersections.length !== 2) {\n      // We should never get here. How would we have something other than 2 or 0 intersections with\n      // a box?\n      console.log(intersections);\n      throw Error(\"Software Geometry Error\");\n    }\n\n    // The intersections are tested in some normal order, but the line could be going through them\n    // in any direction. This check will flip the intersections if they are reversed somehow.\n    if (Victor.fromObject(intersections[0]).subtract(Victor.fromObject(line_start)).lengthSq() >\n        Victor.fromObject(intersections[1]).subtract(Victor.fromObject(line_start)).lengthSq()) {\n      var temp = intersections[0];\n      intersections[0] = intersections[1];\n      intersections[1] = temp;\n    }\n    return [...intersections, nearestVertex(line_end, size_x, size_y)];\n  }\n\n  // Damn. We got here because we have a start and end that are failing different boundary checks,\n  // and the line segment doesn't intersect the box. We have to crawl around the outside of the\n  // box until we reach the other point.\n  //\n  // Here, I'm going to split this line into two parts, and send each half line segment back\n  // through the clipLine algorithm. Eventually, that should result in only one of the other cases.\n  var midpoint = Victor.fromObject(line_start).add(Victor.fromObject(line_end)).multiply(Victor(0.5, 0.5));\n  // recurse, and find smaller segments until we don't end up in this place again.\n  return [...clipLine(line_start, midpoint, size_x, size_y),\n          ...clipLine(midpoint,   line_end, size_x, size_y)];\n}\n\n// Finds the nearest vertex that is in the bounds. This will change the shape. i.e. this doesn't\n// care about the line segment, only about the point.\nfunction nearestVertex(vertex, size_x, size_y) {\n  return Vertex(Math.min(size_x, Math.max(-size_x, vertex.x)),\n                Math.min(size_y, Math.max(-size_y, vertex.y)));\n}\n\n// Intersect the line with the boundary, and return the point exactly on the boundary.\n// This will keep the shape. i.e. It will follow the line segment, and return the point on that line\n// segment.\nfunction boundPoint(good, bad, size_x, size_y) {\n  var dx = good.x - bad.x;\n  var dy = good.y - bad.y;\n\n  var fixed = Vertex(bad.x, bad.y);\n  var distance = 0;\n  if (bad.x < -size_x || bad.x > size_x) {\n    if (bad.x < -size_x) {\n      // we are leaving the left\n      fixed.x = -size_x;\n    } else {\n      // we are leaving the right\n      fixed.x = size_x;\n    }\n    distance = (fixed.x - good.x) / dx;\n    fixed.y = good.y + distance * dy;\n    // We fixed x, but y might have the same problem, so we'll rerun this, with different points.\n    return boundPoint(good, fixed, size_x, size_y);\n  }\n  if (bad.y < -size_y || bad.y > size_y) {\n    if (bad.y < -size_y) {\n      // we are leaving the bottom\n      fixed.y = -size_y;\n    } else {\n      // we are leaving the top\n      fixed.y = size_y;\n    }\n    distance = (fixed.y - good.y) / dy;\n    fixed.x = good.x + distance * dx;\n  }\n  return fixed;\n}\n\n// Returns points along the circle from the start to the end, tracing a circle of radius size.\nfunction traceCircle(start, end, size) {\n  const startAngle = start.angle();\n  const endAngle = end.angle();\n  let resolution = (Math.PI*2.0) / 128.0; // 128 segments per circle. Enough?\n  let deltaAngle = ((endAngle - startAngle) + 2.0 * Math.PI) % (2.0 * Math.PI);\n  if (deltaAngle > Math.PI) {\n    deltaAngle -= 2.0 * Math.PI;\n  }\n  if (deltaAngle < 0.0) {\n    resolution *= -1.0;\n  }\n\n  var tracePoints = []\n  for (var step = 0; step < (deltaAngle/resolution) ; step++) {\n    tracePoints.push(Victor(size * Math.cos(resolution * step + startAngle),\n                            size * Math.sin(resolution * step + startAngle)));\n  }\n  return tracePoints;\n}\n\nfunction onSegment(start, end, point) {\n  if (start.distance(point) + end.distance(point) - start.distance(end) < 0.001) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction getIntersections(start, end, size) {\n  var direction = end.clone().subtract(start).clone().normalize();\n\n  var t = direction.x * -1.0 * start.x + direction.y * -1.0 * start.y;\n  var e = direction.clone().multiply(Victor(t,t)).add(start);\n\n  var distanceToLine = e.magnitude();\n\n  if (distanceToLine >= size)\n  {\n    return {\n      intersection: false,\n      points: [],\n    }\n  }\n\n  var dt = Math.sqrt(size*size - distanceToLine*distanceToLine);\n  var point1 = direction.clone().multiply(Victor(t - dt,t - dt)).add(start);\n  var point2 = direction.clone().multiply(Victor(t + dt,t + dt)).add(start);\n\n  return {\n    intersection: true,\n    points: [\n      {\n        point: point1,\n        on: onSegment(start, end, point1),\n      },\n      {\n        point: point2,\n        on: onSegment(start, end, point2),\n      }\n    ]}\n}\n\n// This method is the guts of logic for this limits enforcer. It will take a single line (defined by\n// start and end) and if the line goes out of bounds, returns the vertices around the outside edge\n// to follow around without messing up the shape of the vertices.\n//\nfunction clipLineCircle(line_start, line_end, size) {\n  // Cases:\n  // 1 - Entire line is inside\n  //     return start, end\n  // 2 - Entire line is outside\n  //     trace from start to end\n  // 3 - only start is inside\n  //     find the intersection\n  //     include start\n  //     include intersection\n  //     trace from intersection to closest to end point\n  // 4 - only end is inside\n  //     do reverse of 3\n  // 4 - Neither end is inside, but there is some line segment inside\n  //     find both intersections\n  //     trace from start to first intersction\n  //     trace from second intersection to end\n\n  // Helper objects\n  const start = Victor.fromObject(line_start);\n  const end = Victor.fromObject(line_end);\n\n  // I'll need these\n  const rad_start = start.magnitude();\n  const rad_end = end.magnitude();\n\n  // Check the easy case\n  if (rad_start <= size && rad_end <= size) {\n    // The whole segment is inside\n    return [line_start, line_end];\n  }\n\n  // Check for the odd case of coincident points\n  if (start.distance(end) < 0.00001) {\n     return [nearestVertexCircle(start, size)];\n  }\n\n  var intersections = getIntersections(start, end, size);\n\n  if ( !intersections.intersection )\n  {\n    // The whole line is outside, just trace.\n    return traceCircle(start, end, size);\n  }\n\n  // if neither point is on the segment, then it should just be a trace\n  if (!intersections.points[0].on && ! intersections.points[1].on) {\n    return traceCircle(start, end, size);\n  }\n\n  // If both points are outside, but there's an intersection\n  if (rad_start > size + 1.0e-9 && rad_end > size + 1.0e-9) {\n    let point = intersections.points[0].point;\n    let other_point = intersections.points[1].point;\n\n    return [\n      ...traceCircle(start, point, size),\n      point,\n      ...traceCircle(other_point, end, size)\n    ];\n  }\n\n  // If we're here, then one point is still in the circle.\n  if (rad_start <= size) {\n    var point1 = (intersections.points[0].on && Math.abs(intersections.points[0].point - start) > 0.0001) ? intersections.points[0].point : intersections.points[1].point;\n    return [\n      start,\n      ...traceCircle(point1, end, size),\n      end\n    ];\n  } else {\n    point1 = intersections.points[0].on ? intersections.points[0].point : intersections.points[1].point;\n    return [\n      ...traceCircle(start, point1, size),\n      point1,\n      end\n    ];\n  }\n}\n\n// Finds the nearest vertex that is in the bounds of the circle. This will change the shape. i.e. this doesn't\n// care about the line segment, only about the point.\nfunction nearestVertexCircle(vertex, size) {\n  const point = Victor.fromObject(vertex);\n  if ( point.length() > size) {\n    let scale = size / point.length();\n    return point.multiply(Victor(scale, scale));\n  } else {\n    return point;\n  }\n}\n\n// Manipulates the points to make them all in bounds, while doing the least amount of damage to the\n// desired shape.\nexport const enforceRectLimits = function(vertices, size_x, size_y) {\n  var cleanVertices = []\n  var previous = null;\n\n  if (size_x < 0) {\n    size_x *= -1.0;\n  }\n  if (size_y < 0) {\n    size_y *= -1.0;\n  }\n  for (var next=0; next<vertices.length; next++) {\n    var vertex = vertices[next];\n    if (previous) {\n      var line = clipLine(previous, vertex, size_x, size_y);\n      for (var pt=0; pt<line.length; pt++) {\n        if (line[pt] !== previous) {\n          cleanVertices.push(line[pt]);\n        }\n      }\n    } else {\n      cleanVertices.push(nearestVertex(vertex, size_x, size_y));\n    }\n    previous = vertex;\n  }\n\n  // Just for sanity, and cases that I haven't thought of, clean this list again, including removing\n  // duplicate points\n  previous = null;\n  var cleanerVertices = []\n  for (var i=0; i<cleanVertices.length; i++) {\n    if (previous) {\n      let start = Victor.fromObject(cleanVertices[i]);\n      let end = Victor.fromObject(previous);\n      if (start.distance(end) > 0.001) {\n        cleanerVertices.push(nearestVertex(cleanVertices[i], size_x, size_y));\n      }\n    } else {\n      cleanerVertices.push(nearestVertex(cleanVertices[i], size_x, size_y));\n    }\n    previous = cleanVertices[i];\n  }\n\n  return cleanerVertices;\n}\n\nexport const enforcePolarLimits = function(vertices, size) {\n  var cleanVertices = []\n  var previous = null;\n\n  for (var next=0; next<vertices.length; next++) {\n    var vertex = vertices[next];\n    if (previous) {\n      var line = clipLineCircle(previous, vertex, size);\n      for (var pt=0; pt<line.length; pt++) {\n        if (line[pt] !== previous) {\n          cleanVertices.push(line[pt]);\n        }\n      }\n    } else {\n      cleanVertices.push(nearestVertexCircle(vertex, size));\n    }\n    previous = vertex;\n  }\n\n  // Just for sanity, and cases that I haven't thought of, clean this list again, including removing\n  // duplicate points\n  previous = null;\n  var cleanerVertices = []\n  for (var i=0; i<cleanVertices.length; i++) {\n    if (previous) {\n      let start = Victor.fromObject(cleanVertices[i]);\n      let end = Victor.fromObject(previous);\n      if (start.distance(end) > 0.001) {\n        cleanerVertices.push(nearestVertexCircle(cleanVertices[i], size));\n      }\n    } else {\n      cleanerVertices.push(nearestVertexCircle(cleanVertices[i], size));\n    }\n    previous = cleanVertices[i];\n  }\n  return cleanerVertices;\n}\n","import { createSelector } from 'reselect'\nimport {\n  degToRad,\n  Vertex,\n} from './Geometry.js'\nimport {\n  enforceRectLimits,\n  enforcePolarLimits\n} from './LimitEnforcer';\nimport Victor from 'victor';\nimport { findShape } from '../features/shapes/registered_shapes.js'\n\n// Transform functions\nfunction rotate (vertex, angle_deg) {\n  var angle = Math.PI / 180.0 * angle_deg;\n  return Vertex(\n           vertex.x * Math.cos(angle) - vertex.y * Math.sin(angle),\n           vertex.x * Math.sin(angle) + vertex.y * Math.cos(angle),\n           vertex.f);\n}\n\nfunction scale (vertex, scale_perc) {\n  var scale = scale_perc / 100.0;\n  return {\n    x: vertex.x * scale,\n    y: vertex.y * scale,\n    f: vertex.f,\n  }\n}\n\nfunction offset (vertex, offset_x, offset_y) {\n  return {\n    x: vertex.x + offset_x,\n    y: vertex.y + offset_y,\n    f: vertex.f,\n  }\n}\n\nfunction track (vertex, data, loop_index) {\n  let angle = data.track_length * loop_index / 16 * 2.0 * Math.PI;\n  let radius = 1.0;\n  if (data.track_grow_enabled) {\n    radius = 1.0 + loop_index / 10.0 * data.track_grow / 100.0;\n  }\n  return {\n    x: vertex.x + radius * data.track_value * Math.cos(angle),\n    y: vertex.y + radius * data.track_value * Math.sin(angle),\n    f: vertex.f, // Why do I still have f in here?\n  };\n}\n\nexport const transform = (data, vertex, fraction_index) => {\n  var transformed_vertex = vertex\n  if (data.grow_enabled)\n  {\n    transformed_vertex = scale(transformed_vertex, 100.0 + (data.grow_value * fraction_index));\n  }\n  transformed_vertex = offset(transformed_vertex, data.offset_x, data.offset_y);\n  if (data.spin_enabled)\n  {\n    var loop_period = data.num_loops / (parseInt(data.spin_switchbacks) + 1);\n    var stage = fraction_index/loop_period;\n    var direction = (stage % 2 < 1 ? 1.0 : -1.0);\n    var spin_amount = direction * (fraction_index % loop_period) * data.spin_value;\n    // Add in the amount it goes positive to the negatives, so they start at the same place.\n    if (direction < 0.0) {\n      spin_amount += loop_period * data.spin_value;\n    }\n    transformed_vertex = rotate(transformed_vertex, spin_amount);\n  }\n  if (data.track_enabled) {\n    transformed_vertex = track(transformed_vertex, data, fraction_index);\n  }\n  return transformed_vertex;\n}\n\nconst outOfBounds = (point, width, height) => {\n  if (point.x < -width/2.0) {\n    return true;\n  }\n  if (point.y < -height/2.0) {\n    return true;\n  }\n  if (point.x > width/2.0) {\n    return true;\n  }\n  if (point.y > height/2.0) {\n    return true;\n  }\n  return false;\n}\n\n// Intersect the line with the boundary, and return the point exactly on the boundary.\n// This will keep the shape. i.e. It will follow the line segment, and return the point on that line\n// segment.\nfunction boundPoint(good, bad, size_x, size_y) {\n  var dx = good.x - bad.x;\n  var dy = good.y - bad.y;\n\n  var fixed = Victor(bad.x, bad.y);\n  var distance = 0;\n  if (bad.x < -size_x || bad.x > size_x) {\n    if (bad.x < -size_x) {\n      // we are leaving the left\n      fixed.x = -size_x;\n    } else {\n      // we are leaving the right\n      fixed.x = size_x;\n    }\n    distance = (fixed.x - good.x) / dx;\n    fixed.y = good.y + distance * dy;\n    // We fixed x, but y might have the same problem, so we'll rerun this, with different points.\n    return boundPoint(good, fixed, size_x, size_y);\n  }\n  if (bad.y < -size_y || bad.y > size_y) {\n    if (bad.y < -size_y) {\n      // we are leaving the bottom\n      fixed.y = -size_y;\n    } else {\n      // we are leaving the top\n      fixed.y = size_y;\n    }\n    distance = (fixed.y - good.y) / dy;\n    fixed.x = good.x + distance * dx;\n  }\n  return fixed;\n}\n\nfunction nearEnough(end, point) {\n  if (point.clone().subtract(end).length() < 0.01) {\n    return true;\n  }\n  return false;\n}\n\n// Vertex functions\nexport const polishVertices = (state, vertices) => {\n  let machine = state.machine;\n  if (vertices.length > 0) {\n    if (machine.rectangular && machine.rect_origin.length === 1) {\n\n      // OK, let's assign corners indices:\n      //\n      // [1]   [2]\n      //\n      //\n      // [0]   [3]\n\n      let dx = (machine.max_x - machine.min_x) / 2.0;\n      let dy = (machine.max_y - machine.min_y) / 2.0;\n\n      let corners = [\n        {x: -dx, y: -dy},\n        {x: -dx, y:  dy},\n        {x:  dx, y:  dy},\n        {x:  dx, y: -dy}\n      ];\n      console.log(corners);\n\n      let first = vertices[0];\n      let last = vertices[vertices.length-1];\n\n      // Max radius\n      let max_radius = Math.sqrt(Math.pow(2.0*dx,2.0) + Math.pow(2.0*dy, 2.0)) / 2.0;\n\n      let vFirst = Victor.fromObject(first);\n      let vLast = Victor.fromObject(last);\n      let outPoint;\n      let newVertices = [];\n      if (vFirst.magnitude() <= vLast.magnitude()) {\n        // It's going outward\n        let scale = max_radius / vLast.magnitude();\n        outPoint = vLast.multiply(Victor(scale,scale));\n        newVertices.push({ ...last, x: outPoint.x, y: outPoint.y});\n      } else {\n        let scale = max_radius / vFirst.magnitude();\n        outPoint = vFirst.multiply(Victor(scale,scale));\n        newVertices.push({ ...first, x: outPoint.x, y: outPoint.y});\n      }\n      console.log(outPoint);\n      console.log(dx);\n\n      let nextCorner = 1;\n      if (outPoint.x >= dx) {\n        // right\n        nextCorner = 2;\n      } else if (outPoint.x <= -dx) {\n        // left\n        nextCorner = 0;\n      } else if (outPoint.y >= dy) {\n        // up\n        nextCorner = 1;\n      } else if (outPoint.y <= -dy) {\n        // down\n        nextCorner = 3;\n      } else {\n        console.log(\"Darn!\");\n        nextCorner = 3;\n      }\n      // console.log(\"nextCorner: \" + nextCorner);\n      // newVertices.push({ ...first, x: corners[nextCorner].x, y: corners[nextCorner].y});\n\n      while (nextCorner !== machine.rect_origin[0]) {\n        console.log(\"nextCorner: \" + nextCorner);\n        newVertices.push({ ...first, x: corners[nextCorner].x, y: corners[nextCorner].y});\n        nextCorner -= 1;\n        if (nextCorner < 0) {\n          nextCorner = 3;\n        }\n      }\n      console.log(\"nextCorner: \" + nextCorner);\n      newVertices.push({ ...first, x: corners[nextCorner].x, y: corners[nextCorner].y});\n\n      console.log(newVertices);\n      if (vFirst.magnitude() <= vLast.magnitude()) {\n        // outward\n        vertices = vertices.concat(newVertices);\n      } else {\n        vertices = newVertices.reverse().concat(vertices);\n      }\n    }\n    if (machine.polar_endpoints && !machine.rectangular) {\n\n      let first = vertices[0];\n      let last = vertices[vertices.length-1];\n\n      // Always put 0.0 in there\n\n      // Max radius\n      let max_radius = machine.max_radius;\n      let vFirst = Victor.fromObject(first);\n      let vLast = Victor.fromObject(last);\n      if (vFirst.magnitude() <= vLast.magnitude()) {\n        // It's going outward\n        let scale = max_radius / vLast.magnitude();\n        let outPoint = vLast.multiply(Victor(scale,scale));\n        vertices.unshift(Vertex(0.0, 0.0, first.f));\n        vertices.push(Vertex(outPoint.x, outPoint.y, last.f));\n      } else {\n        let scale = max_radius / vFirst.magnitude();\n        let outPoint = vFirst.multiply(Victor(scale,scale));\n        vertices.push(Vertex(0.0, 0.0, first.f));\n        vertices.unshift(Vertex(outPoint.x, outPoint.y, last.f));\n      }\n    }\n  }\n\n  if (state.gcode.reverse) {\n    vertices.reverse();\n  }\n  if (machine.rectangular) {\n    vertices = enforceRectLimits(vertices,\n                                 (machine.max_x - machine.min_x)/2.0,\n                                 (machine.max_y - machine.min_y)/2.0\n                                 );\n  } else {\n    vertices = enforcePolarLimits(vertices,\n                                  machine.max_radius\n                                  );\n  }\n\n  return vertices;\n}\n\nconst wiper = (state) => {\n  var outputVertices = []\n\n  // Do the math\n\n  // Get the angle between 0,180\n  let angle = (180.0 - (state.wiper.angle_deg % 360)) % 180.0;\n  if (angle < 0.0) {\n    angle += 180.0;\n  }\n  angle = degToRad(angle);\n\n  // Start with the defaults for 0,45\n  let height = 1;\n  let width = 1;\n  let machine = state.machine;\n  if (machine.rectangular) {\n    height = machine.max_y - machine.min_y;\n    width = machine.max_x - machine.min_x;\n  } else {\n    height = machine.max_radius * 2.0;\n    width = height;\n  }\n\n  let startLocation = Victor(-width/2.0, height/2.0)\n  let cosa = Math.cos(angle);\n  let sina = Math.sin(angle);\n  // These can be zero, but infinity isn't great for out math, so let's just clip it.\n  if (Math.abs(cosa) < 1.0e-10) {\n    cosa = 1.0e-10;\n  }\n  if (Math.abs(sina) < 1.0e-10) {\n    sina = 1.0e-10;\n  }\n  let orig_delta_w = Victor(state.wiper.size / cosa, 0.0);\n  let orig_delta_h = Victor(0.0, -state.wiper.size / sina);\n\n  if (angle > Math.PI/4.0 && angle < 0.75 * Math.PI) {\n    // flip the logic of x,y\n    let temp = orig_delta_w.clone();\n    orig_delta_w = orig_delta_h.clone();\n    orig_delta_h = temp;\n  }\n  if (angle > Math.PI/2.0) {\n    startLocation = Victor(-width/2.0, -height/2.0)\n    orig_delta_w = orig_delta_w.clone().multiply(Victor(-1.0, -1.0));\n    orig_delta_h = orig_delta_h.clone().multiply(Victor(-1.0, -1.0));\n  }\n  let delta_w = orig_delta_w;\n  let delta_h = orig_delta_h;\n  let endLocation = startLocation.clone().multiply(Victor(-1.0, -1.0));\n  outputVertices.push(startLocation);\n  let nextWidthPoint = startLocation;\n  let nextHeightPoint = startLocation;\n\n  let emergency_break = 0;\n  while (emergency_break < 1000) {\n    emergency_break += 1;\n\n    // \"right\"\n    nextWidthPoint = nextWidthPoint.clone().add(delta_w);\n    if (outOfBounds(nextWidthPoint, width, height)) {\n      let corner = boundPoint(nextWidthPoint.clone().subtract(delta_w), nextWidthPoint, width/2.0, height/2.0);\n      outputVertices.push(corner);\n      if (nearEnough(endLocation, corner)) {\n        break;\n      }\n      nextWidthPoint = boundPoint(nextHeightPoint, nextWidthPoint, width/2.0, height/2.0);\n      delta_w = orig_delta_h;\n    }\n    outputVertices.push(nextWidthPoint);\n    if (nearEnough(endLocation, nextWidthPoint)) {\n      break;\n    }\n\n    // \"down-left\"\n    nextHeightPoint = nextHeightPoint.clone().add(delta_h);\n    if (outOfBounds(nextHeightPoint, width, height)) {\n      nextHeightPoint = boundPoint(nextWidthPoint, nextHeightPoint, width/2.0, height/2.0);\n      delta_h = orig_delta_w;\n    }\n    outputVertices.push(nextHeightPoint);\n    if (nearEnough(endLocation, nextHeightPoint)) {\n      break;\n    }\n\n    // \"down\"\n    nextHeightPoint = nextHeightPoint.clone().add(delta_h);\n    outputVertices.push(nextHeightPoint);\n    if (nearEnough(endLocation, nextHeightPoint)) {\n      break;\n    }\n    if (outOfBounds(nextHeightPoint, width, height)) {\n      let corner = boundPoint(nextHeightPoint.clone().subtract(delta_h), nextHeightPoint, width/2.0, height/2.0);\n      outputVertices.push(corner);\n      if (nearEnough(endLocation, corner)) {\n        break;\n      }\n      nextHeightPoint = boundPoint(nextWidthPoint, nextHeightPoint, width/2.0, height/2.0);\n      delta_h = orig_delta_w;\n    }\n    outputVertices.push(nextHeightPoint);\n    if (nearEnough(endLocation, nextHeightPoint)) {\n      break;\n    }\n\n    // \"up-right\"\n    nextWidthPoint = nextWidthPoint.clone().add(delta_w);\n    outputVertices.push(nextWidthPoint);\n    if (nearEnough(endLocation, nextWidthPoint)) {\n      break;\n    }\n    if (outOfBounds(nextWidthPoint, width, height)) {\n      nextWidthPoint = boundPoint(nextHeightPoint, nextWidthPoint, width/2.0, height/2.0);\n      delta_w = orig_delta_h;\n    }\n  }\n\n  return polishVertices(state, outputVertices);\n};\n\nconst thetaRho = (state) => {\n  let machine = state.machine;\n  var x_scale = (machine.max_x - machine.min_x)/2.0 * 0.01 * state.file.zoom;\n  var y_scale = (machine.max_y - machine.min_y)/2.0 * 0.01 * state.file.zoom;\n  if (!machine.rectangular) {\n    x_scale = y_scale = machine.max_radius;\n  }\n  x_scale *= 0.01 * state.file.zoom;\n  y_scale *= 0.01 * state.file.zoom;\n  if (state.file.aspect_ratio) {\n    x_scale = y_scale = Math.min(x_scale,y_scale);\n  }\n\n  var newVertices = state.file.vertices.map( (vertex) => {\n    return {...vertex,\n      x: vertex.x * x_scale,\n      y: vertex.y * y_scale,\n    };\n  });\n  return polishVertices(state, newVertices);\n}\n\nconst transformShapes = (state) => {\n  let shape = findShape(state.shapes.current_shape)\n  let shapeInfo = shape.getInfo()\n  var input = []\n\n  if (shape) {\n    input = shapeInfo.vertices(state).map( (vertex) => {\n      return scale(vertex, 100.0 * state.transform.starting_size);\n    });\n  }\n\n  var num_loops = state.transform.num_loops;\n  var outputVertices = []\n  for (var i=0; i<num_loops; i++) {\n    for (var j=0; j<input.length; j++) {\n      let fraction = j/input.length;\n      outputVertices.push(transform(state.transform, input[j], i+fraction))\n    }\n  }\n\n  return polishVertices(state, outputVertices);\n};\n\nconst getApp = state => state.app;\nconst getShapes = state => state.shapes;\nconst getTransform = state => state.transform;\nconst getFile = state => state.file;\nconst getGCode = state => state.gcode;\nconst getWiper = state => state.wiper;\nconst getMachine = state => state.machine;\n\nexport const getVertices = createSelector(\n  [\n      getApp,\n      getShapes,\n      getTransform,\n      getFile,\n      getGCode,\n      getWiper,\n      getMachine,\n  ],\n  (app, shapes, transform, file, gcode, wiperState, machine) => {\n    let state = {\n      app: app,\n      shapes: shapes,\n      transform: transform,\n      file: file,\n      gcode: gcode,\n      wiper: wiperState,\n      machine: machine\n    };\n\n    if (state.app.input === 'shapes') {\n      return transformShapes(state);\n    } else if (state.app.input === 'wiper') {\n      return wiper(state);\n    } else if (state.app.input === 'code') {\n      return thetaRho(state);\n    } else {\n      return transformShapes(state);\n    }\n  }\n);\n\nexport const getVerticesStats = createSelector(\n  [\n      getVertices\n  ],\n  (vertices) => {\n    let distance = 0.0;\n    let previous = null;\n    vertices.forEach( (vertex) => {\n      if (previous) {\n        distance += Math.sqrt(Math.pow(vertex.x - previous.x, 2.0) +\n                              Math.pow(vertex.y - previous.y, 2.0));\n      }\n      previous = vertex;\n    });\n    return {\n      numPoints: vertices.length,\n      distance: Math.floor(distance),\n    };\n  }\n);\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport {\n    Accordion,\n    Card,\n    Col,\n    Form,\n    FormControl,\n    Row,\n    ToggleButton,\n    ToggleButtonGroup,\n} from 'react-bootstrap'\nimport {\n  toggleMachineRectExpanded,\n  setMachineMinX,\n  setMachineMaxX,\n  setMachineMinY,\n  setMachineMaxY,\n  setMachineRectOrigin } from './machineSlice'\n\nconst mapState = (state, ownProps) => {\n  return {\n    expanded: state.machine.rect_expanded,\n    active:   state.machine.rectangular,\n    min_x:    state.machine.min_x,\n    max_x:    state.machine.max_x,\n    min_y:    state.machine.min_y,\n    max_y:    state.machine.max_y,\n    origin:   state.machine.rect_origin,\n  }\n}\n\nconst mapDispatch = (dispatch, ownProps) => {\n  return {\n    activeCallback: (event) => {\n      dispatch(toggleMachineRectExpanded())\n    },\n    onMinXChange: (event) => {\n      dispatch(setMachineMinX(parseFloat(event.target.value)))\n    },\n    onMaxXChange: (event) => {\n      dispatch(setMachineMaxX(parseFloat(event.target.value)))\n    },\n    onMinYChange: (event) => {\n      dispatch(setMachineMinY(parseFloat(event.target.value)))\n    },\n    onMaxYChange: (event) => {\n      dispatch(setMachineMaxY(parseFloat(event.target.value)))\n    },\n    onOriginChange: (value) => {\n      dispatch(setMachineRectOrigin(value))\n    },\n  }\n}\n\nclass RectSettings extends Component {\n  render() {\n    var activeClassName = this.props.active ? 'active' : ''\n\n    return (\n      <Card className={`${activeClassName} overflow-auto`}>\n        <Accordion.Toggle as={Card.Header} eventKey={0} onClick={this.props.activeCallback}>\n          <h4>Rectangular Machine</h4>\n          Rectangular machines like Zen XY\n        </Accordion.Toggle>\n\n        <Accordion.Collapse eventKey={0}>\n          <Card.Body>\n            <Row className=\"align-items-center pb-2\">\n              <Col sm={4}>\n                <Form.Label htmlFor=\"min_x\">\n                  Min X (mm)\n                </Form.Label>\n              </Col>\n\n              <Col sm={8}>\n                <FormControl id=\"min_x\" type=\"number\" value={this.props.min_x} onChange={this.props.onMinXChange} />\n              </Col>\n            </Row>\n\n            <Row className=\"align-items-center pb-2\">\n              <Col sm={4}>\n                <Form.Label htmlFor=\"max_x\">\n                  Max X (mm)\n                </Form.Label>\n              </Col>\n\n              <Col sm={8}>\n                <FormControl id=\"max_x\" type=\"number\" value={this.props.max_x} onChange={this.props.onMaxXChange} />\n              </Col>\n            </Row>\n\n            <Row className=\"align-items-center pb-2\">\n              <Col sm={4}>\n                <Form.Label htmlFor=\"min_y\">\n                  Min Y (mm)\n                </Form.Label>\n              </Col>\n\n              <Col sm={8}>\n                <FormControl id=\"min_y\" type=\"number\" value={this.props.min_y} onChange={this.props.onMinYChange} />\n              </Col>\n            </Row>\n\n            <Row className=\"align-items-center pb-2\">\n              <Col sm={4}>\n                <Form.Label htmlFor=\"max_y\">\n                  Max Y (mm)\n                </Form.Label>\n              </Col>\n\n              <Col sm={8}>\n                <FormControl id=\"max_y\" type=\"number\" value={this.props.max_y} onChange={this.props.onMaxYChange} />\n              </Col>\n            </Row>\n\n            <Row className=\"align-items-center pb-2\">\n              <Col sm={4}>\n                <Form.Label htmlFor=\"origin\">\n                  Force origin\n                </Form.Label>\n              </Col>\n\n              <Col sm={8}>\n                <ToggleButtonGroup id=\"origin-bar\" type=\"checkbox\" name=\"origin\" value={this.props.origin} onChange={this.props.onOriginChange}>\n                  <ToggleButton variant=\"light\" value={0} >Lower Left</ToggleButton>\n                  <ToggleButton variant=\"light\" value={1} >Upper Left</ToggleButton>\n                  <ToggleButton variant=\"light\" value={2} >Upper Right</ToggleButton>\n                  <ToggleButton variant=\"light\" value={3} >Lower Right</ToggleButton>\n                </ToggleButtonGroup>\n              </Col>\n            </Row>\n          </Card.Body>\n        </Accordion.Collapse>\n      </Card>\n    )\n  }\n}\n\nexport default connect(mapState, mapDispatch)(RectSettings)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport {\n    Accordion,\n    Col,\n    Row,\n    Form,\n    Card\n} from 'react-bootstrap'\nimport {\n  toggleMachinePolarExpanded,\n  setMachineMaxRadius,\n  toggleMachineEndpoints,\n} from './machineSlice'\n\nconst mapState = (state, ownProps) => {\n  return {\n    expanded:   state.machine.polar_expanded,\n    active:     !state.machine.rectangular,\n    max_radius: state.machine.max_radius,\n    endpoints:  state.machine.polar_endpoints,\n  }\n}\n\nconst mapDispatch = (dispatch, ownProps) => {\n  return {\n    activeCallback: (event) => {\n      dispatch(toggleMachinePolarExpanded())\n    },\n    onMaxRadiusChange: (event) => {\n      dispatch(setMachineMaxRadius(parseFloat(event.target.value)))\n    },\n    toggleEndpoints: () => {\n      dispatch(toggleMachineEndpoints());\n    },\n  }\n}\n\nclass PolarSettings extends Component {\n  render() {\n    var activeClassName = this.props.active ? 'active' : ''\n    var endpointsActiveClass = this.props.endpoints ? 'active' : null\n\n    return (\n      <Card className={`${activeClassName} overflow-auto`}>\n        <Accordion.Toggle as={Card.Header} eventKey={1} onClick={this.props.activeCallback}>\n          <h4>Polar Machine</h4>\n          Polar machines like Sisyphus\n        </Accordion.Toggle>\n\n        <Accordion.Collapse eventKey={1}>\n          <Card.Body>\n            <Row className=\"align-items-center pb-2\">\n              <Col sm={4}>\n                <Form.Label htmlFor=\"max_radius\">\n                  Max radius (mm)\n                </Form.Label>\n              </Col>\n              <Col sm={8}>\n                <Form.Control id=\"max_radius\" type=\"number\" value={this.props.max_radius} onChange={this.props.onMaxRadiusChange} />\n              </Col>\n            </Row>\n\n            <Accordion>\n              <Card className={`${endpointsActiveClass} overflow-auto`}>\n                <Accordion.Toggle as={Card.Header} eventKey={0} onClick={this.props.toggleEndpoints}>\n                  <h4>Force Endpoints</h4>\n                  Forces the first and last points to be at the center and edge\n                </Accordion.Toggle>\n              </Card>\n            </Accordion>\n          </Card.Body>\n        </Accordion.Collapse>\n      </Card>\n    )\n  }\n}\n\nexport default connect(mapState, mapDispatch)(PolarSettings)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  Accordion,\n  Button,\n  Form,\n  Modal,\n  Card\n} from 'react-bootstrap'\nimport {\n  setGCodeFilename,\n  setGCodePre,\n  setGCodePost,\n  setGCodeShow,\n  toggleGCodeReverse,\n} from './gCodeSlice'\nimport { findShape } from '../shapes/registered_shapes.js'\nimport { getVertices } from '../../common/Computer.js'\nimport { Vertex } from '../../common/Geometry'\nimport Victor from 'victor'\n\n// Helper function to take a string and make the user download a text file with that text as the\n// content.\n//\n// I don't really understand this, but I took it from here, and it seems to work:\n// https://stackoverflow.com/a/18197511\n//\nfunction download(filename, text) {\n  let link = document.createElement('a');\n  link.download = filename;\n\n  let blob = new Blob([text],{type: 'text/plain;charset=utf-8'});\n\n  // Windows Edge fix\n  if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n    window.navigator.msSaveOrOpenBlob(blob, filename);\n  } else {\n    link.href = URL.createObjectURL(blob);\n    if (document.createEvent) {\n      var event = document.createEvent('MouseEvents');\n      event.initEvent('click', true, true);\n      link.dispatchEvent(event);\n    }\n    else {\n      link.click();\n    }\n    URL.revokeObjectURL(link.href);\n  }\n}\n\nfunction gcode(vertex) {\n  var command = 'G01' +\n    ' X' + vertex.x.toFixed(3) +\n    ' Y' + vertex.y.toFixed(3)\n  if (vertex.speed > 0.0) {\n    command += ' F' + vertex.f\n  }\n  return command + '\\n'\n}\n\nfunction thetarho(vertex) {\n  return \"\" + vertex.x.toFixed(5) + \" \" + vertex.y.toFixed(5) + \"\\n\";\n}\n\nconst getComments = (state) => {\n  let comments = [];\n  comments.push(\"Created by Sandify\");\n  comments.push(\"\");\n  comments.push(\"  https://sandify.org\");\n  comments.push(\"\");\n  comments.push(\"  Sandify Version: \" + state.app.sandify_version);\n  comments.push(\"\");\n  comments.push(\"  Machine Type: \" + (state.machine.rectangular ? \"Rectangular\" : \"Polar\"));\n  if (state.machine.rectangular) {\n    comments.push(\"    MinX: \" + state.machine.min_x + \" MaxX: \" + state.machine.max_x + \" MinY: \" + state.machine.min_y + \" MaxY: \" + state.machine.max_y);\n  } else {\n    comments.push(\"    Max Radius: \" + state.machine.max_radius);\n    comments.push(\"    Force Endpoints: \" + state.machine.polar_endpoints);\n  }\n\n  switch (state.app.input) {\n    case 'shapes': // shapes\n      var shapeInfo = findShape(state.shapes.current_shape).getInfo();\n\n      comments.push(\"  Content Type: Shapes\");\n      comments.push(\"    Starting Size: \" + state.transform.starting_size);\n      comments.push(\"    Offset: X: \" + state.transform.offset_x + \" Y: \" + state.transform.offset_y);\n      comments.push(\"    Selected Shape: \" + shapeInfo.name);\n\n      shapeInfo.options.forEach((option) => {\n        comments.push(\"      \" + option.title + \": \" + state.shapes[option.key]);\n      });\n\n      comments.push(\"    Number of Loops: \" + state.transform.num_loops);\n      comments.push(\"    Spin: \" + state.transform.spin_enabled);\n      if (state.transform.spin_enabled) {\n        comments.push(\"      Spin Value: \" + state.transform.spin_value);\n        comments.push(\"      Spin Switchbacks: \" + state.transform.spin_switchbacks);\n      }\n      comments.push(\"    Grow: \" + state.transform.grow_enabled);\n      if (state.transform.grow_enabled) {\n        comments.push(\"      Grow Value: \" + state.transform.grow_value);\n      }\n      comments.push(\"    Track: \" + state.transform.track_enabled);\n      if (state.transform.track_enabled) {\n        comments.push(\"      Track Size: \" + state.transform.track_value);\n        comments.push(\"      Track Length: \" + state.transform.track_length);\n        comments.push(\"      Track Grow: \" + state.transform.track_grow_enabled);\n        if (state.transform.track_grow_enabled) {\n          comments.push(\"          Track Grow Value: \" + state.transform.track_grow);\n        }\n      }\n      break;\n    case 'wiper':\n      comments.push(\"  Content Type: Wiper\");\n      comments.push(\"    Wiper Angle: \" + state.wiper.angle_deg);\n      comments.push(\"    Wiper Size: \"  + state.wiper.size);\n      break;\n    case 'code': // Theta Rho\n      comments.push(\"  Content Type: ThetaRho\");\n      comments.push(\"    Input File: \" + state.file.name);\n      comments.push(\"    Zoom: \"  + state.file.zoom);\n      comments.push(\"    Aspect Ratio: \" + state.file.aspect_ratio);\n      break;\n    default: // Dunno\n      comments.push(\"  Content Type: Unknown\");\n      break;\n  }\n  comments.push(\"  Path Reversed: \" + state.gcode.reverse);\n  comments.push(\"\");\n\n  return comments;\n};\n\nconst mapState = (state, ownProps) => {\n  return {\n    reverse: state.gcode.reverse,\n    show: state.gcode.show,\n    vertices: getVertices(state),\n    settings: getComments(state),\n    xOffset: (state.machine.min_x + state.machine.max_x) / 2.0,\n    yOffset: (state.machine.min_y + state.machine.max_y) / 2.0,\n    max_radius: state.machine.max_radius,\n    filename: state.gcode.filename,\n    pre: state.gcode.pre,\n    post: state.gcode.post,\n  }\n}\n\nconst mapDispatch = (dispatch, ownProps) => {\n  return {\n    open: () => {\n      dispatch(setGCodeShow(true));\n    },\n    close: () => {\n      dispatch(setGCodeShow(false));\n    },\n    toggleReverse: () => {\n      dispatch(toggleGCodeReverse());\n    },\n    setFilename: (event) => {\n      dispatch(setGCodeFilename(event.target.value));\n    },\n    setPre: (event) => {\n      dispatch(setGCodePre(event.target.value));\n    },\n    setPost: (event) => {\n      dispatch(setGCodePost(event.target.value));\n    },\n  }\n}\n\n// A class that will encapsulate all the gcode generation. This is currently just a button that\n// converts vertices and a speed into a list of positions. There is a lot more than could exists\n// here.\nclass GCodeGenerator extends Component {\n  generateGCode() {\n    var content = \"; \" + this.props.settings.join(\"\\n; \");\n    content += \"\\n\";\n    content += \"; filename: '\" + this.props.filename + \"'\\n\\n\";\n    content += \"; BEGIN PRE\\n\";\n    content += this.props.pre;\n    content += \"; END PRE\\n\";\n\n    console.log(\"offset x: \" + this.props.xOffset + \" y: \" + this.props.yOffset);\n    var centeredVertices = this.props.vertices.map( (vertex) => {\n      return {\n        ...vertex,\n        x: vertex.x + this.props.xOffset,\n        y: vertex.y + this.props.yOffset,\n      }\n    });\n\n    var lines = centeredVertices.map(gcode);\n\n    content += lines.join('');\n\n    content += '\\n';\n    content += \"; BEGIN POST\\n\";\n    content += this.props.post;\n    content += \"; END POST\\n\";\n    var filename = this.props.filename;\n    if (!filename.includes(\".\")) {\n      filename += \".gcode\";\n    }\n    download(filename, content)\n    this.props.close();\n  }\n\n  generateThetaRho() {\n    var content = \"# \" + this.props.settings.join(\"\\n# \");\n    content += \"\\n\";\n    content += \"# filename: '\" + this.props.filename + \"'\\n\\n\";\n    content += \"# BEGIN PRE\\n\";\n    content += this.props.pre;\n    content += \"# END PRE\\n\";\n    content += '\\n';\n\n    // First, downsample larger lines into smaller ones.\n    var maxLength = 2.0;\n    var subsampledVertices = [];\n    var previous = undefined;\n    var next;\n    for (next = 0; next < this.props.vertices.length; next++) {\n      if (previous !== undefined) {\n        var start = Victor.fromObject(this.props.vertices[previous]);\n        var end = Victor.fromObject(this.props.vertices[next]);\n\n        var delta = end.clone().subtract(start);\n        var deltaSegment = end.clone().subtract(start).normalize().multiply(Victor(maxLength, maxLength));\n\n        // This loads up (start, end].\n        for (let step = 0; step < (delta.magnitude() / maxLength) ; step++) {\n          subsampledVertices.push(Vertex(start.x + step * deltaSegment.x,\n                                         start.y + step * deltaSegment.y,\n                                         this.props.vertices[next].f));\n        }\n\n      }\n      previous = next;\n    }\n    // Add in the end.\n    if (previous !== undefined) {\n      subsampledVertices.push(this.props.vertices[this.props.vertices.length - 1]);\n    }\n\n    // Convert to Theta, Rho\n    var trVertices = [];\n    var previousTheta = 0;\n    var previousRawTheta = 0;\n    for (next = 0; next < subsampledVertices.length; ++next) {\n      // Normalize the radius\n      var rho = Victor.fromObject(subsampledVertices[next]).magnitude() / this.props.max_radius;\n\n      // What is the basic theta for this point?\n      var rawTheta = Math.atan2(subsampledVertices[next].x,\n                                subsampledVertices[next].y);\n      // Convert to [0,2pi]\n      rawTheta = (rawTheta + 2.0 * Math.PI) % (2.0 * Math.PI);\n\n      // Compute the difference to the last point.\n      var deltaTheta = rawTheta - previousRawTheta;\n      // Convert to [-pi,pi]\n      if (deltaTheta < -Math.PI) {\n        deltaTheta += 2.0 * Math.PI;\n      }\n      if (deltaTheta > Math.PI) {\n        deltaTheta -= 2.0 * Math.PI;\n      }\n      var theta = previousTheta + deltaTheta;\n      previousRawTheta = rawTheta;\n      previousTheta = theta;\n\n      trVertices.push(Vertex(theta, rho, subsampledVertices[next].f));\n    }\n\n    var lines = trVertices.map(thetarho);\n\n    content += lines.join('');\n\n    content += '\\n';\n    content += \"# BEGIN POST\\n\";\n    content += this.props.post;\n    content += \"# END POST\\n\";\n\n    var filename = this.props.filename;\n    if (!filename.includes(\".\")) {\n      filename += \".thr\";\n    }\n    download(filename, content)\n\n    this.props.close();\n  }\n\n  render() {\n    var reverseActiveClass = (this.props.reverse ? \"active\" : null)\n\n    return (\n      <div>\n        <Button className=\"mt-3 p-3 btn-block\" variant=\"secondary\" onClick={this.props.open}>Generate code</Button>\n\n        <Modal show={this.props.show} onHide={this.props.close}>\n          <Modal.Header closeButton>\n            <Modal.Title>Code Parameters</Modal.Title>\n          </Modal.Header>\n\n          <Modal.Body>\n            <Form.Group controlId=\"sandify-filename\">\n              <Form.Label>Name of output</Form.Label>\n              <Form.Control type=\"text\" value={this.props.filename} onChange={this.props.setFilename} />\n            </Form.Group>\n\n            <Form.Group controlId=\"pre-code\">\n              <Form.Label>Program start code</Form.Label>\n              <Form.Control as=\"textarea\" value={this.props.pre} onChange={this.props.setPre} />\n            </Form.Group>\n\n            <Form.Group controlId=\"post-code\">\n              <Form.Label>Program end code</Form.Label>\n              <Form.Control as=\"textarea\" value={this.props.post} onChange={this.props.setPost} />\n            </Form.Group>\n\n            <Accordion>\n              <Card className={`${reverseActiveClass} overflow-auto`}>\n                <Accordion.Toggle as={Card.Header} eventKey={0} onClick={this.props.toggleReverse}>\n                  <h4>Reverse Path</h4>\n                  Reverses the code, starting at the final location\n                </Accordion.Toggle>\n              </Card>\n            </Accordion>\n          </Modal.Body>\n\n          <Modal.Footer>\n            <Button id=\"code-close\" variant=\"link\" onClick={this.props.close}>Close</Button>\n            <Button id=\"code-gen-gcode\" variant=\"primary\" onClick={this.generateGCode.bind(this)}>Generate GCode</Button>\n            <Button id=\"code-gen-thetarho\" variant=\"primary\" onClick={this.generateThetaRho.bind(this)}>Generate Theta Rho</Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    )\n  }\n}\n\nexport default connect(mapState, mapDispatch)(GCodeGenerator)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport {\n    Accordion\n} from 'react-bootstrap'\nimport RectSettings from './RectSettings.js'\nimport PolarSettings from './PolarSettings.js'\nimport GCodeGenerator from '../gcode/GCodeGenerator'\n\nconst mapState = (state, ownProps) => {\n  return {\n    rectangular: state.machine.rectangular,\n  }\n}\n\nclass MachineSettings extends Component {\n  render() {\n    return (\n      <div id=\"bigger-box\" className=\"p-3\">\n        <h4>Machine Settings</h4>\n\n        <Accordion defaultActiveKey={this.props.rectangular ? 0 : 1}>\n          <RectSettings />\n          <PolarSettings />\n        </Accordion>\n\n        <GCodeGenerator />\n      </div>\n    )\n  }\n}\n\nexport default connect(mapState, null)(MachineSettings)\n","import React, { Component } from 'react'\nimport ReactDOM from 'react-dom'\nimport { connect } from 'react-redux'\nimport { Vertex } from '../../common/Geometry'\nimport { setMachineSize } from './machineSlice'\nimport {\n  transform,\n  getVertices,\n} from '../../common/Computer';\nimport { createSelector } from 'reselect'\n\nconst getTransform = state => state.transform;\n\nconst getTrackVertices = createSelector(\n  [getTransform],\n  (data) => {\n    var num_loops = data.num_loops;\n    var trackVertices = []\n    for (var i=0; i<num_loops; i++) {\n      if (data.track_enabled) {\n        trackVertices.push(transform(data, {x: 0.0, y: 0.0}, i))\n      }\n    }\n    return trackVertices;\n  }\n);\n\nconst mapState = (state, ownProps) => {\n  return {\n    use_rect: state.machine.rectangular,\n    min_x: state.machine.min_x,\n    max_x: state.machine.max_x,\n    min_y: state.machine.min_y,\n    max_y: state.machine.max_y,\n    max_radius: state.machine.max_radius,\n    canvas_width: state.machine.canvas_width,\n    canvas_height: state.machine.canvas_height,\n    vertices: getVertices(state),\n    slider_value: state.machine.slider_value,\n    showTrack: state.app.input === 0,\n    trackVertices: getTrackVertices(state),\n  }\n}\n\nconst mapDispatch = (dispatch, ownProps) => {\n  return {\n    onResize: (size) => {\n      dispatch(setMachineSize(size))\n    },\n  }\n}\n\n// Contains the preview window, and any parameters for the machine.\nclass PreviewWindow extends Component {\n  componentDidMount() {\n    var canvas = ReactDOM.findDOMNode(this);\n    var context = canvas.getContext('2d');\n    var bigBox = document.getElementById(\"bigger-box\");\n    this.resize(canvas, bigBox);\n    window.addEventListener('resize', () => { this.resize(canvas, bigBox) }, false);\n\n    // force a resize so that it autosizes properly when running locally\n    setTimeout(() => this.resize(canvas, bigBox), 250);\n\n    this.paint(context);\n  }\n\n  componentDidUpdate() {\n    var canvas = ReactDOM.findDOMNode(this);\n    var context = canvas.getContext('2d');\n    context.clearRect(0, 0, this.props.canvas_width, this.props.canvas_height);\n    var bigBox = document.getElementById(\"bigger-box\");\n    this.resize(canvas, bigBox);\n  }\n\n  // in mm means in units of mm, but 0,0 is the center, not the lower corner or something.\n  mmToPixelsScale() {\n    var machine_x = 1;\n    var machine_y = 1;\n    if (this.props.use_rect) {\n      machine_x = this.props.max_x - this.props.min_x;\n      machine_y = this.props.max_y - this.props.min_y;\n    } else {\n      machine_x = this.props.max_radius * 2.0;\n      machine_y = machine_x;\n    }\n\n    var scale_x = this.props.canvas_width / machine_x;\n    var scale_y = this.props.canvas_height / machine_y;\n    // Keep it square.\n    return Math.min(scale_x, scale_y) * 0.95;\n  }\n\n  mmToPixels(vertex) {\n    var min_scale = this.mmToPixelsScale()\n\n    var x = vertex.x * min_scale + this.props.canvas_width/2.0;\n    // Y for pixels starts at the top, and goes down.\n    var y = -vertex.y * min_scale + this.props.canvas_height/2.0;\n\n    return Vertex(x, y);\n  }\n\n  moveTo_mm(context, vertex) {\n    var in_mm = this.mmToPixels(vertex);\n    context.moveTo(in_mm.x, in_mm.y)\n  }\n\n  lineTo_mm(context, vertex) {\n    var in_mm = this.mmToPixels(vertex);\n    context.lineTo(in_mm.x, in_mm.y)\n  }\n\n  dot_mm(context, vertex) {\n    var in_mm = this.mmToPixels(vertex);\n    context.arc(in_mm.x, in_mm.y, Math.max(4.0, this.mmToPixelsScale() * 1.5), 0, 2 * Math.PI, true);\n    context.fillStyle = context.strokeStyle;\n    context.fill();\n  }\n\n  slice_vertices(vertices, sliderValue) {\n    const slide_size = 10.0;\n    if (sliderValue === 0) {\n      return vertices;\n    }\n\n    // Let's start by just assuming we want a slide_size sized window, as a percentage of the whole\n    // thing.\n    const begin_fraction = sliderValue / 100.0;\n    const end_fraction = (slide_size + sliderValue) / 100.0;\n\n    const begin_vertex = Math.round(vertices.length * begin_fraction);\n    const end_vertex = Math.round(vertices.length * end_fraction);\n\n    return vertices.slice(begin_vertex, end_vertex);\n  }\n\n  paint(context) {\n    context.save();\n\n    // Draw the bounds of the machine\n    context.beginPath();\n    context.lineWidth = \"1\";\n    context.strokeStyle = \"blue\";\n    if (this.props.use_rect) {\n      this.moveTo_mm(context, Vertex((this.props.min_x - this.props.max_x)/2.0, (this.props.min_y - this.props.max_y)/2.0))\n      this.lineTo_mm(context, Vertex((this.props.max_x - this.props.min_x)/2.0, (this.props.min_y - this.props.max_y)/2.0))\n      this.lineTo_mm(context, Vertex((this.props.max_x - this.props.min_x)/2.0, (this.props.max_y - this.props.min_y)/2.0))\n      this.lineTo_mm(context, Vertex((this.props.min_x - this.props.max_x)/2.0, (this.props.max_y - this.props.min_y)/2.0))\n      this.lineTo_mm(context, Vertex((this.props.min_x - this.props.max_x)/2.0, (this.props.min_y - this.props.max_y)/2.0))\n    } else {\n      this.moveTo_mm(context, Vertex(this.props.max_radius, 0.0));\n      let resolution = 128.0;\n      for (let i=0; i<=resolution ; i++) {\n        let angle = Math.PI * 2.0 / resolution * i\n        this.lineTo_mm(context, Vertex(this.props.max_radius * Math.cos(angle),\n                                       this.props.max_radius * Math.sin(angle)));\n      }\n    }\n    context.stroke();\n\n    var drawing_vertices = this.props.vertices;\n    drawing_vertices = this.slice_vertices(drawing_vertices, this.props.slider_value);\n    if (drawing_vertices && drawing_vertices.length > 0) {\n      // Draw the start and end points\n      context.beginPath();\n      context.lineWidth = 1.0;\n      context.strokeStyle = \"green\";\n      this.dot_mm(context, this.props.vertices[0]);\n      context.stroke();\n      context.beginPath();\n      context.lineWidth = 1.0;\n      context.strokeStyle = \"red\";\n      this.dot_mm(context, this.props.vertices[this.props.vertices.length-1]);\n      context.stroke();\n\n      // Draw the background vertices\n      if (this.props.slider_value !== 0) {\n        context.beginPath();\n        context.lineWidth = this.mmToPixelsScale();\n        context.strokeStyle = \"gray\";\n        this.moveTo_mm(context, this.props.vertices[0]);\n        for (let i=0; i<this.props.vertices.length; i++) {\n          this.lineTo_mm(context, this.props.vertices[i]);\n        }\n        context.stroke();\n      }\n\n      // Draw the specific vertices\n      context.beginPath();\n      context.lineWidth = this.mmToPixelsScale();\n      context.strokeStyle = \"yellow\";\n      this.moveTo_mm(context, drawing_vertices[0]);\n      for (let i=0; i<drawing_vertices.length; i++) {\n        this.lineTo_mm(context, drawing_vertices[i]);\n      }\n      context.stroke();\n    }\n\n    // Draw the trackVertices\n    if (this.props.trackVertices && this.props.trackVertices.length > 0 && this.props.showTrack) {\n      // Draw the track vertices\n      context.beginPath();\n      context.lineWidth = this.mmToPixelsScale();\n      context.strokeStyle = \"green\";\n      this.moveTo_mm(context, this.props.trackVertices[0]);\n      for (let i=0; i<this.props.trackVertices.length; i++) {\n        this.lineTo_mm(context, this.props.trackVertices[i]);\n      }\n      context.stroke();\n    }\n\n    context.restore();\n  }\n\n  resize(canvas, bigBox) {\n    var size = parseInt(getComputedStyle(bigBox).getPropertyValue('width'),10);\n    canvas.width = size;\n    canvas.height = size;\n    if (this.props.canvas_width !== size) {\n      this.props.onResize(size);\n    }\n    var context = canvas.getContext('2d');\n    this.paint(context)\n  }\n\n  render() {\n    const {canvas_width, canvas_height} = this.props;\n    return (\n        <canvas className=\"preview-canvas\"\n          width={canvas_width}\n          height={canvas_height}\n        />\n    );\n  }\n}\nexport default connect(mapState, mapDispatch)(PreviewWindow)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Card } from 'react-bootstrap'\nimport Slider from 'rc-slider'\nimport 'rc-slider/assets/index.css'\nimport { getVerticesStats } from '../../common/Computer.js'\nimport MachineSettings from './MachineSettings'\nimport PreviewWindow from './PreviewWindow'\nimport { setMachineSlider } from './machineSlice'\nimport './MachinePreview.css'\n\nconst mapState = (state, ownProps) => {\n  return {\n    slider_value: state.machine.slider_value,\n    verticesStats: getVerticesStats(state),\n  }\n}\n\nconst mapDispatch = (dispatch, ownProps) => {\n  return {\n    onSlider: (value) => {\n      dispatch(setMachineSlider(value))\n    },\n  }\n}\n\nclass MachinePreview extends Component {\n  render() {\n    return (\n      <div className=\"machine-preview\">\n        <Card>\n            <PreviewWindow />\n\n            <div className=\"m-2\">\n              Points: {this.props.verticesStats.numPoints}, Distance: {this.props.verticesStats.distance}\n            </div>\n\n            <div className=\"p-3\">\n                <Slider\n                  value={this.props.slider_value}\n                  step={1.0}\n                  min={0.0}\n                  max={100.0}\n                  onChange={this.props.onSlider}\n                />\n            </div>\n\n            <MachineSettings />\n        </Card>\n      </div>\n    )\n  }\n}\n\nexport default connect(mapState, mapDispatch)(MachinePreview)\n","import React, { Component } from 'react'\nimport {\n  Col,\n  Container,\n  Row\n} from 'react-bootstrap'\nimport { configureStore } from \"@reduxjs/toolkit\"\nimport { combineReducers } from 'redux'\nimport { Provider } from 'react-redux'\nimport appReducer from './appSlice.js'\nimport fileReducer from '../theta_rho/fileSlice.js'\nimport machineReducer from '../machine/machineSlice.js'\nimport gcodeReducer from '../gcode/gCodeSlice.js'\nimport wiperReducer from '../wiper/wiperSlice.js'\nimport shapesReducer from '../shapes/shapeSlice.js'\nimport transformsReducer from '../transforms/transformsSlice.js'\nimport turtleReducer from '../turtle/turtleSlice.js'\nimport Header from './Header'\nimport Footer from './Footer'\nimport InputTabs from './InputTabs'\nimport MachinePreview from '../machine/MachinePreview'\nimport './App.css'\n\nconst store =\n  configureStore({\n    reducer: combineReducers({\n      app: appReducer,\n      file: fileReducer,\n      gcode: gcodeReducer,\n      machine: machineReducer,\n      shapes: shapesReducer,\n      transform: transformsReducer,\n      wiper: wiperReducer,\n      turtle: turtleReducer\n    })});\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <div className=\"App\">\n          <Header />\n\n          <main>\n            <Container fluid>\n              <Row className=\"pt-3\">\n                <Col lg={7}>\n                  <InputTabs />\n                </Col>\n\n                <Col lg={5}>\n                  <MachinePreview />\n                </Col>\n              </Row>\n            </Container>\n          </main>\n\n          <Footer />\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './features/app/App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}