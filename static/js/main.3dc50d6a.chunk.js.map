{"version":3,"sources":["features/app/reactGA.js","features/app/logo.svg","features/app/Header.js","components/InputOption.js","components/CheckboxOption.js","models/Machine.js","features/machine/machineSlice.js","features/machine/RectSettings.js","features/machine/PolarSettings.js","features/machine/MachineSettings.js","features/app/Footer.js","components/CommentsBox.js","components/DropdownOption.js","components/ToggleButtonOption.js","models/Shape.js","models/Circle.js","common/util.js","models/Epicycloid.js","models/FileImport.js","models/Effect.js","common/geometry.js","models/Fisheye.js","models/Warp.js","models/circle_packer/Circle.js","common/PriorityQueue.js","common/Graph.js","features/machine/Machine.js","features/machine/PolarMachine.js","features/machine/RectMachine.js","features/machine/computer.js","models/circle_packer/CirclePacker.js","models/fractal_spirograph/Orbit.js","models/fractal_spirograph/FractalSpirograph.js","models/Heart.js","models/Hypocycloid.js","models/input_text/raysol_cursive.js","models/input_text/raysol_sanserif.js","models/input_text/Fonts.js","models/input_text/InputText.js","common/lindenmayer.js","models/lsystem/subtypes.js","models/lsystem/LSystem.js","features/machine/PolarInvertedMachine.js","features/machine/RectInvertedMachine.js","models/Mask.js","common/noise.js","models/Noise.js","models/NoiseWave.js","models/Point.js","models/Polygon.js","models/Reuleaux.js","models/Rose.js","models/space_filler/subtypes.js","models/space_filler/SpaceFiller.js","models/Star.js","models/tessellation_twist/TessellationTwist.js","common/eulerianTrail.js","models/v1_engineering/Vicious1Vertices.js","models/v1_engineering/V1Engineering.js","models/Wiper.js","features/exporter/exporterSlice.js","models/shapes.js","features/layers/layersSlice.js","features/layers/selectors.js","common/selectors.js","models/Transform.js","features/transforms/ScaleTransform.js","features/transforms/RotationTransform.js","features/transforms/TrackTransform.js","features/transforms/Transforms.js","features/layers/Layer.js","features/importer/Importer.js","features/importer/ThetaRhoImporter.js","features/importer/GCodeImporter.js","features/layers/Playlist.js","features/app/appSlice.js","features/app/InputTabs.js","features/preview/previewSlice.js","features/machine/selectors.js","features/preview/PreviewHelper.js","features/preview/PreviewLayer.js","features/preview/PreviewConnector.js","features/preview/PreviewWindow.js","models/Exporter.js","features/exporter/Exporter.js","features/exporter/CommentExporter.js","features/exporter/selectors.js","features/exporter/GCodeExporter.js","features/exporter/ScaraGCodeExporter.js","features/exporter/SvgExporter.js","features/exporter/ThetaRhoExporter.js","features/exporter/Downloader.js","features/preview/MachinePreview.js","features/app/store.js","features/app/App.js","index.js"],"names":["ReactGA","initialize","debug","pageview","window","location","pathname","search","Header","className","src","logo","alt","Component","InputOption","props","delayedSet","debounce","value","key","onChange","attrs","option","this","options","optionKey","model","optionType","type","minimum","min","parseFloat","maximum","max","visible","undefined","isVisible","Row","Col","sm","Form","Label","htmlFor","title","Control","as","step","isNaN","plaintext","plainText","event","target","delayKey","CheckboxOption","checked","machineOptions","minX","maxX","minY","maxY","origin","maxRadius","minimizeMoves","polarEndPoint","polarStartPoint","Machine","localMinX","localStorage","getItem","localMaxX","localMinY","localMaxY","localMaxRadius","machineSlice","createSlice","name","initialState","rectangular","rectExpanded","polarExpanded","JSON","parse","rectOrigin","reducers","updateMachine","state","action","Object","assign","payload","keys","forEach","setItem","toggleMachineRectExpanded","toggleMachinePolarExpanded","setMachineRectOrigin","newValue","i","length","includes","push","toggleMinimizeMoves","actions","setMachineSize","RectSettings","activeClassName","active","Card","Accordion","Toggle","eventKey","onClick","activeCallback","Collapse","Body","index","ToggleButtonGroup","id","onOriginChange","ToggleButton","variant","connect","ownProps","expanded","machine","getOptions","dispatch","PolarSettings","startPoint","onStartPointChange","endPoint","onEndPointChange","MachineSettings","defaultActiveKey","Footer","href","CommentsBox","commentsRender","comments","map","comment","DropdownOption","currentChoice","choices","Array","isArray","choice","label","currentLabel","ToggleButtonOption","shapeOptions","Shape","cache","repeatEnabled","canTransform","selectGroup","shouldCache","autosize","canChangeSize","canChangeHeight","canRotate","canMove","usesMachine","startingWidth","startingHeight","offsetX","offsetY","rotation","numLoops","transformMethod","growEnabled","growValue","growMethod","growMathInput","growMath","spinEnabled","spinValue","spinMethod","spinMathInput","spinMath","spinSwitchbacks","trackEnabled","trackGrowEnabled","trackValue","trackLength","trackNumLoops","trackGrow","connectionMethod","drawPortionPct","backtrackPct","rotateStartingPct","reverse","dragging","effect","circleLobes","circleDirection","Circle","points","shape","angle","Math","PI","Victor","cos","sin","roundP","n","p","round","Number","EPSILON","pow","reduce","numerator","denominator","gcd","a","b","log","message","epicycloidA","epicycloidB","Epicycloid","link","linkText","parseInt","reduced","rotations","isInteger","scale","multiply","x","y","fileName","aspectRatio","FileImport","importProps","originalAspectRatio","vertices","x_scale","y_scale","machine_aspect_ratio","vertex","Effect","distance","v1","v2","sqrt","point","atan2","onSegment","start","end","resizeVertices","sizeX","sizeY","size","bounds","loX","hiX","loY","hiY","findBounds","scaledBounds","deltaX","deltaY","clone","add","vertexRoundP","v","rotate","angleDeg","pctX","pctY","scaleX","scaleY","offset","circle","radius","arc","startAngle","endAngle","resolution","deltaAngle","tracePoints","subsample","maxLength","next","subsampledVertices","previous","fromObject","delta","subtract","deltaSegment","normalize","magnitude","toThetaRho","rhoMax","previousTheta","previousRawTheta","rho","rawTheta","deltaTheta","theta","fisheyeDistortion","Fisheye","width","layer","fisheye","d3Fisheye","distortion","focus","warped","warpType","changes","period","xMathInput","yMathInput","Warp","xMath","yMath","grid","shear","custom","ySign","periodx","periody","originalx","originaly","xShear","yShear","evaluate","err","console","r","growing","center","perimeter","outOfBounds","inBounds","outOfRectangularBounds","outOfPolarBounds","height","c","d","h","i1","i2","i3","i4","ret","p1","p2","sq","m","intersections","p3","p4","lineIntersection","flat","filter","Infinity","PriorityQueue","collection","element","isEmpty","added","splice","shift","mix","s","u","result","Graph","nodeMap","nodeKeys","Set","adjacencyList","edgeMap","edgeKeys","clearCachedPaths","node","toString","has","node1","node2","weight","node1Key","node2Key","edgeKey","sort","ekey1","ekey2","hash","startNode","endNode","shortest","getCachedShortestPath","times","backtrace","pq","nodes","enqueue","currentNode","dequeue","neighbor","time","path","lastStep","unshift","cacheShortestPath","cachedPaths","getPairedKey","enforceLimits","cleanVertices","limitPrecision","optimizePerimeter","layerInfo","border","outlinePerimeter","addStartPoint","addEndPoint","curr","line","clipLine","pt","nearestVertex","currentIndex","clipped","tracePerimeter","args","concat","prototype","apply","segments","stripExtraPerimeterVertices","settings","minimizePerimeterMoves","connectedVertices","j","current","prev","segment","onPerimeter","lastSegment","walked","pop","minDist","MAX_SAFE_INTEGER","dist","perimeterDistance","PolarMachine","perimeterConstant","first","last","abs","rm","r1","r2","radStart","radEnd","getIntersections","intersection","on","otherPoint","point1","nearestPerimeterVertex","direction","t","distanceToLine","dt","point2","s1","s2","RectMachine","corners","outPoint","corner","newPoint","dx","dy","rDx","rDy","idx","nearestCornerIndex","includeOriginalPoints","lp1","lp2","o1","o2","d1","d2","xSign","sign","dc","quadrantStart","pointLocation","quadrantEnd","boundPoint","sides","intPoint","Error","lengthSq","temp","midpoint","good","bad","fixed","sideStart","sideEnd","side","lineCrossSidePerp","diff","track","data","loopIndex","transformShape","amount","trackIndex","transformedVertex","growAmount","spinAmount","loopPeriod","stage","rotateDeg","addX","addY","buildTrackLoop","transform","numTrackLoops","nextTrackVertex","backtrack","trackVertices","trackDistances","completion","trackVertex","minIdx","minD","slice","throttledReportTiming","throttle","timing","category","variable","trailing","transformShapes","effects","arr","count","startTime","performance","now","outputVertices","floor","getShape","applyEffect","endTime","getMachineInstance","seed","startingRadius","attempts","CirclePacker","graph","rng","seedrandom","circles","boundaryCircle","boundaryRectangle","createCircles","connectOrphans","drawCircles","addCircle","rounds","possibleC","newCircle","growCircles","perimeterCircles","markConnected","orphans","connected","orphan","farthest","connector","closest","addEdge","find","boundaryIntersection","stack","drawCircle","walk","connectAlongPerimeter","angle2","valid","other","grow","neighbors","drawn","from","to","startingAngle","li1","li2","a2","a3","a1","drawConnectingArc","walkBack","intersection2","rectangleIntersection","addNode","Orbit","level","parent","child","alternateRotation","speed","velocity","newr","relativeSize","newx","newy","rsum","fractalSpirographVelocity","fractalSpirographResolution","fractalSpirographNumCircles","fractalSpirographRelativeSize","fractalSpirographAlternateRotation","FractalSpirograph","numCircles","sun","addChild","update","Heart","hypocycloidA","hypocycloidB","Star","raysol_cursive","raysol_sanserif","billsey","curve","billseyConverter","newVertices","prevPoint","cv","raysolConverter","MonospaceFont","ch","upper","toUpperCase","hasOwnProperty","CursiveFont","inputText","inputFont","rotateDir","getMaxX","InputText","prevLetter","lines","textPoints","chi","nextLetter","vi","connectorPoints","widthOffset","lastTheta","rPerY","thetaCenter","rOffset","rOffsetPerLine","thetaPerX","endTheta","onSubtypeChange","subtype","maxIterations","minIterations","iterations","onMinIterations","onMaxIterations","lsystem","config","output","input","axiom","char","rules","lsystemDraw","lsystemPath","instructions","currVertices","returnPaths","draw","returnPath","revChar","subtypes","F","W","X","Y","Z","A","B","LSystem","PolarInvertedMachine","enforceInvertedLimits","RectInvertedMachine","clip","maskMachine","maskMinimizeMoves","maskInvert","maskBorder","Mask","maskPerimeterConstant","mask","polish","fade","lerp","Grad","z","noise","perm","gradP","grad3","xin","yin","j1","F2","G2","x0","y0","x1","y1","x2","y2","gi0","gi1","gi2","t0","t1","t2","dot2","zin","k1","j2","k2","F3","k","G3","z0","z1","z2","x3","y3","z3","gi3","t3","dot3","n00","n01","n10","n11","n000","n001","n010","n011","n100","n101","n110","n111","w","noisejs","noiseMagnification","noiseApplication","noiseAmplitude","noiseType","Noise","applyLinearEffect","applyRadialEffect","contour","octaveNoise","contourFn","periodDenominator","simplex2","perlin2","octaves","persistence","total","frequency","amplitude","numParticles","noiseLevel","NoiseWave","machineInstance","particles","prevCurve","vertexGroups","particle","group","wasInside","newVertex","getParticleVertex","inside","getCurve","startPerimeter","endPerimeter","shapeSimilarity","estimationPoints","noiseSimilarity","pEndVertices","Point","polygonSides","roundCorners","roundFraction","Polygon","numberOfPoints","beta","alpha","angleStart","angleEnd","numberOfLinePoints","getLineVertices","arcAngle","reuleauxSides","Reuleaux","coverageAngle","halfCoverageAngle","corn","roseN","roseD","Rose","thetaClose","iterationsGrow","L","R","fillerSubtype","SpaceFiller","starRatio","star_scale","vecTriangle","vecSquare","getEdges","edges","da","db","ab","ac","bc","ap","bp","cp","tessellationTwistNumSides","tessellationTwistIterations","tessellationTwistRotate","TessellationTwist","numSides","tessellation","getShapeVertices","edge","prevKey","trail","g","edgePointer","edgeUsed","idReverse","idCount","getId","pushEdge","deg","inDeg","outDeg","directed","check","oddVertex","odd","checkDirected","checkUndirected","dfs","eulerianTrail","values","walkedVertices","walkedEdges","missingEdges","split","hasEdge","dijkstraShortestPath","missingVertex","visited","Vicious1Vertices","V1Engineering","wiperType","wiperSize","wiperAngleDeg","size_x","size_y","nearEnough","linearVertices","startLocation","cosa","sina","orig_delta_w","orig_delta_h","delta_w","delta_h","endLocation","nextWidthPoint","nextHeightPoint","emergency_break","fileType","Wiper","halfHeight","halfWidth","emergencyBreak","radiusPerAngle","spiralVertices","registeredShapes","polygon","star","heart","reuleaux","epicycloid","hypocycloid","Hypocycloid","rose","v1Engineering","fractal_spirograph","tessellation_twist","circle_packer","wiper","space_filler","noise_wave","file_import","warp","getShapeDefaults","getInitialState","getShapeSelectOptions","includeEffects","groupOptions","shapes","optionLabel","found","newOptions","protectedAttrs","newLayerType","newLayerName","toLowerCase","layersSlice","selected","newLayerNameOverride","copyLayerName","byId","allIds","addLayer","uniqueId","findIndex","moveLayer","oldIndex","newIndex","arrayMove","copyLayer","source","removeLayer","deleteId","restoreDefaults","defaults","setCurrentLayer","setSelectedLayer","setShapeType","attr","setNewLayerType","updateLayer","updateLayers","toggleRepeat","toggleGrow","toggleSpin","toggleTrack","toggleTrackGrow","toggleVisible","cachedSelectors","getCachedSelector","fn","layerIds","join","createDeepEqualSelector","createSelectorCreator","defaultMemoize","isEqual","getLayersById","layers","getLayerIds","getVisibleLayerIds","createSelector","getVisibleNonEffectIds","getCurrentLayer","getAllLayersInfo","layersById","getNumLayers","getKonvaLayerIds","currentLayer","visibleLayerIds","kIds","isDragging","getNumVisibleLayers","makeGetLayerIndex","layerId","makeGetLayer","makeGetEffects","memArray","array","memoizeArrayProducingFn","transformOptions","Transform","ScaleTransform","activeKey","onGrow","onGrowMethodChange","RotationTransform","onSpin","onSpinMethodChange","TrackTransform","activeGrowClassName","activeGrow","activeGrowKey","onTrack","onTrackGrow","Transforms","onRepeat","ontransformMethodChange","Layer","selectedOption","optionsRender","getOptionComponent","linkRender","rel","optionsListRender","entries","shapeSelectRender","showShapeSelectRender","onChangeType","maxMenuHeight","selectOptions","style","borderTop","borderBottom","Button","onRestoreDefaults","Importer","text","ThetaRhoImporter","callback","hasVertex","thetaRhos","ii","trim","indexOf","pointStrings","convertToXY","max_angle","rhoStep","GCodeImporter","isComment","addVertex","Toolpath","addLine","modal","addArcCurve","v0","startTheta","motion","thetaStep","loadFromString","results","normalizeCoords","customStyles","control","base","minHeight","SortableItem","SortableElement","canRemove","onCopyLayer","onLayerRemoved","onLayerSelected","onToggleLayerVisible","activeClass","dragClass","nameClass","ListGroup","Item","SortableList","SortableContainer","numLayers","maxHeight","Playlist","showNewLayer","showImportLayer","showCopyLayer","el","document","getElementById","scrollTop","scrollHeight","setState","file","files","reader","FileReader","onload","importer","endsWith","import","onFileImported","bind","toggleImportModal","readAsText","importerProps","onLayerImport","select","prevProps","scrollToBottom","selectedShape","namedInputRef","React","createRef","Modal","show","onHide","toggleNewModal","closeButton","Title","onChangeNewType","styles","onFocus","handleNameFocus","onChangeNewName","onLayerAdded","cursor","accept","onFileSelected","display","toggleCopyModal","onEntered","ref","onChangeCopyName","onLayerCopied","pressDelay","onSortEnd","onLayerMoved","dataset","appSlice","sandifyVersion","chooseInput","InputTabs","Tabs","onSelect","handleSelect","Tab","previewSlice","canvasWidth","canvasHeight","sliderValue","updatePreview","setPreviewSize","LRUCache","getState","getMachine","makeGetLayerMachine","makeGetLayerVertices","metashape","stringify","getCacheKey","get","getVertices","set","itemCount","makeGetTransformedVertices","makeGetConnectorVertices","startId","endId","makeGetComputedVertices","startLayer","startVertices","endVertices","layerIndex","polishVertices","makeGetPreviewVertices","transformedVertices","computedVertices","konvaScale","konvaDeltaX","konvaDeltaY","previewVertex","origX","origY","previewTransform","getAllComputedVertices","getConnectingVertices","getVertexOffsets","offsets","getVerticesStats","numPoints","getSliderBounds","preview","beginFraction","endFraction","getSliderColors","colors","startColor","Color","colorStep","darken","hex","makeGetPreviewTrackVertices","PreviewHelper","context","px","toPixels","moveTo","lineTo","color","fillStyle","strokeStyle","fill","lineWidth","stroke","offsetId","sliderEnd","beginPath","dot","markOriginalCoordinates","markCoordinates","signX","signY","toFixed","font","fillText","PreviewLayer","useSelector","allVertices","showTrack","shallowEqual","useDispatch","konvaSizeX","konvaSizeY","isSelected","isSliding","helper","shapeRef","trRef","useEffect","getLayer","batchDraw","Fragment","draggable","onTap","strokeWidth","sceneFunc","drawTrackVertices","oldColor","currentColor","absoluteI","pathColor","drawLayerVertices","drawStartAndEndPoints","drawSliderEndPoint","fillStrokeShape","hitFunc","onDragStart","e","onDragEnd","onTransformStart","onTransformEnd","centeredScaling","resizeEnabled","rotateEnabled","rotationSnaps","enabledAnchors","PreviewConnector","endLayer","selectedColor","unselectedColor","backgroundSelectedColor","backgroundUnselectedColor","drawConnector","PreviewWindow","wrapper","throttledResize","resize","addEventListener","setTimeout","getComputedStyle","getPropertyValue","onResize","relativeScale","reduceScale","use_rect","visibilityClass","clipFunc","ctx","rect","Consumer","store","onWheel","evt","preventDefault","onLayerChange","scaleByWheel","konvaIds","nextId","newSize","GCODE","THETARHO","SVG","SCARA","exporterOptions","polarRhoMax","unitsPerCircle","post","pre","Exporter","exporterSlice","updateExporter","indentLevel","computeOutputVertices","header","startComments","keyValueLine","endComments","exportCode","footer","content","padding","commenting","commentChar","metamodel","instance","metaOption","optionLine","CommentExporter","app","indent","optionLines","dedent","exporter","getComments","export","GCodeExporter","fileExtension","gcode","minx","miny","maxx","maxy","startx","starty","endx","endy","replace","ScaraGCodeExporter","thetaRho","m1","acos","m2","toScaraGcode","SvgExporter","centeredVertices","svg","firstPoint","thetarho","ThetaRhoExporter","starttheta","startrho","endtheta","endrho","mintheta","minrho","maxtheta","maxrho","exporters","Downloader","savedCode","gaRecord","downloadFile","close","createElement","download","blob","Blob","navigator","msSaveOrOpenBlob","URL","createObjectURL","createEvent","initEvent","dispatchEvent","click","revokeObjectURL","open","isGCode","MachinePreview","tabIndex","onKeyDown","currentLayerSelected","verticesStats","onSlider","shiftKey","configureStore","reducer","combineReducers","appReducer","layersReducer","exporterReducer","machineReducer","previewReducer","process","JEST_WORKER_ID","storedShape","currentShape","App","ReactDOM","render"],"mappings":"wVAEAA,IAAQC,WAAW,iBAAkB,CACnCC,OAAO,IAETF,IAAQG,SAASC,OAAOC,SAASC,SAAWF,OAAOC,SAASE,Q,0DCL7C,MAA0B,iC,gBCkB1BC,E,4JAbb,WACE,OACE,iCACE,sBAAKC,UAAU,mDAAf,UACE,qBAAKC,IAAKC,EAAMF,UAAU,gBAAgBG,IAAI,SAC9C,oBAAIH,UAAU,eAAd,qBACA,mBAAGA,UAAU,yBAAb,sF,GAPWI,a,iFC+DNC,E,kDA1Db,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,WAAaC,KAAU,SAACC,EAAOC,EAAKC,GACvC,IAAIC,EAAQ,GACZA,EAAMF,GAAOD,EACbE,EAASC,KACR,MANc,E,0CASnB,WAAU,IAAD,OACDC,EAASC,KAAKR,MAAMS,QAAQD,KAAKR,MAAMU,WACvCC,EAAQH,KAAKR,MAAMW,MACnBC,EAAaL,EAAOM,MAAQ,SAC5BC,EAAiC,oBAAfP,EAAOQ,IAAsBR,EAAOQ,IAAIJ,GAASK,WAAWT,EAAOQ,KACrFE,EAAiC,oBAAfV,EAAOW,IAAsBX,EAAOW,IAAIP,GAASK,WAAWT,EAAOW,KACrFC,OAA+BC,IAArBb,EAAOc,WAAiCd,EAAOc,UAAUV,GAEzE,OACE,eAACW,EAAA,EAAD,CAAK5B,UAAW,2BAA6ByB,EAAU,GAAK,WAA5D,UACE,cAACI,EAAA,EAAD,CAAKC,GAAI,EAAT,SACA,cAACC,EAAA,EAAKC,MAAN,CAAYC,QAAQ,eAApB,SACGpB,EAAOqB,UAIV,cAACL,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAACC,EAAA,EAAKI,QAAN,CACEC,GAAiB,aAAblB,EAA0B,WAAa,QAC3CC,KAAMD,EACNmB,KAAMxB,EAAOwB,KAAOxB,EAAOwB,KAAO,EAClChB,IAAMiB,MAAMlB,GAAqB,GAAVA,EACvBI,IAAMc,MAAMf,GAAqB,GAAVA,EACvBd,MAAOQ,EAAMH,KAAKR,MAAMU,WACxBuB,UAAW1B,EAAO2B,UAClB7B,SAAU,SAAC8B,GACT,IAAI7B,EAAQ,GACRH,EAAQgC,EAAMC,OAAOjC,MAEN,WAAfS,IACFT,EAAkB,KAAVA,EAAe,GAAKa,WAAWb,IAGzCG,EAAM,EAAKN,MAAMU,WAAaP,OACNiB,IAApBb,EAAOF,WACTC,EAAQC,EAAOF,SAASC,EAAOK,IAEjC,EAAKX,MAAMK,SAASC,QACQc,IAAxB,EAAKpB,MAAMqC,UACb,EAAKpC,WAAWE,EAAO,EAAKH,MAAMqC,SAAU,EAAKrC,MAAMK,sB,GAjD7CP,a,kBCiCXwC,E,4JAhCb,WAAU,IAAD,OACD/B,EAASC,KAAKR,MAAMS,QAAQD,KAAKR,MAAMU,WACvCC,EAAQH,KAAKR,MAAMW,MACnBQ,OAA+BC,IAArBb,EAAOc,WAAiCd,EAAOc,UAAUV,GAEzE,OACE,eAACW,EAAA,EAAD,CAAK5B,UAAW,sBAAwByB,EAAU,GAAK,WAAvD,UACE,cAACI,EAAA,EAAD,CAAKC,GAAI,EAAT,SACA,cAACC,EAAA,EAAKC,MAAN,CAAYC,QAAQ,eAApB,SACGpB,EAAOqB,UAIV,cAACL,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAAC,IAAD,CACEe,QAAS5B,EAAMH,KAAKR,MAAMU,WAC1BL,SAAU,SAACkC,GACT,IAAIjC,EAAQ,GACZA,EAAM,EAAKN,MAAMU,WAAa6B,OAENnB,IAApBb,EAAOF,WACTC,EAAQC,EAAOF,SAASC,EAAOK,IAGjC,EAAKX,MAAMK,SAASC,e,GAzBLR,aCRvB0C,EAAiB,CACrBC,KAAM,CACJb,MAAO,cAETc,KAAM,CACJd,MAAO,cAETe,KAAM,CACJf,MAAO,cAETgB,KAAM,CACJhB,MAAO,cAETiB,OAAQ,CACNjB,MAAO,gBAETkB,UAAW,CACTlB,MAAO,mBAETmB,cAAe,CACbnB,MAAO,kCACPf,KAAM,YAERmC,cAAe,CACbpB,MAAO,aAETqB,gBAAiB,CACfrB,MAAO,gBAIUsB,E,0FACnB,WACE,OAAOV,M,aC9BLW,EAAYnC,WAAWoC,aAAaC,QAAQ,SAAWD,aAAaC,QAAQ,kBAC5EC,EAAYtC,WAAWoC,aAAaC,QAAQ,SAAWD,aAAaC,QAAQ,kBAC5EE,EAAYvC,WAAWoC,aAAaC,QAAQ,SAAWD,aAAaC,QAAQ,kBAC5EG,EAAYxC,WAAWoC,aAAaC,QAAQ,SAAWD,aAAaC,QAAQ,kBAC5EI,EAAiBzC,WAAWoC,aAAaC,QAAQ,cAAgBD,aAAaC,QAAQ,mBAEtFK,EAAeC,YAAY,CAC/BC,KAAM,UACNC,aAAc,CACZC,iBAAa1C,IAAcgC,aAAaC,QAAQ,wBAAyBD,aAAaC,QAAQ,uBAAyB,EACvHU,cAAc,EACdC,eAAe,EACfvB,KAAMU,GAAa,EACnBT,KAAMY,GAAa,IACnBX,KAAMY,GAAa,EACnBX,KAAMY,GAAa,IACnBV,UAAWW,GAAkB,IAC7BV,cAAekB,KAAKC,MAAMd,aAAaC,QAAQ,oBAAqB,EACpEc,WAAY,GACZlB,gBAAiB,OACjBD,cAAe,QAEjBoB,SAAU,CACRC,cADQ,SACMC,EAAOC,GACnBC,OAAOC,OAAOH,EAAOC,EAAOG,SAC5BF,OAAOG,KAAKJ,EAAOG,SAASE,SAAQ,SAAAxE,GAClCgD,aAAayB,QAAQzE,EAAKmE,EAAOG,QAAQtE,QAG7C0E,0BAPQ,SAOkBR,EAAOC,GAC/BD,EAAMR,aAAc,EACpBQ,EAAMP,cAAgBO,EAAMP,aAC5BO,EAAMN,eAAgB,EACtBZ,aAAayB,QAAQ,sBAAuB,IAE9CE,2BAbQ,SAamBT,EAAOC,GAChCD,EAAMR,aAAc,EACpBQ,EAAMP,cAAe,EACrBO,EAAMN,eAAiBM,EAAMN,cAC7BZ,aAAayB,QAAQ,sBAAuB,IAE9CG,qBAnBQ,SAmBaV,EAAOC,GAI1B,IAHA,IAAIU,EAAW,GACX9E,EAAQoE,EAAOG,QAEVQ,EAAI,EAAGA,EAAI/E,EAAMgF,OAASD,IACjC,IAAKZ,EAAMH,WAAWiB,SAASjF,EAAM+E,IAAK,CACxCD,EAASI,KAAKlF,EAAM+E,IACpB,MAGJZ,EAAMH,WAAac,GAErBK,oBA/BQ,SA+BYhB,EAAOC,GACzBD,EAAMvB,eAAiBuB,EAAMvB,cAC7BK,aAAayB,QAAQ,gBAAiBP,EAAMvB,mBAK3C,EAOHW,EAAa6B,QANflB,EADK,EACLA,cACAS,EAFK,EAELA,0BACAC,EAHK,EAGLA,2BACAC,EAJK,EAILA,qBAEAM,GANK,EAKLE,eALK,EAMLF,qBAGa5B,IAAf,QCpBM+B,E,4JACJ,WACE,IAAIC,EAAkBlF,KAAKR,MAAM2F,OAAS,SAAW,GAErD,OACE,eAACC,EAAA,EAAD,CAAMlG,UAAS,UAAKgG,EAAL,kBAAf,UACE,eAACG,EAAA,EAAUC,OAAX,CAAkBhE,GAAI8D,IAAKnG,OAAQsG,SAAU,EAAGC,QAASxF,KAAKR,MAAMiG,eAApE,UACE,qDADF,sCAKA,cAACJ,EAAA,EAAUK,SAAX,CAAoBH,SAAU,EAA9B,SACE,eAACH,EAAA,EAAKO,KAAN,WACE,cAAC,EAAD,CACE9F,SAAUG,KAAKR,MAAMK,SACrBI,QAASD,KAAKR,MAAMS,QAEpBC,UAAU,OACV0F,MAAO,EACPzF,MAAOH,KAAKR,OAHR,QAKN,cAAC,EAAD,CACEK,SAAUG,KAAKR,MAAMK,SACrBI,QAASD,KAAKR,MAAMS,QAEpBC,UAAU,OACV0F,MAAO,EACPzF,MAAOH,KAAKR,OAHR,QAKN,cAAC,EAAD,CACEK,SAAUG,KAAKR,MAAMK,SACrBI,QAASD,KAAKR,MAAMS,QAEpBC,UAAU,OACV0F,MAAO,EACPzF,MAAOH,KAAKR,OAHR,QAKN,cAAC,EAAD,CACEK,SAAUG,KAAKR,MAAMK,SACrBI,QAASD,KAAKR,MAAMS,QAEpBC,UAAU,OACV0F,MAAO,EACPzF,MAAOH,KAAKR,OAHR,QAKN,eAACsB,EAAA,EAAD,CAAK5B,UAAU,0BAAf,UACE,cAAC6B,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAACC,EAAA,EAAKC,MAAN,CAAYC,QAAQ,SAApB,4BAKF,cAACJ,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,eAAC6E,EAAA,EAAD,CAAmBC,GAAG,aAAazF,KAAK,WAAW+C,KAAK,SAASlE,UAAU,YAAYS,MAAOK,KAAKR,MAAM6C,OAAQxC,SAAUG,KAAKR,MAAMuG,eAAtI,UACE,cAACC,EAAA,EAAD,CAAcC,QAAQ,QAAQtG,MAAO,EAArC,wBACA,cAACqG,EAAA,EAAD,CAAcC,QAAQ,QAAQtG,MAAO,EAArC,yBACA,cAACqG,EAAA,EAAD,CAAcC,QAAQ,QAAQtG,MAAO,EAArC,wBACA,cAACqG,EAAA,EAAD,CAAcC,QAAQ,QAAQtG,MAAO,EAArC,iCAKN,cAAC,EAAD,CACEE,SAAUG,KAAKR,MAAMK,SACrBI,QAASD,KAAKR,MAAMS,QACpBC,UAAU,gBAEV0F,MAAO,EACPzF,MAAOH,KAAKR,OAFR,6B,GAlESF,aA4EZ4G,eA3GS,SAACpC,EAAOqC,GAC9B,MAAO,CACLC,SAAUtC,EAAMuC,QAAQ9C,aACxB4B,OAAUrB,EAAMuC,QAAQ/C,YACxBrB,KAAS6B,EAAMuC,QAAQpE,KACvBC,KAAS4B,EAAMuC,QAAQnE,KACvBC,KAAS2B,EAAMuC,QAAQlE,KACvBC,KAAS0B,EAAMuC,QAAQjE,KACvBC,OAAUyB,EAAMuC,QAAQ1C,WACxBpB,cAAeuB,EAAMuC,QAAQ9D,cAC7BtC,SAAS,IAAIyC,GAAU4D,iBAIA,SAACC,EAAUJ,GACpC,MAAO,CACLV,eAAgB,SAAC9D,GACf4E,EAASjC,MAEXzE,SAAU,SAACC,GACTyG,EAAS1C,EAAc/D,KAEzBiG,eAAgB,SAACpG,GACf4G,EAAS/B,EAAqB7E,KAEhCmF,oBAAqB,WACnByB,EAASzB,SAiFAoB,CAA6CjB,GC5EtDuB,E,4JACJ,WACE,IAAItB,EAAkBlF,KAAKR,MAAM2F,OAAS,SAAW,GAErD,OACE,eAACC,EAAA,EAAD,CAAMlG,UAAS,UAAKgG,EAAL,kBAAf,UACE,eAACG,EAAA,EAAUC,OAAX,CAAkBhE,GAAI8D,IAAKnG,OAAQsG,SAAU,EAAGC,QAASxF,KAAKR,MAAMiG,eAApE,UACE,+CADF,kCAKA,cAACJ,EAAA,EAAUK,SAAX,CAAoBH,SAAU,EAA9B,SACE,eAACH,EAAA,EAAKO,KAAN,WACE,cAAC,EAAD,CACE9F,SAAUG,KAAKR,MAAMK,SACrBI,QAASD,KAAKR,MAAMS,QAEpBC,UAAU,YACV0F,MAAO,EACPzF,MAAOH,KAAKR,OAHR,aAKN,eAACsB,EAAA,EAAD,CAAK5B,UAAU,0BAAf,UACE,cAAC6B,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAACC,EAAA,EAAKC,MAAN,CAAYC,QAAQ,aAApB,2BAKF,cAACJ,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,eAAC6E,EAAA,EAAD,CAAmBC,GAAG,aAAazF,KAAK,QAAQ+C,KAAK,aAAazD,MAAOK,KAAKR,MAAMiH,WAAY5G,SAAUG,KAAKR,MAAMkH,mBAArH,UACE,cAACV,EAAA,EAAD,CAAcC,QAAQ,QAAQtG,MAAM,OAApC,kBACA,cAACqG,EAAA,EAAD,CAAcC,QAAQ,QAAQtG,MAAM,SAApC,oBACA,cAACqG,EAAA,EAAD,CAAcC,QAAQ,QAAQtG,MAAM,YAApC,+BAKN,eAACmB,EAAA,EAAD,CAAK5B,UAAU,0BAAf,UACE,cAAC6B,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAACC,EAAA,EAAKC,MAAN,CAAYC,QAAQ,WAApB,yBAKF,cAACJ,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,eAAC6E,EAAA,EAAD,CAAmBC,GAAG,WAAWzF,KAAK,QAAQ+C,KAAK,WAAWzD,MAAOK,KAAKR,MAAMmH,SAAU9G,SAAUG,KAAKR,MAAMoH,iBAA/G,UACE,cAACZ,EAAA,EAAD,CAAcC,QAAQ,QAAQtG,MAAM,OAApC,kBACA,cAACqG,EAAA,EAAD,CAAcC,QAAQ,QAAQtG,MAAM,SAApC,oBACA,cAACqG,EAAA,EAAD,CAAcC,QAAQ,QAAQtG,MAAM,YAApC,+BAKN,cAAC,EAAD,CACEE,SAAUG,KAAKR,MAAMK,SACrBI,QAASD,KAAKR,MAAMS,QACpBC,UAAU,gBAEV0F,MAAO,EACPzF,MAAOH,KAAKR,OAFR,6B,GAzDUF,aAmEb4G,eAnGS,SAACpC,EAAOqC,GAC9B,MAAO,CACLC,SAAUtC,EAAMuC,QAAQ7C,cACxB2B,QAASrB,EAAMuC,QAAQ/C,YACvBhB,UAAWwB,EAAMuC,QAAQ/D,UACzBmE,WAAY3C,EAAMuC,QAAQ5D,gBAC1BkE,SAAU7C,EAAMuC,QAAQ7D,cACxBD,cAAeuB,EAAMuC,QAAQ9D,cAC7BtC,SAAS,IAAIyC,GAAU4D,iBAIA,SAACC,EAAUJ,GACpC,MAAO,CACLV,eAAgB,SAAC9D,GACf4E,EAAShC,MAEX1E,SAAU,SAACC,GACTyG,EAAS1C,EAAc/D,KAEzB4G,mBAAoB,SAAC/G,GACnB4G,EAAS1C,EAAc,CAACpB,gBAAiB9C,MAE3CiH,iBAAkB,SAACjH,GACjB4G,EAAS1C,EAAc,CAACrB,cAAe7C,MAEzCmF,oBAAqB,WACnByB,EAASzB,SAwEAoB,CAA6CM,GCzGtDK,E,4JACJ,WACE,OACE,qBAAK3H,UAAU,MAAf,SACE,eAACmG,EAAA,EAAD,CAAWyB,iBAAkB9G,KAAKR,MAAM8D,YAAc,EAAI,EAA1D,UACE,cAAC,EAAD,IACA,cAAC,EAAD,a,GANoBhE,aAaf4G,eAnBS,SAACpC,EAAOqC,GAC9B,MAAO,CACL7C,YAAaQ,EAAMuC,QAAQ/C,eAiBS,KAAzB4C,CAA+BW,GCmC/BE,E,4JA3Db,WACE,OACE,yBAAQ7H,UAAU,MAAlB,UACE,gCACE,uCACA,kLACA,sHAEc,mBAAG8H,KAAK,sCAAR,gDAFd,aAE4G,mBAAGA,KAAK,gCAAR,oBAF5G,UAMF,gCACE,8CACA,qGAEE,uBAFF,uIAIE,uBAJF,aAKY,mBAAGA,KAAK,0CAAR,sBALZ,uEASF,gCACE,8CACA,8JACA,4BACE,mBAAGA,KAAK,wCAAR,0CAEF,iGACkE,mBAAGA,KAAK,mCAAR,iCADlE,oCAGA,oEAEE,mBAAGA,KAAK,oEAAR,sCAFF,UAMF,gCACE,wCACA,6DAA+B,mBAAGA,KAAK,qCAAR,kBAA/B,mEAAoJ,mBAAGA,KAAK,4CAAR,2BAApJ,OACA,iGAAmE,mBAAGA,KAAK,iEAAR,0BAAnE,UAGF,gCACE,yCACA,2EAGA,sLAE6E,mBAAGA,KAAK,mEAAR,qBAF7E,iB,GAlDW1H,a,mBCiBN2H,G,4JAfb,WACE,IAAMlH,EAASC,KAAKR,MAAMS,QAAQD,KAAKR,MAAMU,WACvCgH,EAAiBlH,KAAKR,MAAM2H,SAASC,KAAI,SAACC,EAASzB,GACvD,OAAO,iCAAmByB,EAAQ,yBAAhBzB,MAGpB,OAAO,sBAAKE,GAAG,WAAW5G,UAAU,WAA7B,UACGa,EAAOqB,MADV,IAEE,qBAAKlC,UAAU,OAAf,SACIgI,W,GAXS5H,aCoDXgI,G,4JA7Cb,WAAU,IAAD,OACDvH,EAASC,KAAKR,MAAMS,QAAQD,KAAKR,MAAMU,WACvCC,EAAQH,KAAKR,MAAMW,MACnBoH,EAAgBpH,EAAMH,KAAKR,MAAMU,WACjCsH,EAAUC,MAAMC,QAAQ3H,EAAOyH,SACnCzH,EAAOyH,QAAQJ,KAAI,SAACO,GAClB,MAAO,CAAEhI,MAAOgI,EAAQC,MAAOD,MAEjC3D,OAAOG,KAAKpE,EAAOyH,SAASJ,KAAI,SAACxH,GAC/B,MAAO,CAAED,MAAOC,EAAKgI,MAAO7H,EAAOyH,QAAQ5H,OAEzCiI,EAAeJ,MAAMC,QAAQ3H,EAAOyH,SACxCD,EACAxH,EAAOyH,QAAQD,GAEjB,OACE,eAACzG,EAAA,EAAD,CAAK5B,UAAU,0BAAf,UACE,cAAC6B,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAACC,EAAA,EAAKC,MAAN,CAAYC,QAAQ,mBAApB,SACGpB,EAAOqB,UAIZ,cAACL,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAAC,KAAD,CACErB,MAAO,CAACA,MAAO4H,EAAeK,MAAOC,GACrChI,SAAU,SAAC8H,GACT,IAAMhI,EAAQgI,EAAOhI,MACjBG,EAAQ,GACZA,EAAM,EAAKN,MAAMU,WAAaP,OAENiB,IAApBb,EAAOF,WACTC,EAAQC,EAAOF,SAASC,EAAOK,IAGjC,EAAKX,MAAMK,SAASC,IAEtBG,QAASuH,QArB+BxH,KAAKR,MAAMoG,W,GAjBlCtG,aCwCdwI,G,4JAtCb,WAAU,IAAD,OACD/H,EAASC,KAAKR,MAAMS,QAAQD,KAAKR,MAAMU,WACvCC,EAAQH,KAAKR,MAAMW,MACnBoH,EAAgBpH,EAAMH,KAAKR,MAAMU,WACjCS,OAA+BC,IAArBb,EAAOc,WAAiCd,EAAOc,UAAUV,GAEzE,OACE,eAACW,EAAA,EAAD,CAAK5B,UAAW,2BAA6ByB,EAAU,GAAK,WAA5D,UACE,cAACI,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAACC,EAAA,EAAKC,MAAN,UACGnB,EAAOqB,UAIZ,cAACL,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAAC6E,EAAA,EAAD,CACIxF,KAAK,QACL+C,KAAMpD,KAAKR,MAAMU,UACjBP,MAAO4H,EAEP1H,SAAU,SAAC8H,GACT,IAAI7H,EAAQ,GACZA,EAAM,EAAKN,MAAMU,WAAayH,EAC9B,EAAKnI,MAAMK,SAASC,IAR1B,SAUGC,EAAOyH,QAAQJ,KAAI,SAACO,GACnB,OAAO,cAAC3B,EAAA,EAAD,CAELC,QAAQ,QACRtG,MAAOgI,EAHF,SAGWA,GAFXA,OARF3H,KAAKR,MAAMU,oB,GApBGZ,a,gGCTpByI,GAAe,CAC1B3E,KAAM,CACJhC,MAAO,OACPf,KAAM,SAIW2H,G,WACnB,WAAY5E,GAAO,oBACjBpD,KAAKoD,KAAOA,EACZpD,KAAKiI,MAAQ,G,mDAGf,WACE,MAAO,CACLC,eAAe,EACfC,cAAc,EACdC,YAAa,SACbC,aAAa,EACbC,UAAU,EACVC,eAAe,EACfC,iBAAiB,EACjBC,WAAW,EACXC,SAAS,EACTC,aAAa,EACbC,cAAe,GACfC,eAAgB,GAChBC,QAAS,EACTC,QAAS,EACTC,SAAU,EACVC,SAAU,GACVC,gBAAiB,QACjBC,aAAa,EACbC,UAAW,IACXC,WAAY,WACZC,cAAe,aACfC,SAAU,aACVC,aAAa,EACbC,UAAW,EACXC,WAAY,WACZC,cAAe,cACfC,SAAU,cACVC,gBAAiB,EACjBC,cAAc,EACdC,kBAAkB,EAClBC,WAAY,GACZC,YAAa,GACbC,cAAe,EACfC,UAAW,GACXC,iBAAkB,OAClBC,eAAgB,IAChBC,aAAc,EACdC,kBAAmB,EACnBC,SAAS,EACTC,UAAU,EACV9J,SAAS,EACT+J,QAAQ,K,wBAIZ,WACE,OAAO3C,K,yBAGT,SAAYjE,GACV,MAAO,O,KC9DL7D,GAAO,6BACR8H,IACA,CACD4C,YAAa,CACXvJ,MAAO,kBACPb,IAAK,GAEPqK,gBAAiB,CACfxJ,MAAO,YACPf,KAAM,eACNmH,QAAS,CAAC,YAAa,uBAKRqD,G,kDACnB,aAAe,uCACP,U,mDAGR,WACE,OAAO,wGAEF,CACDxK,KAAM,SACNsK,YAAa,EACbC,gBAAiB,gB,yBAKvB,SAAY9G,GACV,IAAIgH,EAAS,GAEb,GAAoC,qBAAhChH,EAAMiH,MAAMH,gBACd,IAAK,IAAIlG,EAAE,IAAKA,GAAG,EAAGA,IAAK,CACzB,IAAIsG,EAAkB,EAAVC,KAAKC,GAAW,IAAQxG,EACpCoG,EAAOjG,KAAK,IAAIsG,KAAOF,KAAKG,IAAIJ,GAAQC,KAAKI,IAAIvH,EAAMiH,MAAMJ,YAAcK,GAAOlH,EAAMiH,MAAMJ,mBAGhG,IAAK,IAAIjG,EAAE,EAAGA,GAAG,IAAKA,IAAK,CACzB,IAAIsG,EAAkB,EAAVC,KAAKC,GAAW,IAAQxG,EACpCoG,EAAOjG,KAAK,IAAIsG,KAAOF,KAAKG,IAAIJ,GAAQC,KAAKI,IAAIvH,EAAMiH,MAAMJ,YAAcK,GAAOlH,EAAMiH,MAAMJ,cAIlG,OAAOG,I,wBAGT,WACE,OAAO7K,O,GAnCyB+H,I,SCRvBsD,GAAS,SAACC,EAAGC,GACxB,OAAOP,KAAKQ,OAAOF,EAAIG,OAAOC,SAAWV,KAAKW,IAAI,GAAIJ,IAAMP,KAAKW,IAAI,GAAIJ,IAI9DK,GAAS,SAACC,EAAWC,GAChC,IAAIC,EAAM,SAACC,EAAEC,GACX,OAAOA,EAAIF,EAAIE,EAAGD,EAAEC,GAAKD,GAI3B,MAAO,CAACH,GADRE,EAAMA,EAAIF,EAAWC,IACEA,EAAYC,IAaxBG,GAAM,SAACC,GADN,OC7BRnM,GAAO,6BACR8H,IACA,CACDsE,YAAa,CACXjL,MAAO,sBACPb,IAAK,GAEP+L,YAAa,CACXlL,MAAO,sBACPb,IAAK,KAKUgM,G,kDACnB,aAAe,IAAD,8BACZ,cAAM,WACDC,KAAO,+CACZ,EAAKC,SAAW,oBAHJ,E,mDAMd,WACE,OAAO,wGAEF,CACDpM,KAAM,aACNgM,YAAa,EACbC,YAAa,M,yBAKnB,SAAYxI,GACV,IAAIgH,EAAS,GACTmB,EAAIS,SAAS5I,EAAMiH,MAAMsB,aACzBH,EAAIQ,SAAS5I,EAAMiH,MAAMuB,aACzBK,EAAUd,GAAOI,EAAGC,GACxBD,EAAIU,EAAQ,GACZT,EAAIS,EAAQ,GAIZ,IAHA,IAAIC,EAAYlB,OAAOmB,UAAUZ,EAAEC,GAAK,EAAIA,EACxCY,EAAQ,GAAGb,EAAI,EAAEC,GAEZxH,EAAE,EAAGA,EAAE,IAAIkI,EAAWlI,IAAK,CAClC,IAAIsG,EAAkB,EAAVC,KAAKC,GAAW,IAAQxG,EACpCoG,EAAOjG,KACL,IAAIsG,MACDc,EAAIC,GAAKjB,KAAKG,IAAIJ,GAASkB,EAAIjB,KAAKG,KAAMa,EAAIC,GAAKA,EAAKlB,IACxDiB,EAAIC,GAAKjB,KAAKI,IAAIL,GAASkB,EAAIjB,KAAKI,KAAMY,EAAIC,GAAKA,EAAKlB,IACzD+B,SAAS,CAACC,EAAGF,EAAOG,EAAGH,KAI7B,OAAOhC,I,wBAGT,WACE,OAAO7K,O,GA1C6B+H,ICflC/H,GAAO,6BACR8H,IACA,CACDmF,SAAU,CACR9L,MAAO,aACPf,KAAM,YACNqB,UAAW,QAEbyL,YAAa,CACX/L,MAAO,eACPf,KAAM,YAER8G,SAAU,CACR/F,MAAO,WACPf,KAAM,cAKS+M,G,kDACnB,aAAe,uCACP,c,mDAGR,SAAgBC,GACd,OAAO,qHAEF,CACDhN,KAAM,cACN8M,aAAa,EACbG,oBAAqB,EACrBC,SAAU,GACVpG,SAAU,GACViB,YAAa,SACbD,cAAc,EACdQ,aAAa,EACbT,eAAe,SAEGtH,IAAhByM,EAA4B,GAAK,CACnCH,SAAUG,EAAYH,SACtBK,SAAUF,EAAYE,SACtBD,oBAAqBD,EAAYC,oBACjCnG,SAAUkG,EAAYlG,a,yBAK5B,SAAYrD,GACV,GAAIA,EAAMiH,MAAMwC,SAAS5I,OAAS,EAGhC,MAAO,CAAC,IAAIwG,KAAO,EAAK,GAAM,IAAIA,KAAO,EAAK,KAGhD,IAAIqC,GAAW1J,EAAMuC,QAAQnE,KAAO4B,EAAMuC,QAAQpE,MAAM,EAAM,GAC1DwL,GAAW3J,EAAMuC,QAAQjE,KAAO0B,EAAMuC,QAAQlE,MAAM,EAAM,GAM9D,GAJK2B,EAAMuC,QAAQ/C,cACjBkK,EAAUC,EAAoC,GAA1B3J,EAAMuC,QAAQ/D,WAGhCwB,EAAMiH,MAAMoC,YAAa,CAC3B,IAAMO,EAAuBD,EAAUD,EACnC1J,EAAMiH,MAAMuC,oBAAsBI,EACpCF,EAAUA,EAAU1J,EAAMiH,MAAMuC,oBAAsBI,EAEtDD,EAAUA,EAAU3J,EAAMiH,MAAMuC,oBAAsBI,EAI1D,OAAO5J,EAAMiH,MAAMwC,SAASnG,KAAK,SAACuG,GAChC,OAAOxC,KAAOwC,EAAOX,EAAIQ,EAASG,EAAOV,EAAIQ,Q,wBAIjD,WACE,OAAOxN,O,GAzD6B+H,ICpBnB4F,G,qKACnB,WACE,OAAO,wGAEF,CACDlD,QAAQ,EACRvC,cAAc,EACdE,aAAa,EACbE,eAAe,EACfL,eAAe,EACfI,UAAU,Q,GAVkBN,ICWvB6F,GAAW,SAACC,EAAIC,GAC3B,OAAO9C,KAAK+C,KAAK/C,KAAKW,IAAIkC,EAAGd,EAAIe,EAAGf,EAAG,GAAO/B,KAAKW,IAAIkC,EAAGb,EAAIc,EAAGd,EAAG,KAQzDjC,GAAQ,SAACiD,GACpB,OAAOhD,KAAKiD,MAAMD,EAAMhB,EAAGgB,EAAMjB,IAItBmB,GAAY,SAACC,EAAOC,EAAKJ,GACpC,OAAOG,EAAMP,SAASI,GAASI,EAAIR,SAASI,GAASG,EAAMP,SAASQ,GAAO,MAkChEC,GAAiB,SAACf,EAAUgB,EAAOC,GAC9C,IAAIC,EAAOxD,KAAKvK,IAAI6N,EAAOC,GACvBE,EA1BoB,SAACnB,GACzB,IAAIhC,EAAIgC,EAAS5I,OAEjB,GAAU,IAAN4G,EACF,MAAO,GAQT,IALA,IAAIoD,EAAMpB,EAAS,GAAGP,EAClB4B,EAAMrB,EAAS,GAAGP,EAClB6B,EAAMtB,EAAS,GAAGN,EAClB6B,EAAMvB,EAAS,GAAGN,EAEdvI,EAAE,EAAGA,EAAE6G,IAAK7G,EAAG,CACrB,IAAI8G,EAAI+B,EAAS7I,GACjBiK,EAAM1D,KAAK1K,IAAIoO,EAAKnD,EAAEwB,GACtB4B,EAAM3D,KAAKvK,IAAIkO,EAAKpD,EAAEwB,GACtB6B,EAAM5D,KAAK1K,IAAIsO,EAAKrD,EAAEyB,GACtB6B,EAAM7D,KAAKvK,IAAIoO,EAAKtD,EAAEyB,GAGxB,MAAO,CAAC,IAAI9B,KAAOwD,EAAKE,GAAM,IAAI1D,KAAOyD,EAAKE,IAMjCC,CAAWxB,GAEpBT,EAAQ2B,EADIxD,KAAKvK,IAAIgO,EAAO,GAAGzB,EAAIyB,EAAO,GAAGzB,EAAGyB,EAAO,GAAG1B,EAAI0B,EAAO,GAAG1B,GAGxEgC,EAAe,CAACN,EAAO,GAAG3B,SAAS,CAACC,EAAGF,EAAOG,EAAGH,IAAS4B,EAAO,GAAG3B,SAAS,CAACC,EAAGF,EAAOG,EAAGH,KAC3FmC,EAASD,EAAa,GAAGhC,GAAKgC,EAAa,GAAGhC,EAAIgC,EAAa,GAAGhC,GAAG,EACrEkC,EAASF,EAAa,GAAG/B,GAAK+B,EAAa,GAAG/B,EAAI+B,EAAa,GAAG/B,GAAG,EAEzE,OAAOM,EAASnG,KAAI,SAAAuG,GAAM,OAAIA,EAAOwB,QAAQpC,SAAS,CAACC,EAAGF,EAAOG,EAAGH,IAAQsC,IAAI,CAACpC,GAAIiC,EAAQhC,GAAIiC,QAItFG,GAAe,SAACC,EAAG9D,GAC9B,OAAO,IAAIL,KAAOG,GAAOgE,EAAEtC,EAAGxB,GAAIF,GAAOgE,EAAErC,EAAGzB,KAInC+D,GAAS,SAAC5B,EAAQ6B,GAC7B,IAAMxE,EAAQC,KAAKC,GAAK,IAAQsE,EAChC,OAAO,IAAIrE,KACVwC,EAAOX,EAAI/B,KAAKG,IAAIJ,GAAS2C,EAAOV,EAAIhC,KAAKI,IAAIL,GACjD2C,EAAOX,EAAI/B,KAAKI,IAAIL,GAAS2C,EAAOV,EAAIhC,KAAKG,IAAIJ,KAIvC8B,GAAQ,SAACa,EAAQ8B,EAAMC,GAClC,IAAMC,EAASF,EAAO,SACT7O,IAAT8O,IAAoBA,EAAOD,GAC/B,IAAMG,EAASF,EAAO,IAEtB,OAAO,IAAIvE,KACTwC,EAAOX,EAAI2C,EACXhC,EAAOV,EAAI2C,IAIFC,GAAS,SAAClC,EAAQ7E,EAASC,GACtC,OAAO,IAAIoC,KACTwC,EAAOX,EAAIlE,EACX6E,EAAOV,EAAIlE,IAKF+G,GAAS,SAACC,GAGrB,IAHoD,IAAvB3B,EAAsB,uDAAhB,EAAGpB,EAAa,uDAAX,EAAGC,EAAQ,uDAAN,EACzCnC,EAAS,GAEJpG,EAAE,EAAGA,GAAG,IAAKA,IAAK,CACzB,IAAIsG,EAAkB,EAAVC,KAAKC,GAAW,IAAQxG,EAAI0J,EACxCtD,EAAOjG,KAAK,IAAIsG,KAAO6B,EAAI/B,KAAKG,IAAIJ,GAAO+E,EAAQ9C,EAAIhC,KAAKI,IAAIL,GAAO+E,IAGzE,OAAOjF,GAGIkF,GAAM,SAACD,EAAQE,EAAYC,GAAwB,IAAdlD,EAAa,uDAAX,EAAGC,EAAQ,uDAAN,EACnDkD,EAAsB,EAARlF,KAAKC,GAAU,IAC7BkF,GAAeF,EAAWD,EAAc,EAAMhF,KAAKC,KAAO,EAAMD,KAAKC,IAErEkF,EAAanF,KAAKC,KACpBkF,GAAc,EAAMnF,KAAKC,IAEvBkF,EAAa,IACfD,IAAe,GAIjB,IADA,IAAIE,EAAc,GACT9O,EAAO,EAAGA,EAAQ6O,EAAWD,EAAc5O,IAClD8O,EAAYxL,KAAKsG,KAAO6B,EAAI+C,EAAS9E,KAAKG,IAAI+E,EAAa5O,EAAO0O,GAC1ChD,EAAI8C,EAAS9E,KAAKI,IAAI8E,EAAa5O,EAAO0O,KAEpE,OAAOI,GAIIC,GAAY,SAAC/C,EAAUgD,GAClC,IAEIC,EAFAC,EAAqB,GACrBC,OAAW9P,EAGf,IAAK4P,EAAO,EAAGA,EAAOjD,EAAS5I,OAAQ6L,IAAQ,CAC7C,QAAiB5P,IAAb8P,EAQF,IAPA,IAAMtC,EAAQjD,KAAOwF,WAAWpD,EAASmD,IACnCrC,EAAMlD,KAAOwF,WAAWpD,EAASiD,IAEjCI,EAAQvC,EAAIc,QAAQ0B,SAASzC,GAC7B0C,EAAezC,EAAIc,QAAQ0B,SAASzC,GAAO2C,YAAYhE,SAAS5B,KAAOoF,EAAWA,IAG/EhP,EAAO,EAAGA,EAAQqP,EAAMI,YAAcT,EAAahP,IAC1DkP,EAAmB5L,KACjB,IAAIsG,KAAOiD,EAAMpB,EAAIzL,EAAOuP,EAAa9D,EAC9BoB,EAAMnB,EAAI1L,EAAOuP,EAAa7D,IAI/CyD,EAAWF,EAQb,YAJiB5P,IAAb8P,GACFD,EAAmB5L,KAAK0I,EAASA,EAAS5I,OAAS,IAG9C8L,GAIIQ,GAAa,SAACR,EAAoBnO,EAAW4O,GAExD,IAAI3D,EAAW,GACX4D,EAAgB,EAChBC,EAAmB,EAGnBF,EAAS,IAAKA,EAAS,IACtBA,EAAS,IAAKA,EAAS,GAE5B,IAAK,IAAIV,EAAO,EAAGA,EAAOC,EAAmB9L,SAAU6L,EAAM,CAE3D,IAAIa,EAAOlG,KAAOwF,WAAWF,EAAmBD,IAAOQ,YAAc1O,EAAa4O,EAClFG,EAAMpG,KAAK1K,IAAI8Q,EAAKH,GAGpB,IAAII,EAAWrG,KAAKiD,MAAMuC,EAAmBD,GAAMxD,EACzByD,EAAmBD,GAAMvD,GAK/CsE,GAHJD,GAAYA,EAAW,EAAMrG,KAAKC,KAAO,EAAMD,KAAKC,KAGxBkG,EAGxBG,GAActG,KAAKC,KACrBqG,GAAc,EAAMtG,KAAKC,IAEvBqG,EAAatG,KAAKC,KACpBqG,GAAc,EAAMtG,KAAKC,IAG3B,IAAMsG,EAAQL,EAAgBI,EAE9BH,EAAmBE,EACnBH,EAAgBK,EAChBjE,EAAS1I,KAAK,IAAIsG,KAAOqG,EAAOH,IAGlC,OAAO9D,G,UC7MHtN,GAAO,6BACR8H,IACA,CACD0J,kBAAmB,CACjBrQ,MAAO,aACPb,KAAM,EACNG,IAAK,GACLa,KAAM,MAKSmQ,G,kDACnB,aAAe,uCACP,W,mDAGR,WACE,OAAO,wGAEF,CACDrR,KAAM,UACN+H,YAAa,UACbqJ,kBAAmB,EACnB7I,cAAe,IACfC,eAAgB,IAChBJ,WAAW,EACXD,iBAAiB,M,yBAKvB,SAAY1E,GACV,IAAM6N,EAAQ7N,EAAMiH,MAAMnC,cAC1B,OAAOkH,GAAO6B,EAAM,K,yBAGtB,SAAYjH,EAAQkH,EAAOrE,GACzB,IAAMsE,EAAUC,YACb/B,OAAOrF,EAAO9B,cAAc,GAC5BmJ,WAAWrH,EAAO+G,kBAAkB,GAGvC,OAFAI,EAAQG,MAAM,CAACtH,EAAO5B,QAAS4B,EAAO3B,UAE/BwE,EAASnG,KAAI,SAAAuG,GAClB,IAAMsE,EAASJ,EAAQ,CAAClE,EAAOX,EAAGW,EAAOV,IACzC,OAAO,IAAI9B,KAAO8G,EAAO,GAAIA,EAAO,S,wBAIxC,WACE,OAAOhS,O,GAtC0B2N,I,UCZ/B3N,GAAO,6BACR8H,IACA,CACDmK,SAAU,CACR9Q,MAAO,YACPf,KAAM,WACNmH,QAAS,CAAC,QAAS,OAAQ,SAAU,OAAQ,QAAS,UACtD3H,SAAU,SAACsS,EAASrS,GAUlB,OATAqS,EAAQ5J,cAAqC,WAArB4J,EAAQD,SAC5B,CAAC,QAAS,OAAQ,SAAStN,SAASuN,EAAQD,WAC9CC,EAAQnJ,SAAgC,UAArBmJ,EAAQD,SAAuB,EAAI,GACtDC,EAAQ1J,WAAY,IAEpB0J,EAAQnJ,SAAW,EACnBmJ,EAAQ1J,WAAY,GAGf0J,IAGXC,OAAQ,CACNhR,MAAO,SACPG,KAAM,GACNV,UAAW,SAACiD,GAAY,OAAQ,CAAC,SAAU,SAASc,SAASd,EAAMoO,YAErEG,WAAY,CACVjR,MAAO,SACPS,SAAU,QACVxB,KAAM,OACNQ,UAAW,SAACiD,GAAY,MAA0B,WAAnBA,EAAMoO,WAEvCI,WAAY,CACVlR,MAAO,SACPS,SAAU,QACVxB,KAAM,OACNQ,UAAW,SAACiD,GAAY,MAA0B,WAAnBA,EAAMoO,WAEvC5B,UAAW,CACTlP,MAAO,mBACPf,KAAM,cAKSkS,G,kDACnB,aAAe,uCACP,Q,mDAGR,WACE,OAAO,wGAEF,CACDlS,KAAM,OACN+H,YAAa,UACb8J,SAAU,QACVE,OAAQ,GACR9B,WAAW,EACX+B,WAAY,sBACZG,MAAO,sBACPF,WAAY,sBACZG,MAAO,sBACP7J,cAAe,GACfC,eAAgB,GAChBG,SAAU,GACVP,WAAW,EACXD,iBAAiB,M,yBAKvB,SAAY1E,GACV,IAAM6N,EAAQ7N,EAAMiH,MAAMnC,cAC1B,OAAOkH,GAAO6B,EAAM,K,yBAGtB,SAAYjH,EAAQkH,EAAOrE,GAKzB,OAJI7C,EAAO4F,YACT/C,EAAW+C,GAAU/C,EAAU,IAGT,UAApB7C,EAAOwH,UAA4C,SAApBxH,EAAOwH,SACjClS,KAAKgL,MAA0B,UAApBN,EAAOwH,SAAuB,GAAQ,EAAKxH,EAAQ6C,GACxC,WAApB7C,EAAOwH,SACTlS,KAAK8P,OAAOpF,EAAQ6C,GACE,SAApB7C,EAAOwH,SACTlS,KAAK0S,KAAKhI,EAAQ6C,GACI,UAApB7C,EAAOwH,SACTlS,KAAK2S,MAAMjI,EAAQ6C,GACG,WAApB7C,EAAOwH,SACTlS,KAAK4S,OAAOlI,EAAQ6C,GAGtBA,I,mBAGT,SAAMsF,EAAOnI,EAAQ6C,GACnB,IAAMuF,EAAU,GAAOpI,EAAO0H,QAAoB,EAAVnH,KAAKC,IAAYD,KAAKG,KAAKV,EAAO1B,SAAW,IAAQiC,KAAKC,IAC5F6H,EAAU,GAAOrI,EAAO0H,QAAoB,EAAVnH,KAAKC,IAAYD,KAAKI,KAAKX,EAAO1B,SAAW,IAAQiC,KAAKC,IAC5F4B,EAAQpC,EAAO9B,cAAgB,GAErC,OAAO2E,EAASnG,KAAI,SAAAuG,GAClB,IAAMqF,EAAYrF,EAAOX,EAAItC,EAAO5B,QAC9BmK,EAAYtF,EAAOV,EAAIvC,EAAO3B,QAC9BiE,EAAIgG,EAAYlG,EAAQ7B,KAAKI,IAAI2H,EAAUF,EAAUG,EAAUF,GAC/D9F,EAAIgG,EAAYnG,EAAQ7B,KAAKI,IAAI2H,EAAUF,EAAUD,EAAQI,EAAUF,GAC7E,OAAO,IAAI5H,KAAO6B,EAAItC,EAAO5B,QAASmE,EAAIvC,EAAO3B,c,oBAIrD,SAAO2B,EAAQ6C,GACb,IAAMuF,EAAU,GAAOpI,EAAO0H,QAAoB,EAAVnH,KAAKC,IACvC6H,EAAU,GAAOrI,EAAO0H,QAAoB,EAAVnH,KAAKC,IACvC4B,EAAQpC,EAAO9B,cAAgB,GAErC,OAAO2E,EAASnG,KAAI,SAAAuG,GAClB,IAAMqF,EAAYrF,EAAOX,EAAItC,EAAO5B,QAC9BmK,EAAYtF,EAAOV,EAAIvC,EAAO3B,QAC9ByI,EAAQvG,KAAKiD,MAAM+E,EAAUD,GAC7BhG,EAAIgG,EAAYlG,EAAQ7B,KAAKG,IAAIoG,GAASvG,KAAKG,IAAIH,KAAK+C,KAAKgF,EAAUA,EAAYC,EAAUA,GAAWH,GACxG7F,EAAIgG,EAAYnG,EAAQ7B,KAAKI,IAAImG,GAASvG,KAAKG,IAAIH,KAAK+C,KAAKgF,EAAUA,EAAYC,EAAUA,GAAWF,GAC9G,OAAO,IAAI5H,KAAO6B,EAAItC,EAAO5B,QAASmE,EAAIvC,EAAO3B,c,kBAIrD,SAAK2B,EAAQ6C,GACX,IAAMuF,EAAU,GAAOpI,EAAO0H,QAAoB,EAAVnH,KAAKC,IACvC6H,EAAU,GAAOrI,EAAO0H,QAAoB,EAAVnH,KAAKC,IACvC4B,EAAQpC,EAAO9B,cAAgB,GAErC,OAAO2E,EAASnG,KAAI,SAAAuG,GAClB,IAAMqF,EAAYrF,EAAOX,EAAItC,EAAO5B,QAC9BmK,EAAYtF,EAAOV,EAAIvC,EAAO3B,QAC9BiE,EAAIgG,EAAYlG,EAAQ7B,KAAKI,IAAI2H,EAAUF,GAAW7H,KAAKI,IAAI4H,EAAUF,GACzE9F,EAAIgG,EAAYnG,EAAQ7B,KAAKI,IAAI2H,EAAUF,GAAW7H,KAAKI,IAAI4H,EAAUF,GAC/E,OAAO,IAAI5H,KAAO6B,EAAItC,EAAO5B,QAASmE,EAAIvC,EAAO3B,c,mBAIrD,SAAM2B,EAAQ6C,GACZ,IAAMoF,GAASjI,EAAO9B,cAAgB,GAAI,IACpCsK,EAASP,EAAQ1H,KAAKI,IAAIX,EAAO1B,SAAW,IAAQiC,KAAKC,IACzDiI,EAASR,EAAQ1H,KAAKG,IAAIV,EAAO1B,SAAW,IAAQiC,KAAKC,IAC/D,OAAOqC,EAASnG,KAAI,SAAAuG,GAAM,OAAI,IAAIxC,KAAOwC,EAAOX,EAAIkG,EAASvF,EAAOV,EAAGU,EAAOV,EAAIkG,EAASxF,EAAOX,Q,oBAGpG,SAAOtC,EAAQ6C,GACb,OAAOA,EAASnG,KAAI,SAAAuG,GAClB,IACE,IAAMX,EAAIoG,aAAS1I,EAAO8H,MAAO,CAACxF,EAAGW,EAAOX,EAAItC,EAAO5B,QAASmE,EAAGU,EAAOV,EAAIvC,EAAO3B,UAC/EkE,EAAImG,aAAS1I,EAAO+H,MAAO,CAACzF,EAAGW,EAAOX,EAAItC,EAAO5B,QAASmE,EAAGU,EAAOV,EAAIvC,EAAO3B,UACrF,OAAO,IAAIoC,KAAO6B,EAAItC,EAAO5B,QAASmE,EAAIvC,EAAO3B,SAEnD,MAAOsK,GAEL,OADAC,QAAQnH,IAAI,gCAAkCkH,GACvC1F,Q,wBAKb,WACE,OAAO1N,O,GArHuB2N,I,oBChDrB/C,GAAb,kDACE,WAAYmC,EAAGC,EAAGsG,EAAGzP,GAAQ,IAAD,8BAC1B,cAAMkJ,EAAGC,IACJD,EAAIA,EACT,EAAKC,EAAIA,EACT,EAAKsG,EAAIA,GAAK,GACd,EAAKzP,MAAQA,EACb,EAAK0P,QAAU,EAAK1P,MAAM0P,QACN,MAAhB,EAAKA,UAAmB,EAAKA,SAAU,GAC3C,EAAKhC,MAAQ,KACb,EAAKiC,OAAS,IAAItI,KAAO,EAAG,GATF,EAD9B,wCAaE,WACMnL,KAAKwT,UACPxT,KAAKuT,GAAK,EACVvT,KAAK0T,UAAY1T,KAAK2T,YAAY3T,KAAKuT,MAhB7C,yBAoBE,SAAYxD,GAEV,OADAA,MAAW/P,KAAK8D,MAAM8P,SAAW5T,KAAKuT,EAAI,GACnCvT,KAAK8D,MAAMR,YAActD,KAAK6T,uBAAuB9D,GAAU/P,KAAK8T,iBAAiB/D,KAtBhG,8BAyBE,SAAiBA,GACf,OAAO/P,KAAK8D,MAAMxB,WAAatC,KAAK6N,SAAS7N,KAAKyT,QAAU1D,IA1BhE,oCA6BE,SAAuBA,GAErB,OAAI/P,KAAKgN,EAAI+C,EAAS/P,KAAK8D,MAAM6N,MAAQ,IAE9B3R,KAAKgN,EAAI+C,GAAU/P,KAAK8D,MAAM6N,MAAQ,IAEtC3R,KAAKiN,EAAI8C,EAAS/P,KAAK8D,MAAMiQ,OAAS,GAEtC/T,KAAKiN,EAAI8C,GAAU/P,KAAK8D,MAAMiQ,OAAS,MArCtD,0BA6CE,SAAajE,GACX,IAAI7D,EAAI6D,EAAOyD,EACXrH,EAAIlM,KAAKuT,EACTS,EAAI/I,KAAK+C,MAAMhO,KAAKgN,EAAE8C,EAAO9C,IAAIhN,KAAKgN,EAAE8C,EAAO9C,IAAIhN,KAAKiN,EAAE6C,EAAO7C,IAAIjN,KAAKiN,EAAE6C,EAAO7C,IACnFgH,GAAK/H,EAAEA,EAAE8H,EAAEA,EAAE/H,EAAEA,IAAI,EAAE+H,GACrBE,EAAIjJ,KAAK+C,KAAK9B,EAAEA,EAAE+H,EAAEA,GAClBE,GAAMrE,EAAO9C,EAAEhN,KAAKgN,GAAGiH,EAAED,GAAKlE,EAAO7C,EAAEjN,KAAKiN,GAAGiH,EAAEF,EAAKhU,KAAKgN,EAC3DoH,GAAMtE,EAAO7C,EAAEjN,KAAKiN,GAAGgH,EAAED,GAAKlE,EAAO9C,EAAEhN,KAAKgN,GAAGkH,EAAEF,EAAKhU,KAAKiN,EAC3DoH,GAAMvE,EAAO9C,EAAEhN,KAAKgN,GAAGiH,EAAED,GAAKlE,EAAO7C,EAAEjN,KAAKiN,GAAGiH,EAAEF,EAAKhU,KAAKgN,EAC3DsH,GAAMxE,EAAO7C,EAAEjN,KAAKiN,GAAGgH,EAAED,GAAKlE,EAAO9C,EAAEhN,KAAKgN,GAAGkH,EAAEF,EAAKhU,KAAKiN,EAC3DsH,EAAM,GASZ,OAPK/S,MAAM2S,IACTI,EAAI1P,KAAK,IAAIsG,KAAOgJ,EAAIC,IAErB5S,MAAM6S,IACTE,EAAI1P,KAAK,IAAIsG,KAAOkJ,EAAIC,IAGnBC,IAhEX,8BAuEE,SAAiBC,EAAIC,GASnB,IAGIxI,EAAGC,EAAG8H,EAHJU,EAAK,SAACpF,GAAD,OAAOA,EAAIA,GAChBqF,GAAKF,EAAGxH,EAAIuH,EAAGvH,IAAMwH,EAAGzH,EAAIwH,EAAGxH,GAC/BzB,EAAIkJ,EAAGxH,EAAI0H,EAAIF,EAAGzH,EAGpByH,EAAGzH,EAAIwH,EAAGxH,IAAM,GAElBf,EAAI,EACJC,GAAK,EAAIlM,KAAKiN,EACd+G,EAAIU,EAAG1U,KAAKiN,GAAKyH,EAAGF,EAAGxH,EAAIhN,KAAKgN,GAAK0H,EAAG1U,KAAKuT,KAE7CtH,EAAI,EAAIyI,EAAGC,GACXzI,EAAc,GAATlM,KAAKgN,EAAS2H,GAAKpJ,EAAIvL,KAAKiN,GAAM,EACvC+G,EAAIU,EAAG1U,KAAKgN,GAAK0H,EAAGnJ,EAAIvL,KAAKiN,GAAKyH,EAAG1U,KAAKuT,IAI5C,IAAMU,EAAIS,EAAGxI,GAAK,EAAID,EAAI+H,EAC1B,GAAIC,GAAK,EAAG,CAEV,IAAIW,EAAgB,GAChB1I,EAAIjB,KAAK+C,KAAK0G,EAAGxI,GAAK,EAAID,EAAI+H,KAAO,EAAI/H,KACzCC,EAAIjB,KAAK+C,KAAK0G,EAAGxI,GAAK,EAAID,EAAI+H,KAAO,EAAI/H,IAO7C,OAJU,IAANgI,IACFW,EAAgB,CAACA,EAAc,KAG7BH,EAAGzH,EAAIwH,EAAGxH,IAAM,EACX4H,EAAcxN,KAAI,SAAA6F,GAAC,OAAI,IAAI9B,KAAOqJ,EAAGxH,EAAGC,MAExC2H,EAAcxN,KAAI,SAAA4F,GAAC,OAAI,IAAI7B,KAAO6B,EAAG2H,EAAI3H,EAAIzB,MAKxD,MAAO,KArHX,mCA0HE,SAAsBiJ,EAAIC,EAAII,EAAIC,GAChC,MAAO,CACL9U,KAAK+U,iBAAiBP,EAAIC,GAC1BzU,KAAK+U,iBAAiBN,EAAII,GAC1B7U,KAAK+U,iBAAiBF,EAAIC,GAC1B9U,KAAK+U,iBAAiBD,EAAIN,IAC1BQ,OAAOC,QAAO,SAAA1J,GAAC,OAAIA,GAAKA,EAAE0B,IAAMiI,KAAY3J,EAAE0B,KAAOiI,WAhI3D,GAA4B/J,MCFfgK,GAAb,WACE,aAAe,oBACbnV,KAAKoV,WAAa,GAFtB,2CAKE,SAAQC,GACN,GAAIrV,KAAKsV,UACPtV,KAAKoV,WAAWvQ,KAAKwQ,OAChB,CAEL,IADA,IAAIE,GAAQ,EACH7Q,EAAI,EAAGA,GAAK1E,KAAKoV,WAAWzQ,OAAQD,IAC3C,GAAI2Q,EAAQ,GAAKrV,KAAKoV,WAAW1Q,EAAE,GAAG,GAAG,CACvC1E,KAAKoV,WAAWI,OAAO9Q,EAAE,EAAG,EAAG2Q,GAC/BE,GAAQ,EACR,MAICA,GACHvV,KAAKoV,WAAWvQ,KAAKwQ,MAnB7B,qBAwBE,WAEE,OADYrV,KAAKoV,WAAWK,UAzBhC,qBA6BE,WACE,OAAmC,IAA3BzV,KAAKoV,WAAWzQ,WA9B5B,KCGa+Q,GAAM,SAAC5H,EAAIC,EAAI4H,GAK1B,IAJA,IAAIC,EAAI,CAAC9H,EAAGd,EAAGc,EAAGb,GACdqC,EAAI,CAACvB,EAAGf,EAAGe,EAAGd,GACd4I,EAAS,GAEJnR,EAAI,EAAGA,EAAIkR,EAAEjR,SAAUD,EAC9BmR,EAAOhR,MAAM,EAAM8Q,GAAKC,EAAElR,GAAKiR,EAAIrG,EAAE5K,IAGvC,OAAO,IAAIyG,KAAO0K,EAAO,GAAIA,EAAO,KAIjBC,G,WACnB,aAAe,oBACb9V,KAAK+V,QAAU,GACf/V,KAAKgW,SAAW,IAAIC,IACpBjW,KAAKkW,cAAgB,GACrBlW,KAAKmW,QAAU,GACfnW,KAAKoW,SAAW,IAAIH,IACpBjW,KAAKqW,mB,2CAGP,SAAQC,GACN,IAAI1W,EAAM0W,EAAKC,WAEVvW,KAAKgW,SAASQ,IAAI5W,KACrBI,KAAKgW,SAAS5G,IAAIxP,GAClBI,KAAK+V,QAAQnW,GAAO0W,EACpBtW,KAAKkW,cAActW,GAAO,GAC1BI,KAAKqW,sB,qBAIT,SAAQI,EAAOC,GAAkB,IAAXC,EAAU,uDAAH,EACvBC,EAAWH,EAAMF,WACjBM,EAAWH,EAAMH,WACjBO,EAAU,CAACF,EAAUC,GAAUE,OAAOR,WAErCvW,KAAKoW,SAASI,IAAIM,KACrB9W,KAAKkW,cAAcU,GAAU/R,KAAK,CAACyR,KAAMI,EAAOC,OAAQA,IACxD3W,KAAKkW,cAAcW,GAAUhS,KAAK,CAACyR,KAAMG,EAAOE,OAAQA,IACxD3W,KAAKoW,SAAShH,IAAI0H,GAClB9W,KAAKmW,QAAQW,GAAW,CAACL,EAAMF,WAAYG,EAAMH,YACjDvW,KAAKqW,sB,qBAIT,SAAQW,EAAOC,GACb,IAAIH,EAAU,CAACE,EAAOC,GAAOF,OAAOR,WACpC,OAAOvW,KAAKmW,QAAQW,K,uBAGtB,SAAUR,GACR,OAAOtW,KAAKkW,cAAcI,EAAKC,YAAYnP,KAAI,SAAA8P,GAAI,OAAIA,EAAKZ,U,kCAG9D,SAAqBa,EAAWC,GAAU,IAAD,OACnCC,EAAWrX,KAAKsX,sBAAsBH,EAAWC,GA4CrD,YA1CiBxW,IAAbyW,GAAyB,WAC3B,IAAIE,EAAQ,GACRC,EAAY,GACZC,EAAK,IAAItC,GACTuC,EAAQ,EAAK1B,SAEjBuB,EAAMJ,GAAa,EAEnBO,EAAMtT,SAAQ,SAAAkS,GACRA,IAASa,IACXI,EAAMjB,GAAQpB,QAIlBuC,EAAGE,QAAQ,CAACR,EAAW,IAEvB,IAhB0B,iBAiBxB,IACIS,EADeH,EAAGI,UACS,GAC/B,EAAK3B,cAAc0B,EAAYrB,YAAYnS,SAAQ,SAAA0T,GACjD,IAAIC,EAAOR,EAAMK,GAAeE,EAASnB,OAErCoB,EAAOR,EAAMO,EAASxB,QACxBiB,EAAMO,EAASxB,MAAQyB,EACvBP,EAAUM,EAASxB,MAAQsB,EAC3BH,EAAGE,QAAQ,CAACG,EAASxB,KAAMyB,UATzBN,EAAGnC,WAAY,IAiBvB,IAHA,IAAI0C,EAAO,CAACZ,EAAQb,YAChB0B,EAAWb,EAETa,IAAad,GACjBa,EAAKE,QAAQV,EAAUS,GAAU1B,YACjC0B,EAAWT,EAAUS,GAGvBZ,EAAWW,EAAK5Q,KAAI,SAAAkP,GAAI,OAAI,EAAKP,QAAQO,MACzC,EAAK6B,kBAAkBhB,EAAWC,EAASC,GAvChB,GA0CtBA,I,8BAGT,WACErX,KAAKoY,YAAc,K,+BAGrB,SAAkB3B,EAAOC,EAAOsB,GAC9BhY,KAAKoY,YAAYpY,KAAKqY,aAAa5B,EAAOC,IAA1C,aAAwDsB,GACxDhY,KAAKoY,YAAYpY,KAAKqY,aAAa3B,EAAOD,IAAU,aAAIuB,GAAMxN,Y,mCAGhE,SAAsBiM,EAAOC,GAC3B,IAAIW,EAAWrX,KAAKoY,YAAYpY,KAAKqY,aAAa5B,EAAOC,IACzD,YAAoB9V,IAAbyW,OAAyBzW,EAAzB,aAAyCyW,K,0BAGlD,SAAaZ,EAAOC,GAClB,OAAOD,EAAMF,WAAa,IAAMG,EAAMH,e,0BCxHrB7T,G,sFAEnB,WAWE,OAVA1C,KAAKsY,gBACFC,gBACAC,iBACAC,oBAECzY,KAAK0Y,UAAUC,QAAQ3Y,KAAK4Y,mBAC5B5Y,KAAK0Y,UAAUtK,OAAOpO,KAAK6Y,gBAC3B7Y,KAAK0Y,UAAUrK,KAAKrO,KAAK8Y,cAGtB9Y,KAAKwY,mB,2BAId,WAIE,IAHA,IAAI9H,EAAW,KACX6H,EAAgB,GAEX7T,EAAE,EAAGA,EAAE1E,KAAKuN,SAAS5I,OAAQD,IAAK,CACzC,IAAMqU,EAAO/Y,KAAKuN,SAAS7I,GAEvBgM,EACEqI,EAAKlL,SAAS6C,GAAY,MAC5B6H,EAAc1T,KAAKkU,GAGrBR,EAAc1T,KAAKkU,GAGrBrI,EAAW1Q,KAAKuN,SAAS7I,GAI3B,OADA1E,KAAKuN,SAAWgL,EACTvY,O,2BAIT,WAIE,IAHA,IAAIuY,EAAgB,GAChB7H,EAAW,KAENF,EAAK,EAAGA,EAAKxQ,KAAKuN,SAAS5I,OAAQ6L,IAAQ,CAClD,IAAM7C,EAAS3N,KAAKuN,SAASiD,GAE7B,GAAIE,EAGF,IAFA,IAAMsI,EAAOhZ,KAAKiZ,SAASvI,EAAU/C,GAE5BuL,EAAG,EAAGA,EAAGF,EAAKrU,OAAQuU,IACzBF,EAAKE,KAAQxI,GACf6H,EAAc1T,KAAK7E,KAAKmZ,cAAcH,EAAKE,UAI/CX,EAAc1T,KAAK7E,KAAKmZ,cAAcxL,IAGxC+C,EAAW/C,EAIb,OADA3N,KAAKuN,SAAWgL,EACTvY,O,mCAIT,WACE,GAA6B,IAAzBA,KAAKuN,SAAS5I,OAAc,OAAO3E,KASvC,IAPA,IAGI0Q,EAHA6H,EAAgB,GAChBa,EAAe,EACfL,EAAO/Y,KAAKuN,SAAS,GAKlB6L,EAAepZ,KAAKuN,SAAS5I,QAAU3E,KAAK4T,SAASmF,IAC1DK,GAA8B,EAC9B1I,EAAWqI,EACXA,EAAO/Y,KAAKuN,SAAS6L,GAGvB,KAAOA,EAAepZ,KAAKuN,SAAS5I,QAAQ,CAG1C,GAFAoU,EAAO/Y,KAAKuN,SAAS6L,GAEjB1I,EAAU,CAEZ,IAAI2I,EAAUrZ,KAAKiZ,SAASvI,EAAUqI,GAAM3R,KAAI,SAAA8R,GAAE,OAAI7J,GAAa6J,EAAI,MAEvE,GAAIG,EAAQ1U,OAAS,GAAK3E,KAAK4T,SAASlD,IAAa6H,EAAc5T,OAAS,EAAG,CAC7E,IAAM+O,EAAY1T,KAAKsZ,eAAef,EAAcA,EAAc5T,OAAS,GAAI0U,EAAQ,IACvFd,EAAa,uBAAOA,GAAP,aAAyB7E,IAKxC,IAAM6F,EAAO,CAAChB,EAAc5T,OAAQ,GAAG6U,OAAOH,GAC9C5R,MAAMgS,UAAUjE,OAAOkE,MAAMnB,EAAegB,QAG5ChB,EAAc1T,KAAKkU,GAGrBrI,EAAWqI,EACXK,GAA8B,EAIhC,OADApZ,KAAKuN,SAAWgL,EACTvY,O,+BAIT,WACE,IAAI2Z,EAAW3Z,KAAK4Z,8BAEhB5Z,KAAK6Z,SAAStX,gBAChBoX,EAAW3Z,KAAK8Z,uBAAuBH,IAKzC,IADA,IAAII,EAAoB,GACfC,EAAE,EAAGA,EAAEL,EAAShV,OAAQqV,IAAK,CACpC,IAAMC,EAAUN,EAASK,GAEzB,GAAIA,EAAI,EAAG,CAET,IAAME,EAAOP,EAASK,EAAE,GACxBD,EAAkBlV,KAAK7E,KAAKsZ,eAAeY,EAAKA,EAAKvV,OAAO,GAAIsV,EAAQ,KAE1EF,EAAkBlV,KAAKoV,GAIzB,OADAja,KAAKuN,SAAWwM,EAAkB/E,OAC3BhV,O,yCAKT,WAKE,IAJA,IAAI2Z,EAAW,GACXQ,EAAU,GACVzG,EAAY,KAEPhP,EAAE,EAAGA,EAAE1E,KAAKuN,SAAS5I,OAAQD,IAAK,CACzC,IAAMqU,EAAO/Y,KAAKuN,SAAS7I,GACrBwV,EAAOla,KAAKuN,SAAS7I,EAAE,GAExBwV,GAASla,KAAKoa,YAAYrB,EAAMmB,IAK9BxG,IACHiG,EAAS9U,KAAKsV,GACdA,EAAU,IAEZzG,EAAYqF,IARRrF,GAAayG,EAAQtV,KAAK6O,GAC9ByG,EAAQtV,KAAKkU,GACbrF,EAAY,MAchB,OAJIyG,EAAQxV,OAAS,GACnBgV,EAAS9U,KAAKsV,GAGTR,I,oCAIT,SAAuBA,GAAW,IAG5BP,EACAiB,EAJ2B,OAC3BC,EAAS,GACTL,EAAUN,EAASlE,QAInBkE,EAAShV,OAAS,IAGpB0V,EAAcV,EAASY,OAGzBD,EAAOzV,KAAKoV,GACZ,IAb+B,iBAe7B,IAAIO,EAAU9O,OAAO+O,iBACjBP,EAAOD,EAGXN,EAASvV,SAAQ,SAAC+V,EAASvU,GACzB,IAAM8U,EAAOzP,KAAK1K,IAChB,EAAKoa,kBAAkBV,EAAQA,EAAQtV,OAAO,GAAIwV,EAAQ,IAC1D,EAAKQ,kBAAkBV,EAAQA,EAAQtV,OAAO,GAAIwV,EAAQA,EAAQxV,OAAO,KAGvE+V,EAAOF,IACTpB,EAAexT,EACf4U,EAAUE,MAMdT,EAAUN,EAASnE,OAAO4D,EAAc,GAAG,GACvC,EAAKuB,kBAAkBT,EAAKA,EAAKvV,OAAO,GAAIsV,EAAQ,IAAM,EAAKU,kBAAkBT,EAAKA,EAAKvV,OAAO,GAAIsV,EAAQA,EAAQtV,OAAO,MAC/HsV,EAAUA,EAAQzP,WAEpB8P,EAAOzV,KAAKoV,IAxBPN,EAAShV,OAAS,GAAI,IA+B7B,OAJI0V,GACFC,EAAOzV,KAAKwV,GAGPC,I,4BAKT,WAEE,OADAta,KAAKuN,SAAWvN,KAAKuN,SAASnG,KAAI,SAAAuG,GAAM,OAAI0B,GAAa1B,EAAQ,MAC1D3N,S,KC3NU4a,G,kDACnB,WAAYrN,EAAUsM,GAAyB,IAAD,EAAdnB,EAAc,uDAAJ,GAAI,4BAC5C,gBACKnL,SAAWA,EAChB,EAAKsM,SAAW7V,OAAOC,OAAO,GAAI4V,GAClC,EAAKA,SAASgB,kBAAoB,GAClC,EAAKnC,UAAYA,EAL2B,E,iDAQ9C,WACE,IAAMpW,EAAYtC,KAAK6Z,SAASvX,UAEhC,GAAsC,SAAlCtC,KAAK6Z,SAASpX,gBAChB,GAAsC,WAAlCzC,KAAK6Z,SAASpX,gBAChBzC,KAAKuN,SAAS2K,QAAQ,IAAI/M,KAAO,EAAK,QACjC,CACL,IAAM2P,EAAQ9a,KAAKuN,SAAS,GACtBT,EAAQxK,EAAYwY,EAAM9J,YAC1BvK,EAAa0E,KAAOwF,WAAWmK,GAAO/N,SAAS,IAAI5B,KAAO2B,EAAOA,IACvE9M,KAAKuN,SAAS2K,QAAQ,IAAI/M,KAAO1E,EAAWuG,EAAGvG,EAAWwG,O,yBAKhE,WACE,IAAM3K,EAAYtC,KAAK6Z,SAASvX,UAEhC,GAAoC,SAAhCtC,KAAK6Z,SAASrX,cAChB,GAAoC,WAAhCxC,KAAK6Z,SAASrX,cAChBxC,KAAKuN,SAAS1I,KAAK,IAAIsG,KAAO,EAAK,QAC9B,CACL,IAAM4P,EAAO/a,KAAKuN,SAASvN,KAAKuN,SAAS5I,OAAO,GAC1CmI,EAAQxK,EAAYyY,EAAK/J,YACzBrK,EAAYwE,KAAOwF,WAAWoK,GAAMhO,SAAS,IAAI5B,KAAO2B,EAAOA,IACrE9M,KAAKuN,SAAS1I,KAAK,IAAIsG,KAAOxE,EAASqG,EAAGrG,EAASsG,O,2BAOzD,SAAcU,GACZ,IAAMc,EAAOzO,KAAK6Z,SAASvX,UAE3B,GAAIqL,EAAOhJ,SAAW8J,EAAM,CAE1B,IACM3B,GAAS2B,EADW,MACiBd,EAAOhJ,SAElD,OAAOgJ,EAAOZ,SAAS,IAAI5B,KAAO2B,EAAOA,IAEzC,OAAOa,I,sBAIX,SAASA,GACP,OAAOA,EAAOhJ,SAAW3E,KAAK6Z,SAASvX,Y,oCAIzC,SAAuBqL,GACrB,OAAIA,EACK,IAAIxC,KAAOF,KAAKG,IAAIuC,EAAO3C,SAAWhL,KAAK6Z,SAASvX,UAAW2I,KAAKI,IAAIsC,EAAO3C,SAAWhL,KAAK6Z,SAASvX,WAExG,IAAI6I,KAAO,EAAE,K,+BAKxB,SAAkB2C,EAAIC,GACpB,IAAMkC,EAAajF,GAAM8C,GACnBoC,EAAWlF,GAAM+C,GACnBqC,EAAanF,KAAK+P,IAAI9K,EAAWD,GAMrC,OAJIG,EAAanF,KAAKC,KACpBkF,GAAc,EAAMnF,KAAKC,IAGpBD,KAAK+P,IAAI5K,GAAcpQ,KAAK6Z,SAASvX,Y,4BAI9C,SAAe8L,EAAOC,GACpB,OAAO2B,GAAIhQ,KAAK6Z,SAASvX,UAAW8L,EAAMpD,QAASqD,EAAIrD,W,8BAGzD,WACE,IAAM+P,EAAO/a,KAAKuN,SAASvN,KAAKuN,SAAS5I,OAAS,GAKlD,OAHIoW,IACF/a,KAAKuN,SAAWvN,KAAKuN,SAASiM,OAAO1J,GAAO9P,KAAK6Z,SAASvX,UAAWoK,SAAsB,GAAbqO,EAAK/P,QAAWC,KAAKC,OAE9FlL,O,yBAIT,SAAY8N,EAAIC,GAAc,IAAV6C,EAAS,uDAAH,EACpBqK,EAAKhQ,KAAKW,IAAI5L,KAAK6Z,SAASvX,UAAW,GACvC4Y,EAAKjQ,KAAKW,IAAIkC,EAAGd,EAAG,GAAK/B,KAAKW,IAAIkC,EAAGb,EAAG,GACxCkO,EAAKlQ,KAAKW,IAAImC,EAAGf,EAAG,GAAK/B,KAAKW,IAAImC,EAAGd,EAAG,GACxCgH,EAAIjU,KAAK2a,kBAAkB7M,EAAIC,GASnC,OAAO9C,KAAK+P,IAAIE,EAAKD,GAAMrK,GAAS3F,KAAK+P,IAAIG,EAAKF,GAAMrK,GAASqD,EAAI,EAAEjU,KAAK6Z,SAASvX,UAAUtC,KAAK6Z,SAASgB,oB,sBAM/G,SAASzM,EAAOC,GAiBd,IAAMI,EAAOzO,KAAK6Z,SAASvX,UACrB8Y,EAAWhN,EAAM4C,YACjBqK,EAAShN,EAAI2C,YAEnB,GAAIoK,GAAY3M,GAAQ4M,GAAU5M,EAEhC,MAAO,CAACL,EAAOC,GAIjB,GAAID,EAAMP,SAASQ,GAAO,KACvB,MAAO,CAACrO,KAAKmZ,cAAc/K,IAG9B,IAAMwG,EAAgB5U,KAAKsb,iBAAiBlN,EAAOC,GAEnD,IAAKuG,EAAc2G,aAEjB,OAAOvb,KAAKsZ,eAAelL,EAAOC,GAIpC,IAAKuG,EAAc9J,OAAO,GAAG0Q,KAAO5G,EAAc9J,OAAO,GAAG0Q,GAC1D,OAAOxb,KAAKsZ,eAAelL,EAAOC,GAIpC,GAAI+M,EAAW3M,EAAO,MAAU4M,EAAS5M,EAAO,KAAQ,CACtD,IAAIR,EAAQ2G,EAAc9J,OAAO,GAAGmD,MAChCwN,EAAa7G,EAAc9J,OAAO,GAAGmD,MAEzC,MAAM,GAAN,oBACKjO,KAAKsZ,eAAelL,EAAOH,IADhC,CAEEA,GAFF,aAGKjO,KAAKsZ,eAAemC,EAAYpN,KAKvC,GAAI+M,GAAY3M,EAAM,CACpB,IAAMiN,EAAU9G,EAAc9J,OAAO,GAAG0Q,IAAMvQ,KAAK+P,IAAIpG,EAAc9J,OAAO,GAAGmD,MAAQG,GAAS,KAAUwG,EAAc9J,OAAO,GAAGmD,MAAQ2G,EAAc9J,OAAO,GAAGmD,MAElK,MAAM,CACJG,GADF,oBAEKpO,KAAKsZ,eAAeoC,EAAQrN,IAFjC,CAGErO,KAAK2b,uBAAuBtN,KAG9B,IAAMqN,EAAS9G,EAAc9J,OAAO,GAAG0Q,GAAK5G,EAAc9J,OAAO,GAAGmD,MAAQ2G,EAAc9J,OAAO,GAAGmD,MAEpG,MAAM,GAAN,oBACKjO,KAAKsZ,eAAelL,EAAOsN,IADhC,CAEEA,EACArN,M,8BAKN,SAAiBD,EAAOC,GACtB,IAAMI,EAAOzO,KAAK6Z,SAASvX,UACvBsZ,EAAYvN,EAAIc,QAAQ0B,SAASzC,GAAOe,QAAQ4B,YAChD8K,GAAmB,EAAfD,EAAU5O,EAAWoB,EAAMpB,GAAmB,EAAf4O,EAAU3O,EAAWmB,EAAMnB,EAE9D6O,EADIF,EAAUzM,QAAQpC,SAAS5B,KAAO0Q,EAAEA,IAAIzM,IAAIhB,GAC7B4C,YAEvB,GAAI8K,GAAkBrN,EACpB,MAAO,CACL8M,cAAc,EACdzQ,OAAQ,IAIZ,IAAMiR,EAAK9Q,KAAK+C,KAAKS,EAAKA,EAAOqN,EAAeA,GAC1CJ,EAASE,EAAUzM,QAAQpC,SAAS5B,KAAO0Q,EAAIE,EAAGF,EAAIE,IAAK3M,IAAIhB,GAC/D4N,EAASJ,EAAUzM,QAAQpC,SAAS5B,KAAO0Q,EAAIE,EAAGF,EAAIE,IAAK3M,IAAIhB,GAC/D6N,EAAK9N,GAAUC,EAAOC,EAAKqN,GAC3BQ,EAAK/N,GAAUC,EAAOC,EAAK2N,GAEjC,OAAIC,GAAMC,EACD,CACLX,cAAc,EACdzQ,OAAQ,CACN,CACEmD,MAAOyN,EACPF,GAAIS,GAEN,CACEhO,MAAO+N,EACPR,GAAIU,KAIH,CACLX,cAAc,EACdzQ,OAAQ,Q,GAlO0BpI,ICArByZ,G,kDACnB,WAAY5O,EAAUsM,GAAyB,IAAD,EAAdnB,EAAc,uDAAJ,GAAI,4BAC5C,gBACKnL,SAAWA,EAChB,EAAKsM,SAAWA,EAChB,EAAKnB,UAAYA,EACjB,EAAKnK,MAAQtD,KAAK+P,KAAKnB,EAAS3X,KAAO2X,EAAS5X,MAAQ,GACxD,EAAKuM,MAAQvD,KAAK+P,KAAKnB,EAASzX,KAAOyX,EAAS1X,MAAQ,GACxD,EAAKia,QAAU,CACb,IAAIjR,MAAQ,EAAKoD,OAAQ,EAAKC,OAC9B,IAAIrD,MAAQ,EAAKoD,MAAO,EAAKC,OAC7B,IAAIrD,KAAO,EAAKoD,MAAO,EAAKC,OAC5B,IAAIrD,KAAO,EAAKoD,OAAQ,EAAKC,QAXa,E,iDAe9C,WACE,OAAOxO,O,yBAGT,WACE,GAAwC,IAApCA,KAAK6Z,SAASlW,WAAWgB,OAAc,CAMzC,IAIImI,EAAOuP,EAJLC,EAAStc,KAAK6Z,SAASlW,WAAW,GAClCmX,EAAQ9a,KAAKuN,SAAS,GACtBwN,EAAO/a,KAAKuN,SAASvN,KAAKuN,SAAS5I,OAAO,GAC1CrC,EAAY2I,KAAK+C,KAAK/C,KAAKW,IAAI,EAAI5L,KAAKuO,MAAO,GAAOtD,KAAKW,IAAI,EAAI5L,KAAKwO,MAAO,IAAQ,EAGzFsM,EAAM9J,aAAe+J,EAAK/J,aAE5BlE,EAAQxK,EAAYyY,EAAK/J,YACzBqL,EAAWtB,IAEXjO,EAAQxK,EAAYwY,EAAM9J,YAC1BqL,EAAWvB,GAGb,IAAIzB,EAAUrZ,KAAKiZ,SACjBoD,EACAlR,KAAOwF,WAAW0L,GAAUtP,SAAS,IAAI5B,KAAO2B,EAAOA,KAEnDyP,EAAWlD,EAAQA,EAAQ1U,OAAS,GAExC3E,KAAKuN,SADH8O,IAAatB,EACC,CAAC/a,KAAKuN,SAAUvN,KAAKsZ,eAAeiD,EAAUvc,KAAKoc,QAAQE,IAAS,IAAOtH,OAE3E,CAAChV,KAAKsZ,eAAetZ,KAAKoc,QAAQE,GAASC,GAAU,GAAOvc,KAAKuN,UAAUyH,OAI/F,OAAOhV,O,+BAIT,SAAkB8N,EAAIC,GACpB,OAAO/N,KAAK6N,SAAS7N,KAAKsZ,eAAexL,EAAIC,GAAI,M,yBAInD,SAAYD,EAAIC,GAAkB,IAAd6C,EAAa,uDAAP,KAClB4L,EAAKvR,KAAK+P,IAAI/P,KAAK+P,IAAIlN,EAAGd,GAAKhN,KAAKuO,OACpCkO,EAAKxR,KAAK+P,IAAI/P,KAAK+P,IAAIlN,EAAGb,GAAKjN,KAAKwO,OACpCkO,EAAMzR,KAAK+P,IAAIlN,EAAGd,EAAIe,EAAGf,GACzB2P,EAAM1R,KAAK+P,IAAIlN,EAAGb,EAAIc,EAAGd,GAE/B,OAAQyP,EAAM9L,GAAS4L,EAAK5L,GAAW+L,EAAM/L,GAAS6L,EAAK7L,I,8BAG7D,WACE,IAAMmK,EAAO/a,KAAKuN,SAASvN,KAAKuN,SAAS5I,OAAO,GAEhD,GAAIoW,EAAM,CACR,IAAMpF,EAAI3V,KAAKmZ,cAAc4B,GACvB6B,EAAM5c,KAAK6c,mBAAmBlH,GAC9ByG,EAAU,CACdzG,EACA3V,KAAKoc,QAAQQ,GACb5c,KAAKoc,SAASQ,EAAM,GAAK,GACzB5c,KAAKoc,SAASQ,EAAM,GAAK,GACzB5c,KAAKoc,SAASQ,EAAM,GAAK,GACzB5c,KAAKoc,QAAQQ,IAEf5c,KAAKuN,SAAWvN,KAAKuN,SAASiM,OAAO4C,GAGvC,OAAOpc,O,4BAOT,SAAewU,EAAIC,GAAkC,IAC/C3J,EADiBgS,EAA6B,wDAGlD,GAAKtI,EAAGxH,IAAMyH,EAAGzH,GAAK/B,KAAK+P,IAAIxG,EAAGxH,KAAOhN,KAAKuO,OAAWiG,EAAGvH,IAAMwH,EAAGxH,GAAMhC,KAAK+P,IAAIxG,EAAGvH,KAAOjN,KAAKwO,MAEjG1D,EAAS,OACJ,CAGL,IAAMiS,EAAM1N,GAAamF,EAAI,GACvBwI,EAAM3N,GAAaoF,EAAI,GACvBwI,EAAKhS,KAAK+P,IAAI+B,EAAI/P,KAAOhN,KAAKuO,MAAQ,IAAM,IAC5C2O,EAAKjS,KAAK+P,IAAIgC,EAAIhQ,KAAOhN,KAAKuO,MAAQ,IAAM,IAElD,GAAI0O,IAAOC,EAETpS,EAAiB,MAAPmS,EACR,CAAC,IAAI9R,KAAOsJ,EAAGzH,EAAGwH,EAAGvH,IACrB,CAAC,IAAI9B,KAAOqJ,EAAGxH,EAAGyH,EAAGxH,SAGvB,GAAW,MAAPgQ,EAAY,CACd,IAAIE,GAAM,EAAEnd,KAAKuO,MAAQiG,EAAGxH,EAAIyH,EAAGzH,EAC/BoQ,EAAK,EAAEpd,KAAKuO,MAAQiG,EAAGxH,EAAIyH,EAAGzH,EAC9BqQ,EAAQpS,KAAK+P,IAAImC,GAAMlS,KAAK+P,IAAIoC,GAAM,GAAK,EAE/CtS,EAAS,CACP,IAAIK,KAAOF,KAAKqS,KAAKD,GAAOrd,KAAKuO,MAAOtD,KAAKqS,KAAK9I,EAAGvH,GAAGjN,KAAKwO,OAC7D,IAAIrD,KAAOF,KAAKqS,KAAKD,GAAOrd,KAAKuO,OAAQtD,KAAKqS,KAAK9I,EAAGvH,GAAGjN,KAAKwO,YAE3D,CACL,IAAI2O,GAAM,EAAEnd,KAAKwO,MAAQgG,EAAGvH,EAAIwH,EAAGxH,EAC/BmQ,EAAK,EAAEpd,KAAKwO,MAAQgG,EAAGvH,EAAIwH,EAAGxH,EAC9B4F,EAAQ5H,KAAK+P,IAAImC,GAAMlS,KAAK+P,IAAIoC,GAAM,GAAK,EAE/CtS,EAAS,CACP,IAAIK,KAAOF,KAAKqS,KAAK9I,EAAGxH,GAAGhN,KAAKuO,MAAOtD,KAAKqS,KAAKzK,GAAO7S,KAAKwO,OAC7D,IAAIrD,MAAQF,KAAKqS,KAAK9I,EAAGxH,GAAGhN,KAAKuO,MAAOtD,KAAKqS,KAAKzK,GAAO7S,KAAKwO,SAWtE,OALIsO,IACFhS,EAAOoN,QAAQ1D,GACf1J,EAAOjG,KAAK4P,IAGP3J,I,2BAKT,SAAc6C,GACZ,OAAO,IAAIxC,KACTF,KAAK1K,IAAIP,KAAKuO,MAAOtD,KAAKvK,KAAKV,KAAKuO,MAAOZ,EAAOX,IAClD/B,KAAK1K,IAAIP,KAAKwO,MAAOvD,KAAKvK,KAAKV,KAAKwO,MAAOb,EAAOV,O,oCAKtD,SAAuBU,GAErB,GAAI1C,KAAK+P,IAAIrN,EAAOX,IAAM/B,KAAK+P,IAAIrN,EAAOV,GAAI,CAC5C,IAAMqQ,EAAOrS,KAAKqS,KAAK3P,EAAOX,IAAM,EACpC,OAAO,IAAI7B,KAAOmS,EAAOtd,KAAKuO,MAAOZ,EAAOV,GAE5C,IAAMqQ,EAAOrS,KAAKqS,KAAK3P,EAAOV,IAAM,EACpC,OAAO,IAAI9B,KAAOwC,EAAOX,EAAGsQ,EAAOtd,KAAKwO,S,gCAI5C,SAAmBb,GACjB,IAAIpC,EAAI,KACJ0I,EAAIvI,OAAO+O,iBAUf,OARAza,KAAKoc,QAAQhY,SAAQ,SAACkY,EAAQ5X,GAC5B,IAAM6Y,EAAK1P,GAASyO,EAAQ3O,GACxB4P,EAAKtJ,IACPA,EAAIsJ,EACJhS,EAAI7G,MAID6G,I,sBAMT,SAAS6C,EAAOC,GACd,IAAMmP,EAAgBxd,KAAKyd,cAAcrP,GACnCsP,EAAc1d,KAAKyd,cAAcpP,GAEvC,GAAsB,IAAlBmP,GAA4C,IAAhBE,EAE9B,MAAO,CAACtP,EAAOC,GAGjB,GAAImP,IAAkBE,EAEpB,MAAO,CAAC1d,KAAKmZ,cAAc/K,GAAQpO,KAAKmZ,cAAc9K,IAGxD,GAAImP,EAAgBE,EAElB,MAAO,CAAC1d,KAAKmZ,cAAc/K,GAAQpO,KAAKmZ,cAAc9K,IAGxD,GAAsB,IAAlBmP,EAAyB,CAG3B,IAAIxE,EAAO,CAAC5K,GAGZ,OAFA4K,EAAKnU,KAAK7E,KAAK2d,WAAWvP,EAAOC,IACjC2K,EAAKnU,KAAK7E,KAAKmZ,cAAc9K,IACtB2K,EAGT,GAAoB,IAAhB0E,EAEF,MAAO,CAAC1d,KAAK2d,WAAWtP,EAAKD,GAAQC,GAkBvC,IAbA,IAAMuP,EAAQ,CAEZ,CAACzS,MAAQnL,KAAKuO,OAAQvO,KAAKwO,OAAQ,IAAIrD,MAAQnL,KAAKuO,MAAOvO,KAAKwO,QAEhE,CAAC,IAAIrD,KAAOnL,KAAKuO,OAAQvO,KAAKwO,OAAQ,IAAIrD,KAAOnL,KAAKuO,MAAOvO,KAAKwO,QAElE,CAAC,IAAIrD,MAAQnL,KAAKuO,OAAQvO,KAAKwO,OAAQ,IAAIrD,KAAOnL,KAAKuO,OAAQvO,KAAKwO,QAEpE,CAAC,IAAIrD,MAAQnL,KAAKuO,MAAOvO,KAAKwO,OAAQ,IAAIrD,KAAOnL,KAAKuO,MAAOvO,KAAKwO,SAIhEoG,EAAgB,GACXe,EAAE,EAAGA,EAAEiI,EAAMjZ,OAAQgR,IAAK,CACjC,IAAMkI,EAAW7d,KAAKub,aAAanN,EACNC,EACAuP,EAAMjI,GAAG,GACTiI,EAAMjI,GAAG,IAClCkI,GACFjJ,EAAc/P,KAAK,IAAIsG,KAAO0S,EAAS7Q,EAAG6Q,EAAS5Q,IAIvD,GAA6B,IAAzB2H,EAAcjQ,OAAc,CAC9B,GAA6B,IAAzBiQ,EAAcjQ,OAIhB,MADA2O,QAAQnH,IAAIyI,GACNkJ,MAAM,2BAKd,GAAI3S,KAAOwF,WAAWiE,EAAc,IAAI/D,SAASzC,GAAO2P,WACpD5S,KAAOwF,WAAWiE,EAAc,IAAI/D,SAASzC,GAAO2P,WAAY,CAClE,IAAIC,EAAOpJ,EAAc,GACzBA,EAAc,GAAKA,EAAc,GACjCA,EAAc,GAAKoJ,EAGrB,MAAM,GAAN,OAAWpJ,EAAX,CAA0B5U,KAAKmZ,cAAc9K,KAQ/C,IAAM4P,EAAW9S,KAAOwF,WAAWvC,GAAOgB,IAAIf,GAAKtB,SAAS,IAAI5B,KAAO,GAAK,KAG5E,MAAM,GAAN,oBAAWnL,KAAKiZ,SAAS7K,EAAO6P,IAAhC,aACWje,KAAKiZ,SAASgF,EAAU5P,O,wBAMrC,SAAW6P,EAAMC,GACf,IAAM3B,EAAK0B,EAAKlR,EAAImR,EAAInR,EAClByP,EAAKyB,EAAKjR,EAAIkR,EAAIlR,EAClBmR,EAAQ,IAAIjT,KAAOgT,EAAInR,EAAGmR,EAAIlR,GAChCY,EAAW,EAEf,OAAIsQ,EAAInR,GAAKhN,KAAKuO,OAAS4P,EAAInR,EAAIhN,KAAKuO,OAClC4P,EAAInR,GAAKhN,KAAKuO,MAEhB6P,EAAMpR,GAAKhN,KAAKuO,MAGhB6P,EAAMpR,EAAIhN,KAAKuO,MAGjBV,GAAYuQ,EAAMpR,EAAIkR,EAAKlR,GAAKwP,EAChC4B,EAAMnR,EAAIiR,EAAKjR,EAAIY,EAAW4O,EAGvBzc,KAAK2d,WAAWO,EAAME,MAG3BD,EAAIlR,GAAKjN,KAAKwO,OAAS2P,EAAIlR,EAAIjN,KAAKwO,SAClC2P,EAAIlR,GAAKjN,KAAKwO,MAEhB4P,EAAMnR,GAAKjN,KAAKwO,MAGhB4P,EAAMnR,EAAIjN,KAAKwO,MAGjBX,GAAYuQ,EAAMnR,EAAIiR,EAAKjR,GAAKwP,EAChC2B,EAAMpR,EAAIkR,EAAKlR,EAAIa,EAAW2O,GAGzB4B,K,sBAIT,SAAS7Q,GAEP,IADA,IAAI0G,EAAI,EACAvP,EAAE,EAAGA,EAAE6I,EAAS5I,OAAQD,IAC1BA,EAAI,IAAGuP,GAAQpG,GAASN,EAAS7I,GAAI6I,EAAS7I,EAAE,KAGtD,OAAOuP,I,2BAkBT,SAAchG,GACZ,IAAInP,EAAW,EAcf,OAZImP,EAAMjB,GAAKhN,KAAKuO,MAClBzP,GAAY,EACHmP,EAAMjB,EAAIhN,KAAKuO,QACxBzP,GAAY,GAGVmP,EAAMhB,GAAKjN,KAAKwO,MAClB1P,GAAY,EACHmP,EAAMhB,EAAIjN,KAAKwO,QACxB1P,GAAY,GAGPA,I,sBAGT,SAASmP,GACP,OAAqC,IAA9BjO,KAAKyd,cAAcxP,K,0BAI5B,SAAaG,EAAOC,EAAKgQ,EAAWC,GAClC,IAAItF,EAAO3K,EAAIc,QAAQ0B,SAASzC,GAC5BmQ,EAAOD,EAAQnP,QAAQ0B,SAASwN,GAChCG,EAAoBxF,EAAKhM,EAAIuR,EAAKtR,EAAI+L,EAAK/L,EAAIsR,EAAKvR,EAGxD,GAA0B,IAAtBwR,EACF,OAAO,KAGT,IAAMC,EAAOJ,EAAUlP,QAAQ0B,SAASzC,GACpCyN,GAAK4C,EAAKzR,EAAIuR,EAAKtR,EAAIwR,EAAKxR,EAAIsR,EAAKvR,GAAKwR,EAC9C,GAAI3C,EAAI,GAAKA,GAAK,EAChB,OAAO,KAGT,IAAMjG,GAAK6I,EAAKzR,EAAIgM,EAAK/L,EAAIwR,EAAKxR,EAAI+L,EAAKhM,GAAKwR,EAChD,OAAI5I,EAAI,GAAKA,GAAK,EACT,KAGFxH,EAAMe,QAAQC,IAAI4J,EAAK7J,QAAQpC,SAAS,IAAI5B,KAAO0Q,EAAGA,S,GAlYxBnZ,ICMzC,SAASgc,GAAM/Q,EAAQgR,EAAMC,GAC3B,IAAM5T,EAAQ2T,EAAK1U,YAAc2U,EAAY,GAAK,EAAM3T,KAAKC,GACzD6E,EAAS,EAKb,OAHI4O,EAAK5U,mBACPgG,EAAS,EAAM6O,EAAY,GAAOD,EAAKxU,UAAY,KAE9C,IAAIgB,KACTwC,EAAOX,EAAI+C,EAAS4O,EAAK3U,WAAaiB,KAAKG,IAAIJ,GAC/C2C,EAAOV,EAAI8C,EAAS4O,EAAK3U,WAAaiB,KAAKI,IAAIL,IAI5C,IAAM6T,GAAiB,SAACF,EAAMhR,EAAQmR,GAAoC,IAA5BC,EAA2B,uDAAhB,EAAG9V,EAAa,uCAC9EA,EAAWA,GAAY0V,EAAK1V,SAC5B,IAAI+V,EAAoBrR,EAASA,EAAOwB,QAAU,IAAIhE,KAAO,GAE7D,GAAIwT,EAAKzW,eAAiByW,EAAKxV,YAAa,CAC1C,IAAI8V,EAAa,IACjB,GAAwB,aAApBN,EAAKtV,WACP,IACE4V,EAAaN,EAAKvV,UAAYgK,aAASuL,EAAKpV,SAAU,CAAC7E,EAAGoa,IAE5D,MAAOzL,GACLC,QAAQnH,IAAI,gCAAkCkH,GAC9C4L,EAAa,SAGfA,EAAa,IAASN,EAAKvV,UAAY0V,EAEzCE,EAAoBlS,GAAMkS,EAAmBC,GAG/C,GAAIN,EAAKzW,eAAiByW,EAAKnV,YAAa,CAC1C,IAAI0V,EAAa,EACjB,GAAwB,aAApBP,EAAKjV,WACP,IACEwV,EAAaP,EAAKlV,UAAY2J,aAASuL,EAAK/U,SAAU,CAAClF,EAAGoa,IAE5D,MAAOzL,GACLC,QAAQnH,IAAI,gCAAkCkH,GAC9C6L,EAAa,MAEV,CACL,IAAMC,EAAalW,GAAYyD,SAASiS,EAAK9U,iBAAmB,GAC1DuV,EAAQN,EAAOK,EACfvD,EAAawD,EAAQ,EAAI,EAAI,GAAO,EAC1CF,EAAatD,GAAakD,EAASK,GAAcR,EAAKlV,UAElDmS,EAAY,IACdsD,GAAcC,EAAaR,EAAKlV,WAGpCuV,EAAoBzP,GAAOyP,EAAmBE,GAUhD,OAPIP,EAAKzW,eAAiByW,EAAK7U,eAC7BkV,EAAoBN,GAAMM,EAAmBL,EAAMI,IAGrDC,EAAkBK,WAAWV,EAAK3V,UAClCgW,EAAkBM,KAAK,CAACtS,EAAG2R,EAAK7V,SAAW,IAAIyW,KAAK,CAACtS,EAAG0R,EAAK5V,SAAW,IAEjEiW,GAGT,SAASQ,GAAejS,EAAUkS,EAAW/a,EAAGmX,GAU9C,IATA,IAAM5S,EAAWwW,EAAUvX,cAAgBuX,EAAUxW,SAAW,EAC1DyW,EAAgBD,EAAUvX,cAAgBuX,EAAUvV,cAAgB,EACpEyV,EAAkBd,GAAeY,EAAWlS,EAAS,GAAI,EAAG7I,EAAI,EAAGgb,GACnEE,EAAYF,EAAgB,GAAK7D,IAAM6D,EAAgB,EACzDG,EAAgB,GAChBC,EAAiB,GACfzV,EAAiBY,KAAKQ,OAAOgU,EAAUpV,gBAAkB,KAAK,IAAQkD,EAAS5I,QAC/Eob,EAAcrb,IAAMuE,EAAW,GAAK4S,IAAM6D,EAAgB,EAAKrV,EAAiBkD,EAAS5I,OAEtFqV,EAAE,EAAGA,EAAE+F,EAAY/F,IAAK,CAC/B,IAAM8E,EAAuC,UAA9BW,EAAUvW,gBAA8BxE,EAAImX,EAAI7B,EAAEzM,EAAS5I,OAASD,EAAImX,EACjFmE,EAAcnB,GAAeY,EAAWlS,EAASyM,GAAI8E,EAAQpa,EAAGgb,GACtEG,EAAchb,KAAKmb,GAEfJ,GAAaG,IAAexS,EAAS5I,QACvCmb,EAAejb,KAAKgJ,GAAS8R,EAAiBK,IAOlD,GAAIJ,EAAW,CACb,IAAIK,EAAS,EACTC,EAAOxU,OAAO+O,iBAElBqF,EAAe1b,SAAQ,SAAC6P,EAAG2I,GACrB3I,GAAKiM,IACPA,EAAOjM,EACPgM,EAASrD,MAIE,IAAXqD,IACFJ,EAAgBA,EAAcrG,OAAOqG,EAAcM,MAAMF,EAAQJ,EAAclb,OAAO,GAAG6F,YAI7F,OAAOqV,EAwBT,IAAMO,GAAwBC,MAT9B,SAAsBtI,GACpBA,EAAO9M,KAAKvK,IAAIqX,EAAM,KACtBtZ,IAAQ6hB,OAAO,CACbC,SAAU,UACVC,SAAU,kBACV7gB,MAAOoY,MAI0C,IAAM,CAAC0I,UAAU,IAEzDC,GAAkB,SAACnT,EAAUqE,EAAO+O,GAC/C,IbpH0BC,EAAKC,EaoHzBC,EAAYC,YAAYC,MACxB/X,EAAW2I,EAAM1J,cAAgB0J,EAAM3I,SAAW,EAClDyW,EAAgB9N,EAAM1J,cAAgB0J,EAAM1H,cAAgB,EAC9D+W,EAAiB,GAarB,GAXIrP,EAAMtJ,WACRiF,EAAWA,EAASnG,KAAI,SAAAuG,GACtB,OAAOb,GAAMa,EAAQ,IAAQiE,EAAMhJ,cAAe,IAAMgJ,EAAM/I,oBAIpC,UAA1B+I,EAAM1I,iBAA+B0I,EAAM1J,eAE7CqF,EAASgN,MAGP3I,EAAM9H,cAAgB4V,EAAgB,EACxC,IAAK,IAAIhb,EAAE,EAAGA,EAAEuE,EAAUvE,IACxB,IAAK,IAAImX,EAAE,EAAGA,EAAE6D,EAAe7D,IAC7BoF,EAAiBA,EAAezH,OAAOgG,GAAejS,EAAUqE,EAAOlN,EAAGmX,SAI9E,IAAKnX,EAAE,EAAGA,EAAEuE,EAAUvE,IACpB,IAAK,IAAIsV,EAAE,EAAGA,EAAEzM,EAAS5I,OAAQqV,IAAK,CACpC,IAAI8E,EAAmC,UAA1BlN,EAAM1I,gBAA8BxE,EAAIsV,EAAEzM,EAAS5I,OAASD,EACzEuc,EAAepc,KAAKga,GAAejN,EAAOrE,EAASyM,GAAI8E,EAAQA,IAKrE,QAAgCle,IAA5BgR,EAAMrH,mBAA+D,IAA5BqH,EAAMrH,kBAAyB,CAC1E,IAAM6D,EAAQnD,KAAKQ,MAAMwV,EAAetc,OAASiN,EAAMrH,kBAAoB,KbpJ9CsW,EaqJgBzS,EbpJ/CyS,IAD0BD,EaqJKK,GbpJlBtc,OAASsG,KAAKiW,MAAML,EAAQD,EAAIjc,QAC7Cic,EAAI/b,KAAK6U,MAAMkH,EAAKA,EAAIpL,OAAO,EAAGqL,IamJhCI,EblJKL,EaqJP,QAA6BhgB,IAAzBgR,EAAMvH,eAA8B,CACtC,IAAMA,EAAiBY,KAAKQ,OAAOiB,SAASkF,EAAMvH,iBAAmB,KAAK,IAAQ4W,EAAetc,QACjGsc,EAAiBA,EAAed,MAAM,EAAG9V,GAO3C,GAJIuH,EAAMpH,UACRyW,EAAiBA,EAAezW,WAG9BoH,EAAMtH,aAAc,CACtB,IAAMsV,EAAY3U,KAAKQ,MAAM8B,EAAS5I,OAASiN,EAAMtH,aAAe,KACpE2W,EAAiBA,EAAezH,OAAOyH,EAAed,MAAMc,EAAetc,OAASib,GAAWpV,WAG7FmW,GAAWA,EAAQhc,OAAS,GAC9Bgc,EAAQvc,SAAQ,SAAAsG,GACduW,EAAiBE,GAASzW,GAAQ0W,YAAY1W,EAAQkH,EAAOqP,MAIjE,IAAMI,EAAUN,YAAYC,MAG5B,OAFAZ,GAAsBiB,EAAUP,GAEzBG,GAIIK,GAAqB,SAAC/T,EAAUsM,EAAUnB,GAErD,OAAO,IADcmB,EAASvW,YAAc6Y,GAAcvB,IAClCrN,EAAUsM,EAAUnB,ICnMxCzY,GAAO,6BACR8H,IACA,CACDwZ,KAAM,CACJngB,MAAO,cACPb,IAAK,GAEPihB,eAAgB,CACdpgB,MAAO,iBACPb,IAAK,GAEPkhB,SAAU,CACRrgB,MAAO,oBACPb,IAAK,EACLG,IAAK,IACLa,KAAM,GAERqS,SAAU,CACRxS,MAAO,iBACPf,KAAM,cAOSqhB,G,kDACnB,aAAe,uCACP,iB,mDAGR,WACE,OAAO,wGAEF,CACDrhB,KAAM,gBACN+H,YAAa,UACbmZ,KAAM,EACNC,eAAgB,EAChBC,SAAU,GACVtZ,cAAc,EACdyL,UAAU,EACVjL,aAAa,EACbT,eAAe,EACfK,eAAe,EACfE,WAAW,EACXC,SAAS,EACTJ,UAAU,M,yBAKhB,SAAYxE,GACV,IAAMuC,EAAUvC,EAAMuC,QAiCtB,OA/BArG,KAAK2hB,MAAQ,IAAI7L,GACjB9V,KAAK4hB,IAAMC,KAAW/d,EAAMiH,MAAMwW,MAClCvhB,KAAK8hB,QAAU,GACf9hB,KAAK8K,OAAS,GACd9K,KAAK6Z,SAAW,CACdlI,MAAO1G,KAAK+P,IAAI3U,EAAQnE,KAAOmE,EAAQpE,MACvC8R,OAAQ9I,KAAK+P,IAAI3U,EAAQjE,KAAOiE,EAAQlE,MACxCD,KAAMmE,EAAQnE,KACdE,KAAMiE,EAAQjE,KACdH,KAAMoE,EAAQpE,KACdE,KAAMkE,EAAQlE,KACdG,UAAW+D,EAAQ/D,UACnBgB,YAAa+C,EAAQ/C,YACrBme,SAAU3d,EAAMiH,MAAM0W,SACtBlO,EAAGzP,EAAMiH,MAAMyW,eACf5N,SAAU9P,EAAMiH,MAAM6I,UAExB5T,KAAK+hB,eAAiB,IAAIlX,GAAO,EAAG,EAAG7K,KAAK6Z,SAASvX,UAAWtC,KAAK6Z,UACrE7Z,KAAKgiB,kBAAoB,CACvB,IAAI7W,MAAQnL,KAAK6Z,SAASlI,MAAQ,GAAI3R,KAAK6Z,SAAS9F,OAAS,GAC7D,IAAI5I,KAAOnL,KAAK6Z,SAASlI,MAAQ,GAAI3R,KAAK6Z,SAAS9F,OAAS,GAC5D,IAAI5I,KAAOnL,KAAK6Z,SAASlI,MAAQ,EAAG3R,KAAK6Z,SAAS9F,OAAS,GAC3D,IAAI5I,MAAQnL,KAAK6Z,SAASlI,MAAQ,EAAG3R,KAAK6Z,SAAS9F,OAAS,IAK9D/T,KAAKiiB,gBACLjiB,KAAKkiB,iBACLliB,KAAKmiB,cAEEniB,KAAK8K,S,0BAId,WAKE,IAJA,IAIA,MAJgB,CACd,IAAID,GAAO,EAAG,EAAG,GAAjB,6BAA0B7K,KAAK6Z,UAA/B,IAAyCrG,SAAS,MAGpD,eAAyB,CAApB,IAAMQ,EAAC,KACVhU,KAAKoiB,UAAUpO,M,2BAMnB,WACE,IAAIyN,EAAWzhB,KAAK6Z,SAASvW,YA1GO,EA2GlCtD,KAAK6Z,SAAS4H,SACdzhB,KAAK6Z,SAAS4H,SACZA,GAAY,IAAKA,EAAW,GAGhC,IAFA,IAAMY,EAASpX,KAAKiW,MA/GT,IA+GkCO,EA/GlC,KAiHFhW,EAAM,EAAGA,EAAM4W,EAAQ5W,IAAS,CACvC,IAAK,IAAI/G,EAAE,EAAGA,EAAE+c,EAhHI,EAgH0B/c,IAAK,CACjD,IAAM4d,EAAYtiB,KAAKuiB,YAEnBD,GACFtiB,KAAKoiB,UAAUE,GAInBtiB,KAAKwiB,cAGPxiB,KAAKyiB,iBAAmBziB,KAAK8hB,QAAQ7M,QAAO,SAAAnF,GAAM,OAAIA,EAAO4D,e,4BAI/D,WAAkB,IAAD,OACf1T,KAAKyiB,iBAAiBre,SAAS,SAAA0L,GAAM,OAAI,EAAK4S,cAAc5S,MAM5D,IAJA,IAAM2D,EAAS,IAAItI,KAAO,EAAG,GACzBwX,EAAU3iB,KAAK8hB,QAAQ7M,QAAO,SAAAnF,GAAM,OAAKA,EAAO8S,aAChDA,EAAY5iB,KAAK8hB,QAAQ7M,QAAO,SAAAnF,GAAM,OAAIA,EAAO8S,aAE/CD,EAAQhe,OAAS,GAAG,CAExB,IAAMke,EAAS7iB,KAAK8iB,SAASH,EAASlP,GAGhCsP,EAAY/iB,KAAKgjB,QAAQJ,EAAWC,GAG1C7iB,KAAK2hB,MAAMsB,QAAQJ,EAAQE,GAC3B/iB,KAAK0iB,cAAcG,GAGnBF,EAAUA,EAAQ1N,QAAO,SAAAnF,GAAM,OAAKA,EAAO8S,aAC3CA,EAAY5iB,KAAK8hB,QAAQ7M,QAAO,SAAAnF,GAAM,OAAIA,EAAO8S,gB,yBAKrD,WAOE,IAPa,IAAD,EACR7J,EAAO/Y,KAAK8hB,QAAQoB,MAAK,SAAApT,GAAM,OAAIA,EAAO4D,aAC1CwG,EAAOnB,EACPwC,EAAevb,KAAKmjB,qBAAqBpK,GACzC/N,EAAQC,KAAKiD,MAAMqN,EAAatO,EAAI8L,EAAK9L,EAAGsO,EAAavO,EAAI+L,EAAK/L,GAChEoW,EAAQ,GAEPrK,GACL/Y,KAAKqjB,WAAWtK,EAAM/N,GACtBA,EAAQhL,KAAKsjB,KAAKvK,EAAM/N,EAAOoY,GAC/BlJ,EAAOnB,GACPA,EAAO/Y,KAAKyiB,iBAAiBS,MAAK,SAAApT,GAAM,OAAKA,EAAOwK,aAGlDtP,EAAQhL,KAAKujB,sBAAsBrJ,EAAMnB,EAAM/N,IAInDuQ,EAAevb,KAAKmjB,qBAAqBjJ,GACzC,IAAMsJ,EAASvY,KAAKiD,MAAMqN,EAAatO,EAAIiN,EAAKjN,EAAGsO,EAAavO,EAAIkN,EAAKlN,IACzE,EAAAhN,KAAK8K,QAAOjG,KAAZ,qBAAoBmL,GAAIkK,EAAK3G,EAAGvI,EAAOwY,EAAQtJ,EAAKlN,EAAGkN,EAAKjN,O,uBAG9D,WACE,IAAID,EAAGC,EAEP,GAAIjN,KAAK6Z,SAASvW,YAChB0J,EAAI,EAAIhN,KAAK6Z,SAASlI,MAAQ3R,KAAK4hB,MAAQ5hB,KAAK6Z,SAASlI,MACzD1E,EAAI,EAAIjN,KAAK6Z,SAAS9F,OAAS/T,KAAK4hB,MAAQ5hB,KAAK6Z,SAAS9F,WACrD,CACL,IAAMvC,EAAqB,EAAbxR,KAAK4hB,MAAY3W,KAAKC,GAC9BqI,EAAIvT,KAAK4hB,MAAQ5hB,KAAK6Z,SAASvX,UAErC0K,EAAIuG,EAAItI,KAAKG,IAAIoG,GACjBvE,EAAIsG,EAAItI,KAAKI,IAAImG,GAGnB,IAAI8Q,EAAY,IAAIzX,GAAOmC,EAAGC,EAAGjN,KAAK6Z,SAAStG,EAAGvT,KAAK6Z,UACnD4J,GAASnB,EAAU3O,cAEvB,GAAI8P,EACF,IAAK,IAAI/e,EAAE,EAAGA,EAAG1E,KAAK8hB,QAAQnd,OAAQD,IAAK,CACzC,IAAMsP,EAAIhU,KAAK8hB,QAAQpd,GAGvB,GAFQ4d,EAAUzU,SAASmG,GAElBA,EAAET,EAAI+O,EAAU/O,EAAI,CAC3BkQ,GAAQ,EACR,OAKN,OAAOA,EAAQnB,EAAY,O,yBAG7B,WAAe,IAAD,OACZ,GAAItiB,KAAK8hB,QAAQnd,OAAS,EACxB,KAAO3E,KAAK8hB,QAAQ7M,QAAO,SAAAnF,GAAM,OAAIA,EAAO0D,WAAS7O,OAAS,GAC5D3E,KAAK8hB,QAAQ1d,SAAQ,SAAA4P,GACfA,EAAER,UACAQ,EAAEL,cACJK,EAAER,SAAU,EAEZ,EAAKsO,QAAQ1d,SAAQ,SAAAsf,GACf1P,IAAM0P,IACA1P,EAAEnG,SAAS6V,GACX1P,EAAET,EAAImQ,EAAMnQ,IAClBS,EAAER,SAAU,EACZ,EAAKmO,MAAMsB,QAAQjP,EAAG0P,QAM9B1P,EAAE2P,a,2BAOZ,SAAc3P,GACZA,EAAE4O,WAAY,EACd,IAFe,EAETgB,EAAY5jB,KAAK2hB,MAAMiC,UAAU5P,GAFxB,eAII4P,GAJJ,IAIf,2BAA8B,CAAC,IAApB7K,EAAmB,QACvBA,EAAK6J,WACR5iB,KAAK0iB,cAAc3J,IANR,iC,wBAWjB,SAAW/E,EAAGhJ,GACG,IAAD,EAATgJ,EAAE6P,SACL,EAAA7jB,KAAK8K,QAAOjG,KAAZ,qBAAoBiL,GAAOkE,EAAET,EAAGvI,EAAOgJ,EAAEhH,EAAGgH,EAAE/G,KAC9C+G,EAAE6P,OAAQ,K,+BAId,SAAkBC,EAAMC,EAAIC,GAAgB,IAAD,EACnCC,EAAMjkB,KAAKgjB,QAAQc,EAAK/O,iBAAiB+O,EAAMC,GAAKA,GACpDG,EAAMlkB,KAAKgjB,QAAQe,EAAGhP,iBAAiB+O,EAAMC,GAAKD,GAClDK,EAAKlZ,KAAKiD,MAAM+V,EAAIhX,EAAI6W,EAAK7W,EAAGgX,EAAIjX,EAAI8W,EAAK9W,GAC7CoX,EAAKnZ,KAAKiD,MAAMgW,EAAIjX,EAAI8W,EAAG9W,EAAGiX,EAAIlX,EAAI+W,EAAG/W,GAG/C,OADA,EAAAhN,KAAK8K,QAAOjG,KAAZ,qBAAoBmL,GAAI8T,EAAKvQ,EAAGyQ,EAAeG,EAAIL,EAAK9W,EAAG8W,EAAK7W,KACzDmX,I,kBAGT,SAAKpQ,EAAGhJ,EAAOoY,GAAQ,IAAD,EACdQ,EAAY5jB,KAAK2hB,MAAMiC,UAAU5P,GACnCqQ,EAAKrZ,EAETgJ,EAAEsG,QAAS,EACX8I,EAAMlL,QAAQlE,GALM,qBAOD4P,GAPC,IAOpB,2BAA8B,CAAC,IAApB7K,EAAmB,QAC5B,IAAKA,EAAKuB,OAAQ,CAChB,IAAM6J,EAAKnkB,KAAKskB,kBAAkBtQ,EAAG+E,EAAMsL,GAC3CA,EAAKrkB,KAAKsjB,KAAKvK,EAAMoL,EAAIf,KAVT,8BAepB,OADA,EAAApjB,KAAK8K,QAAOjG,KAAZ,qBAAoBiL,GAAOkE,EAAET,EAAG8Q,EAAIrQ,EAAEhH,EAAGgH,EAAE/G,KACpCjN,KAAKukB,SAASnB,IAAUiB,I,sBAGjC,SAASjB,GACP,IACIiB,EAAIF,EADFnQ,EAAIoP,EAAM3N,QAGhB,GAAI2N,EAAMze,OAAS,EAAG,CACpB,IAAM6P,EAAK4O,EAAM,GACXa,EAAMjkB,KAAKgjB,QAAQhP,EAAEe,iBAAiBf,EAAGQ,GAAKR,GAGpD,GAFAqQ,EAAKpZ,KAAKiD,MAAM+V,EAAIhX,EAAIuH,EAAGvH,EAAGgX,EAAIjX,EAAIwH,EAAGxH,GAErCoW,EAAMze,OAAS,EAAG,CAAC,IAAD,EACd8P,EAAK2O,EAAM,GACXc,EAAMlkB,KAAKgjB,QAAQxO,EAAGO,iBAAiBP,EAAIC,GAAKA,GAKtD,OAHA0P,EAAKlZ,KAAKiD,MAAMgW,EAAIjX,EAAIuH,EAAGvH,EAAGiX,EAAIlX,EAAIwH,EAAGxH,IACzC,EAAAhN,KAAK8K,QAAOjG,KAAZ,qBAAoBmL,GAAIwE,EAAGjB,EAAG8Q,EAAIF,EAAI3P,EAAGxH,EAAGwH,EAAGvH,KAExCkX,EAEP,OAAOE,K,mCAKb,SAAsBrQ,EAAG3F,EAAKrD,GAAQ,IAAD,IAE7BuQ,EAAevb,KAAKmjB,qBAAqBnP,GACzCwQ,EAAgBxkB,KAAKmjB,qBAAqB9U,GAG1C8V,EAAKlZ,KAAKiD,MAAMqN,EAAatO,EAAI+G,EAAE/G,EAAGsO,EAAavO,EAAIgH,EAAEhH,IAC/D,EAAAhN,KAAK8K,QAAOjG,KAAZ,qBAAoBmL,GAAIgE,EAAET,EAAGvI,EAAOmZ,EAAInQ,EAAEhH,EAAGgH,EAAE/G,KAG/C,IAAM5G,EAAUib,GAAmB,GAAIthB,KAAK6Z,UAK5C,OAJA,EAAA7Z,KAAK8K,QAAOjG,KAAZ,qBAAoBwB,EAAQiT,eAAeiC,EAAciJ,KACzDxkB,KAAK8K,OAAOjG,KAAK2f,GAGVvZ,KAAKiD,MAAMsW,EAAcvX,EAAIoB,EAAIpB,EAAGuX,EAAcxX,EAAIqB,EAAIrB,K,kCAGnE,SAAqBgH,GACnB,OAAIhU,KAAK6Z,SAASvW,YACT0Q,EAAEyQ,sBAAF,MAAAzQ,EAAC,aAA0BhU,KAAKgiB,oBAAmB,GAEnDhO,EAAEuH,aAAavb,KAAK+hB,gBAAgB,K,uBAI/C,SAAU/N,GACRhU,KAAK8hB,QAAQjd,KAAKmP,GAClBhU,KAAK2hB,MAAM+C,QAAQ1Q,K,sBAIrB,SAAS4M,EAAK3S,GACZ,OAAO2S,EAAI/U,QAAO,SAACnL,EAAKsM,EAAGtI,EAAGkc,GAAZ,OAAoB5T,EAAEa,SAASI,GAASvN,EAAImN,SAASI,GAASjB,EAAItM,IAAKkgB,EAAI,M,qBAI/F,SAAQA,EAAK3S,GACX,OAAO2S,EAAI/U,QAAO,SAACnL,EAAKsM,EAAGtI,EAAGkc,GAAZ,OAAoB5T,EAAEa,SAASI,GAASvN,EAAImN,SAASI,GAASjB,EAAItM,IAAKkgB,EAAI,M,wBAG/F,WACE,OAAO3gB,O,GA5T+B+H,ICtCrB2c,G,WACnB,WAAY3X,EAAGC,EAAGsG,EAAGqR,EAAO/K,EAAUgL,GAAS,oBAC7C7kB,KAAKgN,EAAIA,EACThN,KAAKiN,EAAIA,EACTjN,KAAKuT,EAAIA,EACTvT,KAAK8kB,MAAQ,KACb9kB,KAAKgL,MAAQC,KAAKC,GAAG,EACrBlL,KAAK4kB,MAAQA,EACb5kB,KAAK6Z,SAAWA,EAEhB,IAAIyD,EAAOtd,KAAK6Z,SAASkL,mBAAqB,EAAI,EAClD/kB,KAAKglB,MAAQ/Z,KAAKW,IAAIiO,EAASoL,SAAW3H,EAAMtd,KAAK4kB,MAAQ,GAAK3Z,KAAKC,GAAK,IAAM2O,EAAS1J,WAC3FnQ,KAAK6kB,OAASA,E,4CAGhB,WACE,IAAIK,EAAOllB,KAAKuT,EAAIvT,KAAK6Z,SAASsL,aAC9BC,EAAOplB,KAAKgN,EAAIhN,KAAKuT,EAAI2R,EACzBG,EAAOrlB,KAAKiN,EAEhB,OADAjN,KAAK8kB,MAAQ,IAAIH,EAAMS,EAAMC,EAAMH,EAAMllB,KAAK4kB,MAAQ,EAAG5kB,KAAK6Z,SAAU7Z,MACjEA,KAAK8kB,Q,oBAGd,WACE,GAAI9kB,KAAK6kB,OAAQ,CACf7kB,KAAKgL,OAAShL,KAAKglB,MAEnB,IAAIM,EAAOtlB,KAAKuT,EAAIvT,KAAK6kB,OAAOtR,EAChCvT,KAAKgN,EAAIhN,KAAK6kB,OAAO7X,EAAIsY,EAAOra,KAAKG,IAAIpL,KAAKgL,OAC9ChL,KAAKiN,EAAIjN,KAAK6kB,OAAO5X,EAAIqY,EAAOra,KAAKI,IAAIrL,KAAKgL,Y,KCzB9C/K,GAAO,6BACR8H,IACA,CACDwd,0BAA2B,CACzBnkB,MAAO,WACPb,IAAK,GAEPilB,4BAA6B,CAC3BpkB,MAAO,aACPb,IAAK,GAEPklB,4BAA6B,CAC3BrkB,MAAO,oBACPb,IAAK,EACLG,IAAK,GAEPglB,8BAA+B,CAC7BtkB,MAAO,yCACPb,IAAK,EACLG,IAAK,GAEPilB,mCAAoC,CAClCvkB,MAAO,+BACPf,KAAM,cAMSulB,G,kDACnB,aAAe,IAAD,8BACZ,cAAM,uBACDpZ,KAAO,uEACZ,EAAKC,SAAW,4CAHJ,E,mDAMd,WACE,OAAO,wGAEF,CACDpM,KAAM,qBACNklB,0BAA2B,EAC3BC,4BAA6B,EAC7BC,4BAA6B,EAC7BC,8BAA+B,EAC/BC,oCAAoC,EACpCzd,eAAe,M,yBAKrB,SAAYpE,GAeV,IAdA,IAWIuK,EAXA8B,EAAazD,SAAS5I,EAAMiH,MAAMya,6BAClC3L,EAAW,CACb1J,WAAYA,EACZ8U,SAAUvY,SAAS5I,EAAMiH,MAAMwa,2BAC/BM,WAAYnZ,SAAS5I,EAAMiH,MAAM0a,6BACjCN,aAAczY,SAAS5I,EAAMiH,MAAM2a,+BACnCX,kBAAmBjhB,EAAMiH,MAAM4a,oCAG7BG,EAAM,IAAInB,GAAM,EAAG,EAAG,EAAG,EAAG9K,GAC5BrJ,EAAOsV,EAEPhb,EAAS,GAEJpG,EAAE,EAAGA,EAAEmV,EAASgM,WAAYnhB,IACnC8L,EAAOA,EAAKuV,WAEd1X,EAAMmC,EAEN,IAAK,IAAI9L,EAAE,EAAGA,EAAEyL,EAAYzL,IAC1B,IAAK,IAAIsV,EAAE,EAAGA,EAAE,IAAKA,IAAK,CAGxB,IAFA,IAAIxJ,EAAOsV,EAEI,MAARtV,GACLA,EAAKwV,SACLxV,EAAOA,EAAKsU,MAGdha,EAAOjG,KAAK,IAAIsG,KAAOkD,EAAIrB,EAAGqB,EAAIpB,IAMtC,OADAnC,EAAO1G,SAAQ,SAAA6J,GAAK,OAAIA,EAAMlB,SAAS,CAACC,EAD1B,EACoCC,EADpC,OAEPnC,I,wBAGT,WACE,OAAO7K,O,GA7DoC+H,IC9B1Bie,G,kDACnB,aAAe,uCACP,S,mDAGR,WACE,OAAO,wGAEF,CACD5lB,KAAM,Y,yBAKZ,SAAYyD,GAEV,IADA,IAAIgH,EAAS,GACJpG,EAAE,EAAGA,EAAE,IAAKA,IAAK,CACxB,IAAIsG,EAAkB,EAAVC,KAAKC,GAAW,IAAQxG,EAGpCoG,EAAOjG,KAAK,IAAIsG,KAAO2B,GAAc7B,KAAKW,IAAIX,KAAKI,IAAIL,GAAQ,GAFnD,IAGgB,GAAK,GAAOC,KAAKG,IAAIJ,IAClB,EAAI,GAAOC,KAAKG,IAAI,EAAMJ,IAC1B,EAAI,GAAOC,KAAKG,IAAI,EAAMJ,IAC1B,EAAI,GAAOC,KAAKG,IAAI,EAAMJ,MAE3D,OAAOF,M,GA1BwB9C,ICC7B/H,GAAO,6BACR8H,IACA,CACDme,aAAc,CACZ9kB,MAAO,sBACPb,IAAK,GAEP4lB,aAAc,CACZ/kB,MAAO,sBACPb,IAAK,KAKU6lB,G,kDACnB,aAAe,IAAD,8BACZ,cAAM,QACD5Z,KAAO,gDACZ,EAAKC,SAAW,oBAHJ,E,mDAMd,WACE,OAAO,wGAEF,CACDpM,KAAM,cACN6lB,aAAc,EACdC,aAAc,M,yBAKpB,SAAYriB,GACV,IAAIgH,EAAS,GACTmB,EAAIS,SAAS5I,EAAMiH,MAAMmb,cACzBha,EAAIQ,SAAS5I,EAAMiH,MAAMob,cACzBxZ,EAAUd,GAAOI,EAAGC,GACxBD,EAAIU,EAAQ,GACZT,EAAIS,EAAQ,GAIZ,IAHA,IAAIC,EAAYlB,OAAOmB,UAAUZ,EAAEC,GAAK,EAAIA,EACxCY,EAAQZ,EAAID,EAAI,EAAEA,EAAI,GAAG,GAAGC,EAAID,EAAE,IAE7BvH,EAAE,EAAGA,EAAE,IAAIkI,EAAWlI,IAAK,CAClC,IAAIsG,EAAkB,EAAVC,KAAKC,GAAW,IAAQxG,EACpCoG,EAAOjG,KACL,IAAIsG,MACDc,EAAIC,GAAKjB,KAAKG,IAAIJ,GAASkB,EAAIjB,KAAKG,KAAMa,EAAIC,GAAKA,EAAKlB,IACxDiB,EAAIC,GAAKjB,KAAKI,IAAIL,GAASkB,EAAIjB,KAAKI,KAAMY,EAAIC,GAAKA,EAAKlB,IACzD+B,SAAS,CAACC,EAAGF,EAAOG,EAAGH,KAI7B,OAAOhC,I,wBAGT,WACE,OAAO7K,O,GA1CuB+H,IClBvBqe,GAAiB,CAC1B,IAAM,CAAE,CAAC,GAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,OAChJ,EAAM,CAAE,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,OAC31B,EAAM,CAAE,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,GAAQ,CAAC,IAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAO,GAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,OACvb,EAAM,CAAE,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,OAAO,OAC/yB,EAAM,CAAE,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,IAAO,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,IAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,IAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,IAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,OAC3yC,EAAM,CAAE,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,GAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,MAAO,GAAQ,CAAC,MAAO,GAAQ,CAAC,MAAO,GAAQ,CAAC,MAAO,GAAQ,CAAC,MAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,MAAO,GAAQ,CAAC,MAAO,GAAQ,CAAC,OAAO,GAAQ,CAAC,OAAO,GAAQ,CAAC,OAAO,GAAQ,CAAC,MAAO,GAAQ,CAAC,MAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,MAAO,OACtxB,EAAM,CAAE,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,IAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,IAAQ,CAAC,KAAM,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,OACz0C,EAAM,CAAE,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,OAC74B,EAAM,CAAE,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,GAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,MAAO,GAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,OAAO,OACvvB,EAAM,CAAE,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,IAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,IAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,OAAO,OACrqC,EAAM,CAAE,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,OAC/qB,EAAM,CAAE,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,OAClrB,EAAM,CAAE,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,OACv1B,EAAM,CAAE,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,OAAO,OACzwB,EAAM,CAAE,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,OAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,MAAO,OAChur1C,EAAM,CAAE,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,KAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,IAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,OACx7B,EAAM,CAAE,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,KAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,KAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,MAAO,OAC34B,EAAM,CAAE,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,MAAM,IAAQ,CAAC,KAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,OACnxB,EAAM,CAAE,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,KAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,KAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,KAAO,OAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,OACnwB,EAAM,CAAE,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAM,KAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,MAAM,KAAQ,CAAC,KAAM,KAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,OAAO,IAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,OACvgC,EAAM,CAAE,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,IAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,GAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,GAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,IAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,MAAO,OACj7C,EAAM,CAAE,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,GAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,GAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,GAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,KAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,KAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,KAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,MAAM,KAAQ,CAAC,MAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,OAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,OAC3hD,EAAM,CAAE,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,GAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,IAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,IAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,GAAM,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,GAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,MAAM,IAAQ,CAAC,MAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,OAAO,OACxtC,EAAM,CAAE,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,OAAO,OAChxB,EAAM,CAAE,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAM,MAAQ,CAAC,GAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,GAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,OAAO,OACzzB,EAAM,CAAE,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,OAAO,OACh5B,EAAM,CAAE,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,OAAO,KAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,OAAO,OAC5yB,EAAM,CAAE,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,OAC18B,EAAM,CAAE,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,IAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,IAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,KAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,OAC3uC,EAAM,CAAE,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,KAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,KAAQ,CAAC,MAAM,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,KAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,MAAO,OAC1wC,EAAM,CAAE,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,IAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,IAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,OAAO,OAClhD,EAAM,CAAE,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,KAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,KAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,OACniD,EAAM,CAAE,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,OAAO,OAC93B,EAAM,CAAE,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,MAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,KAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,OACpyC,EAAM,CAAE,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,KAAO,OAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,OACz9B,EAAM,CAAE,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,OACh5B,EAAM,CAAE,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,IAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,OAC93B,EAAM,CAAE,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,OAChvB,EAAM,CAAE,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,MAAO,OACvihpB,EAAM,CAAE,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,MAAO,GAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,KAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,KAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,OAC/lC,EAAM,CAAE,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,IAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,IAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,IAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,IAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,IAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,KAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,KAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,KAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,IAAO,OAAQ,CAAC,KAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,IAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,MAAO,OAChoD,EAAM,CAAE,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,OAAO,OACziC,EAAM,CAAE,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,OAChc,EAAM,CAAE,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,OACh2B,EAAM,CAAE,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,GAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,IAAM,KAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,OACr9C,EAAM,CAAE,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,GAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,OACn9B,EAAM,CAAE,CAAC,MAAO,MAAQ,CAAC,IAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,IAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,IAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,KAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,KAAQ,CAAC,OAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,OAAO,KAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,KAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,KAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,OAAO,KAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,OAAO,OACh9D,EAAM,CAAE,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,KAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,KAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,OAAO,OAC3jC,EAAM,CAAE,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,OAChzC,EAAM,CAAE,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MA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Q,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,IAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,IAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,OAChtC,EAAM,CAAE,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,KAAO,KAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,OACh4B,EAAM,CAAE,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,KAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,OAChhC,EAAM,CAAE,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAM,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAM,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,OAC90B,EAAM,CAAE,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,KAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,KAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,OAChrD,EAAM,CAAE,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,KAAO,OAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,OACh8C,KAAO,CAAE,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,C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,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,KAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,KAAQ,CAAC,OAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,OACjtD,KAAO,CAAE,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,KAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,KAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,OAC3gC,KAAO,CAAE,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,OACjrC,KAAO,CAAE,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,OAAQ,CAAC,KAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,KAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,OAC9iC,KAAO,CAAE,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,OAAO,MAAQ,CAAC,OAAO,OACjiD,KAAO,CAAE,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ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AQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,KAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MA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KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,OAAO,OACz1C,EAAM,CAAE,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAA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,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,OACt8C,EAAM,CAAE,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,IAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,OACllC,EAAM,CAAE,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,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MAAO,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,MAAO,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,OAChuB,EAAM,CAAE,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAM,KAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,OAC91C,EAAM,CAAE,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,OAAO,OAC79B,EAAM,CAAE,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAM,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAM,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ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AAO,OACjD,KAAO,CAAE,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,OACjD,KAAO,CAAE,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,OACjD,KAAO,CAAE,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,OACjD,KAAO,CAAE,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,OACjD,KAAO,CAAE,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,OACjD,KAAO,CAAE,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,OACjD,KAAO,CAAE,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,OACjD,KAAO,CAAE,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,OACjD,KAAO,CAAE,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,OACjD,KAAO,CAAE,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,OACjD,KAAO,CAAE,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,OACjD,KAAO,CAAE,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,OACjD,KAAO,CAAE,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,OACjD,IAAM,CAAE,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,OAChY,IAAM,CAAE,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,IAAM,MAAQ,CAAC,KAAM,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,M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AO,cAAgB,eAC3B,IAAIA,KAAO,cAAgB,eAC3B,IAAIA,KAAO,cAAgB,aAC3B,IAAIA,KAAO,cAAgB,eAC3B,IAAIA,KAAO,cAAgB,eAC3B,IAAIA,KAAO,cAAgB,eAC3B,IAAIA,KAAO,cAAgB,eAC3B,IAAIA,KAAO,cAAgB,eAC3B,IAAIA,KAAO,cAAgB,eAC3B,IAAIA,KAAO,cAAgB,eAC3B,IAAIA,KAAO,cAAgB,eAC3B,IAAIA,KAAO,cAAgB,eAC3B,IAAIA,KAAO,cAAgB,eAC3B,IAAIA,KAAO,cAAgB,eAC3B,IAAIA,KAAO,cAAgB,eAC3B,IAAIA,KAAO,cAAgB,eAC3B,IAAIA,KAAO,cAAgB,cAC3B,IAAIA,KAAO,cAAgB,cAC3B,IAAIA,KAAO,cAAgB,eAC3B,IAAIA,KAAO,cAAgB,eAC3B,IAAIA,KAAO,cAAgB,eAC3B,IAAIA,KAAO,cAAgB,eAC3B,IAAIA,KAAO,cAAgB,cAC3B,IAAIA,KAAO,cAAgB,eAC3B,IAAIA,KAAO,cAAgB,eAC3B,IAAIA,KAAO,aAAe,eAC1B,IAAIA,KAAO,aAAe,eAC1B,IAAIA,KAAO,cAAgB,eAC3B,IAAIA,KAAO,cAAgB,eAC3B,IAAIA,KAAO,cAAgB,eAC3B,IAAIA,KAAO,cAAgB,eAC3B,IAAIA,KAAO,cAAgB,eAC3B,IAAIA,KAAO,cAAgB,eAC3B,IAAIA,KAAO,cAAgB,eAC3B,IAAIA,KAAO,cAAgB,eAC3B,IAAIA,KAAO,cAAgB,eAC3B,IAAIA,KAAO,cAAgB,eAC3B,IAAIA,KAAO,cAAgB,eAC3B,IAAIA,KAAO,cAAgB,eAC3B,IAAIA,KAAO,cAAgB,eAC3B,IAAIA,KAAO,cAAgB,eAC3B,IAAIA,KAAO,cAAgB,eAC3B,IAAIA,KAAO,cAAgB,eAC3B,IAAIA,KAAO,cAAgB,eAC3B,IAAIA,KAAO,cAAgB,eAC3B,IAAIA,KAAO,cAAgB,eAC3B,IAAIA,KAAO,cAAgB,cAC3B,IAAIA,KAAO,cAAgB,eAC3B,IAAIA,KAAO,cAAgB,cAC3B,IAAIA,KAAO,cAAgB,eAC3B,IAAIA,KAAO,cAAgB,eAC3B,IAAIA,KAAO,cAAgB,cAC3B,IAAIA,KAAO,cAAgB,eAC3B,IAAIA,KAAO,cAAgB,eAC3B,IAAIA,KAAO,cAAgB,eAC3B,IAAIA,KAAO,cAAgB,eAC3B,IAAIA,KAAO,cAAgB,eAC3B,IAAIA,KAAO,aAAe,eAC1B,IAAIA,KAAO,cAAgB,eAC3B,IAAIA,KAAO,aAAe,eAC1B,IAAIA,KAAO,cAAgB,eAC3B,IAAIA,KAAO,cAAgB,eAC3B,IAAIA,KAAO,cAAgB,eAC3B,IAAIA,KAAO,cAAgB,eAC3B,IAAIA,KAAO,cAAgB,eAC3B,IAAIA,KAAO,cAAgB,eAC3B,IAAIA,KAAO,cAAgB,eAC3B,IAAIA,KAAO,cAAgB,eAC3B,IAAIA,KAAO,cAAgB,eAC3B,IAAIA,KAAO,cAAgB,eAC3B,IAAIA,KAAO,cAAgB,eAC3B,IAAIA,KAAO,cAAgB,eAC3B,IAAIA,KAAO,cAAgB,eAC3B,IAAIA,KAAO,cAAgB,cAC3B,IAAIA,KAAO,cAAgB,eAC3B,IAAIA,KAAO,cAAgB,gBAC3B,IAAIA,KAAO,cAAgB,gBAC3B,IAAIA,KAAO,cAAgB,gBAC3B,IAAIA,KAAO,aAAe,gBAC1B,IAAIA,KAAO,cAAgB,kBAC3B,IAAIA,KAAO,eAAiB,gBAC5B,IAAIA,KAAO,eAAiB,gBAC5B,IAAIA,KAAO,eAAiB,gBAC5B,IAAIA,KAAO,eAAiB,gBAC5B,IAAIA,KAAO,cAAgB,eAC3B,IAAIA,KAAO,eAAiB,eAC5B,IAAIA,KAAO,cAAgB,eAC3B,IAAIA,KAAO,eAAiB,eAC5B,IAAIA,KAAO,eAAiB,eAC5B,IAAIA,KAAO,eAAiB,eAC5B,IAAIA,KAAO,eAAiB,cAC5B,IAAIA,KAAO,eAAiB,eAC5B,IAAIA,KAAO,eAAiB,eAC5B,IAAIA,KAAO,eAAiB,eAC5B,IAAIA,KAAO,eAAiB,eAC5B,IAAIA,KAAO,eAAiB,eAC5B,IAAIA,KAAO,cAAgB,cAC3B,IAAIA,KAAO,aAAe,eAC1B,IAAIA,KAAO,cAAgB,eAC3B,IAAIA,KAAO,eAAiB,eAC5B,IAAIA,KAAO,eAAiB,eAC5B,IAAIA,KAAO,eAAiB,eAC5B,IAAIA,KAAO,eAAiB,eAC5B,IAAIA,KAAO,eAAiB,eAC5B,IAAIA,KAAO,eAAiB,eAC5B,IAAIA,KAAO,eAAiB,eAC5B,IAAIA,KAAO,cAAgB,eAC3B,IAAIA,KAAO,eAAiB,eAC5B,IAAIA,KAAO,eAAiB,eAC5B,IAAIA,KAAO,eAAiB,eAC5B,IAAIA,KAAO,eAAiB,cAC5B,IAAIA,KAAO,eAAiB,eAC5B,IAAIA,KAAO,eAAiB,eAC5B,IAAIA,KAAO,eAAiB,eAC5B,IAAIA,KAAO,eAAiB,eAC5B,IAAIA,KAAO,eAAiB,eAC5B,IAAIA,KAAO,eAAiB,eAC5B,IAAIA,KAAO,eAAiB,eAC5B,IAAIA,KAAO,eAAiB,eAC5B,IAAIA,KAAO,eAAiB,eAC5B,IAAIA,KAAO,eAAiB,eAC5B,IAAIA,KAAO,eAAiB,eAC5B,IAAIA,KAAO,eAAiB,eAC5B,IAAIA,KAAO,eAAiB,eAC5B,IAAIA,KAAO,eAAiB,eAC5B,IAAIA,KAAO,cAAgB,eAC3B,IAAIA,KAAO,eAAiB,eAC5B,IAAIA,KAAO,eAAiB,eAC5B,IAAIA,KAAO,eAAiB,eAC5B,IAAIA,KAAO,eAAiB,eAC5B,IAAIA,KAAO,eAAiB,eAC5B,IAAIA,KAAO,eAAiB,eAC5B,IAAIA,KAAO,eAAiB,eAC5B,IAAIA,KAAO,eAAiB,eAC5B,IAAIA,KAAO,eAAiB,eAC5B,IAAIA,KAAO,eAAiB,eAC5B,IAAIA,KAAO,eAAiB,eAC5B,IAAIA,KAAO,eAAiB,eAC5B,IAAIA,KAAO,eAAiB,eAC5B,IAAIA,KAAO,eAAiB,eAC5B,IAAIA,KAAO,eAAiB,eAC5B,IAAIA,KAAO,eAAiB,eAC5B,IAAIA,KAAO,eAAiB,eAC5B,IAAIA,KAAO,cAAgB,eAC3B,IAAIA,KAAO,cAAgB,eAC3B,IAAIA,KAAO,eAAiB,eAC5B,IAAIA,KAAO,eAAiB,eAC5B,IAAIA,KAAO,eAAiB,eAC5B,IAAIA,KAAO,eAAiB,eAC5B,IAAIA,KAAO,eAAiB,eAC5B,IAAIA,KAAO,eAAiB,cAC5B,IAAIA,KAAO,eAAiB,eAC5B,IAAIA,KAAO,eAAiB,eAC5B,IAAIA,KAAO,eAAiB,eAC5B,IAAIA,KAAO,eAAiB,eAC5B,IAAIA,KAAO,eAAiB,cAC5B,IAAIA,KAAO,eAAiB,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","file":"static/js/main.3dc50d6a.chunk.js","sourcesContent":["import ReactGA from 'react-ga'\n\nReactGA.initialize('UA-126702426-1', {\n  debug: false // Set to true to see debug info in the console\n})\nReactGA.pageview(window.location.pathname + window.location.search)\n","export default __webpack_public_path__ + \"static/media/logo.abf07d4f.svg\";","import React, { Component } from 'react'\nimport logo from './logo.svg'\nimport './Header.scss'\n\nclass Header extends Component {\n  render() {\n    return (\n      <header>\n        <div className=\"d-flex align-items-center justify-content-center\">\n          <img src={logo} className=\"app-logo mr-2\" alt=\"logo\" />\n          <h1 className=\"d-inline m-0\">sandify</h1>\n          <p className=\"ml-4 d-none d-lg-block\">create patterns for robots that draw in sand with ball bearings</p>\n        </div>\n      </header>\n    )\n  }\n}\n\nexport default Header\n","import React, { Component } from 'react'\nimport {\n  Col,\n  Form,\n  Row\n} from 'react-bootstrap'\nimport debounce from 'lodash/debounce'\n\nclass InputOption extends Component {\n  constructor(props) {\n    super(props);\n    this.delayedSet = debounce( (value, key, onChange) => {\n      let attrs = {}\n      attrs[key] = value\n      onChange(attrs)\n    }, 1500)\n  }\n\n  render() {\n    const option = this.props.options[this.props.optionKey]\n    const model = this.props.model\n    const optionType = option.type || 'number'\n    const minimum = (typeof option.min === 'function') ? option.min(model) : parseFloat(option.min)\n    const maximum = (typeof option.max === 'function') ? option.max(model) : parseFloat(option.max)\n    const visible = option.isVisible === undefined ? true : option.isVisible(model)\n\n    return (\n      <Row className={\"align-items-center pb-1\" + (visible ? '' : ' d-none')}>\n        <Col sm={5}>\n        <Form.Label htmlFor=\"options-step\">\n          {option.title}\n        </Form.Label>\n        </Col>\n\n        <Col sm={7}>\n          <Form.Control\n            as={optionType===\"textarea\" ? \"textarea\" : \"input\"}\n            type={optionType}\n            step={option.step ? option.step : 1}\n            min={!isNaN(minimum) ? minimum : ''}\n            max={!isNaN(maximum) ? maximum : ''}\n            value={model[this.props.optionKey]}\n            plaintext={option.plainText}\n            onChange={(event) => {\n              let attrs = {}\n              let value = event.target.value\n\n              if (optionType === 'number') {\n                value = value === '' ? '' : parseFloat(value)\n              }\n\n              attrs[this.props.optionKey] = value\n              if (option.onChange !== undefined) {\n                attrs = option.onChange(attrs, model)\n              }\n              this.props.onChange(attrs)\n              if (this.props.delayKey !== undefined) {\n                this.delayedSet(value, this.props.delayKey, this.props.onChange)\n              }\n            }}\n            />\n        </Col>\n      </Row>\n    )\n  }\n}\n\nexport default InputOption\n","import React, { Component } from 'react'\nimport {\n  Col,\n  Row,\n  Form,\n} from 'react-bootstrap'\nimport Switch from 'react-switch'\n\nclass CheckboxOption extends Component {\n  render() {\n    const option = this.props.options[this.props.optionKey]\n    const model = this.props.model\n    const visible = option.isVisible === undefined ? true : option.isVisible(model)\n\n    return (\n      <Row className={\"align-items-center\" + (visible ? '' : ' d-none')}>\n        <Col sm={5}>\n        <Form.Label htmlFor=\"options-step\">\n          {option.title}\n        </Form.Label>\n        </Col>\n\n        <Col sm={7}>\n          <Switch\n            checked={model[this.props.optionKey]}\n            onChange={(checked) => {\n              let attrs = {}\n              attrs[this.props.optionKey] = checked\n\n              if (option.onChange !== undefined) {\n                attrs = option.onChange(attrs, model)\n              }\n\n              this.props.onChange(attrs)\n            }} />\n        </Col>\n      </Row>\n    )\n  }\n}\n\nexport default CheckboxOption\n","const machineOptions = {\n  minX: {\n    title: 'Min X (mm)',\n  },\n  maxX: {\n    title: 'Max X (mm)',\n  },\n  minY: {\n    title: 'Min Y (mm)',\n  },\n  maxY: {\n    title: 'Max Y (mm)',\n  },\n  origin: {\n    title: 'Force origin'\n  },\n  maxRadius: {\n    title: 'Max radius (mm)'\n  },\n  minimizeMoves: {\n    title: 'Try to minimize perimeter moves',\n    type: 'checkbox'\n  },\n  polarEndPoint: {\n    title: 'End point'\n  },\n  polarStartPoint: {\n    title: 'Start point'\n  },\n}\n\nexport default class Machine {\n  getOptions() {\n    return machineOptions\n  }\n}\n","import { createSlice } from \"@reduxjs/toolkit\"\n\n// accommodate old and new local storage keys\nconst localMinX = parseFloat(localStorage.getItem('minX') || localStorage.getItem('machine_min_x'))\nconst localMaxX = parseFloat(localStorage.getItem('maxX') || localStorage.getItem('machine_max_x'))\nconst localMinY = parseFloat(localStorage.getItem('minY') || localStorage.getItem('machine_min_y'))\nconst localMaxY = parseFloat(localStorage.getItem('maxY') || localStorage.getItem('machine_max_y'))\nconst localMaxRadius = parseFloat(localStorage.getItem('maxRadius') || localStorage.getItem('machine_radius'))\n\nconst machineSlice = createSlice({\n  name: 'machine',\n  initialState: {\n    rectangular: undefined !== localStorage.getItem('machine_rect_active') ? localStorage.getItem('machine_rect_active') < 2 : true,\n    rectExpanded: false,\n    polarExpanded: false,\n    minX: localMinX || 0,\n    maxX: localMaxX || 500,\n    minY: localMinY || 0,\n    maxY: localMaxY || 500,\n    maxRadius: localMaxRadius || 250,\n    minimizeMoves: JSON.parse(localStorage.getItem('minimizeMoves')) || false,\n    rectOrigin: [],\n    polarStartPoint: 'none',\n    polarEndPoint: 'none'\n  },\n  reducers: {\n    updateMachine(state, action) {\n      Object.assign(state, action.payload)\n      Object.keys(action.payload).forEach(key => {\n        localStorage.setItem(key, action.payload[key])\n      })\n    },\n    toggleMachineRectExpanded(state, action) {\n      state.rectangular = true\n      state.rectExpanded = !state.rectExpanded\n      state.polarExpanded = false\n      localStorage.setItem('machine_rect_active', 1)\n    },\n    toggleMachinePolarExpanded(state, action) {\n      state.rectangular = false\n      state.rectExpanded = false\n      state.polarExpanded = !state.polarExpanded\n      localStorage.setItem('machine_rect_active', 2)\n    },\n    setMachineRectOrigin(state, action) {\n      let newValue = []\n      let value = action.payload\n\n      for (let i = 0; i < value.length ; i++) {\n        if (!state.rectOrigin.includes(value[i])) {\n          newValue.push(value[i])\n          break\n        }\n      }\n      state.rectOrigin = newValue\n    },\n    toggleMinimizeMoves(state, action) {\n      state.minimizeMoves = !state.minimizeMoves\n      localStorage.setItem('minimizeMoves', state.minimizeMoves)\n    },\n  }\n})\n\nexport const {\n  updateMachine,\n  toggleMachineRectExpanded,\n  toggleMachinePolarExpanded,\n  setMachineRectOrigin,\n  setMachineSize,\n  toggleMinimizeMoves,\n} = machineSlice.actions\n\nexport default machineSlice.reducer\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport {\n    Accordion,\n    Card,\n    Col,\n    Form,\n    Row,\n    ToggleButton,\n    ToggleButtonGroup,\n} from 'react-bootstrap'\nimport InputOption from '../../components/InputOption'\nimport CheckboxOption from '../../components/CheckboxOption'\nimport Machine from '../../models/Machine'\nimport {\n  updateMachine,\n  toggleMinimizeMoves,\n  toggleMachineRectExpanded,\n  setMachineRectOrigin\n} from './machineSlice'\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    expanded: state.machine.rectExpanded,\n    active:   state.machine.rectangular,\n    minX:    state.machine.minX,\n    maxX:    state.machine.maxX,\n    minY:    state.machine.minY,\n    maxY:    state.machine.maxY,\n    origin:   state.machine.rectOrigin,\n    minimizeMoves: state.machine.minimizeMoves,\n    options: new Machine().getOptions()\n  }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    activeCallback: (event) => {\n      dispatch(toggleMachineRectExpanded())\n    },\n    onChange: (attrs) => {\n      dispatch(updateMachine(attrs))\n    },\n    onOriginChange: (value) => {\n      dispatch(setMachineRectOrigin(value))\n    },\n    toggleMinimizeMoves: () => {\n      dispatch(toggleMinimizeMoves());\n    },\n  }\n}\n\nclass RectSettings extends Component {\n  render() {\n    var activeClassName = this.props.active ? 'active' : ''\n\n    return (\n      <Card className={`${activeClassName} overflow-auto`}>\n        <Accordion.Toggle as={Card.Header} eventKey={2} onClick={this.props.activeCallback}>\n          <h3>Rectangular machine</h3>\n          Rectangular machines like Zen XY\n        </Accordion.Toggle>\n\n        <Accordion.Collapse eventKey={2}>\n          <Card.Body>\n            <InputOption\n              onChange={this.props.onChange}\n              options={this.props.options}\n              key=\"minX\"\n              optionKey=\"minX\"\n              index={0}\n              model={this.props} />\n\n            <InputOption\n              onChange={this.props.onChange}\n              options={this.props.options}\n              key=\"maxX\"\n              optionKey=\"maxX\"\n              index={0}\n              model={this.props} />\n\n            <InputOption\n              onChange={this.props.onChange}\n              options={this.props.options}\n              key=\"minY\"\n              optionKey=\"minY\"\n              index={0}\n              model={this.props} />\n\n            <InputOption\n              onChange={this.props.onChange}\n              options={this.props.options}\n              key=\"maxY\"\n              optionKey=\"maxY\"\n              index={0}\n              model={this.props} />\n\n            <Row className=\"align-items-center pb-2\">\n              <Col sm={5}>\n                <Form.Label htmlFor=\"origin\">\n                  Force origin\n                </Form.Label>\n              </Col>\n\n              <Col sm={7}>\n                <ToggleButtonGroup id=\"origin-bar\" type=\"checkbox\" name=\"origin\" className=\"flex-wrap\" value={this.props.origin} onChange={this.props.onOriginChange}>\n                  <ToggleButton variant=\"light\" value={1} >upper left</ToggleButton>\n                  <ToggleButton variant=\"light\" value={2} >upper right</ToggleButton>\n                  <ToggleButton variant=\"light\" value={0} >lower left</ToggleButton>\n                  <ToggleButton variant=\"light\" value={3} >lower right</ToggleButton>\n                </ToggleButtonGroup>\n              </Col>\n            </Row>\n\n            <CheckboxOption\n              onChange={this.props.onChange}\n              options={this.props.options}\n              optionKey=\"minimizeMoves\"\n              key=\"minimizeMoves\"\n              index={0}\n              model={this.props} />\n          </Card.Body>\n        </Accordion.Collapse>\n      </Card>\n    )\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RectSettings)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport {\n    Accordion,\n    Col,\n    Row,\n    Form,\n    Card,\n    ToggleButton,\n    ToggleButtonGroup\n} from 'react-bootstrap'\nimport InputOption from '../../components/InputOption'\nimport CheckboxOption from '../../components/CheckboxOption'\nimport Machine from '../../models/Machine'\nimport {\n  toggleMachinePolarExpanded,\n  updateMachine,\n  toggleMinimizeMoves\n} from './machineSlice'\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    expanded: state.machine.polarExpanded,\n    active: !state.machine.rectangular,\n    maxRadius: state.machine.maxRadius,\n    startPoint: state.machine.polarStartPoint,\n    endPoint: state.machine.polarEndPoint,\n    minimizeMoves: state.machine.minimizeMoves,\n    options: new Machine().getOptions()\n  }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    activeCallback: (event) => {\n      dispatch(toggleMachinePolarExpanded())\n    },\n    onChange: (attrs) => {\n      dispatch(updateMachine(attrs))\n    },\n    onStartPointChange: (value) => {\n      dispatch(updateMachine({polarStartPoint: value}))\n    },\n    onEndPointChange: (value) => {\n      dispatch(updateMachine({polarEndPoint: value}))\n    },\n    toggleMinimizeMoves: () => {\n      dispatch(toggleMinimizeMoves())\n    },\n  }\n}\n\nclass PolarSettings extends Component {\n  render() {\n    var activeClassName = this.props.active ? 'active' : ''\n\n    return (\n      <Card className={`${activeClassName} overflow-auto`}>\n        <Accordion.Toggle as={Card.Header} eventKey={1} onClick={this.props.activeCallback}>\n          <h3>Polar machine</h3>\n          Polar machines like Sisyphus\n        </Accordion.Toggle>\n\n        <Accordion.Collapse eventKey={1}>\n          <Card.Body>\n            <InputOption\n              onChange={this.props.onChange}\n              options={this.props.options}\n              key=\"maxRadius\"\n              optionKey=\"maxRadius\"\n              index={0}\n              model={this.props} />\n\n            <Row className=\"align-items-center pb-2\">\n              <Col sm={5}>\n                <Form.Label htmlFor=\"forceStart\">\n                  Start point\n                </Form.Label>\n              </Col>\n\n              <Col sm={7}>\n                <ToggleButtonGroup id=\"startPoint\" type=\"radio\" name=\"startPoint\" value={this.props.startPoint} onChange={this.props.onStartPointChange}>\n                  <ToggleButton variant=\"light\" value=\"none\">none</ToggleButton>\n                  <ToggleButton variant=\"light\" value=\"center\">center</ToggleButton>\n                  <ToggleButton variant=\"light\" value=\"perimeter\">perimeter</ToggleButton>\n                </ToggleButtonGroup>\n              </Col>\n            </Row>\n\n            <Row className=\"align-items-center pb-2\">\n              <Col sm={5}>\n                <Form.Label htmlFor=\"endPoint\">\n                  End point\n                </Form.Label>\n              </Col>\n\n              <Col sm={7}>\n                <ToggleButtonGroup id=\"endPoint\" type=\"radio\" name=\"endPoint\" value={this.props.endPoint} onChange={this.props.onEndPointChange}>\n                  <ToggleButton variant=\"light\" value=\"none\">none</ToggleButton>\n                  <ToggleButton variant=\"light\" value=\"center\">center</ToggleButton>\n                  <ToggleButton variant=\"light\" value=\"perimeter\">perimeter</ToggleButton>\n                </ToggleButtonGroup>\n              </Col>\n            </Row>\n\n            <CheckboxOption\n              onChange={this.props.onChange}\n              options={this.props.options}\n              optionKey=\"minimizeMoves\"\n              key=\"minimizeMoves\"\n              index={0}\n              model={this.props} />\n          </Card.Body>\n        </Accordion.Collapse>\n      </Card>\n    )\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PolarSettings)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport {\n    Accordion\n} from 'react-bootstrap'\nimport RectSettings from './RectSettings'\nimport PolarSettings from './PolarSettings'\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    rectangular: state.machine.rectangular,\n  }\n}\n\nclass MachineSettings extends Component {\n  render() {\n    return (\n      <div className=\"p-3\">\n        <Accordion defaultActiveKey={this.props.rectangular ? 2 : 1}>\n          <RectSettings />\n          <PolarSettings />\n        </Accordion>\n      </div>\n    )\n  }\n}\n\nexport default connect(mapStateToProps, null)(MachineSettings)\n","import React, { Component } from 'react'\n\nclass Footer extends Component {\n  render () {\n    return (\n      <footer className=\"p-4\">\n        <div>\n          <h2>About</h2>\n          <p>Sandify turns your cold, empty-hearted, emotionless sand tables into cold, empty-hearted, emotionless sand table robots with enchanting patterns.</p>\n          <p>\n            Sandify is a labor of love, but if you'd like to support me financially,\n            I do have a <a href=\"https://github.com/sponsors/jeffeb3\">Donation system set up with github</a>. Or just <a href=\"https://www.paypal.me/jeffeb3\">PayPal</a>.\n          </p>\n        </div>\n\n        <div>\n          <h2>Instructions</h2>\n          <p>\n            Part of the fun of Sandify is playing it like you would a xylophone.\n            <br/>\n            Try it out first. The goal is to make it easy to make your first pattern by just clicking and scrolling, finding something you like.\n            <br/>\n            Check out <a href=\"https://github.com/jeffeb3/sandify/wiki\">the wiki</a> for some features that you might miss the first time through.\n          </p>\n        </div>\n\n        <div>\n          <h2>Sand Machine</h2>\n          <p>Anything that uses gcode can be used with Sandify. But the machine this was designed for is the ZenXY from V1Engineering.com.</p>\n          <p>\n            <a href=\"https://docs.v1engineering.com/zenxy/\">ZenXY on V1Engineering.com</a>\n          </p>\n          <p>\n            ZenXY was inspired by the awesome Sisyphus kinetic art table by <a href=\"https://sisyphus-industries.com/\">Sisyphus Industries</a>, which is also now supported.\n          </p>\n          <p>\n            Sandify was created by users in the\n            <a href=\"https://forum.v1engineering.com/t/does-this-count-as-a-build/6037\"> V1Engineering.com forum</a>.\n          </p>\n        </div>\n\n        <div>\n          <h2>Github</h2>\n          <p>Sandify is hosted on Github <a href=\"https://github.com/jeffeb3/sandify\">here</a>. Please post any problems, feature requests or comments in our <a href=\"https://github.com/jeffeb3/sandify/issues\">issue tracker</a>.</p>\n          <p>Sandify is a community project. We want and need collaborators. <a href=\"https://github.com/jeffeb3/sandify/blob/master/CONTRIBUTING.md\">Help Sandify</a>.</p>\n        </div>\n\n        <div>\n          <h2>License</h2>\n          <p>\n            Sandify is licensed under the MIT license.\n          </p>\n          <p>\n            Patterns that you create and gcode generated with Sandify are not covered\n            under the Sandify license. They are your work and your copyright. Read our <a href=\"https://raw.githubusercontent.com/jeffeb3/sandify/master/LICENSE\">license</a>.\n          </p>\n        </div>\n      </footer>\n    )\n  }\n}\n\nexport default Footer\n","import React, { Component } from 'react'\n\nclass CommentsBox extends Component {\n\n  render() {\n    const option = this.props.options[this.props.optionKey]\n    const commentsRender = this.props.comments.map((comment, index) => {\n      return <span key={index}>{comment}<br/></span>\n    })\n\n    return <div id=\"comments\" className=\"mt-4 p-3\">\n             {option.title}:\n             <div className=\"ml-3\">\n               { commentsRender }\n             </div>\n           </div>\n  }\n}\n\nexport default CommentsBox\n","import React, { Component } from 'react'\nimport {\n  Col,\n  Form,\n  Row\n} from 'react-bootstrap'\nimport Select from 'react-select'\n\nclass DropdownOption extends Component {\n  render() {\n    const option = this.props.options[this.props.optionKey]\n    const model = this.props.model\n    const currentChoice = model[this.props.optionKey]\n    const choices = Array.isArray(option.choices) ?\n      option.choices.map((choice) => {\n        return { value: choice, label: choice }\n      }) :\n      Object.keys(option.choices).map((key) => {\n        return { value: key, label: option.choices[key] }\n      })\n    const currentLabel = Array.isArray(option.choices) ?\n      currentChoice :\n      option.choices[currentChoice]\n\n    return (\n      <Row className=\"align-items-center pb-2\" key={this.props.index}>\n        <Col sm={5}>\n          <Form.Label htmlFor=\"options-dropdown\">\n            {option.title}\n          </Form.Label>\n        </Col>\n\n        <Col sm={7}>\n          <Select\n            value={{value: currentChoice, label: currentLabel}}\n            onChange={(choice) => {\n              const value = choice.value\n              let attrs = {}\n              attrs[this.props.optionKey] = value\n\n              if (option.onChange !== undefined) {\n                attrs = option.onChange(attrs, model)\n              }\n\n              this.props.onChange(attrs)\n            }}\n            options={choices}\n            />\n        </Col>\n      </Row>\n    )\n  }\n}\n\nexport default DropdownOption\n","import React, { Component } from 'react'\nimport {\n  Col,\n  Form,\n  Row,\n  ToggleButton,\n  ToggleButtonGroup\n} from 'react-bootstrap'\n\nclass ToggleButtonOption extends Component {\n  render() {\n    const option = this.props.options[this.props.optionKey]\n    const model = this.props.model\n    const currentChoice = model[this.props.optionKey]\n    const visible = option.isVisible === undefined ? true : option.isVisible(model)\n\n    return (\n      <Row className={\"align-items-center py-1\" + (visible ? '' : ' d-none')}>\n        <Col sm={5}>\n          <Form.Label>\n            {option.title}\n          </Form.Label>\n        </Col>\n\n        <Col sm={7}>\n          <ToggleButtonGroup\n              type=\"radio\"\n              name={this.props.optionKey}\n              value={currentChoice}\n              key={this.props.optionKey}\n              onChange={(choice) => {\n                let attrs = {}\n                attrs[this.props.optionKey] = choice\n                this.props.onChange(attrs)\n              }}>\n            {option.choices.map((choice) => {\n              return <ToggleButton\n                key={choice}\n                variant=\"light\"\n                value={choice}>{choice}</ToggleButton>\n            })}\n          </ToggleButtonGroup>\n        </Col>\n      </Row>\n    )\n  }\n}\n\nexport default ToggleButtonOption\n","export const shapeOptions = {\n  name: {\n    title: 'Name',\n    type: 'text'\n  }\n}\n\nexport default class Shape {\n  constructor(name) {\n    this.name = name\n    this.cache = []\n  }\n\n  getInitialState() {\n    return {\n      repeatEnabled: true,\n      canTransform: true,\n      selectGroup: 'Shapes',\n      shouldCache: true,\n      autosize: true,\n      canChangeSize: true,\n      canChangeHeight: true,\n      canRotate: true,\n      canMove: true,\n      usesMachine: false,\n      startingWidth: 10,\n      startingHeight: 10,\n      offsetX: 0.0,\n      offsetY: 0.0,\n      rotation: 0,\n      numLoops: 10,\n      transformMethod: 'smear',\n      growEnabled: true,\n      growValue: 100,\n      growMethod: 'constant',\n      growMathInput: 'i+cos(i/2)',\n      growMath: 'i+cos(i/2)',\n      spinEnabled: false,\n      spinValue: 2,\n      spinMethod: 'constant',\n      spinMathInput: '10*sin(i/4)',\n      spinMath: '10*sin(i/4)',\n      spinSwitchbacks: 0,\n      trackEnabled: false,\n      trackGrowEnabled: false,\n      trackValue: 10,\n      trackLength: 0.2,\n      trackNumLoops: 1,\n      trackGrow: 50.0,\n      connectionMethod: 'line',\n      drawPortionPct: 100,\n      backtrackPct: 0,\n      rotateStartingPct: 0,\n      reverse: false,\n      dragging: false,\n      visible: true,\n      effect: false\n    }\n  }\n\n  getOptions() {\n    return shapeOptions\n  }\n\n  getVertices(state) {\n    return []\n  }\n}\n","import Victor from 'victor'\nimport Shape, { shapeOptions } from './Shape'\n\nconst options = {\n  ...shapeOptions,\n  ...{\n    circleLobes: {\n      title: 'Number of lobes',\n      min: 1\n    },\n    circleDirection: {\n      title: 'Direction',\n      type: 'togglebutton',\n      choices: ['clockwise', 'counterclockwise']\n    }\n  }\n}\n\nexport default class Circle extends Shape {\n  constructor() {\n    super('Circle')\n  }\n\n  getInitialState() {\n    return {\n      ...super.getInitialState(),\n      ...{\n        type: 'circle',\n        circleLobes: 1,\n        circleDirection: 'clockwise'\n      },\n    }\n  }\n\n  getVertices(state) {\n    let points = []\n\n    if (state.shape.circleDirection === 'counterclockwise') {\n      for (let i=128; i>=0; i--) {\n        let angle = Math.PI * 2.0 / 128.0 * i\n        points.push(new Victor(Math.cos(angle), Math.sin(state.shape.circleLobes * angle)/state.shape.circleLobes))\n      }\n    } else {\n      for (let i=0; i<=128; i++) {\n        let angle = Math.PI * 2.0 / 128.0 * i\n        points.push(new Victor(Math.cos(angle), Math.sin(state.shape.circleLobes * angle)/state.shape.circleLobes))\n      }\n    }\n\n    return points\n  }\n\n  getOptions() {\n    return options\n  }\n}\n","export const difference = (a, b) => {\n  return new Set(\n    [\n      ...[...a].filter(x => !b.has(x)),\n      ...[...b].filter(x => !a.has(x))\n    ]\n  )\n}\n\n// round a given number n to p number of digits\nexport const roundP = (n, p) => {\n  return Math.round((n + Number.EPSILON) * Math.pow(10, p)) / Math.pow(10, p)\n}\n\n// https://stackoverflow.com/a/4652513\nexport const reduce = (numerator, denominator) => {\n  let gcd = (a,b) => {\n    return b ? gcd(b, a%b) : a;\n  }\n\n  gcd = gcd(numerator, denominator)\n  return [numerator/gcd, denominator/gcd]\n}\n\n// rotates an array count times\n// taken from https://stackoverflow.com/questions/1985260/rotate-the-elements-in-an-array-in-javascript#33451102\nexport const arrayRotate = (arr, count) => {\n  count -= arr.length * Math.floor(count / arr.length)\n  arr.push.apply(arr, arr.splice(0, count))\n  return arr\n}\n\n// set to true to turn on console logging\nconst debug = false\nexport const log = (message) => {\n  if (debug) { console.log(message) }\n}\n","import Victor from 'victor'\nimport Shape, { shapeOptions } from './Shape'\nimport { reduce } from '../common/util'\n\nconst options = {\n  ...shapeOptions,\n  ...{\n    epicycloidA: {\n      title: \"Large circle radius\",\n      min: 1\n    },\n    epicycloidB: {\n      title: \"Small circle radius\",\n      min: 1\n    },\n  }\n}\n\nexport default class Epicycloid extends Shape {\n  constructor() {\n    super('Clover')\n    this.link = 'http://mathworld.wolfram.com/Epicycloid.html'\n    this.linkText = 'Wolfram Mathworld'\n  }\n\n  getInitialState() {\n    return {\n      ...super.getInitialState(),\n      ...{\n        type: 'epicycloid',\n        epicycloidA: 4,\n        epicycloidB: 1,\n      }\n    }\n  }\n\n  getVertices(state) {\n    let points = []\n    let a = parseInt(state.shape.epicycloidA)\n    let b = parseInt(state.shape.epicycloidB)\n    let reduced = reduce(a, b)\n    a = reduced[0]\n    b = reduced[1]\n    let rotations = Number.isInteger(a/b) ? 1 : b\n    let scale = 1/(a + 2*b)\n\n    for (let i=0; i<128*rotations; i++) {\n      let angle = Math.PI * 2.0 / 128.0 * i\n      points.push(\n        new Victor(\n          (a + b) * Math.cos(angle) - b * Math.cos(((a + b) / b) * angle),\n          (a + b) * Math.sin(angle) - b * Math.sin(((a + b) / b) * angle)\n        ).multiply({x: scale, y: scale})\n      )\n    }\n\n    return points\n  }\n\n  getOptions() {\n    return options\n  }\n}\n","import Victor from 'victor'\nimport Shape, { shapeOptions } from './Shape'\n\nconst options = {\n  ...shapeOptions,\n  ...{\n    fileName: {\n      title: 'From file:',\n      type: 'inputText',\n      plainText: 'true'\n    },\n    aspectRatio: {\n      title: 'Aspect Ratio',\n      type: 'checkbox'\n    },\n    comments: {\n      title: 'Comments',\n      type: 'comments'\n    },\n  }\n}\n\nexport default class FileImport extends Shape {\n  constructor() {\n    super('FileImport')\n  }\n\n  getInitialState(importProps) {\n    return {\n      ...super.getInitialState(),\n      ...{\n        type: 'file_import',\n        aspectRatio: true,\n        originalAspectRatio: 1.0,\n        vertices: [],\n        comments: [],\n        selectGroup: 'import',\n        canTransform: false,\n        usesMachine: true,\n        repeatEnabled: false\n      },\n      ...(importProps === undefined ? {} : {\n        fileName: importProps.fileName,\n        vertices: importProps.vertices,\n        originalAspectRatio: importProps.originalAspectRatio,\n        comments: importProps.comments\n      })\n    }\n  }\n\n  getVertices(state) {\n    if (state.shape.vertices.length < 1)\n    {\n      // During initialization, this function gets called, but the machine isn't created right yet.\n      return [new Victor(0.0, 0.0), new Victor(0.0, 0.1)]\n    }\n\n    let x_scale = (state.machine.maxX - state.machine.minX)/2.0 * 0.1\n    let y_scale = (state.machine.maxY - state.machine.minY)/2.0 * 0.1\n\n    if (!state.machine.rectangular) {\n      x_scale = y_scale = state.machine.maxRadius * 0.1\n    }\n\n    if (state.shape.aspectRatio) {\n      const machine_aspect_ratio = y_scale / x_scale\n      if (state.shape.originalAspectRatio > machine_aspect_ratio) {\n        x_scale = x_scale / state.shape.originalAspectRatio * machine_aspect_ratio\n      } else {\n        y_scale = y_scale * state.shape.originalAspectRatio / machine_aspect_ratio\n      }\n    }\n\n    return state.shape.vertices.map( (vertex) => {\n      return Victor(vertex.x * x_scale, vertex.y * y_scale)\n    })\n  }\n\n  getOptions() {\n    return options\n  }\n}\n","import Shape from './Shape'\n\nexport default class Effect extends Shape {\n  getInitialState() {\n    return {\n      ...super.getInitialState(),\n      ...{\n        effect: true,\n        canTransform: false,\n        shouldCache: false,\n        canChangeSize: true,\n        repeatEnabled: false,\n        autosize: false\n      }\n    }\n  }\n}\n","import Victor from 'victor'\nimport { roundP } from './util'\n\n// convert degrees to radians\nexport const degToRad = (deg) => {\n  return deg / 180.0 * Math.PI\n}\n\n// convert radians to degrees\nexport const radToDeg = (rad) => {\n  return rad * 180.0 / Math.PI\n}\n\nexport const distance = (v1, v2) => {\n  return Math.sqrt(Math.pow(v1.x - v2.x, 2.0) + Math.pow(v1.y - v2.y, 2.0))\n}\n\n// calculate the coterminal angle (0..2*PI) of a given angle\nexport const coterminal = (angle) => {\n  return angle - Math.floor(angle / (Math.PI * 2)) * Math.PI * 2\n}\n\nexport const angle = (point) => {\n  return Math.atan2(point.y, point.x)\n}\n\n// returns whether a point is on the segment defined by start and end\nexport const onSegment = (start, end, point) => {\n  return start.distance(point) + end.distance(point) - start.distance(end) < 0.001\n}\n\nexport const slope = (v1, v2) => {\n  let d = v2.x - v1.x\n  let n = v2.y - v1.y\n  return d === 0 ? undefined : n / d\n}\n\n// computes a bounding box from a set of points.\nexport const findBounds = (vertices) => {\n  let n = vertices.length\n\n  if (n === 0) {\n    return []\n  }\n\n  let loX = vertices[0].x\n  let hiX = vertices[0].x\n  let loY = vertices[0].y\n  let hiY = vertices[0].y\n\n  for(let i=1; i<n; ++i) {\n    let p = vertices[i]\n    loX = Math.min(loX, p.x)\n    hiX = Math.max(hiX, p.x)\n    loY = Math.min(loY, p.y)\n    hiY = Math.max(hiY, p.y)\n  }\n\n  return [new Victor(loX, loY), new Victor(hiX, hiY)]\n}\n\n// resizes each vertex in a list to the specified dimensions. Will not stretch the shape.\nexport const resizeVertices = (vertices, sizeX, sizeY) => {\n  let size = Math.max(sizeX, sizeY)\n  let bounds = findBounds(vertices)\n  let curveSize = Math.max(bounds[1].y - bounds[0].y, bounds[1].x - bounds[0].x)\n  let scale = size/curveSize\n\n  let scaledBounds = [bounds[0].multiply({x: scale, y: scale}), bounds[1].multiply({x: scale, y: scale})]\n  let deltaX = scaledBounds[1].x - (scaledBounds[1].x - scaledBounds[0].x)/2\n  let deltaY = scaledBounds[1].y - (scaledBounds[1].y - scaledBounds[0].y)/2\n\n  return vertices.map(vertex => vertex.clone().multiply({x: scale, y: scale}).add({x: -deltaX, y: -deltaY}))\n}\n\n// returns a vertex with x and y rounded to p number of digits\nexport const vertexRoundP = (v, p) => {\n  return new Victor(roundP(v.x, p), roundP(v.y, p))\n}\n\n// Transform functions\nexport const rotate = (vertex, angleDeg) => {\n  const angle = Math.PI / 180.0 * angleDeg\n  return new Victor(\n   vertex.x * Math.cos(angle) - vertex.y * Math.sin(angle),\n   vertex.x * Math.sin(angle) + vertex.y * Math.cos(angle)\n  )\n}\n\nexport const scale = (vertex, pctX, pctY) => {\n  const scaleX = pctX / 100.0\n  if (pctY === undefined) pctY = pctX\n  const scaleY = pctY / 100.0\n\n  return new Victor(\n    vertex.x * scaleX,\n    vertex.y * scaleY\n  )\n}\n\nexport const offset = (vertex, offsetX, offsetY) => {\n  return new Victor(\n    vertex.x + offsetX,\n    vertex.y + offsetY\n  )\n}\n\n// returns an array of points drawing a circle of a given radius\nexport const circle = (radius, start=0, x=0, y=0) => {\n  let points = []\n\n  for (let i=0; i<=128; i++) {\n    let angle = Math.PI * 2.0 / 128.0 * i + start\n    points.push(new Victor(x + Math.cos(angle)*radius, y + Math.sin(angle)*radius))\n  }\n\n  return points\n}\n\nexport const arc = (radius, startAngle, endAngle, x=0, y=0) => {\n  let resolution = (Math.PI*2.0) / 128.0 // 128 segments per circle. Enough?\n  let deltaAngle = ((endAngle - startAngle) + 2.0 * Math.PI) % (2.0 * Math.PI)\n\n  if (deltaAngle > Math.PI) {\n    deltaAngle -= 2.0 * Math.PI\n  }\n  if (deltaAngle < 0.0) {\n    resolution *= -1.0\n  }\n\n  let tracePoints = []\n  for (let step = 0; step < (deltaAngle/resolution) ; step++) {\n    tracePoints.push(Victor(x + radius * Math.cos(resolution * step + startAngle),\n                            y + radius * Math.sin(resolution * step + startAngle)))\n  }\n  return tracePoints\n}\n\n// Subsample lines into smaller line segments\nexport const subsample = (vertices, maxLength) => {\n  let subsampledVertices = []\n  let previous = undefined\n  let next\n\n  for (next = 0; next < vertices.length; next++) {\n    if (previous !== undefined) {\n      const start = Victor.fromObject(vertices[previous])\n      const end = Victor.fromObject(vertices[next])\n\n      const delta = end.clone().subtract(start)\n      const deltaSegment = end.clone().subtract(start).normalize().multiply(Victor(maxLength, maxLength))\n\n      // This loads up (start, end].\n      for (let step = 0; step < (delta.magnitude() / maxLength) ; step++) {\n        subsampledVertices.push(\n          new Victor(start.x + step * deltaSegment.x,\n                     start.y + step * deltaSegment.y))\n      }\n\n    }\n    previous = next\n  }\n\n  // Add in the end\n  if (previous !== undefined) {\n    subsampledVertices.push(vertices[vertices.length - 1])\n  }\n\n  return subsampledVertices\n}\n\n// Convert x,y vertices to theta, rho vertices\nexport const toThetaRho = (subsampledVertices, maxRadius, rhoMax) => {\n\n  let vertices = []\n  let previousTheta = 0\n  let previousRawTheta = 0\n\n  // Normalize the radius\n  if (rhoMax < 0) { rhoMax = 0.1 }\n  if ( rhoMax > 1) { rhoMax = 1.0 }\n\n  for (let next = 0; next < subsampledVertices.length; ++next) {\n\n    let rho = (Victor.fromObject(subsampledVertices[next]).magnitude() / maxRadius) * rhoMax\n    rho = Math.min(rho, rhoMax)\n\n    // What is the basic theta for this point?\n    let rawTheta = Math.atan2(subsampledVertices[next].x,\n                              subsampledVertices[next].y)\n    // Convert to [0, 2pi]\n    rawTheta = (rawTheta + 2.0 * Math.PI) % (2.0 * Math.PI)\n\n    // Compute the difference to the last point.\n    let deltaTheta = rawTheta - previousRawTheta\n\n    // Convert to [-pi,pi]\n    if (deltaTheta < -Math.PI) {\n      deltaTheta += 2.0 * Math.PI\n    }\n    if (deltaTheta > Math.PI) {\n      deltaTheta -= 2.0 * Math.PI\n    }\n\n    const theta = previousTheta + deltaTheta\n\n    previousRawTheta = rawTheta\n    previousTheta = theta\n    vertices.push(new Victor(theta, rho))\n  }\n\n  return vertices\n}\n\n// Convert theta, rho vertices to goofy x, y, which really represent scara angles.\nexport const toScaraGcode = (vertices, unitsPerCircle) => {\n  return vertices.map( thetaRho => {\n    const theta = thetaRho.x\n    const rho = thetaRho.y\n    const m1 = theta + Math.acos(rho)\n    const m2 = theta - Math.acos(rho)\n    const x = unitsPerCircle * m1 / (2*Math.PI)\n    const y = unitsPerCircle * m2 / (2*Math.PI)\n    return new Victor(x,y)\n  })\n}\n","import Victor from 'victor'\nimport Effect from './Effect'\nimport { shapeOptions } from './Shape'\nimport { circle } from '../common/geometry'\nimport * as d3Fisheye from 'd3-fisheye'\n\nconst options = {\n  ...shapeOptions,\n  ...{\n    fisheyeDistortion: {\n      title: 'Distortion',\n      min: -2,\n      max: 40,\n      step: 0.1,\n    }\n  }\n}\n\nexport default class Fisheye extends Effect {\n  constructor() {\n    super('Fisheye')\n  }\n\n  getInitialState() {\n    return {\n      ...super.getInitialState(),\n      ...{\n        type: 'fisheye',\n        selectGroup: 'effects',\n        fisheyeDistortion: 3,\n        startingWidth: 100,\n        startingHeight: 100,\n        canRotate: false,\n        canChangeHeight: false\n      }\n    }\n  }\n\n  getVertices(state) {\n    const width = state.shape.startingWidth\n    return circle(width/2)\n  }\n\n  applyEffect(effect, layer, vertices) {\n    const fisheye = d3Fisheye.radial()\n      .radius(effect.startingWidth/2)\n      .distortion(effect.fisheyeDistortion/2)\n    fisheye.focus([effect.offsetX, effect.offsetY]);\n\n    return vertices.map(vertex => {\n      const warped = fisheye([vertex.x, vertex.y])\n      return new Victor(warped[0], warped[1])\n    })\n  }\n\n  getOptions() {\n    return options\n  }\n}\n","import Victor from 'victor'\nimport Effect from './Effect'\nimport { shapeOptions } from './Shape'\nimport { circle, subsample } from '../common/geometry'\nimport { evaluate } from 'mathjs'\n\nconst options = {\n  ...shapeOptions,\n  ...{\n    warpType: {\n      title: 'Warp type',\n      type: 'dropdown',\n      choices: ['angle', 'quad', 'circle', 'grid', 'shear', 'custom'],\n      onChange: (changes, attrs) => {\n        changes.canChangeSize = changes.warpType !== 'custom'\n        if (['angle', 'quad', 'shear'].includes(changes.warpType)) {\n          changes.rotation = changes.warpType === 'shear' ? 0 : 45\n          changes.canRotate = true\n        } else {\n          changes.rotation = 0\n          changes.canRotate = false\n        }\n\n        return changes\n      }\n    },\n    period: {\n      title: 'Period',\n      step: 0.2,\n      isVisible: (state) => { return !['custom', 'shear'].includes(state.warpType) },\n    },\n    xMathInput: {\n      title: 'X(x,y)',\n      delayKey: 'xMath',\n      type: 'text',\n      isVisible: (state) => { return state.warpType === 'custom' },\n    },\n    yMathInput: {\n      title: 'Y(x,y)',\n      delayKey: 'yMath',\n      type: 'text',\n      isVisible: (state) => { return state.warpType === 'custom' },\n    },\n    subsample: {\n      title: 'Subsample points',\n      type: 'checkbox',\n    },\n  }\n}\n\nexport default class Warp extends Effect {\n  constructor() {\n    super('Warp')\n  }\n\n  getInitialState() {\n    return {\n      ...super.getInitialState(),\n      ...{\n        type: 'warp',\n        selectGroup: 'effects',\n        warpType: 'angle',\n        period: 10.0,\n        subsample: true,\n        xMathInput: 'x + 4*sin((x+y)/20)',\n        xMath: 'x + 4*sin((x+y)/20)',\n        yMathInput: 'y + 4*sin((x-y)/20)',\n        yMath: 'y + 4*sin((x-y)/20)',\n        startingWidth: 40,\n        startingHeight: 40,\n        rotation: 45,\n        canRotate: true,\n        canChangeHeight: false\n      }\n    }\n  }\n\n  getVertices(state) {\n    const width = state.shape.startingWidth\n    return circle(width/2)\n  }\n\n  applyEffect(effect, layer, vertices) {\n    if (effect.subsample) {\n      vertices = subsample(vertices, 2.0)\n    }\n\n    if (effect.warpType === 'angle' || effect.warpType === 'quad') {\n      return this.angle(effect.warpType === 'angle' ? +1.0 : -1.0, effect, vertices)\n    } else if (effect.warpType === 'circle') {\n      return this.circle(effect, vertices)\n    } else if (effect.warpType === 'grid') {\n      return this.grid(effect, vertices)\n    } else if (effect.warpType === 'shear') {\n      return this.shear(effect, vertices)\n    } else if (effect.warpType === 'custom') {\n      return this.custom(effect, vertices)\n    }\n\n    return vertices\n  }\n\n  angle(ySign, effect, vertices) {\n    const periodx = 10.0 * effect.period / (Math.PI * 2.0) / Math.cos(-effect.rotation / 180.0 * Math.PI)\n    const periody = 10.0 * effect.period / (Math.PI * 2.0) / Math.sin(-effect.rotation / 180.0 * Math.PI)\n    const scale = effect.startingWidth / 10.0\n\n    return vertices.map(vertex => {\n      const originalx = vertex.x - effect.offsetX\n      const originaly = vertex.y - effect.offsetY\n      const x = originalx + scale * Math.sin(originalx/periodx + originaly/periody)\n      const y = originaly + scale * Math.sin(originalx/periodx + ySign * originaly/periody)\n      return new Victor(x + effect.offsetX, y + effect.offsetY)\n    })\n  }\n\n  circle(effect, vertices) {\n    const periodx = 10.0 * effect.period / (Math.PI * 2.0)\n    const periody = 10.0 * effect.period / (Math.PI * 2.0)\n    const scale = effect.startingWidth / 10.0\n\n    return vertices.map(vertex=> {\n      const originalx = vertex.x - effect.offsetX\n      const originaly = vertex.y - effect.offsetY\n      const theta = Math.atan2(originaly,originalx)\n      const x = originalx + scale * Math.cos(theta) * Math.cos(Math.sqrt(originalx*originalx + originaly*originaly)/periodx)\n      const y = originaly + scale * Math.sin(theta) * Math.cos(Math.sqrt(originalx*originalx + originaly*originaly)/periody)\n      return new Victor(x + effect.offsetX, y + effect.offsetY)\n    })\n  }\n\n  grid(effect, vertices) {\n    const periodx = 10.0 * effect.period / (Math.PI * 2.0)\n    const periody = 10.0 * effect.period / (Math.PI * 2.0)\n    const scale = effect.startingWidth / 10.0\n\n    return vertices.map(vertex => {\n      const originalx = vertex.x - effect.offsetX\n      const originaly = vertex.y - effect.offsetY\n      const x = originalx + scale * Math.sin(originalx/periodx) * Math.sin(originaly/periody)\n      const y = originaly + scale * Math.sin(originalx/periodx) * Math.sin(originaly/periody)\n      return new Victor(x + effect.offsetX, y + effect.offsetY)\n    })\n  }\n\n  shear(effect, vertices) {\n    const shear = (effect.startingWidth - 1)/ 100\n    const xShear = shear * Math.sin(effect.rotation / 180.0 * Math.PI)\n    const yShear = shear * Math.cos(effect.rotation / 180.0 * Math.PI)\n    return vertices.map(vertex => new Victor(vertex.x + xShear * vertex.y, vertex.y + yShear * vertex.x))\n  }\n\n  custom(effect, vertices) {\n    return vertices.map(vertex => {\n      try {\n        const x = evaluate(effect.xMath, {x: vertex.x - effect.offsetX, y: vertex.y - effect.offsetY})\n        const y = evaluate(effect.yMath, {x: vertex.x - effect.offsetX, y: vertex.y - effect.offsetY})\n        return new Victor(x + effect.offsetX, y + effect.offsetY)\n      }\n      catch (err) {\n        console.log(\"Error parsing custom effect: \" + err)\n        return vertex\n      }\n    })\n  }\n\n  getOptions() {\n    return options\n  }\n}\n","import Victor from 'victor'\n\nexport class Circle extends Victor {\n  constructor(x, y, r, state) {\n    super(x, y)\n    this.x = x\n    this.y = y\n    this.r = r || 30\n    this.state = state\n    this.growing = this.state.growing\n    if (this.growing == null) { this.growing = true }\n    this.theta = null\n    this.center = new Victor(0, 0)\n  }\n\n  grow() {\n    if (this.growing) {\n      this.r += 1\n      this.perimeter = this.outOfBounds(this.r)\n    }\n  }\n\n  outOfBounds(radius) {\n    radius ||= this.state.inBounds ? this.r : 0\n    return this.state.rectangular ? this.outOfRectangularBounds(radius) : this.outOfPolarBounds(radius)\n  }\n\n  outOfPolarBounds(radius) {\n    return this.state.maxRadius <= this.distance(this.center) + radius\n  }\n\n  outOfRectangularBounds(radius) {\n    // setting theta as the angle of intersection with our bounds\n    if (this.x + radius > this.state.width / 2) {\n      return true\n    } else if (this.x - radius < -this.state.width / 2) {\n      return true\n    } else if (this.y + radius > this.state.height / 2) {\n      return true\n    } else if (this.y - radius < -this.state.height / 2) {\n      return true\n    }\n\n    return false\n  }\n\n  // returns points of intersection between this circle and a given circle\n  intersection(circle) {\n    let a = circle.r\n    var b = this.r\n    var c = Math.sqrt((this.x-circle.x)*(this.x-circle.x)+(this.y-circle.y)*(this.y-circle.y))\n    var d = (b*b+c*c-a*a)/(2*c)\n    var h = Math.sqrt(b*b-d*d)\n    const i1 = (circle.x-this.x)*d/c + (circle.y-this.y)*h/c +  this.x\n    const i2 = (circle.y-this.y)*d/c - (circle.x-this.x)*h/c +  this.y\n    const i3 = (circle.x-this.x)*d/c - (circle.y-this.y)*h/c +  this.x\n    const i4 = (circle.y-this.y)*d/c + (circle.x-this.x)*h/c +  this.y\n    const ret = []\n\n    if (!isNaN(i1)) {\n      ret.push(new Victor(i1, i2))\n    }\n    if (!isNaN(i3)) {\n      ret.push(new Victor(i3, i4))\n    }\n\n    return ret\n  }\n\n  // returns points of intersection between this circle and a line defined by two points\n  // adapted from\n  // https://cscheng.info/2016/06/09/calculate-circle-line-intersection-with-javascript-and-p5js.html\n  // Added a special case for vertical lines not included in original algorithm.\n  lineIntersection(p1, p2) {\n    // circle: (x - h)^2 + (y - k)^2 = r^2\n    // h: this.x\n    // k: this.y\n    // line: y = m * x + n\n    // r: this.r\n    // m: slope\n    // n: y-intercept\n\n    const sq = (v) => v * v\n    const m = (p2.y - p1.y) / (p2.x - p1.x)\n    const n = p2.y - m * p2.x\n    let a, b, c\n\n    if (p2.x - p1.x === 0) {\n      // vertical line\n      a = 1\n      b = -2 * this.y\n      c = sq(this.y) + sq(p1.x - this.x) - sq(this.r)\n    } else {\n      a = 1 + sq(m)\n      b = -this.x * 2 + (m * (n - this.y)) * 2\n      c = sq(this.x) + sq(n - this.y) - sq(this.r)\n    }\n\n    // get discriminant\n    const d = sq(b) - 4 * a * c\n    if (d >= 0) {\n      // insert into quadratic formula\n      let intersections = [\n        (-b + Math.sqrt(sq(b) - 4 * a * c)) / (2 * a),\n        (-b - Math.sqrt(sq(b) - 4 * a * c)) / (2 * a)\n      ]\n\n      if (d === 0) {\n        intersections = [intersections[0]]\n      }\n\n      if (p2.x - p1.x === 0) {\n        return intersections.map(y => new Victor(p1.x, y))\n      } else {\n        return intersections.map(x => new Victor(x, m * x + n))\n      }\n    }\n\n    // no intersection\n    return []\n  }\n\n  // returns the points at which the circle intersects a given rectangle\n  // could not find an optimized algorithm, so this checks all sides of the rectangle one-by-one.\n  rectangleIntersection(p1, p2, p3, p4) {\n    return [\n      this.lineIntersection(p1, p2),\n      this.lineIntersection(p2, p3),\n      this.lineIntersection(p3, p4),\n      this.lineIntersection(p4, p1)\n    ].flat().filter(n => n && n.y !== Infinity && n.y !== -Infinity)\n  }\n}\n","export class PriorityQueue {\n  constructor() {\n    this.collection = []\n  }\n\n  enqueue(element) {\n    if (this.isEmpty()) {\n      this.collection.push(element)\n    } else {\n      let added = false\n      for (let i = 1; i <= this.collection.length; i++) {\n        if (element[1] < this.collection[i-1][1]){\n          this.collection.splice(i-1, 0, element)\n          added = true\n          break\n        }\n      }\n\n      if (!added) {\n        this.collection.push(element)\n      }\n    }\n  }\n\n  dequeue() {\n    let value = this.collection.shift()\n    return value\n  }\n\n  isEmpty() {\n    return (this.collection.length === 0)\n  }\n}\n","import { PriorityQueue } from './PriorityQueue.js'\nimport Victor from 'victor'\n\nexport const mix = (v1, v2, s) => {\n  let u = [v1.x, v1.y]\n  let v = [v2.x, v2.y]\n  var result = []\n\n  for (var i = 0; i < u.length; ++i ) {\n    result.push((1.0 - s) * u[i] + s * v[i])\n  }\n\n  return new Victor(result[0], result[1])\n}\n\n// note: requires string-based nodes to work properly\nexport default class Graph {\n  constructor() {\n    this.nodeMap = {}\n    this.nodeKeys = new Set()\n    this.adjacencyList = {}\n    this.edgeMap = {}\n    this.edgeKeys = new Set()\n    this.clearCachedPaths()\n  }\n\n  addNode(node) {\n    let key = node.toString()\n\n    if (!this.nodeKeys.has(key)) {\n      this.nodeKeys.add(key)\n      this.nodeMap[key] = node\n      this.adjacencyList[key] = []\n      this.clearCachedPaths()\n    }\n  }\n\n  addEdge(node1, node2, weight=1) {\n    let node1Key = node1.toString()\n    let node2Key = node2.toString()\n    let edgeKey = [node1Key, node2Key].sort().toString()\n\n    if (!this.edgeKeys.has(edgeKey)) {\n      this.adjacencyList[node1Key].push({node: node2, weight: weight})\n      this.adjacencyList[node2Key].push({node: node1, weight: weight})\n      this.edgeKeys.add(edgeKey)\n      this.edgeMap[edgeKey] = [node1.toString(), node2.toString()]\n      this.clearCachedPaths()\n    }\n  }\n\n  hasEdge(ekey1, ekey2) {\n    let edgeKey = [ekey1, ekey2].sort().toString()\n    return this.edgeMap[edgeKey]\n  }\n\n  neighbors(node) {\n    return this.adjacencyList[node.toString()].map(hash => hash.node)\n  }\n\n  dijkstraShortestPath(startNode, endNode) {\n    let shortest = this.getCachedShortestPath(startNode, endNode)\n\n    if (shortest === undefined) {\n      let times = {}\n      let backtrace = {}\n      let pq = new PriorityQueue()\n      let nodes = this.nodeKeys\n\n      times[startNode] = 0\n\n      nodes.forEach(node => {\n        if (node !== startNode) {\n          times[node] = Infinity\n        }\n      })\n\n      pq.enqueue([startNode, 0])\n\n      while (!pq.isEmpty()) {\n        let shortestStep = pq.dequeue()\n        let currentNode = shortestStep[0]\n        this.adjacencyList[currentNode.toString()].forEach(neighbor => {\n          let time = times[currentNode] + neighbor.weight\n\n          if (time < times[neighbor.node]) {\n            times[neighbor.node] = time\n            backtrace[neighbor.node] = currentNode\n            pq.enqueue([neighbor.node, time])\n          }\n        })\n      }\n\n      let path = [endNode.toString()]\n      let lastStep = endNode\n\n      while(lastStep !== startNode) {\n        path.unshift(backtrace[lastStep].toString())\n        lastStep = backtrace[lastStep]\n      }\n\n      shortest = path.map(node => this.nodeMap[node])\n      this.cacheShortestPath(startNode, endNode, shortest)\n    }\n\n    return shortest\n  }\n\n  clearCachedPaths() {\n    this.cachedPaths = {}\n  }\n\n  cacheShortestPath(node1, node2, path) {\n    this.cachedPaths[this.getPairedKey(node1, node2)] = [...path]\n    this.cachedPaths[this.getPairedKey(node2, node1)] = [...path].reverse()\n  }\n\n  getCachedShortestPath(node1, node2) {\n    let shortest = this.cachedPaths[this.getPairedKey(node1, node2)]\n    return shortest === undefined ? undefined : [...shortest]\n  }\n\n  getPairedKey(node1, node2) {\n    return node1.toString() + '-' + node2.toString()\n  }\n}\n","import { vertexRoundP } from '../../common/geometry'\n\n// inherit all machine classes from this base class\nexport default class Machine {\n  // given a set of vertices, ensure they adhere to the limits defined by the machine\n  polish() {\n    this.enforceLimits()\n      .cleanVertices()\n      .limitPrecision()\n      .optimizePerimeter()\n\n    if (this.layerInfo.border) this.outlinePerimeter()\n    if (this.layerInfo.start) this.addStartPoint()\n    if (this.layerInfo.end) this.addEndPoint()\n\n    // second call to limit precision for final cleanup\n    return this.limitPrecision()\n  }\n\n  // clean the list of vertices and remove (nearly) duplicate points\n  cleanVertices() {\n    let previous = null\n    let cleanVertices = []\n\n    for (let i=0; i<this.vertices.length; i++) {\n      const curr = this.vertices[i]\n\n      if (previous) {\n        if (curr.distance(previous) > 0.001) {\n          cleanVertices.push(curr)\n        }\n      } else {\n        cleanVertices.push(curr)\n      }\n\n      previous = this.vertices[i]\n    }\n\n    this.vertices = cleanVertices\n    return this\n  }\n\n  // Walk the given vertices, removing all vertices that lie outside of the machine limits\n  enforceLimits() {\n    let cleanVertices = []\n    let previous = null\n\n    for (let next=0; next<this.vertices.length; next++) {\n      const vertex = this.vertices[next]\n\n      if (previous) {\n        const line = this.clipLine(previous, vertex)\n\n        for (let pt=0; pt<line.length; pt++) {\n          if (line[pt] !== previous) {\n            cleanVertices.push(this.nearestVertex(line[pt]))\n          }\n        }\n      } else {\n        cleanVertices.push(this.nearestVertex(vertex))\n      }\n\n      previous = vertex\n    }\n\n    this.vertices = cleanVertices\n    return this\n  }\n\n// walk the given vertices, removing all vertices that lie within the machine limits\n  enforceInvertedLimits() {\n    if (this.vertices.length === 0) return this\n\n    let cleanVertices = []\n    let currentIndex = 0\n    let curr = this.vertices[0]\n    let previous\n\n    // we may be starting inside bounds, in which case we only care about the\n    // last inside vertex\n    while (currentIndex < this.vertices.length && this.inBounds(curr)) {\n      currentIndex = currentIndex + 1\n      previous = curr\n      curr = this.vertices[currentIndex]\n    }\n\n    while (currentIndex < this.vertices.length) {\n      curr = this.vertices[currentIndex]\n\n      if (previous) {\n        // rounding here to deal with some erratic perimeter lines\n        let clipped = this.clipLine(previous, curr).map(pt => vertexRoundP(pt, 3))\n\n        if (clipped.length > 0 && this.inBounds(previous) && cleanVertices.length > 0) {\n          const perimeter = this.tracePerimeter(cleanVertices[cleanVertices.length - 1], clipped[0])\n          cleanVertices = [...cleanVertices, ...perimeter]\n        }\n\n        // slightly awkward syntax so that we can use splice to add our clipped\n        // array directly to cleanVertices and avoid a shallow array copy.\n        const args = [cleanVertices.length, 0].concat(clipped)\n        Array.prototype.splice.apply(cleanVertices, args)\n\n      } else {\n        cleanVertices.push(curr)\n      }\n\n      previous = curr\n      currentIndex = currentIndex + 1\n    }\n\n    this.vertices = cleanVertices\n    return this\n  }\n\n  // strip out unnecessary/redundant perimeter moves\n  optimizePerimeter() {\n    let segments = this.stripExtraPerimeterVertices()\n\n    if (this.settings.minimizeMoves) {\n      segments = this.minimizePerimeterMoves(segments)\n    }\n\n    // connect the segments together\n    let connectedVertices = []\n    for (let j=0; j<segments.length; j++) {\n      const current = segments[j]\n\n      if (j > 0) {\n        // connect the two segments along the perimeter\n        const prev = segments[j-1]\n        connectedVertices.push(this.tracePerimeter(prev[prev.length-1], current[0]))\n      }\n      connectedVertices.push(current)\n    }\n\n    this.vertices = connectedVertices.flat()\n    return this\n  }\n\n  // remove all non-essential perimeter vertices. returns a list of segments\n  // involving non-perimeter paths\n  stripExtraPerimeterVertices() {\n    let segments = []\n    let segment = []\n    let perimeter = null\n\n    for (let i=0; i<this.vertices.length; i++) {\n      const curr = this.vertices[i]\n      const prev = this.vertices[i-1]\n\n      if (!prev || !this.onPerimeter(curr, prev)) {\n        if (perimeter) { segment.push(perimeter) }\n        segment.push(curr)\n        perimeter = null\n      } else {\n        if (!perimeter) {\n          segments.push(segment)\n          segment = []\n        }\n        perimeter = curr\n      }\n    }\n\n    if (segment.length > 0) {\n      segments.push(segment)\n    }\n\n    return segments\n  }\n\n  // primitive O(n^2) algorithm that orders segments to try to minimize the distance traveled\n  minimizePerimeterMoves(segments) {\n    let walked = []\n    let current = segments.shift()\n    let currentIndex\n    let lastSegment\n\n    if (segments.length > 0) {\n      // reserve the last segment to ensure we don't draw an invalid line connecting\n      // to it\n      lastSegment = segments.pop()\n    }\n\n    walked.push(current)\n    while (segments.length > 0) {\n      // find segment that is the shortest distance from our current one\n      let minDist = Number.MAX_SAFE_INTEGER\n      let prev = current\n\n      /* eslint-disable no-loop-func */\n      segments.forEach((segment, index) => {\n        const dist = Math.min(\n          this.perimeterDistance(current[current.length-1], segment[0]),\n          this.perimeterDistance(current[current.length-1], segment[segment.length-1])\n        )\n\n        if (dist < minDist) {\n          currentIndex = index\n          minDist = dist\n        }\n      })\n      /* eslint-enable no-loop-func */\n\n      // reverse if needed to connect\n      current = segments.splice(currentIndex, 1)[0]\n      if (this.perimeterDistance(prev[prev.length-1], current[0]) > this.perimeterDistance(prev[prev.length-1], current[current.length-1])) {\n        current = current.reverse()\n      }\n      walked.push(current)\n    }\n\n    if (lastSegment) {\n      walked.push(lastSegment)\n    }\n\n    return walked\n  }\n\n  // round each vertex to the nearest .001. This eliminates floating point\n  // math errors and allows us to do accurate equality comparisons.\n  limitPrecision() {\n    this.vertices = this.vertices.map(vertex => vertexRoundP(vertex, 3))\n    return this\n  }\n}\n","import { angle, onSegment, circle, arc } from '../../common/geometry'\nimport Machine from './Machine'\nimport Victor from 'victor'\n\nexport default class PolarMachine extends Machine {\n  constructor(vertices, settings, layerInfo={}) {\n    super()\n    this.vertices = vertices\n    this.settings = Object.assign({}, settings)\n    this.settings.perimeterConstant = 50\n    this.layerInfo = layerInfo\n  }\n\n  addStartPoint() {\n    const maxRadius = this.settings.maxRadius\n\n    if (this.settings.polarStartPoint !== 'none') {\n      if (this.settings.polarStartPoint === 'center') {\n        this.vertices.unshift(new Victor(0.0, 0.0))\n      } else {\n        const first = this.vertices[0]\n        const scale = maxRadius / first.magnitude()\n        const startPoint = Victor.fromObject(first).multiply(new Victor(scale, scale))\n        this.vertices.unshift(new Victor(startPoint.x, startPoint.y))\n      }\n    }\n  }\n\n  addEndPoint() {\n    const maxRadius = this.settings.maxRadius\n\n    if (this.settings.polarEndPoint !== 'none') {\n      if (this.settings.polarEndPoint === 'center') {\n        this.vertices.push(new Victor(0.0, 0.0))\n      } else {\n        const last = this.vertices[this.vertices.length-1]\n        const scale = maxRadius / last.magnitude()\n        const endPoint =  Victor.fromObject(last).multiply(new Victor(scale, scale))\n        this.vertices.push(new Victor(endPoint.x, endPoint.y))\n      }\n    }\n  }\n\n  // Finds the nearest vertex that is in the bounds of the circle. This will change the\n  // shape. i.e. this doesn't care about the line segment, only about the point.\n  nearestVertex(vertex) {\n    const size = this.settings.maxRadius\n\n    if (vertex.length() > size) {\n      // try to prevent floating point math from pushing us out of bounds\n      const precisionModifier = 0.0001\n      const scale = (size - precisionModifier) / vertex.length()\n\n      return vertex.multiply(new Victor(scale, scale))\n    } else {\n      return vertex\n    }\n  }\n\n  inBounds(vertex) {\n    return vertex.length() < this.settings.maxRadius\n  }\n\n  // Returns the nearest perimeter vertex to the given vertex.\n  nearestPerimeterVertex(vertex) {\n    if (vertex) {\n      return new Victor(Math.cos(vertex.angle()) * this.settings.maxRadius, Math.sin(vertex.angle()) * this.settings.maxRadius)\n    } else {\n      return new Victor(0,0)\n    }\n  }\n\n  // Returns the distance along the perimeter between two points.\n  perimeterDistance(v1, v2) {\n    const startAngle = angle(v1)\n    const endAngle = angle(v2)\n    let deltaAngle = Math.abs(endAngle - startAngle)\n\n    if (deltaAngle > Math.PI) {\n      deltaAngle -= 2.0 * Math.PI\n    }\n\n    return Math.abs(deltaAngle) * this.settings.maxRadius\n  }\n\n  // Returns points along the circle from the start to the end, tracing a circle of radius size.\n  tracePerimeter(start, end) {\n    return arc(this.settings.maxRadius, start.angle(), end.angle())\n  }\n\n  outlinePerimeter() {\n    const last = this.vertices[this.vertices.length - 1]\n\n    if (last) {\n      this.vertices = this.vertices.concat(circle(this.settings.maxRadius, parseInt(last.angle()*64/Math.PI)))\n    }\n    return this\n  }\n\n  // Returns whether a given path lies on the perimeter of the circle.\n  onPerimeter(v1, v2, delta=1) {\n    let rm = Math.pow(this.settings.maxRadius, 2)\n    let r1 = Math.pow(v1.x, 2) + Math.pow(v1.y, 2)\n    let r2 = Math.pow(v2.x, 2) + Math.pow(v2.y, 2)\n    let d = this.perimeterDistance(v1, v2)\n\n    // Delta is purposefully large to accommodate the squaring of the compared values.\n    // Setting delta too small will result in perimeter moves being miscategorized.\n    // d is used to guard against the case where there is a straight line connecting two\n    // perimeter points directly. In this case, we want to register that as a non-perimeter\n    // move, or it will be incorrectly optimized out of the final vertices. The 3/50\n    // ratio could likely be refined further (relative to maxRadius), but it seems to produce\n    // accurate results at various machine sizes.\n    return Math.abs(r1 - rm) < delta && Math.abs(r2 - rm) < delta && d < 3*this.settings.maxRadius/this.settings.perimeterConstant\n  }\n\n  // The guts of logic for this limits enforcer. It will take a single line (defined by\n  // start and end) and if the line goes out of bounds, returns the vertices around the\n  // outside edge to follow around without messing up the shape of the vertices.\n  clipLine(start, end) {\n    // Cases:\n    // 1 - Entire line is inside\n    //     return start, end\n    // 2 - Entire line is outside\n    //     trace from start to end\n    // 3 - only start is inside\n    //     find the intersection\n    //     include start\n    //     include intersection\n    //     trace from intersection to closest to end point\n    // 4 - only end is inside\n    //     do reverse of 3\n    // 4 - Neither end is inside, but there is some line segment inside\n    //     find both intersections\n    //     trace from start to first intersction\n    //     trace from second intersection to end\n    const size = this.settings.maxRadius\n    const radStart = start.magnitude()\n    const radEnd = end.magnitude()\n\n    if (radStart <= size && radEnd <= size) {\n      // The whole segment is inside\n      return [start, end]\n    }\n\n    // Check for the odd case of coincident points\n    if (start.distance(end) < 0.00001) {\n       return [this.nearestVertex(start)]\n    }\n\n    const intersections = this.getIntersections(start, end)\n\n    if (!intersections.intersection) {\n      // The whole line is outside, just trace.\n      return this.tracePerimeter(start, end)\n    }\n\n    // if neither point is on the segment, then it should just be a trace\n    if (!intersections.points[0].on && !intersections.points[1].on) {\n      return this.tracePerimeter(start, end)\n    }\n\n    // If both points are outside, but there's an intersection\n    if (radStart > size + 1.0e-9 && radEnd > size + 1.0e-9) {\n      let point = intersections.points[0].point\n      let otherPoint = intersections.points[1].point\n\n      return [\n        ...this.tracePerimeter(start, point),\n        point,\n        ...this.tracePerimeter(otherPoint, end)\n      ]\n    }\n\n    // If we're here, then one point is still in the circle.\n    if (radStart <= size) {\n      const point1 = (intersections.points[0].on && Math.abs(intersections.points[0].point - start) > 0.0001) ? intersections.points[0].point : intersections.points[1].point\n\n      return [\n        start,\n        ...this.tracePerimeter(point1, end),\n        this.nearestPerimeterVertex(end)\n      ]\n    } else {\n      const point1 = intersections.points[0].on ? intersections.points[0].point : intersections.points[1].point\n\n      return [\n        ...this.tracePerimeter(start, point1),\n        point1,\n        end\n      ]\n    }\n  }\n\n  getIntersections(start, end) {\n    const size = this.settings.maxRadius\n    let direction = end.clone().subtract(start).clone().normalize()\n    let t = direction.x * -1.0 * start.x + direction.y * -1.0 * start.y\n    let e = direction.clone().multiply(Victor(t,t)).add(start)\n    let distanceToLine = e.magnitude()\n\n    if (distanceToLine >= size) {\n      return {\n        intersection: false,\n        points: [],\n      }\n    }\n\n    const dt = Math.sqrt(size*size - distanceToLine*distanceToLine)\n    const point1 = direction.clone().multiply(Victor(t - dt,t - dt)).add(start)\n    const point2 = direction.clone().multiply(Victor(t + dt,t + dt)).add(start)\n    const s1 = onSegment(start, end, point1)\n    const s2 = onSegment(start, end, point2)\n\n    if (s1 || s2) {\n      return {\n        intersection: true,\n        points: [\n          {\n            point: point1,\n            on: s1\n          },\n          {\n            point: point2,\n            on: s2\n          }\n        ]}\n    } else {\n      return {\n        intersection: false,\n        points: [],\n      }\n    }\n  }\n}\n","import Victor from 'victor'\nimport Machine from './Machine'\nimport { distance, vertexRoundP } from '../../common/geometry'\n\nexport default class RectMachine extends Machine {\n  constructor(vertices, settings, layerInfo={}) {\n    super()\n    this.vertices = vertices\n    this.settings = settings\n    this.layerInfo = layerInfo\n    this.sizeX = Math.abs((settings.maxX - settings.minX) / 2.0)\n    this.sizeY = Math.abs((settings.maxY - settings.minY) / 2.0)\n    this.corners = [\n      new Victor(-this.sizeX, -this.sizeY),\n      new Victor(-this.sizeX, this.sizeY),\n      new Victor(this.sizeX, this.sizeY),\n      new Victor(this.sizeX, -this.sizeY)\n    ]\n  }\n\n  addStartPoint() {\n    return this\n  }\n\n  addEndPoint() {\n    if (this.settings.rectOrigin.length === 1) {\n      // OK, let's assign corners indices:\n      // [1]   [2]\n      //\n      //\n      // [0]   [3]\n      const corner = this.settings.rectOrigin[0]\n      const first = this.vertices[0]\n      const last = this.vertices[this.vertices.length-1]\n      const maxRadius = Math.sqrt(Math.pow(2.0*this.sizeX, 2.0) + Math.pow(2.0*this.sizeY, 2.0)) / 2.0\n      let scale, outPoint\n\n      if (first.magnitude() <= last.magnitude()) {\n        // It's going outward\n        scale = maxRadius / last.magnitude()\n        outPoint = last\n      } else {\n        scale = maxRadius / first.magnitude()\n        outPoint = first\n      }\n\n      let clipped = this.clipLine(\n        outPoint,\n        Victor.fromObject(outPoint).multiply(new Victor(scale, scale))\n      )\n      const newPoint = clipped[clipped.length - 1]\n      if (outPoint === last) {\n        this.vertices = [this.vertices, this.tracePerimeter(newPoint, this.corners[corner], true)].flat()\n      } else {\n        this.vertices = [this.tracePerimeter(this.corners[corner], newPoint, true), this.vertices].flat()\n      }\n    }\n\n    return this\n  }\n\n  // Returns the distance along the perimeter between two points\n  perimeterDistance(v1, v2) {\n    return this.distance(this.tracePerimeter(v1, v2, true))\n  }\n\n  // Returns whether a given path lies on the perimeter of the rectangle\n  onPerimeter(v1, v2, delta=.0001) {\n    const dx = Math.abs(Math.abs(v1.x) - this.sizeX)\n    const dy = Math.abs(Math.abs(v1.y) - this.sizeY)\n    const rDx = Math.abs(v1.x - v2.x)\n    const rDy = Math.abs(v1.y - v2.y)\n\n    return (rDx < delta && dx < delta) || (rDy < delta && dy < delta)\n  }\n\n  outlinePerimeter() {\n    const last = this.vertices[this.vertices.length-1]\n\n    if (last) {\n      const s = this.nearestVertex(last)\n      const idx = this.nearestCornerIndex(s)\n      const corners = [\n        s,\n        this.corners[idx],\n        this.corners[(idx + 1) % 4],\n        this.corners[(idx + 2) % 4],\n        this.corners[(idx + 3) % 4],\n        this.corners[idx]\n      ]\n      this.vertices = this.vertices.concat(corners)\n    }\n\n    return this\n  }\n\n  // Given two perimeter points, traces the shortest valid path between them (stays on\n  // perimeter). Returns a list of intermediate points on that path (if any).\n  // On further consideration, this could be redone using Dijsktra's algorithm, I believe,\n  // but this works and is, I believe, reasonably efficient.\n  tracePerimeter(p1, p2, includeOriginalPoints=false) {\n    let points\n\n    if ((p1.x === p2.x && Math.abs(p1.x) === this.sizeX) || (p1.y === p2.y && (Math.abs(p1.y) === this.sizeY))) {\n      // on the same line; no connecting points needed\n      points = []\n    } else {\n      // horizontal or vertical orientation; some gentle rounding to ensure we don't\n      // end up within incorrect reading\n      const lp1 = vertexRoundP(p1, 3)\n      const lp2 = vertexRoundP(p2, 3)\n      const o1 = Math.abs(lp1.x) === this.sizeX ? 'v' : 'h'\n      const o2 = Math.abs(lp2.x) === this.sizeX ? 'v' : 'h'\n\n      if (o1 !== o2) {\n        // connects via a single corner\n        points = (o1 === 'h') ?\n          [new Victor(p2.x, p1.y)] :\n          [new Victor(p1.x, p2.y)]\n      } else {\n        // connects via two corners; find the shortest way around\n        if (o1 === 'h') {\n          let d1 = -2*this.sizeX - p1.x - p2.x\n          let d2 = 2*this.sizeX - p1.x - p2.x\n          let xSign = Math.abs(d1) > Math.abs(d2) ? 1 : -1\n\n          points = [\n            new Victor(Math.sign(xSign)*this.sizeX, Math.sign(p1.y)*this.sizeY),\n            new Victor(Math.sign(xSign)*this.sizeX, -Math.sign(p1.y)*this.sizeY)\n          ]\n        } else {\n          let d1 = -2*this.sizeY - p1.y - p2.y\n          let d2 = 2*this.sizeY - p1.y - p2.y\n          let ySign = Math.abs(d1) > Math.abs(d2) ? 1 : -1\n\n          points = [\n            new Victor(Math.sign(p1.x)*this.sizeX, Math.sign(ySign)*this.sizeY),\n            new Victor(-Math.sign(p1.x)*this.sizeX, Math.sign(ySign)*this.sizeY),\n          ]\n        }\n      }\n    }\n\n    if (includeOriginalPoints) {\n      points.unshift(p1)\n      points.push(p2)\n    }\n\n    return points\n  }\n\n  // Finds the nearest vertex that is in the bounds. This will change the shape. i.e. this\n  // doesn't care about the line segment, only about the point.\n  nearestVertex(vertex) {\n    return new Victor(\n      Math.min(this.sizeX, Math.max(-this.sizeX, vertex.x)),\n      Math.min(this.sizeY, Math.max(-this.sizeY, vertex.y))\n    )\n  }\n\n  // Returns the nearest perimeter vertex to the given vertex.\n  nearestPerimeterVertex(vertex) {\n    // Math.sign(0) is 0, so assume positive if this happens to ensure we get a perimeter point\n    if (Math.abs(vertex.x) >= Math.abs(vertex.y)) {\n      const sign = Math.sign(vertex.x) || 1\n      return new Victor(sign * this.sizeX, vertex.y)\n    } else {\n      const sign = Math.sign(vertex.y) || 1\n      return new Victor(vertex.x, sign * this.sizeY)\n    }\n  }\n\n  nearestCornerIndex(vertex) {\n    let n = null\n    let d = Number.MAX_SAFE_INTEGER\n\n    this.corners.forEach((corner, i) => {\n      const dc = distance(corner, vertex)\n      if (dc < d) {\n        d = dc\n        n = i\n      }\n    })\n\n    return n\n  }\n\n  // The guts of logic for this limits enforcer. It will take a single line (defined by\n  // start and end) and if the line goes out of bounds, returns the vertices around the\n  // outside edge to follow around without messing up the shape of the vertices.\n  clipLine(start, end) {\n    const quadrantStart = this.pointLocation(start)\n    const quadrantEnd = this.pointLocation(end)\n\n    if (quadrantStart === 0b0000 && quadrantEnd === 0b0000) {\n      // The line is inside the boundaries\n      return [start, end]\n    }\n\n    if (quadrantStart === quadrantEnd) {\n      // We are in the same box, and we are out of bounds.\n      return [this.nearestVertex(start), this.nearestVertex(end)]\n    }\n\n    if (quadrantStart & quadrantEnd) {\n      // These points are all on one side of the box.\n      return [this.nearestVertex(start), this.nearestVertex(end)]\n    }\n\n    if (quadrantStart === 0b000) {\n      // We are exiting the box. Return the start, the intersection with the boundary, and the closest\n      // boundary point to the exited point.\n      let line = [start]\n      line.push(this.boundPoint(start, end))\n      line.push(this.nearestVertex(end))\n      return line\n    }\n\n    if (quadrantEnd === 0b000) {\n      // We are re-entering the box.\n      return [this.boundPoint(end, start), end]\n    }\n\n    // We have reached a terrible place, where both points are oob, but it might intersect with the\n    // work area. First, define the boundaries as lines.\n    const sides = [\n      // left\n      [Victor(-this.sizeX, -this.sizeY), new Victor(-this.sizeX, this.sizeY)],\n      // right\n      [new Victor(this.sizeX, -this.sizeY), new Victor(this.sizeX, this.sizeY)],\n      // bottom\n      [new Victor(-this.sizeX, -this.sizeY), new Victor(this.sizeX, -this.sizeY)],\n      // top\n      [new Victor(-this.sizeX, this.sizeY), new Victor(this.sizeX, this.sizeY)],\n    ]\n\n    // Count up the number of boundary lines intersect with our line segment.\n    let intersections = []\n    for (let s=0; s<sides.length; s++) {\n      const intPoint = this.intersection(start,\n                                   end,\n                                   sides[s][0],\n                                   sides[s][1])\n      if (intPoint) {\n        intersections.push(new Victor(intPoint.x, intPoint.y))\n      }\n    }\n\n    if (intersections.length !== 0) {\n      if (intersections.length !== 2) {\n        // We should never get here. How would we have something other than 2 or 0 intersections with\n        // a box?\n        console.log(intersections)\n        throw Error(\"Software Geometry Error\")\n      }\n\n      // The intersections are tested in some normal order, but the line could be going through them\n      // in any direction. This check will flip the intersections if they are reversed somehow.\n      if (Victor.fromObject(intersections[0]).subtract(start).lengthSq() >\n          Victor.fromObject(intersections[1]).subtract(start).lengthSq()) {\n        let temp = intersections[0]\n        intersections[0] = intersections[1]\n        intersections[1] = temp\n      }\n\n      return [...intersections, this.nearestVertex(end)]\n    }\n\n    // Damn. We got here because we have a start and end that are failing different boundary checks,\n    // and the line segment doesn't intersect the box. We have to crawl around the outside of the\n    // box until we reach the other point.\n    // Here, I'm going to split this line into two parts, and send each half line segment back\n    // through the clipLine algorithm. Eventually, that should result in only one of the other cases.\n    const midpoint = Victor.fromObject(start).add(end).multiply(new Victor(0.5, 0.5))\n\n    // recurse, and find smaller segments until we don't end up in this place again.\n    return [...this.clipLine(start, midpoint),\n            ...this.clipLine(midpoint, end)]\n  }\n\n  // Intersect the line with the boundary, and return the point exactly on the boundary.\n  // This will keep the shape. i.e. It will follow the line segment, and return the point on that line\n  // segment.\n  boundPoint(good, bad) {\n    const dx = good.x - bad.x\n    const dy = good.y - bad.y\n    const fixed = new Victor(bad.x, bad.y)\n    let distance = 0\n\n    if (bad.x < -this.sizeX || bad.x > this.sizeX) {\n      if (bad.x < -this.sizeX) {\n        // we are leaving the left\n        fixed.x = -this.sizeX\n      } else {\n        // we are leaving the right\n        fixed.x = this.sizeX\n      }\n\n      distance = (fixed.x - good.x) / dx\n      fixed.y = good.y + distance * dy\n\n      // We fixed x, but y might have the same problem, so we'll rerun this, with different points.\n      return this.boundPoint(good, fixed)\n    }\n\n    if (bad.y < -this.sizeY || bad.y > this.sizeY) {\n      if (bad.y < -this.sizeY) {\n        // we are leaving the bottom\n        fixed.y = -this.sizeY\n      } else {\n        // we are leaving the top\n        fixed.y = this.sizeY\n      }\n\n      distance = (fixed.y - good.y) / dy\n      fixed.x = good.x + distance * dx\n    }\n\n    return fixed\n  }\n\n  // Returns the distance walked from the first vertex to the last vertex.\n  distance(vertices) {\n    let d = 0\n    for(let i=0; i<vertices.length; i++) {\n      if (i > 0) d = d + distance(vertices[i], vertices[i-1])\n    }\n\n    return d\n  }\n\n  // Determines which of 8 neighbor areas the point is in:\n  //   https://stackoverflow.com/questions/3746274/line-intersection-with-aabb-rectangle\n  //           |          |\n  //   0b1001  |  0b0001  |  0b0101\n  //           |          |\n  // ------------------------------ y_max\n  //           |          |\n  //   0b1000  |  0b0000  |  0b0100\n  //           |          |\n  // ------------------------------ y_min\n  //           |          |\n  //   0b1010  |  0b0010  |  0b0110\n  //           |          |\n  //         x_min      x_max\n  //\n  pointLocation(point) {\n    let location = 0b0\n\n    if (point.x < -this.sizeX) {\n      location += 0b1000\n    } else if (point.x > this.sizeX) {\n      location += 0b0100\n    }\n\n    if (point.y < -this.sizeY) {\n      location += 0b0001\n    } else if (point.y > this.sizeY) {\n      location += 0b0010\n    }\n\n    return location\n  }\n\n  inBounds(point) {\n    return this.pointLocation(point) === 0b0000\n  }\n\n  // Determines intersection with one of the sides.\n  intersection(start, end, sideStart, sideEnd) {\n    let line = end.clone().subtract(start)\n    let side = sideEnd.clone().subtract(sideStart)\n    let lineCrossSidePerp = line.x * side.y - line.y * side.x\n\n    // if line Cross side === 0, it means the lines are parallel so have infinite intersection points\n    if (lineCrossSidePerp === 0) {\n      return null\n    }\n\n    const diff = sideStart.clone().subtract(start)\n    let t = (diff.x * side.y - diff.y * side.x) / lineCrossSidePerp\n    if (t < 0 || t >= 1) {\n      return null\n    }\n\n    const u = (diff.x * line.y - diff.y * line.x) / lineCrossSidePerp\n    if (u < 0 || u >= 1) {\n      return null\n    }\n\n    return start.clone().add(line.clone().multiply(new Victor(t, t)))\n  }\n}\n","import ReactGA from 'react-ga'\nimport throttle from 'lodash/throttle'\nimport { evaluate } from 'mathjs'\nimport { distance, scale, rotate } from '../../common/geometry'\nimport { arrayRotate } from '../../common/util'\nimport PolarMachine from './PolarMachine'\nimport RectMachine from './RectMachine'\nimport { getShape } from '../../models/shapes'\nimport Victor from 'victor'\n\nfunction track(vertex, data, loopIndex) {\n  const angle = data.trackLength * loopIndex / 16 * 2.0 * Math.PI\n  let radius = 1.0\n\n  if (data.trackGrowEnabled) {\n    radius = 1.0 + loopIndex / 10.0 * data.trackGrow / 100.0\n  }\n  return new Victor(\n    vertex.x + radius * data.trackValue * Math.cos(angle),\n    vertex.y + radius * data.trackValue * Math.sin(angle)\n  )\n}\n\nexport const transformShape = (data, vertex, amount, trackIndex=0, numLoops) => {\n  numLoops = numLoops || data.numLoops\n  let transformedVertex = vertex ? vertex.clone() : new Victor(0.0)\n\n  if (data.repeatEnabled && data.growEnabled) {\n    let growAmount = 100\n    if (data.growMethod === 'function') {\n      try {\n        growAmount = data.growValue * evaluate(data.growMath, {i: amount})\n      }\n      catch (err) {\n        console.log(\"Error parsing grow function: \" + err)\n        growAmount = 200\n      }\n    } else {\n      growAmount = 100.0 + (data.growValue * amount)\n    }\n    transformedVertex = scale(transformedVertex, growAmount)\n  }\n\n  if (data.repeatEnabled && data.spinEnabled) {\n    let spinAmount = 0\n    if (data.spinMethod === 'function') {\n      try {\n        spinAmount = data.spinValue * evaluate(data.spinMath, {i: amount})\n      }\n      catch (err) {\n        console.log(\"Error parsing spin function: \" + err)\n        spinAmount = 0\n      }\n    } else {\n      const loopPeriod = numLoops / (parseInt(data.spinSwitchbacks) + 1)\n      const stage = amount/loopPeriod\n      const direction = (stage % 2 < 1 ? 1.0 : -1.0)\n      spinAmount = direction * (amount % loopPeriod) * data.spinValue\n      // Add in the amount it goes positive to the negatives, so they start at the same place.\n      if (direction < 0.0) {\n        spinAmount += loopPeriod * data.spinValue\n      }\n    }\n    transformedVertex = rotate(transformedVertex, spinAmount)\n  }\n\n  if (data.repeatEnabled && data.trackEnabled) {\n    transformedVertex = track(transformedVertex, data, trackIndex)\n  }\n\n  transformedVertex.rotateDeg(-data.rotation)\n  transformedVertex.addX({x: data.offsetX || 0}).addY({y: data.offsetY || 0})\n\n  return transformedVertex\n}\n\nfunction buildTrackLoop(vertices, transform, i, t) {\n  const numLoops = transform.repeatEnabled ? transform.numLoops : 1\n  const numTrackLoops = transform.repeatEnabled ? transform.trackNumLoops : 1\n  const nextTrackVertex = transformShape(transform, vertices[0], 0, i + 1, numTrackLoops)\n  const backtrack = numTrackLoops > 1 && t === numTrackLoops - 1\n  let trackVertices = []\n  let trackDistances = []\n  const drawPortionPct = Math.round((transform.drawPortionPct || 100)/100.0 * vertices.length)\n  const completion = (i === numLoops - 1 && t === numTrackLoops - 1) ? drawPortionPct : vertices.length\n\n  for (var j=0; j<completion; j++) {\n    const amount = transform.transformMethod === 'smear' ? i + t + j/vertices.length : i + t\n    const trackVertex = transformShape(transform, vertices[j], amount, i, numTrackLoops)\n    trackVertices.push(trackVertex)\n\n    if (backtrack && completion === vertices.length) {\n      trackDistances.push(distance(nextTrackVertex, trackVertex))\n    }\n  }\n\n  // backtrack to the vertex with the shortest distance to the first vertex in\n  // the next track loop; this minimizes the amount our shape draws over the\n  // previous shape, which is not visually appealing.\n  if (backtrack) {\n    let minIdx = 0\n    let minD = Number.MAX_SAFE_INTEGER\n\n    trackDistances.forEach((d, idx) => {\n      if (d <= minD) {\n        minD = d\n        minIdx = idx\n      }\n    })\n\n    if (minIdx !== 0) {\n      trackVertices = trackVertices.concat(trackVertices.slice(minIdx, trackVertices.length-1).reverse())\n    }\n  }\n\n  return trackVertices\n}\n\n// ensure vertices do not exceed machine boundary limits, and endpoints as needed\nexport const polishVertices = (vertices, machine, layerInfo={}) => {\n  vertices = vertices.map(vertex => Victor.fromObject(vertex))\n\n  if (vertices.length > 0) {\n    const machineInstance = getMachineInstance(vertices, machine, layerInfo)\n    vertices = machineInstance.polish().vertices\n  }\n\n  return vertices\n}\n\nfunction reportTiming(time) {\n  time = Math.max(time, 0.01)\n  ReactGA.timing({\n    category: 'Compute',\n    variable: 'transformShapes',\n    value: time, // in milliseconds\n  });\n}\n\nconst throttledReportTiming = throttle(reportTiming, 1000, {trailing: true })\n\nexport const transformShapes = (vertices, layer, effects) => {\n  const startTime = performance.now()\n  const numLoops = layer.repeatEnabled ? layer.numLoops : 1\n  const numTrackLoops = layer.repeatEnabled ? layer.trackNumLoops : 1\n  let outputVertices = []\n\n  if (layer.autosize) {\n    vertices = vertices.map(vertex => {\n      return scale(vertex, 100.0 * layer.startingWidth, 100 * layer.startingHeight)\n    })\n  }\n\n  if (layer.transformMethod === 'smear' && layer.repeatEnabled) {\n    // remove last vertex; we don't want to return to our starting point when completing the shape\n    vertices.pop()\n  }\n\n  if (layer.trackEnabled && numTrackLoops > 1) {\n    for (var i=0; i<numLoops; i++) {\n      for (var t=0; t<numTrackLoops; t++) {\n        outputVertices = outputVertices.concat(buildTrackLoop(vertices, layer, i, t))\n      }\n    }\n  } else {\n    for (i=0; i<numLoops; i++) {\n      for (var j=0; j<vertices.length; j++) {\n        let amount = layer.transformMethod === 'smear' ? i + j/vertices.length : i\n        outputVertices.push(transformShape(layer, vertices[j], amount, amount))\n      }\n    }\n  }\n\n  if (layer.rotateStartingPct === undefined || layer.rotateStartingPct !== 0) {\n    const start = Math.round(outputVertices.length * layer.rotateStartingPct / 100.0)\n    outputVertices = arrayRotate(outputVertices, start)\n  }\n\n  if (layer.drawPortionPct !== undefined) {\n    const drawPortionPct = Math.round((parseInt(layer.drawPortionPct) || 100)/100.0 * outputVertices.length)\n    outputVertices = outputVertices.slice(0, drawPortionPct)\n  }\n\n  if (layer.reverse) {\n    outputVertices = outputVertices.reverse()\n  }\n\n  if (layer.backtrackPct) {\n    const backtrack = Math.round(vertices.length * layer.backtrackPct / 100.0)\n    outputVertices = outputVertices.concat(outputVertices.slice(outputVertices.length - backtrack).reverse())\n  }\n\n  if (effects && effects.length > 0) {\n    effects.forEach(effect => {\n      outputVertices = getShape(effect).applyEffect(effect, layer, outputVertices)\n    })\n  }\n\n  const endTime = performance.now()\n  throttledReportTiming(endTime - startTime)\n\n  return outputVertices\n}\n\n// returns the appropriate machine class for given machine properties\nexport const getMachineInstance = (vertices, settings, layerInfo) => {\n  const machineClass = settings.rectangular ? RectMachine : PolarMachine\n  return new machineClass(vertices, settings, layerInfo)\n}\n","import seedrandom from 'seedrandom'\nimport Shape, { shapeOptions } from '../Shape'\nimport { Circle } from './Circle'\nimport Graph from '../../common/Graph'\nimport { circle, arc } from '../../common/geometry'\nimport { getMachineInstance } from '../../features/machine/computer'\nimport Victor from 'victor'\n\nconst ROUNDS = 100 // default number of rounds to attempt to create and grow circles\nconst RECTANGULAR_ATTEMPTS_MULTIPLIER = 4\nconst ATTEMPTS_MODIFIER = 5\n\nconst options = {\n  ...shapeOptions,\n  ...{\n    seed: {\n      title: 'Random seed',\n      min: 1\n    },\n    startingRadius: {\n      title: 'Minimum radius',\n      min: 3\n    },\n    attempts: {\n      title: 'Circle uniformity',\n      min: 1,\n      max: 100,\n      step: 4\n    },\n    inBounds: {\n      title: 'Stay in bounds',\n      type: 'checkbox'\n    }\n  }\n}\n\n// adapted initially from Coding Challenge #50; Animated Circle Packing\n// https://www.youtube.com/watch?v=QHEQuoIKgNE\nexport default class CirclePacker extends Shape {\n  constructor() {\n    super('Circle Packer')\n  }\n\n  getInitialState() {\n    return {\n      ...super.getInitialState(),\n      ...{\n        type: 'circle_packer',\n        selectGroup: 'Erasers',\n        seed: 1,\n        startingRadius: 4,\n        attempts: 20,\n        canTransform: false,\n        inBounds: false,\n        usesMachine: true,\n        repeatEnabled: false,\n        canChangeSize: false,\n        canRotate: false,\n        canMove: false,\n        autosize: false,\n      }\n    }\n  }\n\n  getVertices(state) {\n    const machine = state.machine\n\n    this.graph = new Graph()\n    this.rng = seedrandom(state.shape.seed)\n    this.circles = []\n    this.points = []\n    this.settings = {\n      width: Math.abs(machine.maxX - machine.minX),\n      height: Math.abs(machine.maxY - machine.minY),\n      maxX: machine.maxX,\n      maxY: machine.maxY,\n      minX: machine.minX,\n      minY: machine.minY,\n      maxRadius: machine.maxRadius,\n      rectangular: machine.rectangular,\n      attempts: state.shape.attempts,\n      r: state.shape.startingRadius,\n      inBounds: state.shape.inBounds\n    }\n    this.boundaryCircle = new Circle(0, 0, this.settings.maxRadius, this.settings)\n    this.boundaryRectangle = [\n      new Victor(-this.settings.width / 2, -this.settings.height / 2),\n      new Victor(this.settings.width / 2, -this.settings.height / 2),\n      new Victor(this.settings.width / 2, this.settings.height / 2),\n      new Victor(-this.settings.width / 2, this.settings.height / 2),\n    ]\n\n    // uncomment and modify this method to add hard-wired circles to the pattern before it starts\n    // this.setupCircles()\n    this.createCircles()\n    this.connectOrphans()\n    this.drawCircles()\n\n    return this.points\n  }\n\n  // experimental\n  setupCircles() {\n    const circles = [\n      new Circle(0, 0, 75, { ...this.settings, growing: false }),\n    ]\n\n    for (const c of circles) {\n      this.addCircle(c)\n    }\n  }\n\n  // generate random circles within machine bounds. Grow them incrementally. If a circle collides\n  // with another, stop them growing. Repeat.\n  createCircles() {\n    let attempts = this.settings.rectangular ?\n      this.settings.attempts * RECTANGULAR_ATTEMPTS_MULTIPLIER :\n      this.settings.attempts\n    if (attempts <= 0) { attempts = 1 }\n    const rounds = Math.floor(ROUNDS * (ROUNDS / attempts))\n\n    for (let round=0; round<rounds; round++) {\n      for (let i=0; i<attempts + ATTEMPTS_MODIFIER; i++) {\n        const possibleC = this.newCircle()\n\n        if (possibleC) {\n          this.addCircle(possibleC)\n        }\n      }\n\n      this.growCircles()\n    }\n\n    this.perimeterCircles = this.circles.filter(circle => circle.perimeter)\n  }\n\n  // ensure that we have a fully connected graph to walk\n  connectOrphans() {\n    this.perimeterCircles.forEach (circle => this.markConnected(circle))\n\n    const center = new Victor(0, 0)\n    let orphans = this.circles.filter(circle => !circle.connected)\n    let connected = this.circles.filter(circle => circle.connected)\n\n    while(orphans.length > 0) {\n      // find orphan furthest from center (closest to perimeter)\n      const orphan = this.farthest(orphans, center)\n\n      // find connected circle closest to that orphan\n      const connector = this.closest(connected, orphan)\n\n      // connect them\n      this.graph.addEdge(orphan, connector)\n      this.markConnected(orphan)\n\n      // repeat\n      orphans = orphans.filter(circle => !circle.connected)\n      connected = this.circles.filter(circle => circle.connected)\n    }\n  }\n\n  // start with a perimeter circle, draw it and any neighboring circles recursively. Repeat.\n  drawCircles() {\n    let curr = this.circles.find(circle => circle.perimeter)\n    let prev = curr\n    let intersection = this.boundaryIntersection(curr)\n    let angle = Math.atan2(intersection.y - curr.y, intersection.x - curr.x)\n    const stack = []\n\n    while (curr) {\n      this.drawCircle(curr, angle)\n      angle = this.walk(curr, angle, stack)\n      prev = curr\n      curr = this.perimeterCircles.find(circle => !circle.walked)\n\n      if (curr) {\n        angle = this.connectAlongPerimeter(prev, curr, angle)\n      }\n    }\n\n    intersection = this.boundaryIntersection(prev)\n    const angle2 = Math.atan2(intersection.y - prev.y, intersection.x - prev.x)\n    this.points.push(...arc(prev.r, angle, angle2, prev.x, prev.y))\n  }\n\n  newCircle() {\n    let x, y\n\n    if (this.settings.rectangular) {\n      x = 2 * this.settings.width * this.rng() - this.settings.width\n      y = 2 * this.settings.height * this.rng() - this.settings.height\n    } else {\n      const theta = this.rng() * 2 * Math.PI\n      const r = this.rng() * this.settings.maxRadius\n\n      x = r * Math.cos(theta)\n      y = r * Math.sin(theta)\n    }\n\n    let possibleC = new Circle(x, y, this.settings.r, this.settings)\n    let valid = !possibleC.outOfBounds()\n\n    if (valid) {\n      for (let i=0; i< this.circles.length; i++) {\n        const c = this.circles[i]\n        let d = possibleC.distance(c)\n\n        if (d < (c.r + possibleC.r)) {\n          valid = false\n          break\n        }\n      }\n    }\n\n    return valid ? possibleC : null\n  }\n\n  growCircles() {\n    if (this.circles.length > 1) {\n      while (this.circles.filter(circle => circle.growing).length > 0) {\n        this.circles.forEach(c => {\n          if (c.growing) {\n            if (c.outOfBounds()) {\n              c.growing = false\n            } else {\n              this.circles.forEach(other => {\n                if (c !== other) {\n                  let d = c.distance(other)\n                  if (d < c.r + other.r) {\n                    c.growing = false\n                    this.graph.addEdge(c, other)\n                  }\n                }\n              })\n            }\n\n            c.grow()\n          }\n        })\n      }\n    }\n  }\n\n  markConnected(c) {\n    c.connected = true\n    const neighbors = this.graph.neighbors(c)\n\n    for (const curr of neighbors) {\n      if (!curr.connected) {\n        this.markConnected(curr)\n      }\n    }\n  }\n\n  drawCircle(c, angle) {\n    if (!c.drawn) {\n      this.points.push(...circle(c.r, angle, c.x, c.y))\n      c.drawn = true\n    }\n  }\n\n  drawConnectingArc(from, to, startingAngle) {\n    const li1 = this.closest(from.lineIntersection(from, to), to)\n    const li2 = this.closest(to.lineIntersection(from, to), from)\n    const a2 = Math.atan2(li1.y - from.y, li1.x - from.x)\n    const a3 = Math.atan2(li2.y - to.y, li2.x - to.x)\n\n    this.points.push(...arc(from.r, startingAngle, a2, from.x, from.y))\n    return a3\n  }\n\n  walk(c, angle, stack) {\n    const neighbors = this.graph.neighbors(c)\n    let a1 = angle\n\n    c.walked = true\n    stack.unshift(c)\n\n    for (const curr of neighbors) {\n      if (!curr.walked) {\n        const a2 = this.drawConnectingArc(c, curr, a1)\n        a1 = this.walk(curr, a2, stack)\n      }\n    }\n\n    this.points.push(...circle(c.r, a1, c.x, c.y))\n    return this.walkBack(stack) || a1\n  }\n\n  walkBack(stack) {\n    const c = stack.shift()\n    let a1, a2\n\n    if (stack.length > 0) {\n      const p1 = stack[0]\n      const li1 = this.closest(c.lineIntersection(c, p1), c)\n      a1 = Math.atan2(li1.y - p1.y, li1.x - p1.x)\n\n      if (stack.length > 1) {\n        const p2 = stack[1]\n        const li2 = this.closest(p1.lineIntersection(p1, p2), p2)\n\n        a2 = Math.atan2(li2.y - p1.y, li2.x - p1.x)\n        this.points.push(...arc(p1.r, a1, a2, p1.x, p1.y))\n\n        return a2\n      } else {\n        return a1\n      }\n    }\n  }\n\n  connectAlongPerimeter(c, end, angle) {\n    debugger\n    const intersection = this.boundaryIntersection(c)\n    const intersection2 = this.boundaryIntersection(end)\n\n    // draw arc to perimeter\n    const a2 = Math.atan2(intersection.y - c.y, intersection.x - c.x)\n    this.points.push(...arc(c.r, angle, a2, c.x, c.y))\n\n    // connect along perimeter\n    const machine = getMachineInstance([], this.settings)\n    this.points.push(...machine.tracePerimeter(intersection, intersection2))\n    this.points.push(intersection2)\n\n    // return angle at intersection between end and perimeter\n    return Math.atan2(intersection2.y - end.y, intersection2.x - end.x)\n  }\n\n  boundaryIntersection(c) {\n    if (this.settings.rectangular) {\n      return c.rectangleIntersection(...this.boundaryRectangle)[0]\n    } else {\n      return c.intersection(this.boundaryCircle)[0]\n    }\n  }\n\n  addCircle(c) {\n    this.circles.push(c)\n    this.graph.addNode(c)\n  }\n\n  // returns the point in arr that is farthest to a given point\n  farthest(arr, point) {\n    return arr.reduce((max, x, i, arr) => x.distance(point) > max.distance(point) ? x : max, arr[0])\n  }\n\n  // returns the point in arr that is closest to a given point\n  closest(arr, point) {\n    return arr.reduce((max, x, i, arr) => x.distance(point) < max.distance(point) ? x : max, arr[0])\n  }\n\n  getOptions() {\n    return options\n  }\n}\n","export default class Orbit {\n  constructor(x, y, r, level, settings, parent) {\n    this.x = x\n    this.y = y\n    this.r = r\n    this.child = null\n    this.angle = Math.PI/2\n    this.level = level\n    this.settings = settings\n\n    let sign = this.settings.alternateRotation ? -1 : 1\n    this.speed = Math.pow(settings.velocity * sign, this.level - 1) * Math.PI / 180 / settings.resolution\n    this.parent = parent\n  }\n\n  addChild() {\n    let newr = this.r / this.settings.relativeSize\n    let newx = this.x + this.r + newr\n    let newy = this.y\n    this.child = new Orbit(newx, newy, newr, this.level + 1, this.settings, this)\n    return this.child\n  }\n\n  update() {\n    if (this.parent) {\n      this.angle += this.speed\n\n      let rsum = this.r + this.parent.r\n      this.x = this.parent.x + rsum * Math.cos(this.angle)\n      this.y = this.parent.y + rsum * Math.sin(this.angle)\n    }\n  }\n}\n","import Victor from 'victor'\nimport Shape, { shapeOptions } from '../Shape'\nimport Orbit from './Orbit'\n\nconst options = {\n  ...shapeOptions,\n  ...{\n    fractalSpirographVelocity: {\n      title: 'Velocity',\n      min: 2\n    },\n    fractalSpirographResolution: {\n      title: 'Resolution',\n      min: 1\n    },\n    fractalSpirographNumCircles: {\n      title: 'Number of circles',\n      min: 1,\n      max: 6\n    },\n    fractalSpirographRelativeSize: {\n      title: 'Relative size (parent to child circle)',\n      min: 2,\n      max: 6\n    },\n    fractalSpirographAlternateRotation: {\n      title: 'Alternate rotation direction',\n      type: 'checkbox'\n    },\n  }\n}\n\n// Inspired/adapted from https://thecodingtrain.com/CodingChallenges/061-fractal-spirograph\nexport default class FractalSpirograph extends Shape {\n  constructor() {\n    super('Fractal Spirograph')\n    this.link = 'https://benice-equation.blogspot.com/2012/01/fractal-spirograph.html'\n    this.linkText = 'Fun math art (pictures) - benice equation'\n  }\n\n  getInitialState() {\n    return {\n      ...super.getInitialState(),\n      ...{\n        type: 'fractal_spirograph',\n        fractalSpirographVelocity: 8,\n        fractalSpirographResolution: 2,\n        fractalSpirographNumCircles: 5,\n        fractalSpirographRelativeSize: 3,\n        fractalSpirographAlternateRotation: true,\n        repeatEnabled: false,\n      }\n    }\n  }\n\n  getVertices(state) {\n    let resolution = parseInt(state.shape.fractalSpirographResolution)\n    let settings = {\n      resolution: resolution,\n      velocity: parseInt(state.shape.fractalSpirographVelocity),\n      numCircles: parseInt(state.shape.fractalSpirographNumCircles),\n      relativeSize: parseInt(state.shape.fractalSpirographRelativeSize),\n      alternateRotation: state.shape.fractalSpirographAlternateRotation\n    }\n\n    let sun = new Orbit(0, 0, 1, 0, settings)\n    let next = sun\n    let end\n    let points = []\n\n    for (var i=0; i<settings.numCircles; i++) {\n      next = next.addChild()\n    }\n    end = next\n\n    for (let i=0; i<resolution; i++) {\n      for (let j=0; j<361; j++) {\n        let next = sun\n\n        while (next != null) {\n          next.update()\n          next = next.child\n        }\n\n        points.push(new Victor(end.x, end.y))\n      }\n    }\n\n    const scale = 5 // to normalize starting size\n    points.forEach(point => point.multiply({x: scale, y: scale }))\n    return points\n  }\n\n  getOptions() {\n    return options\n  }\n}\n","import Victor from 'victor'\nimport Shape from './Shape'\n\nexport default class Heart extends Shape {\n  constructor() {\n    super('Heart')\n  }\n\n  getInitialState() {\n    return {\n      ...super.getInitialState(),\n      ...{\n        type: 'heart',\n      }\n    }\n  }\n\n  getVertices(state) {\n    let points = []\n    for (let i=0; i<128; i++) {\n      let angle = Math.PI * 2.0 / 128.0 * i\n      let scale = 0.9\n      // heart equation from: http://mathworld.wolfram.com/HeartCurve.html\n      points.push(new Victor(scale * 1.0 * Math.pow(Math.sin(angle), 3),\n                         scale * (13.0/16.0 * Math.cos(angle) +\n                                    -5.0/16.0 * Math.cos(2.0 * angle) +\n                                    -2.0/16.0 * Math.cos(3.0 * angle) +\n                                    -1.0/16.0 * Math.cos(4.0 * angle))))\n    }\n    return points\n  }\n}\n","import Victor from 'victor'\nimport Shape, { shapeOptions } from './Shape'\nimport { reduce } from '../common/util'\n\nconst options = {\n  ...shapeOptions,\n  ...{\n    hypocycloidA: {\n      title: 'Large circle radius',\n      min: 1\n    },\n    hypocycloidB: {\n      title: 'Small circle radius',\n      min: 1\n    },\n  }\n}\n\nexport default class Star extends Shape {\n  constructor() {\n    super('Web')\n    this.link = 'http://mathworld.wolfram.com/Hypocycloid.html'\n    this.linkText = 'Wolfram Mathworld'\n  }\n\n  getInitialState() {\n    return {\n      ...super.getInitialState(),\n      ...{\n        type: 'hypocycloid',\n        hypocycloidA: 6,\n        hypocycloidB: 1,\n      }\n    }\n  }\n\n  getVertices(state) {\n    let points = []\n    let a = parseInt(state.shape.hypocycloidA)\n    let b = parseInt(state.shape.hypocycloidB)\n    let reduced = reduce(a, b)\n    a = reduced[0]\n    b = reduced[1]\n    let rotations = Number.isInteger(a/b) ? 1 : b\n    let scale = b < a ? 1/a : 1/(2*(b - a/2))\n\n    for (let i=0; i<128*rotations; i++) {\n      let angle = Math.PI * 2.0 / 128.0 * i\n      points.push(\n        new Victor(\n          (a - b) * Math.cos(angle) + b * Math.cos(((a - b) / b) * angle),\n          (a - b) * Math.sin(angle) - b * Math.sin(((a - b) / b) * angle)\n        ).multiply({x: scale, y: scale})\n      )\n    }\n\n    return points\n  }\n\n  getOptions() {\n    return options\n  }\n}\n","export let raysol_cursive = {\n  ' ' : [ [0.000,-0.786], [0.085,-0.786], [0.170,-0.786], [0.255,-0.786], [0.340,-0.786], [0.425,-0.786], [0.510,-0.786], [0.595,-0.786], [0.680,-0.786],  ],\n  '0' : [ [0.085,-0.786], [0.170,-0.786], [0.255,-0.786], [0.340,-0.786], [0.425,-0.786], [0.549,-0.786], [0.570,-0.779], [0.641,-0.741], [0.729,-0.673], [0.754,-0.642], [0.799,-0.548], [0.833,-0.422], [0.833,-0.317], [0.833,-0.211], [0.833,-0.106], [0.833,-0.001], [0.833,0.105], [0.833,0.210], [0.833,0.315], [0.833,0.421], [0.833,0.531], [0.810,0.599], [0.779,0.645], [0.749,0.690], [0.711,0.738], [0.629,0.786], [0.570,0.786], [0.513,0.786], [0.442,0.738], [0.374,0.690], [0.340,0.645], [0.315,0.599], [0.289,0.531], [0.289,0.422], [0.289,0.313], [0.289,0.204], [0.289,0.095], [0.289,-0.014], [0.289,-0.123], [0.289,-0.232], [0.289,-0.341], [0.289,-0.450], [0.315,-0.559], [0.351,-0.655], [0.388,-0.701], [0.449,-0.742], [0.489,-0.762], [0.549,-0.786], [0.655,-0.786], [0.731,-0.786], [0.816,-0.786], [0.901,-0.786], [0.986,-0.786], [1.071,-0.786], [1.156,-0.786],  ],\n  '1' : [ [0.085,-0.786], [0.170,-0.786], [0.255,-0.786], [0.340,-0.786], [0.340,-0.629], [0.340,-0.472], [0.340,-0.315], [0.340,-0.157], [0.340,-0.000], [0.340,0.157], [0.340,0.314], [0.340,0.472], [0.340,0.629], [0.340,0.786], [0.340,0.629], [0.340,0.472], [0.340,0.314], [0.340,0.157], [0.340,-0.000], [0.340,-0.157], [0.340,-0.315], [0.340,-0.472], [0.340,-0.629], [0.340,-0.786], [0.425,-0.786], [0.510,-0.786], [0.595,-0.786], [0.680,-0.786],  ],\n  '2' : [ [0.085,-0.786], [0.170,-0.786], [0.255,-0.786], [0.340,-0.702], [0.442,-0.537], [0.544,-0.330], [0.624,-0.174], [0.660,0.032], [0.687,0.212], [0.698,0.295], [0.708,0.427], [0.714,0.514], [0.708,0.595], [0.690,0.659], [0.677,0.702], [0.663,0.726], [0.629,0.752], [0.587,0.769], [0.544,0.760], [0.493,0.744], [0.442,0.727], [0.374,0.701], [0.306,0.625], [0.247,0.574], [0.306,0.625], [0.374,0.701], [0.442,0.727], [0.493,0.744], [0.544,0.760], [0.587,0.769], [0.629,0.752], [0.663,0.726], [0.677,0.702], [0.690,0.659], [0.708,0.595], [0.714,0.514], [0.708,0.427], [0.698,0.295], [0.687,0.212], [0.660,0.032], [0.624,-0.174], [0.544,-0.330], [0.442,-0.537], [0.340,-0.702], [0.425,-0.701], [0.544,-0.633], [0.612,-0.599], [0.680,-0.574], [0.765,-0.591], [0.850,-0.616], [0.935,-0.667], [1.020,-0.744], [1.105,-0.786],  ],\n  '3' : [ [0.085,-0.786], [0.170,-0.786], [0.272,-0.786], [0.330,-0.786], [0.405,-0.786], [0.442,-0.786], [0.493,-0.772], [0.559,-0.752], [0.612,-0.718], [0.648,-0.683], [0.677,-0.653], [0.707,-0.618], [0.731,-0.548], [0.764,-0.473], [0.782,-0.396], [0.784,-0.312], [0.775,-0.241], [0.765,-0.181], [0.751,-0.123], [0.700,-0.029], [0.620,0.021], [0.544,0.038], [0.425,0.056], [0.557,0.087], [0.586,0.111], [0.640,0.165], [0.697,0.234], [0.734,0.337], [0.749,0.431], [0.741,0.516], [0.726,0.600], [0.712,0.659], [0.672,0.740], [0.641,0.777], [0.586,0.786], [0.537,0.777], [0.485,0.769], [0.412,0.744], [0.331,0.710], [0.412,0.744], [0.485,0.769], [0.537,0.777], [0.586,0.786], [0.641,0.777], [0.672,0.740], [0.712,0.659], [0.726,0.600], [0.741,0.516], [0.749,0.431], [0.734,0.337], [0.697,0.234], [0.640,0.165], [0.586,0.111], [0.557,0.087], [0.484,0.056], [0.544,0.038], [0.620,0.021], [0.700,-0.029], [0.751,-0.123], [0.765,-0.181], [0.775,-0.241], [0.784,-0.312], [0.782,-0.396], [0.764,-0.473], [0.731,-0.548], [0.707,-0.618], [0.677,-0.653], [0.648,-0.683], [0.612,-0.718], [0.559,-0.752], [0.493,-0.772], [0.425,-0.761], [0.357,-0.744], [0.289,-0.718], [0.221,-0.616], [0.289,-0.718], [0.357,-0.744], [0.425,-0.761], [0.493,-0.772], [0.559,-0.752], [0.680,-0.786], [0.765,-0.786], [0.850,-0.786], [0.935,-0.786], [1.020,-0.786],  ],\n  '4' : [ [0.085,-0.786], [0.170,-0.786], [0.255,-0.786], [0.340,-0.786], [0.425,-0.786], [0.510,-0.786], [0.595,-0.786], [0.680,-0.786], [0.765,-0.786], [0.765,-0.629], [0.765,-0.472], [0.765,-0.315], [0.765,-0.157], [0.765,-0.000], [0.765,0.157], [0.765,0.314], [0.765,0.472], [0.765,0.629], [0.765,0.786], [0.680,0.655], [0.595,0.524], [0.510,0.393], [0.425,0.262], [0.340,0.131], [0.255,-0.000], [0.356,-0.000], [0.457,-0.000], [0.558,-0.000], [0.659,-0.000], [0.760,-0.000], [0.861,-0.000], [0.962,-0.000], [1.062,-0.000], [1.139,-0.000], [1.062,-0.000], [0.962,-0.000], [0.861,-0.000], [0.760,-0.000], [0.765,-0.157], [0.765,-0.315], [0.765,-0.472], [0.765,-0.629], [0.765,-0.786], [0.850,-0.786], [0.935,-0.786], [1.020,-0.786], [1.105,-0.786], [1.190,-0.786], [1.275,-0.786], [1.360,-0.786],  ],\n  '5' : [ [0.085,-0.786], [0.170,-0.786], [0.255,-0.786], [0.340,-0.786], [0.438,-0.786], [0.520,-0.786], [0.607,-0.786], [0.659,-0.783], [0.730,-0.749], [0.796,-0.698], [0.853,-0.612], [0.884,-0.497], [0.892,-0.319], [0.887,-0.167], [0.850,-0.064], [0.795,0.038], [0.744,0.100], [0.680,0.122], [0.608,0.144], [0.540,0.123], [0.441,0.081], [0.378,0.043], [0.302,-0.014], [0.302,0.145], [0.302,0.303], [0.302,0.461], [0.302,0.619], [0.302,0.727], [0.359,0.727], [0.415,0.727], [0.471,0.727], [0.528,0.727], [0.584,0.727], [0.640,0.727], [0.731,0.727], [0.850,0.727], [0.731,0.727], [0.640,0.727], [0.584,0.727], [0.528,0.727], [0.471,0.727], [0.415,0.727], [0.359,0.727], [0.302,0.727], [0.302,0.619], [0.302,0.461], [0.302,0.303], [0.302,0.145], [0.302,-0.014], [0.378,0.043], [0.441,0.081], [0.540,0.123], [0.608,0.144], [0.680,0.122], [0.744,0.100], [0.795,0.038], [0.850,-0.064], [0.887,-0.167], [0.892,-0.319], [0.884,-0.497], [0.853,-0.612], [0.796,-0.698], [0.730,-0.749], [0.659,-0.783], [0.607,-0.786], [0.520,-0.786], [0.425,-0.752], [0.357,-0.701], [0.289,-0.616], [0.238,-0.531], [0.187,-0.489], [0.153,-0.472], [0.187,-0.489], [0.238,-0.531], [0.289,-0.616], [0.357,-0.701], [0.425,-0.752], [0.520,-0.786], [0.607,-0.786], [0.659,-0.786], [0.816,-0.786], [0.901,-0.786], [0.986,-0.786], [1.071,-0.786], [1.156,-0.786], [1.241,-0.786], [1.326,-0.786],  ],\n  '6' : [ [0.085,-0.786], [0.170,-0.786], [0.255,-0.786], [0.340,-0.786], [0.425,-0.786], [0.449,-0.742], [0.489,-0.762], [0.549,-0.786], [0.655,-0.779], [0.726,-0.741], [0.814,-0.673], [0.839,-0.642], [0.866,-0.607], [0.924,-0.422], [0.926,-0.323], [0.911,-0.213], [0.895,-0.168], [0.864,-0.099], [0.834,-0.053], [0.796,-0.005], [0.720,0.034], [0.619,0.042], [0.557,0.034], [0.513,0.025], [0.453,-0.002], [0.332,-0.071], [0.373,0.033], [0.414,0.137], [0.455,0.241], [0.496,0.345], [0.538,0.449], [0.579,0.553], [0.620,0.657], [0.661,0.761], [0.620,0.657], [0.579,0.553], [0.538,0.449], [0.496,0.345], [0.455,0.241], [0.414,0.137], [0.373,0.033], [0.332,-0.071], [0.276,-0.200], [0.263,-0.274], [0.255,-0.347], [0.274,-0.489], [0.306,-0.559], [0.351,-0.655], [0.391,-0.701], [0.489,-0.762], [0.549,-0.786], [0.655,-0.779], [0.731,-0.786], [0.816,-0.786], [0.901,-0.786], [0.986,-0.786], [1.071,-0.786], [1.156,-0.786],  ],\n  '7' : [ [0.085,-0.786], [0.170,-0.786], [0.255,-0.786], [0.340,-0.786], [0.391,-0.629], [0.442,-0.472], [0.493,-0.315], [0.544,-0.157], [0.595,-0.000], [0.646,0.157], [0.697,0.314], [0.748,0.472], [0.799,0.629], [0.850,0.786], [0.776,0.786], [0.701,0.786], [0.627,0.786], [0.552,0.786], [0.478,0.786], [0.404,0.786], [0.329,0.786], [0.255,0.786], [0.329,0.786], [0.404,0.786], [0.478,0.786], [0.552,0.786], [0.627,0.786], [0.701,0.786], [0.776,0.786], [0.850,0.786], [0.799,0.629], [0.748,0.472], [0.697,0.314], [0.646,0.157], [0.595,-0.000], [0.544,-0.157], [0.493,-0.315], [0.442,-0.472], [0.391,-0.629], [0.340,-0.786], [0.425,-0.786], [0.510,-0.786], [0.595,-0.786], [0.680,-0.786], [0.765,-0.786], [0.850,-0.786], [0.935,-0.786], [1.020,-0.786], [1.105,-0.786],  ],\n  '8' : [ [0.085,-0.786], [0.170,-0.786], [0.255,-0.786], [0.340,-0.786], [0.425,-0.786], [0.556,-0.784], [0.618,-0.786], [0.695,-0.763], [0.756,-0.733], [0.795,-0.664], [0.853,-0.560], [0.878,-0.429], [0.870,-0.334], [0.846,-0.267], [0.797,-0.132], [0.740,-0.033], [0.674,0.065], [0.643,0.098], [0.611,0.132], [0.561,0.166], [0.527,0.200], [0.493,0.247], [0.459,0.293], [0.425,0.361], [0.391,0.446], [0.408,0.545], [0.459,0.644], [0.510,0.701], [0.570,0.734], [0.643,0.760], [0.716,0.734], [0.777,0.701], [0.828,0.644], [0.879,0.545], [0.896,0.446], [0.862,0.361], [0.828,0.293], [0.794,0.247], [0.760,0.200], [0.726,0.166], [0.676,0.132], [0.579,0.098], [0.548,0.065], [0.481,-0.033], [0.425,-0.132], [0.376,-0.267], [0.352,-0.334], [0.344,-0.429], [0.369,-0.560], [0.427,-0.664], [0.466,-0.733], [0.527,-0.763], [0.603,-0.786], [0.666,-0.784], [0.695,-0.763], [0.756,-0.733], [0.795,-0.664], [0.853,-0.560], [0.878,-0.429], [0.870,-0.334], [0.846,-0.267], [0.797,-0.132], [0.740,-0.033], [0.797,-0.132], [0.846,-0.267], [0.870,-0.334], [0.878,-0.429], [0.853,-0.560], [0.795,-0.664], [0.756,-0.733], [0.695,-0.763], [0.765,-0.786], [0.850,-0.786], [0.935,-0.786], [1.020,-0.786], [1.105,-0.786],  ],\n  '9' : [ [0.085,-0.786], [0.170,-0.786], [0.255,-0.786], [0.340,-0.786], [0.425,-0.786], [0.510,-0.786], [0.595,-0.786], [0.680,-0.786], [0.714,-0.786], [0.717,-0.612], [0.717,-0.455], [0.717,-0.297], [0.717,-0.139], [0.717,0.019], [0.717,0.177], [0.717,0.335], [0.717,0.493], [0.717,0.650], [0.717,0.786], [0.648,0.786], [0.521,0.786], [0.415,0.744], [0.340,0.659], [0.306,0.523], [0.292,0.364], [0.299,0.230], [0.317,0.147], [0.339,0.086], [0.387,-0.030], [0.442,-0.063], [0.509,-0.055], [0.558,-0.030], [0.618,-0.004], [0.663,0.013], [0.717,0.019], [0.717,-0.139], [0.717,-0.297], [0.717,-0.455], [0.717,-0.612], [0.714,-0.786], [0.765,-0.786], [0.850,-0.786], [0.935,-0.786], [1.020,-0.786],  ],\n  'A' : [ [0.085,-0.786], [0.170,-0.786], [0.255,-0.786], [0.340,-0.786], [0.459,-0.781], [0.534,-0.759], [0.623,-0.711], [0.715,-0.601], [0.793,-0.507], [0.715,-0.601], [0.623,-0.711], [0.534,-0.759], [0.459,-0.781], [0.383,-0.743], [0.308,-0.661], [0.250,-0.586], [0.206,-0.475], [0.173,-0.322], [0.170,-0.191], [0.187,-0.003], [0.227,0.147], [0.284,0.286], [0.339,0.375], [0.435,0.509], [0.521,0.596], [0.637,0.685], [0.790,0.761], [0.865,0.786], [0.863,0.706], [0.861,0.583], [0.859,0.460], [0.857,0.337], [0.855,0.213], [0.853,0.090], [0.851,-0.033], [0.849,-0.156], [0.848,-0.280], [0.846,-0.403], [0.847,-0.466], [0.868,-0.563], [0.954,-0.635], [1.033,-0.701], [1.109,-0.744], [1.213,-0.786],  ],\n  'B' : [ [0.085,-0.786], [0.170,-0.786], [0.255,-0.786], [0.255,-0.629], [0.255,-0.471], [0.255,-0.313], [0.255,-0.155], [0.255,0.002], [0.255,0.160], [0.255,0.318], [0.255,0.476], [0.255,0.633], [0.281,0.659], [0.327,0.701], [0.380,0.744], [0.445,0.773], [0.501,0.777], [0.552,0.777], [0.589,0.761], [0.646,0.726], [0.699,0.680], [0.733,0.630], [0.764,0.556], [0.761,0.455], [0.748,0.389], [0.723,0.285], [0.689,0.191], [0.621,0.106], [0.517,0.064], [0.476,0.064], [0.517,0.064], [0.596,0.025], [0.650,-0.037], [0.680,-0.062], [0.748,-0.148], [0.791,-0.248], [0.809,-0.312], [0.814,-0.452], [0.811,-0.490], [0.796,-0.566], [0.780,-0.620], [0.697,-0.718], [0.622,-0.762], [0.572,-0.786], [0.476,-0.786], [0.374,-0.786], [0.255,-0.786], [0.374,-0.786], [0.476,-0.786], [0.595,-0.786], [0.680,-0.786], [0.765,-0.786], [0.850,-0.786], [0.935,-0.786], [1.020,-0.786],  ],\n  'C' : [ [0.085,-0.786], [0.170,-0.786], [0.255,-0.786], [0.340,-0.752], [0.459,-0.693], [0.397,-0.605], [0.357,-0.548], [0.332,-0.452], [0.306,-0.327], [0.298,-0.208], [0.298,-0.106], [0.298,0.016], [0.318,0.183], [0.338,0.310], [0.385,0.442], [0.462,0.585], [0.548,0.675], [0.652,0.746], [0.776,0.786], [0.872,0.767], [0.963,0.643], [1.019,0.491], [1.040,0.351], [1.019,0.491], [0.963,0.643], [0.872,0.767], [0.776,0.786], [0.652,0.746], [0.548,0.675], [0.462,0.585], [0.385,0.442], [0.338,0.310], [0.318,0.183], [0.298,0.016], [0.298,-0.106], [0.298,-0.208], [0.306,-0.327], [0.332,-0.452], [0.397,-0.605], [0.459,-0.693], [0.544,-0.748], [0.682,-0.786], [0.777,-0.786], [0.850,-0.786], [0.884,-0.786], [0.953,-0.786], [1.020,-0.786], [1.105,-0.786], [1.190,-0.786], [1.275,-0.786],  ],\n  'D' : [ [0.123,-0.786], [0.213,-0.786], [0.321,-0.786], [0.401,-0.786], [0.465,-0.786], [0.544,-0.786], [0.639,-0.786], [0.772,-0.764], [0.918,-0.711], [0.955,-0.676], [1.020,-0.592], [1.072,-0.460], [1.090,-0.357], [1.104,-0.199], [1.103,-0.111], [1.082,0.035], [1.062,0.183], [1.037,0.271], [1.009,0.356], [0.982,0.435], [0.899,0.546], [0.816,0.633], [0.748,0.684], [0.646,0.741], [0.566,0.766], [0.496,0.761], [0.425,0.733], [0.425,0.604], [0.425,0.526], [0.425,0.343], [0.425,0.149], [0.425,-0.030], [0.425,-0.156], [0.425,-0.442], [0.425,-0.544], [0.425,-0.701], [0.465,-0.786], [0.544,-0.786], [0.639,-0.786], [0.748,-0.786], [0.850,-0.786], [0.935,-0.786], [1.020,-0.786], [1.105,-0.786], [1.190,-0.786], [1.275,-0.786], [1.360,-0.786],  ],\n  'E' : [ [0.085,-0.786], [0.170,-0.786], [0.255,-0.786], [0.340,-0.701], [0.381,-0.614], [0.317,-0.487], [0.277,-0.361], [0.274,-0.221], [0.309,-0.157], [0.356,-0.115], [0.405,-0.072], [0.493,-0.030], [0.563,0.006], [0.629,0.027], [0.714,0.027], [0.629,0.027], [0.570,0.064], [0.509,0.120], [0.474,0.143], [0.386,0.229], [0.331,0.313], [0.291,0.438], [0.293,0.552], [0.320,0.660], [0.383,0.743], [0.478,0.786], [0.564,0.786], [0.629,0.786], [0.675,0.786], [0.723,0.786], [0.799,0.786], [0.723,0.786], [0.675,0.786], [0.629,0.786], [0.564,0.786], [0.478,0.786], [0.383,0.743], [0.320,0.660], [0.293,0.552], [0.291,0.438], [0.331,0.313], [0.386,0.229], [0.474,0.143], [0.509,0.120], [0.570,0.064], [0.629,0.027], [0.714,0.027], [0.629,0.027], [0.563,0.006], [0.493,-0.030], [0.405,-0.072], [0.356,-0.115], [0.309,-0.157], [0.274,-0.221], [0.277,-0.361], [0.317,-0.487], [0.381,-0.614], [0.443,-0.698], [0.500,-0.735], [0.583,-0.769], [0.695,-0.781], [0.786,-0.780], [0.864,-0.780], [0.935,-0.779],  ],\n  'F' : [ [0.085,-0.786], [0.170,-0.786], [0.255,-0.786], [0.340,-0.786], [0.425,-0.786], [0.510,-0.786], [0.578,-0.786], [0.663,-0.786], [0.724,-0.767], [0.792,-0.699], [0.852,-0.558], [0.853,-0.440], [0.854,-0.321], [0.855,-0.203], [0.856,-0.085], [0.857,0.034], [0.858,0.152], [0.859,0.270], [0.860,0.389], [0.861,0.507], [0.863,0.625], [0.969,0.608], [1.076,0.588], [1.173,0.616], [1.282,0.654], [1.394,0.701], [1.282,0.654], [1.173,0.616], [1.076,0.588], [0.969,0.608], [0.863,0.625], [0.763,0.663], [0.633,0.713], [0.466,0.713], [0.317,0.628], [0.247,0.404], [0.317,0.628], [0.466,0.713], [0.633,0.713], [0.763,0.663], [0.863,0.625], [0.861,0.507], [0.860,0.389], [0.859,0.270], [0.858,0.152], [0.857,0.034], [0.742,0.037], [0.631,0.054], [0.442,0.071], [0.631,0.054], [0.742,0.037], [0.857,0.034], [0.960,0.035], [1.075,0.043], [1.224,0.052], [1.075,0.043], [0.960,0.035], [0.857,0.034], [0.856,-0.085], [0.855,-0.203], [0.854,-0.321], [0.854,-0.395], [0.850,-0.506], [0.852,-0.558], [0.833,-0.650], [0.773,-0.713], [0.663,-0.769], [0.591,-0.766], [0.564,-0.774], [0.537,-0.774], [0.501,-0.766], [0.452,-0.701], [0.420,-0.650], [0.413,-0.583], [0.422,-0.519], [0.474,-0.465], [0.511,-0.442], [0.573,-0.438], [0.653,-0.442], [0.740,-0.496], [0.866,-0.616], [0.927,-0.687], [1.035,-0.756], [1.079,-0.803], [1.211,-0.837], [1.310,-0.829], [1.406,-0.820], [1.491,-0.786],  ],\n  'G' : [ [0.085,-0.786], [0.171,-0.761], [0.245,-0.712], [0.316,-0.660], [0.389,-0.609], [0.489,-0.507], [0.573,-0.398], [0.610,-0.341], [0.658,-0.254], [0.708,-0.125], [0.757,0.004], [0.782,0.082], [0.819,0.177], [0.837,0.274], [0.857,0.392], [0.880,0.508], [0.884,0.597], [0.881,0.711], [0.842,0.799], [0.762,0.772], [0.720,0.745], [0.697,0.705], [0.640,0.590], [0.631,0.560], [0.612,0.445], [0.607,0.395], [0.628,0.243], [0.653,0.178], [0.695,0.088], [0.834,-0.031], [0.931,-0.028], [1.047,0.038], [1.117,0.106], [1.179,0.236], [1.262,0.405], [1.246,0.225], [1.209,-0.096], [1.181,-0.235], [1.140,-0.389], [1.103,-0.495], [1.032,-0.625], [0.956,-0.707], [0.865,-0.758], [0.770,-0.787], [0.681,-0.782], [0.598,-0.762], [0.500,-0.710], [0.455,-0.632], [0.427,-0.556], [0.380,-0.481], [0.324,-0.330], [0.465,-0.389], [0.637,-0.468], [0.784,-0.548], [0.909,-0.586], [1.032,-0.625], [1.141,-0.663], [1.245,-0.677], [1.351,-0.699], [1.489,-0.744], [1.611,-0.786],  ],\n  'H' : [ [0.085,-0.786], [0.170,-0.786], [0.255,-0.786], [0.340,-0.786], [0.425,-0.786], [0.496,-0.786], [0.496,-0.609], [0.496,-0.479], [0.496,-0.348], [0.496,-0.217], [0.496,-0.086], [0.496,0.044], [0.496,0.175], [0.496,0.306], [0.496,0.404], [0.496,0.508], [0.476,0.604], [0.453,0.687], [0.391,0.744], [0.272,0.786], [0.391,0.744], [0.453,0.687], [0.476,0.604], [0.496,0.508], [0.496,0.404], [0.496,0.306], [0.496,0.175], [0.496,0.044], [0.635,0.071], [0.774,0.097], [0.913,0.123], [1.051,0.149], [1.105,0.175], [1.105,0.306], [1.105,0.404], [1.105,0.508], [1.105,0.616], [1.122,0.701], [1.165,0.760], [1.275,0.786], [1.165,0.760], [1.122,0.701], [1.105,0.616], [1.105,0.508], [1.105,0.404], [1.105,0.306], [1.105,0.175], [1.105,0.044], [1.105,-0.086], [1.105,-0.217], [1.105,-0.348], [1.105,-0.479], [1.105,-0.609], [1.139,-0.701], [1.190,-0.761], [1.275,-0.778], [1.360,-0.786], [1.445,-0.786], [1.530,-0.786],  ],\n  'I' : [ [0.085,-0.786], [0.170,-0.786], [0.289,-0.786], [0.425,-0.786], [0.515,-0.773], [0.596,-0.794], [0.685,-0.801], [0.782,-0.773], [0.838,-0.602], [0.914,-0.473], [0.876,-0.349], [0.832,-0.152], [0.789,0.006], [0.773,0.196], [0.765,0.298], [0.773,0.517], [0.799,0.650], [0.833,0.740], [0.884,0.802], [1.020,0.804], [1.071,0.800], [1.120,0.702], [1.151,0.628], [1.189,0.387], [1.198,0.208], [1.180,-0.065], [1.165,-0.166], [1.100,-0.403], [1.046,-0.509], [1.007,-0.577], [0.899,-0.681], [0.782,-0.773], [0.685,-0.801], [0.596,-0.794], [0.515,-0.773], [0.420,-0.719], [0.381,-0.640], [0.357,-0.564], [0.317,-0.488], [0.271,-0.336], [0.408,-0.397], [0.574,-0.479], [0.716,-0.562], [0.838,-0.602], [0.958,-0.643], [1.064,-0.683], [1.168,-0.699], [1.271,-0.722], [1.408,-0.761], [1.529,-0.786],  ],\n  'J' : [ [0.085,-0.786], [0.170,-0.786], [0.255,-0.786], [0.340,-0.786], [0.457,-0.733], [0.593,-0.715], [0.428,-0.508], [0.343,-0.336], [0.301,-0.096], [0.292,0.057], [0.286,0.286], [0.316,0.532], [0.382,0.703], [0.439,0.754], [0.506,0.780], [0.591,0.790], [0.690,0.782], [0.734,0.739], [0.789,0.616], [0.802,0.553], [0.814,0.386], [0.818,0.209], [0.808,-0.059], [0.799,-0.253], [0.787,-0.441], [0.780,-0.614], [0.767,-0.807], [0.752,-0.952], [0.760,-1.127], [0.737,-1.292], [0.712,-1.438], [0.661,-1.505], [0.604,-1.531], [0.426,-1.533], [0.365,-1.508], [0.310,-1.439], [0.298,-1.296], [0.310,-1.143], [0.346,-0.955], [0.397,-0.844], [0.457,-0.733], [0.588,-0.715], [0.675,-0.731], [0.762,-0.748], [0.849,-0.764], [0.935,-0.780], [1.021,-0.779], [1.106,-0.779], [1.188,-0.786],  ],\n  'K' : [ [0.085,-0.786], [0.170,-0.786], [0.255,-0.786], [0.340,-0.786], [0.425,-0.786], [0.510,-0.786], [0.540,-0.627], [0.551,-0.494], [0.562,-0.360], [0.574,-0.227], [0.585,-0.094], [0.596,0.040], [0.580,0.158], [0.563,0.276], [0.547,0.393], [0.530,0.511], [0.514,0.629], [0.497,0.747], [0.442,0.744], [0.382,0.736], [0.317,0.679], [0.268,0.607], [0.223,0.532], [0.268,0.607], [0.317,0.679], [0.382,0.736], [0.442,0.744], [0.497,0.747], [0.514,0.629], [0.530,0.511], [0.547,0.393], [0.563,0.276], [0.580,0.158], [0.596,0.040], [0.689,0.087], [0.752,0.165], [0.815,0.242], [0.878,0.320], [0.941,0.397], [1.004,0.475], [1.067,0.553], [1.130,0.630], [1.149,0.740], [1.130,0.630], [1.067,0.553], [1.004,0.475], [0.941,0.397], [0.878,0.320], [0.815,0.242], [0.752,0.165], [0.689,0.087], [0.626,0.010], [0.675,-0.067], [0.725,-0.143], [0.775,-0.219], [0.825,-0.295], [0.875,-0.371], [0.925,-0.448], [0.974,-0.524], [1.024,-0.600], [1.074,-0.676], [1.124,-0.761], [1.220,-0.786], [1.299,-0.786], [1.363,-0.786], [1.442,-0.786], [1.526,-0.786],  ],\n  'L' : [ [0.085,-0.786], [0.170,-0.786], [0.255,-0.786], [0.323,-0.778], [0.370,-0.766], [0.406,-0.774], [0.433,-0.774], [0.460,-0.766], [0.520,-0.743], [0.558,-0.713], [0.629,-0.650], [0.681,-0.570], [0.717,-0.506], [0.723,-0.395], [0.739,-0.305], [0.748,-0.179], [0.751,-0.045], [0.743,0.148], [0.741,0.224], [0.757,0.263], [0.749,0.353], [0.776,0.537], [0.788,0.600], [0.824,0.711], [0.872,0.783], [0.894,0.827], [0.968,0.850], [1.027,0.795], [1.061,0.723], [1.082,0.596], [1.071,0.517], [1.050,0.464], [0.971,0.366], [0.940,0.343], [0.848,0.288], [0.808,0.275], [0.660,0.257], [0.624,0.259], [0.500,0.288], [0.386,0.343], [0.285,0.410], [0.386,0.343], [0.500,0.288], [0.624,0.259], [0.660,0.257], [0.808,0.275], [0.848,0.288], [0.940,0.343], [0.971,0.366], [1.050,0.464], [1.071,0.517], [1.082,0.596], [1.061,0.723], [1.027,0.795], [0.968,0.850], [0.894,0.827], [0.872,0.783], [0.824,0.711], [0.788,0.600], [0.776,0.537], [0.749,0.353], [0.757,0.263], [0.741,0.224], [0.743,0.148], [0.751,-0.045], [0.748,-0.179], [0.739,-0.305], [0.723,-0.395], [0.717,-0.506], [0.681,-0.570], [0.629,-0.650], [0.558,-0.713], [0.520,-0.743], [0.460,-0.766], [0.433,-0.774], [0.406,-0.774], [0.370,-0.766], [0.320,-0.701], [0.289,-0.650], [0.282,-0.583], [0.291,-0.519], [0.343,-0.465], [0.379,-0.442], [0.442,-0.438], [0.521,-0.442], [0.609,-0.496], [0.734,-0.616], [0.796,-0.687], [0.904,-0.756], [0.948,-0.786], [1.080,-0.786], [1.179,-0.786], [1.275,-0.786], [1.360,-0.786],  ],\n  'M' : [ [0.085,-0.786], [0.213,-0.786], [0.340,-0.786], [0.468,-0.786], [0.583,-0.736], [0.593,-0.622], [0.603,-0.507], [0.613,-0.393], [0.623,-0.278], [0.633,-0.164], [0.643,-0.049], [0.653,0.065], [0.663,0.180], [0.673,0.294], [0.683,0.409], [0.655,0.534], [0.628,0.634], [0.592,0.749], [0.500,0.795], [0.412,0.754], [0.321,0.685], [0.238,0.576], [0.321,0.685], [0.412,0.754], [0.500,0.795], [0.592,0.749], [0.628,0.634], [0.655,0.534], [0.683,0.409], [0.673,0.294], [0.663,0.180], [0.653,0.065], [0.643,-0.049], [0.633,-0.164], [0.623,-0.278], [0.613,-0.393], [0.603,-0.507], [0.593,-0.622], [0.583,-0.736], [0.593,-0.622], [0.603,-0.507], [0.613,-0.393], [0.623,-0.278], [0.633,-0.164], [0.643,-0.049], [0.653,0.065], [0.663,0.180], [0.673,0.294], [0.683,0.409], [0.727,0.575], [0.800,0.719], [0.921,0.793], [1.057,0.807], [1.122,0.730], [1.162,0.644], [1.188,0.569], [1.233,0.406], [1.223,0.292], [1.214,0.178], [1.205,0.063], [1.196,-0.051], [1.187,-0.166], [1.177,-0.280], [1.168,-0.394], [1.159,-0.509], [1.150,-0.623], [1.140,-0.737], [1.150,-0.623], [1.159,-0.509], [1.168,-0.394], [1.177,-0.280], [1.187,-0.166], [1.196,-0.051], [1.205,0.063], [1.214,0.178], [1.223,0.292], [1.233,0.406], [1.281,0.599], [1.354,0.743], [1.398,0.797], [1.480,0.835], [1.620,0.831], [1.673,0.767], [1.711,0.694], [1.737,0.619], [1.750,0.543], [1.747,0.420], [1.743,0.297], [1.740,0.174], [1.737,0.051], [1.733,-0.072], [1.730,-0.195], [1.726,-0.318], [1.723,-0.441], [1.719,-0.564], [1.716,-0.687], [1.815,-0.746], [1.921,-0.786], [2.001,-0.786], [2.085,-0.786], [2.186,-0.786],  ],\n  'N' : [ [0.128,-0.786], [0.255,-0.786], [0.425,-0.786], [0.568,-0.765], [0.577,-0.710], [0.580,-0.603], [0.584,-0.497], [0.587,-0.390], [0.590,-0.283], [0.593,-0.177], [0.597,-0.070], [0.600,0.037], [0.603,0.143], [0.607,0.250], [0.610,0.357], [0.582,0.537], [0.557,0.637], [0.528,0.747], [0.471,0.804], [0.406,0.800], [0.333,0.745], [0.282,0.665], [0.234,0.577], [0.282,0.665], [0.333,0.745], [0.406,0.800], [0.471,0.804], [0.528,0.747], [0.557,0.637], [0.582,0.537], [0.610,0.357], [0.607,0.250], [0.603,0.143], [0.600,0.037], [0.597,-0.070], [0.593,-0.177], [0.590,-0.283], [0.587,-0.390], [0.584,-0.497], [0.580,-0.603], [0.577,-0.710], [0.568,-0.765], [0.577,-0.710], [0.580,-0.603], [0.584,-0.497], [0.587,-0.390], [0.590,-0.283], [0.593,-0.177], [0.597,-0.070], [0.600,0.037], [0.603,0.143], [0.607,0.250], [0.610,0.357], [0.635,0.471], [0.659,0.604], [0.712,0.723], [0.759,0.795], [0.841,0.825], [0.947,0.826], [1.010,0.775], [1.078,0.692], [1.108,0.617], [1.130,0.465], [1.141,0.300], [1.141,0.199], [1.140,0.099], [1.139,-0.001], [1.138,-0.101], [1.137,-0.201], [1.136,-0.302], [1.136,-0.402], [1.135,-0.502], [1.134,-0.602], [1.133,-0.703], [1.197,-0.754], [1.234,-0.786], [1.306,-0.786], [1.355,-0.786], [1.420,-0.786], [1.505,-0.786],  ],\n  'O' : [ [0.085,-0.786], [0.170,-0.786], [0.255,-0.786], [0.340,-0.786], [0.425,-0.786], [0.565,-0.770], [0.621,-0.775], [0.714,-0.769], [0.806,-0.733], [0.867,-0.701], [0.912,-0.644], [0.959,-0.587], [1.028,-0.429], [1.061,-0.246], [1.067,-0.145], [1.065,0.024], [1.046,0.265], [1.037,0.379], [0.986,0.518], [0.918,0.668], [0.782,0.786], [0.714,0.786], [0.649,0.760], [0.572,0.699], [0.502,0.656], [0.435,0.572], [0.380,0.494], [0.332,0.378], [0.295,0.296], [0.271,0.169], [0.255,0.064], [0.255,-0.026], [0.255,-0.106], [0.266,-0.206], [0.307,-0.371], [0.340,-0.446], [0.373,-0.519], [0.417,-0.592], [0.451,-0.668], [0.509,-0.727], [0.565,-0.770], [0.621,-0.775], [0.714,-0.769], [0.935,-0.786], [1.020,-0.786], [1.105,-0.786], [1.190,-0.786], [1.275,-0.786], [1.360,-0.786], [1.445,-0.786],  ],\n  'P' : [ [0.085,-0.786], [0.170,-0.786], [0.238,-0.786], [0.289,-0.786], [0.289,-0.641], [0.289,-0.495], [0.289,-0.349], [0.289,-0.204], [0.289,-0.058], [0.314,-0.055], [0.410,-0.085], [0.476,-0.099], [0.603,-0.071], [0.676,-0.039], [0.777,0.051], [0.800,0.075], [0.856,0.217], [0.862,0.248], [0.866,0.337], [0.862,0.388], [0.856,0.463], [0.829,0.525], [0.776,0.636], [0.749,0.673], [0.688,0.748], [0.655,0.772], [0.603,0.786], [0.561,0.786], [0.493,0.769], [0.439,0.737], [0.400,0.701], [0.354,0.651], [0.323,0.599], [0.289,0.525], [0.289,0.379], [0.289,0.234], [0.289,0.088], [0.289,-0.058], [0.289,-0.204], [0.289,-0.349], [0.289,-0.495], [0.289,-0.641], [0.289,-0.786], [0.374,-0.786], [0.459,-0.786], [0.544,-0.786], [0.629,-0.786], [0.714,-0.786], [0.799,-0.786], [0.884,-0.786], [0.969,-0.786], [1.020,-0.786], [1.105,-0.786],  ],\n  'Q' : [ [0.085,-0.786], [0.170,-0.786], [0.255,-0.786], [0.340,-0.786], [0.425,-0.786], [0.510,-0.786], [0.621,-0.786], [0.565,-0.770], [0.509,-0.727], [0.451,-0.668], [0.417,-0.592], [0.373,-0.519], [0.340,-0.446], [0.307,-0.371], [0.266,-0.206], [0.255,-0.106], [0.255,-0.026], [0.255,0.064], [0.271,0.169], [0.295,0.296], [0.332,0.378], [0.380,0.494], [0.435,0.572], [0.502,0.656], [0.572,0.710], [0.649,0.760], [0.714,0.786], [0.816,0.777], [0.918,0.668], [0.986,0.518], [1.037,0.379], [1.062,0.191], [1.065,0.024], [1.067,-0.145], [1.061,-0.246], [1.028,-0.429], [0.959,-0.587], [0.912,-0.644], [0.867,-0.701], [0.806,-0.733], [0.714,-0.769], [0.621,-0.786], [0.565,-0.770], [0.509,-0.727], [0.451,-0.668], [0.417,-0.592], [0.443,-0.531], [0.479,-0.481], [0.550,-0.430], [0.674,-0.430], [0.773,-0.472], [0.860,-0.532], [0.914,-0.595], [1.011,-0.667], [1.092,-0.732], [1.182,-0.786], [1.260,-0.786], [1.351,-0.786],  ],\n  'R' : [ [0.085,-0.786], [0.170,-0.786], [0.255,-0.786], [0.323,-0.786], [0.408,-0.786], [0.408,-0.640], [0.408,-0.494], [0.408,-0.348], [0.408,-0.201], [0.408,-0.055], [0.408,0.091], [0.408,0.237], [0.408,0.384], [0.408,0.530], [0.408,0.727], [0.480,0.744], [0.552,0.744], [0.648,0.744], [0.731,0.744], [0.816,0.744], [0.895,0.703], [0.966,0.616], [1.005,0.544], [1.026,0.494], [1.054,0.378], [1.051,0.276], [1.036,0.191], [0.998,0.132], [0.940,0.069], [0.850,0.004], [0.738,-0.016], [0.629,-0.030], [0.561,-0.034], [0.509,-0.037], [0.433,-0.032], [0.450,-0.091], [0.527,-0.191], [0.595,-0.319], [0.655,-0.400], [0.681,-0.437], [0.719,-0.487], [0.757,-0.536], [0.795,-0.585], [0.850,-0.650], [0.892,-0.710], [0.932,-0.769], [0.969,-0.803], [1.008,-0.820], [1.082,-0.829], [1.131,-0.820], [1.190,-0.786], [1.275,-0.786],  ],\n  'S' : [ [0.085,-0.786], [0.170,-0.786], [0.238,-0.761], [0.306,-0.718], [0.357,-0.676], [0.391,-0.599], [0.433,-0.497], [0.493,-0.327], [0.544,-0.191], [0.620,-0.064], [0.689,0.064], [0.790,0.154], [0.833,0.234], [0.876,0.335], [0.909,0.429], [0.919,0.520], [0.922,0.614], [0.905,0.690], [0.871,0.749], [0.825,0.777], [0.739,0.786], [0.654,0.777], [0.584,0.760], [0.549,0.734], [0.525,0.681], [0.514,0.605], [0.507,0.548], [0.509,0.463], [0.517,0.404], [0.544,0.306], [0.587,0.174], [0.689,0.064], [0.790,-0.021], [0.872,-0.190], [0.944,-0.302], [0.918,-0.440], [0.884,-0.506], [0.850,-0.574], [0.765,-0.684], [0.680,-0.748], [0.579,-0.761], [0.519,-0.766], [0.476,-0.774], [0.425,-0.774], [0.344,-0.766], [0.298,-0.718], [0.264,-0.650], [0.256,-0.583], [0.265,-0.519], [0.313,-0.465], [0.354,-0.442], [0.423,-0.429], [0.501,-0.429], [0.581,-0.442], [0.669,-0.496], [0.794,-0.616], [0.855,-0.687], [0.963,-0.756], [1.046,-0.803], [1.140,-0.837], [1.239,-0.829], [1.335,-0.786],  ],\n  'T' : [ [0.085,-0.786], [0.170,-0.786], [0.255,-0.786], [0.340,-0.786], [0.440,-0.786], [0.514,-0.786], [0.578,-0.769], [0.621,-0.750], [0.683,-0.702], [0.717,-0.659], [0.759,-0.567], [0.790,-0.489], [0.809,-0.361], [0.820,-0.229], [0.830,-0.097], [0.840,0.035], [0.851,0.168], [0.861,0.300], [0.871,0.432], [0.882,0.564], [0.882,0.697], [0.920,0.681], [0.986,0.659], [1.052,0.655], [1.123,0.659], [1.188,0.681], [1.275,0.718], [1.394,0.759], [1.275,0.718], [1.188,0.681], [1.123,0.659], [1.052,0.655], [0.986,0.659], [0.920,0.681], [0.882,0.697], [0.785,0.730], [0.731,0.747], [0.679,0.762], [0.595,0.769], [0.471,0.728], [0.340,0.652], [0.471,0.728], [0.595,0.769], [0.679,0.762], [0.731,0.747], [0.785,0.730], [0.882,0.697], [0.882,0.564], [0.871,0.432], [0.861,0.300], [0.851,0.168], [0.840,0.035], [0.830,-0.097], [0.820,-0.229], [0.809,-0.361], [0.790,-0.489], [0.579,-0.761], [0.519,-0.766], [0.476,-0.774], [0.425,-0.774], [0.344,-0.766], [0.298,-0.718], [0.264,-0.650], [0.256,-0.583], [0.265,-0.519], [0.313,-0.465], [0.354,-0.442], [0.423,-0.429], [0.501,-0.429], [0.581,-0.442], [0.669,-0.496], [0.794,-0.616], [0.855,-0.687], [0.963,-0.756], [1.046,-0.803], [1.140,-0.837], [1.239,-0.829], [1.335,-0.820], [1.419,-0.803], [1.504,-0.786], [1.589,-0.786],  ],\n  'U' : [ [0.085,-0.786], [0.170,-0.785], [0.255,-0.783], [0.340,-0.781], [0.421,-0.745], [0.502,-0.709], [0.549,-0.661], [0.521,-0.621], [0.492,-0.535], [0.487,-0.355], [0.503,-0.237], [0.518,-0.119], [0.534,-0.001], [0.549,0.117], [0.565,0.234], [0.581,0.352], [0.596,0.470], [0.612,0.588], [0.594,0.643], [0.539,0.730], [0.499,0.755], [0.403,0.729], [0.349,0.658], [0.289,0.554], [0.252,0.493], [0.195,0.440], [0.252,0.493], [0.289,0.554], [0.349,0.658], [0.403,0.729], [0.499,0.755], [0.539,0.730], [0.594,0.643], [0.612,0.588], [0.596,0.470], [0.581,0.352], [0.565,0.234], [0.549,0.117], [0.534,-0.001], [0.518,-0.119], [0.503,-0.237], [0.487,-0.355], [0.492,-0.535], [0.521,-0.621], [0.549,-0.661], [0.591,-0.715], [0.678,-0.759], [0.764,-0.770], [0.837,-0.738], [0.902,-0.687], [0.936,-0.651], [0.967,-0.594], [1.005,-0.551], [1.061,-0.494], [1.073,-0.316], [1.088,-0.195], [1.103,-0.073], [1.117,0.049], [1.132,0.170], [1.147,0.292], [1.162,0.413], [1.177,0.535], [1.192,0.657], [1.217,0.817], [1.192,0.657], [1.177,0.535], [1.162,0.413], [1.147,0.292], [1.132,0.170], [1.117,0.049], [1.103,-0.073], [1.088,-0.195], [1.073,-0.316], [1.066,-0.418], [1.061,-0.494], [1.073,-0.609], [1.096,-0.659], [1.126,-0.710], [1.202,-0.752], [1.275,-0.761], [1.357,-0.786], [1.442,-0.786], [1.530,-0.786],  ],\n  'V' : [ [0.085,-0.786], [0.170,-0.786], [0.255,-0.786], [0.340,-0.778], [0.425,-0.769], [0.510,-0.744], [0.595,-0.718], [0.646,-0.659], [0.682,-0.590], [0.717,-0.650], [0.751,-0.689], [0.790,-0.735], [0.867,-0.786], [0.969,-0.761], [1.022,-0.716], [1.085,-0.571], [1.118,-0.425], [1.135,-0.300], [1.152,-0.175], [1.169,-0.049], [1.186,0.076], [1.202,0.202], [1.219,0.327], [1.236,0.452], [1.253,0.578], [1.270,0.703], [1.287,0.786], [1.343,0.744], [1.420,0.688], [1.486,0.674], [1.543,0.699], [1.615,0.735], [1.543,0.699], [1.486,0.674], [1.420,0.688], [1.343,0.744], [1.287,0.786], [1.270,0.703], [1.253,0.578], [1.236,0.452], [1.219,0.327], [1.202,0.202], [1.186,0.076], [1.169,-0.049], [1.152,-0.175], [1.135,-0.300], [1.118,-0.425], [1.085,-0.571], [1.022,-0.716], [0.969,-0.761], [0.867,-0.786], [0.790,-0.735], [0.751,-0.689], [0.717,-0.650], [0.682,-0.590], [0.642,-0.426], [0.642,-0.262], [0.642,-0.097], [0.642,0.067], [0.642,0.231], [0.642,0.395], [0.626,0.588], [0.592,0.664], [0.552,0.735], [0.505,0.786], [0.459,0.760], [0.414,0.718], [0.371,0.667], [0.323,0.621], [0.255,0.542], [0.323,0.621], [0.371,0.667], [0.414,0.718], [0.459,0.760], [0.505,0.786], [0.552,0.735], [0.592,0.664], [0.626,0.588], [0.642,0.395], [0.642,0.231], [0.642,0.067], [0.642,-0.097], [0.642,-0.262], [0.642,-0.426], [0.682,-0.590], [0.717,-0.650], [0.751,-0.689], [0.790,-0.735], [0.867,-0.786], [0.969,-0.761], [1.022,-0.716], [1.105,-0.752], [1.190,-0.769], [1.275,-0.786], [1.360,-0.786], [1.445,-0.786], [1.530,-0.786], [1.615,-0.786], [1.700,-0.786], [1.785,-0.786],  ],\n  'W' : [ [0.085,-0.786], [0.170,-0.786], [0.255,-0.786], [0.340,-0.786], [0.425,-0.786], [0.510,-0.786], [0.552,-0.739], [0.516,-0.647], [0.487,-0.569], [0.458,-0.430], [0.454,-0.354], [0.450,-0.252], [0.456,-0.096], [0.463,0.061], [0.469,0.218], [0.475,0.374], [0.481,0.531], [0.478,0.660], [0.459,0.724], [0.413,0.803], [0.357,0.775], [0.306,0.659], [0.238,0.531], [0.306,0.659], [0.357,0.775], [0.413,0.803], [0.459,0.724], [0.478,0.660], [0.481,0.531], [0.475,0.374], [0.469,0.218], [0.463,0.061], [0.456,-0.096], [0.450,-0.252], [0.454,-0.354], [0.458,-0.430], [0.487,-0.569], [0.516,-0.647], [0.552,-0.739], [0.599,-0.760], [0.652,-0.766], [0.726,-0.753], [0.788,-0.724], [0.856,-0.681], [0.912,-0.581], [0.949,-0.494], [0.987,-0.275], [0.990,-0.164], [0.993,-0.052], [0.996,0.060], [0.999,0.172], [1.002,0.283], [1.005,0.395], [1.008,0.507], [1.011,0.619], [1.014,0.730], [1.018,0.786], [1.014,0.730], [1.011,0.619], [1.008,0.507], [1.005,0.395], [1.002,0.283], [0.999,0.172], [0.996,0.060], [0.993,-0.052], [0.990,-0.164], [0.987,-0.275], [0.990,-0.543], [1.025,-0.644], [1.080,-0.695], [1.158,-0.761], [1.249,-0.761], [1.335,-0.718], [1.401,-0.672], [1.437,-0.622], [1.446,-0.474], [1.455,-0.326], [1.464,-0.179], [1.473,-0.031], [1.482,0.117], [1.491,0.265], [1.500,0.413], [1.509,0.561], [1.518,0.708], [1.527,0.786], [1.518,0.708], [1.509,0.561], [1.500,0.413], [1.491,0.265], [1.482,0.117], [1.473,-0.031], [1.464,-0.179], [1.455,-0.326], [1.446,-0.474], [1.437,-0.622], [1.514,-0.678], [1.602,-0.718], [1.688,-0.752], [1.774,-0.786], [1.861,-0.786], [1.945,-0.786],  ],\n  'X' : [ [0.085,-0.786], [0.170,-0.786], [0.255,-0.786], [0.321,-0.682], [0.388,-0.578], [0.454,-0.473], [0.520,-0.369], [0.586,-0.264], [0.653,-0.160], [0.719,-0.055], [0.785,0.049], [0.852,0.154], [0.918,0.258], [0.984,0.363], [1.050,0.467], [1.117,0.572], [1.183,0.676], [1.249,0.781], [1.183,0.676], [1.117,0.572], [1.050,0.467], [0.984,0.363], [0.918,0.258], [0.852,0.154], [0.781,0.144], [0.761,0.265], [0.741,0.387], [0.721,0.508], [0.701,0.629], [0.637,0.768], [0.512,0.730], [0.425,0.642], [0.370,0.577], [0.308,0.475], [0.370,0.577], [0.425,0.642], [0.512,0.730], [0.637,0.768], [0.701,0.629], [0.721,0.508], [0.741,0.387], [0.761,0.265], [0.781,0.144], [0.801,0.023], [0.821,-0.099], [0.841,-0.220], [0.861,-0.341], [0.881,-0.463], [0.901,-0.584], [0.947,-0.685], [0.984,-0.782], [1.037,-0.786], [1.036,-0.786], [1.117,-0.786], [1.214,-0.786], [1.275,-0.786], [1.360,-0.786], [1.445,-0.786],  ],\n  'Y' : [ [0.085,-0.786], [0.170,-0.786], [0.255,-0.786], [0.340,-0.786], [0.365,-0.701], [0.387,-0.581], [0.375,-0.466], [0.383,-0.340], [0.404,-0.134], [0.426,0.071], [0.447,0.276], [0.468,0.481], [0.473,0.634], [0.445,0.749], [0.410,0.786], [0.340,0.777], [0.255,0.752], [0.340,0.777], [0.410,0.786], [0.445,0.749], [0.473,0.634], [0.468,0.481], [0.447,0.276], [0.426,0.071], [0.404,-0.134], [0.383,-0.340], [0.375,-0.466], [0.387,-0.581], [0.423,-0.684], [0.467,-0.750], [0.521,-0.756], [0.573,-0.733], [0.628,-0.686], [0.685,-0.624], [0.731,-0.548], [0.790,-0.489], [0.866,-0.430], [0.886,-0.303], [0.906,-0.176], [0.927,-0.050], [0.947,0.077], [0.968,0.204], [0.988,0.331], [1.009,0.458], [1.029,0.585], [1.050,0.701], [1.070,0.786], [1.050,0.701], [1.029,0.585], [1.009,0.458], [0.988,0.331], [0.968,0.204], [0.947,0.077], [0.927,-0.050], [0.906,-0.176], [0.886,-0.303], [0.866,-0.430], [0.847,-0.571], [0.829,-0.712], [0.810,-0.852], [0.792,-0.993], [0.773,-1.134], [0.755,-1.275], [0.724,-1.403], [0.679,-1.484], [0.620,-1.509], [0.562,-1.522], [0.476,-1.534], [0.408,-1.484], [0.376,-1.419], [0.367,-1.306], [0.392,-1.217], [0.442,-1.109], [0.510,-0.999], [0.570,-0.891], [0.626,-0.833], [0.714,-0.786], [0.782,-0.786], [0.833,-0.786], [0.929,-0.786], [0.986,-0.786], [1.054,-0.786], [1.139,-0.786], [1.224,-0.786],  ],\n  'Z' : [ [0.085,-0.786], [0.170,-0.786], [0.245,-0.786], [0.323,-0.701], [0.395,-0.577], [0.488,-0.462], [0.626,-0.240], [0.699,-0.091], [0.750,0.051], [0.784,0.192], [0.797,0.370], [0.762,0.534], [0.748,0.571], [0.701,0.657], [0.628,0.747], [0.561,0.752], [0.446,0.715], [0.342,0.625], [0.314,0.592], [0.255,0.530], [0.314,0.592], [0.342,0.625], [0.446,0.715], [0.561,0.752], [0.628,0.747], [0.701,0.657], [0.748,0.571], [0.762,0.534], [0.797,0.370], [0.784,0.192], [0.750,0.051], [0.699,-0.091], [0.626,-0.240], [0.488,-0.462], [0.395,-0.577], [0.323,-0.701], [0.384,-0.684], [0.417,-0.665], [0.532,-0.661], [0.562,-0.686], [0.666,-0.950], [0.652,-1.118], [0.645,-1.167], [0.586,-1.385], [0.570,-1.429], [0.499,-1.570], [0.379,-1.580], [0.305,-1.560], [0.274,-1.523], [0.251,-1.475], [0.234,-1.358], [0.247,-1.211], [0.311,-1.087], [0.375,-0.970], [0.442,-0.871], [0.502,-0.799], [0.595,-0.761], [0.646,-0.769], [0.714,-0.786], [0.792,-0.786], [0.850,-0.786], [0.935,-0.786], [1.020,-0.786],  ],\n  'a' : [ [0.085,-0.718], [0.146,-0.557], [0.146,-0.500], [0.153,-0.455], [0.180,-0.395], [0.204,-0.353], [0.219,-0.319], [0.246,-0.276], [0.272,-0.234], [0.298,-0.191], [0.333,-0.157], [0.379,-0.132], [0.432,-0.098], [0.527,-0.055], [0.629,-0.036], [0.679,-0.036], [0.697,-0.149], [0.689,-0.293], [0.680,-0.404], [0.663,-0.489], [0.654,-0.592], [0.646,-0.639], [0.561,-0.718], [0.501,-0.773], [0.425,-0.801], [0.357,-0.820], [0.279,-0.801], [0.230,-0.754], [0.213,-0.731], [0.184,-0.681], [0.151,-0.616], [0.146,-0.557], [0.146,-0.500], [0.153,-0.455], [0.180,-0.395], [0.204,-0.353], [0.219,-0.319], [0.246,-0.276], [0.272,-0.234], [0.298,-0.191], [0.333,-0.157], [0.379,-0.132], [0.432,-0.098], [0.527,-0.055], [0.629,-0.036], [0.679,-0.036], [0.697,-0.149], [0.689,-0.293], [0.680,-0.404], [0.663,-0.489], [0.654,-0.592], [0.646,-0.639], [0.678,-0.744], [0.729,-0.801], [0.781,-0.786], [0.850,-0.786], [0.935,-0.786],  ],\n  'b' : [ [0.043,-0.786], [0.085,-0.761], [0.128,-0.727], [0.170,-0.693], [0.199,-0.667], [0.227,-0.625], [0.256,-0.574], [0.285,-0.497], [0.313,-0.429], [0.342,-0.361], [0.371,-0.268], [0.399,-0.191], [0.428,-0.106], [0.457,-0.004], [0.485,0.064], [0.514,0.140], [0.543,0.241], [0.571,0.320], [0.587,0.399], [0.588,0.510], [0.572,0.602], [0.529,0.674], [0.473,0.743], [0.432,0.750], [0.397,0.739], [0.367,0.724], [0.343,0.686], [0.323,0.627], [0.318,0.497], [0.316,0.368], [0.315,0.238], [0.313,0.108], [0.316,-0.022], [0.318,-0.152], [0.320,-0.282], [0.321,-0.412], [0.323,-0.542], [0.333,-0.672], [0.352,-0.718], [0.381,-0.771], [0.412,-0.786], [0.463,-0.786], [0.500,-0.782], [0.537,-0.764], [0.564,-0.746], [0.590,-0.688], [0.604,-0.634], [0.622,-0.573], [0.636,-0.514], [0.655,-0.446], [0.662,-0.377], [0.670,-0.293], [0.672,-0.200], [0.674,-0.112], [0.743,-0.140], [0.790,-0.157], [0.842,-0.149],  ],\n  'c' : [ [0.034,-0.769], [0.051,-0.735], [0.076,-0.676], [0.097,-0.599], [0.113,-0.565], [0.136,-0.514], [0.163,-0.446], [0.210,-0.344], [0.246,-0.268], [0.272,-0.222], [0.296,-0.191], [0.329,-0.152], [0.360,-0.123], [0.396,-0.094], [0.442,-0.081], [0.485,-0.072], [0.529,-0.064], [0.595,-0.064], [0.646,-0.106], [0.680,-0.191], [0.646,-0.106], [0.595,-0.064], [0.529,-0.064], [0.485,-0.072], [0.442,-0.081], [0.396,-0.094], [0.360,-0.123], [0.329,-0.152], [0.296,-0.191], [0.272,-0.222], [0.246,-0.268], [0.199,-0.407], [0.199,-0.497], [0.202,-0.565], [0.220,-0.657], [0.246,-0.708], [0.263,-0.731], [0.279,-0.754], [0.306,-0.795], [0.355,-0.829], [0.446,-0.846], [0.561,-0.829], [0.637,-0.820], [0.697,-0.812], [0.765,-0.803], [0.850,-0.795], [0.935,-0.786],  ],\n  'd' : [ [0.085,-0.786], [0.136,-0.769], [0.181,-0.701], [0.238,-0.616], [0.279,-0.557], [0.282,-0.500], [0.289,-0.455], [0.298,-0.395], [0.313,-0.319], [0.333,-0.242], [0.357,-0.191], [0.425,-0.123], [0.469,-0.089], [0.515,-0.072], [0.629,-0.043], [0.697,-0.036], [0.782,-0.036], [0.697,-0.036], [0.629,-0.043], [0.515,-0.072], [0.469,-0.089], [0.425,-0.123], [0.357,-0.191], [0.333,-0.242], [0.313,-0.319], [0.298,-0.395], [0.289,-0.455], [0.282,-0.500], [0.279,-0.557], [0.287,-0.616], [0.320,-0.681], [0.366,-0.754], [0.415,-0.801], [0.459,-0.810], [0.510,-0.808], [0.561,-0.801], [0.637,-0.773], [0.697,-0.718], [0.799,-0.650], [0.867,-0.639], [0.867,-0.592], [0.867,-0.489], [0.867,-0.404], [0.867,-0.293], [0.867,-0.149], [0.867,0.064], [0.867,0.234], [0.867,0.404], [0.867,0.574], [0.867,0.744], [0.867,0.574], [0.867,0.404], [0.867,0.234], [0.867,0.064], [0.867,-0.149], [0.867,-0.293], [0.867,-0.404], [0.867,-0.489], [0.867,-0.592], [0.867,-0.639], [0.875,-0.701], [0.899,-0.744], [0.950,-0.801], [1.002,-0.824], [1.068,-0.815], [1.122,-0.812], [1.190,-0.786],  ],\n  'e' : [ [0.085,-0.786], [0.170,-0.786], [0.290,-0.744], [0.378,-0.693], [0.459,-0.659], [0.503,-0.616], [0.537,-0.548], [0.561,-0.497], [0.571,-0.446], [0.576,-0.404], [0.579,-0.336], [0.576,-0.276], [0.568,-0.229], [0.559,-0.191], [0.551,-0.160], [0.534,-0.106], [0.517,-0.072], [0.486,-0.047], [0.444,-0.030], [0.401,-0.021], [0.359,-0.030], [0.316,-0.047], [0.286,-0.072], [0.269,-0.106], [0.252,-0.160], [0.243,-0.191], [0.235,-0.229], [0.226,-0.276], [0.223,-0.336], [0.226,-0.404], [0.231,-0.446], [0.241,-0.497], [0.265,-0.548], [0.299,-0.616], [0.342,-0.659], [0.422,-0.701], [0.510,-0.744], [0.605,-0.761], [0.680,-0.786], [0.765,-0.786], [0.850,-0.786],  ],\n  'f' : [ [0.043,-0.786], [0.076,-0.779], [0.107,-0.773], [0.145,-0.744], [0.192,-0.710], [0.225,-0.684], [0.264,-0.667], [0.321,-0.642], [0.374,-0.592], [0.425,-0.548], [0.451,-0.446], [0.468,-0.361], [0.485,-0.276], [0.501,-0.191], [0.518,-0.106], [0.535,-0.038], [0.552,0.047], [0.565,0.131], [0.582,0.212], [0.605,0.299], [0.619,0.402], [0.632,0.506], [0.614,0.607], [0.578,0.667], [0.535,0.680], [0.485,0.684], [0.425,0.671], [0.374,0.652], [0.329,0.619], [0.298,0.531], [0.294,0.428], [0.292,0.299], [0.294,0.169], [0.296,-0.000], [0.296,-0.172], [0.296,-0.276], [0.298,-0.385], [0.297,-0.489], [0.296,-0.598], [0.295,-0.710], [0.295,-0.829], [0.292,-0.931], [0.289,-1.041], [0.286,-1.126], [0.281,-1.254], [0.281,-1.356], [0.279,-1.466], [0.272,-1.602], [0.323,-1.602], [0.374,-1.601], [0.423,-1.594], [0.474,-1.551], [0.510,-1.509], [0.542,-1.466], [0.550,-1.381], [0.542,-1.296], [0.533,-1.211], [0.522,-1.126], [0.508,-1.041], [0.491,-0.956], [0.468,-0.888], [0.442,-0.846], [0.383,-0.752], [0.420,-0.769], [0.468,-0.803], [0.510,-0.829], [0.567,-0.812], [0.639,-0.803], [0.723,-0.795], [0.807,-0.786], [0.892,-0.786],  ],\n  'g' : [ [0.033,-0.778], [0.067,-0.761], [0.117,-0.727], [0.145,-0.706], [0.204,-0.662], [0.238,-0.633], [0.284,-0.592], [0.317,-0.557], [0.350,-0.506], [0.384,-0.458], [0.400,-0.430], [0.434,-0.384], [0.467,-0.337], [0.500,-0.291], [0.527,-0.251], [0.559,-0.217], [0.601,-0.175], [0.633,-0.149], [0.678,-0.132], [0.729,-0.115], [0.780,-0.098], [0.831,-0.086], [0.883,-0.089], [0.901,-0.123], [0.898,-0.191], [0.894,-0.259], [0.891,-0.327], [0.887,-0.395], [0.884,-0.463], [0.881,-0.531], [0.877,-0.599], [0.874,-0.667], [0.870,-0.735], [0.816,-0.761], [0.763,-0.786], [0.678,-0.812], [0.610,-0.824], [0.527,-0.812], [0.457,-0.786], [0.400,-0.754], [0.355,-0.676], [0.334,-0.592], [0.317,-0.557], [0.350,-0.506], [0.384,-0.458], [0.400,-0.430], [0.434,-0.384], [0.467,-0.337], [0.500,-0.291], [0.527,-0.251], [0.559,-0.217], [0.601,-0.175], [0.633,-0.149], [0.678,-0.132], [0.729,-0.115], [0.780,-0.098], [0.831,-0.086], [0.883,-0.089], [0.901,-0.123], [0.898,-0.191], [0.894,-0.259], [0.891,-0.327], [0.887,-0.395], [0.884,-0.463], [0.881,-0.531], [0.877,-0.599], [0.874,-0.667], [0.870,-0.735], [0.867,-0.803], [0.864,-0.871], [0.860,-0.939], [0.857,-1.007], [0.853,-1.075], [0.850,-1.143], [0.847,-1.211], [0.843,-1.279], [0.840,-1.347], [0.836,-1.415], [0.833,-1.484], [0.830,-1.551], [0.826,-1.619], [0.765,-1.615], [0.697,-1.608], [0.646,-1.598], [0.595,-1.568], [0.544,-1.526], [0.493,-1.466], [0.459,-1.398], [0.442,-1.347], [0.425,-1.279], [0.433,-1.228], [0.459,-1.186], [0.500,-1.125], [0.530,-1.084], [0.567,-1.041], [0.627,-0.990], [0.695,-0.948], [0.746,-0.914], [0.800,-0.871], [0.873,-0.829], [0.949,-0.820], [1.037,-0.812], [1.105,-0.803], [1.190,-0.786],  ],\n  'h' : [ [0.046,-0.710], [0.072,-0.666], [0.110,-0.611], [0.134,-0.564], [0.169,-0.515], [0.197,-0.467], [0.221,-0.419], [0.250,-0.374], [0.277,-0.327], [0.303,-0.276], [0.326,-0.242], [0.349,-0.200], [0.383,-0.155], [0.432,-0.083], [0.483,-0.038], [0.508,0.013], [0.549,0.064], [0.575,0.131], [0.602,0.202], [0.617,0.249], [0.641,0.297], [0.651,0.370], [0.660,0.438], [0.662,0.523], [0.651,0.616], [0.641,0.693], [0.599,0.742], [0.542,0.769], [0.483,0.769], [0.406,0.738], [0.355,0.702], [0.321,0.636], [0.295,0.511], [0.295,0.425], [0.295,0.339], [0.295,0.227], [0.295,0.114], [0.295,0.001], [0.295,-0.111], [0.295,-0.224], [0.295,-0.336], [0.295,-0.449], [0.295,-0.561], [0.295,-0.674], [0.295,-0.786], [0.299,-0.674], [0.302,-0.561], [0.329,-0.514], [0.368,-0.447], [0.392,-0.386], [0.420,-0.307], [0.447,-0.255], [0.475,-0.185], [0.507,-0.149], [0.564,-0.132], [0.625,-0.123], [0.678,-0.132], [0.743,-0.166], [0.767,-0.229], [0.760,-0.307], [0.755,-0.375], [0.748,-0.453], [0.748,-0.533], [0.761,-0.623], [0.786,-0.717], [0.845,-0.766], [0.920,-0.794], [1.005,-0.786],  ],\n  'i' : [ [0.085,-0.791], [0.173,-0.803], [0.256,-0.811], [0.289,-0.765], [0.316,-0.712], [0.331,-0.635], [0.333,-0.550], [0.335,-0.508], [0.341,-0.431], [0.346,-0.372], [0.352,-0.287], [0.352,-0.202], [0.354,-0.143], [0.357,-0.032], [0.357,-0.143], [0.358,-0.202], [0.356,-0.287], [0.360,-0.372], [0.364,-0.432], [0.368,-0.508], [0.369,-0.551], [0.370,-0.636], [0.384,-0.712], [0.409,-0.765], [0.441,-0.811], [0.518,-0.829], [0.585,-0.795], [0.677,-0.786],  ],\n  'j' : [ [0.042,-0.761], [0.098,-0.734], [0.131,-0.693], [0.159,-0.658], [0.188,-0.613], [0.199,-0.589], [0.225,-0.548], [0.250,-0.516], [0.272,-0.468], [0.295,-0.420], [0.317,-0.360], [0.334,-0.299], [0.343,-0.264], [0.360,-0.195], [0.373,-0.100], [0.383,-0.049], [0.383,-0.099], [0.383,-0.167], [0.383,-0.276], [0.383,-0.395], [0.383,-0.513], [0.383,-0.632], [0.383,-0.751], [0.383,-0.869], [0.383,-0.988], [0.383,-1.107], [0.383,-1.225], [0.383,-1.344], [0.368,-1.405], [0.349,-1.466], [0.326,-1.514], [0.296,-1.530], [0.255,-1.534], [0.218,-1.518], [0.196,-1.496], [0.172,-1.406], [0.162,-1.296], [0.159,-1.211], [0.173,-1.126], [0.196,-1.053], [0.218,-1.005], [0.241,-0.957], [0.263,-0.909], [0.286,-0.861], [0.301,-0.837], [0.328,-0.808], [0.356,-0.780], [0.384,-0.753], [0.408,-0.742], [0.439,-0.734], [0.473,-0.733], [0.509,-0.750], [0.552,-0.767], [0.595,-0.786],  ],\n  'k' : [ [0.043,-0.744], [0.076,-0.701], [0.106,-0.659], [0.136,-0.616], [0.170,-0.548], [0.206,-0.500], [0.239,-0.453], [0.272,-0.407], [0.298,-0.384], [0.337,-0.305], [0.384,-0.226], [0.431,-0.147], [0.479,-0.069], [0.526,0.010], [0.555,0.056], [0.584,0.103], [0.605,0.149], [0.622,0.195], [0.659,0.261], [0.677,0.309], [0.695,0.356], [0.713,0.404], [0.732,0.451], [0.750,0.499], [0.765,0.565], [0.771,0.635], [0.737,0.676], [0.695,0.684], [0.654,0.684], [0.603,0.684], [0.552,0.676], [0.501,0.659], [0.451,0.612], [0.400,0.562], [0.357,0.466], [0.340,0.369], [0.340,0.273], [0.340,0.176], [0.340,0.079], [0.340,0.010], [0.340,-0.066], [0.340,-0.143], [0.340,-0.219], [0.340,-0.296], [0.340,-0.372], [0.340,-0.449], [0.340,-0.525], [0.340,-0.601], [0.340,-0.678], [0.340,-0.754], [0.340,-0.847], [0.340,-0.754], [0.340,-0.678], [0.340,-0.601], [0.340,-0.525], [0.340,-0.449], [0.354,-0.372], [0.397,-0.361], [0.465,-0.353], [0.533,-0.344], [0.618,-0.327], [0.686,-0.302], [0.754,-0.276], [0.797,-0.234], [0.822,-0.198], [0.812,-0.140], [0.788,-0.089], [0.758,-0.059], [0.720,-0.032], [0.652,-0.055], [0.601,-0.106], [0.516,-0.191], [0.465,-0.276], [0.431,-0.336], [0.383,-0.378], [0.414,-0.421], [0.455,-0.453], [0.489,-0.500], [0.522,-0.546], [0.554,-0.592], [0.577,-0.639], [0.591,-0.662], [0.622,-0.708], [0.655,-0.754], [0.688,-0.801], [0.729,-0.846], [0.771,-0.871], [0.814,-0.863], [0.856,-0.846], [0.899,-0.829], [0.941,-0.812], [0.971,-0.803], [1.011,-0.786], [1.065,-0.803], [1.105,-0.786],  ],\n  'l' : [ [0.060,-0.744], [0.097,-0.694], [0.124,-0.646], [0.145,-0.616], [0.171,-0.574], [0.194,-0.526], [0.224,-0.477], [0.255,-0.429], [0.289,-0.381], [0.306,-0.332], [0.340,-0.286], [0.377,-0.238], [0.403,-0.191], [0.435,-0.115], [0.459,-0.055], [0.483,0.013], [0.501,0.056], [0.510,0.095], [0.524,0.140], [0.534,0.190], [0.548,0.237], [0.554,0.284], [0.566,0.351], [0.578,0.404], [0.585,0.480], [0.594,0.566], [0.595,0.613], [0.585,0.682], [0.550,0.734], [0.515,0.771], [0.480,0.782], [0.451,0.786], [0.400,0.781], [0.347,0.767], [0.324,0.719], [0.315,0.672], [0.308,0.632], [0.304,0.574], [0.304,0.488], [0.304,0.401], [0.304,0.314], [0.304,0.227], [0.304,0.141], [0.304,0.054], [0.304,-0.033], [0.304,-0.119], [0.303,-0.206], [0.303,-0.293], [0.303,-0.380], [0.303,-0.466], [0.303,-0.553], [0.303,-0.640], [0.311,-0.702], [0.343,-0.752], [0.383,-0.778], [0.434,-0.784], [0.483,-0.807], [0.538,-0.821], [0.603,-0.803], [0.677,-0.795], [0.765,-0.786], [0.850,-0.786], [0.935,-0.786],  ],\n  'm' : [ [0.066,-0.744], [0.100,-0.708], [0.116,-0.685], [0.150,-0.639], [0.166,-0.615], [0.200,-0.569], [0.216,-0.546], [0.233,-0.523], [0.250,-0.500], [0.270,-0.463], [0.295,-0.412], [0.316,-0.384], [0.324,-0.361], [0.334,-0.337], [0.349,-0.314], [0.372,-0.276], [0.389,-0.251], [0.416,-0.222], [0.449,-0.175], [0.466,-0.152], [0.482,-0.129], [0.499,-0.106], [0.527,-0.081], [0.567,-0.069], [0.603,-0.055], [0.649,-0.059], [0.665,-0.083], [0.669,-0.103], [0.674,-0.154], [0.679,-0.205], [0.685,-0.256], [0.690,-0.307], [0.695,-0.358], [0.686,-0.402], [0.676,-0.447], [0.666,-0.491], [0.657,-0.535], [0.647,-0.579], [0.637,-0.624], [0.628,-0.668], [0.618,-0.712], [0.608,-0.756], [0.599,-0.801], [0.608,-0.756], [0.618,-0.712], [0.628,-0.668], [0.637,-0.624], [0.647,-0.579], [0.657,-0.535], [0.666,-0.491], [0.676,-0.447], [0.686,-0.402], [0.695,-0.358], [0.715,-0.314], [0.743,-0.276], [0.765,-0.245], [0.782,-0.222], [0.798,-0.198], [0.815,-0.175], [0.832,-0.152], [0.848,-0.129], [0.882,-0.089], [0.916,-0.064], [0.966,-0.044], [1.015,-0.036], [1.031,-0.059], [1.048,-0.083], [1.065,-0.106], [1.075,-0.143], [1.085,-0.180], [1.095,-0.217], [1.105,-0.254], [1.114,-0.291], [1.103,-0.340], [1.091,-0.388], [1.080,-0.437], [1.068,-0.486], [1.056,-0.534], [1.045,-0.583], [1.033,-0.632], [1.021,-0.680], [1.010,-0.729], [1.009,-0.777], [1.010,-0.729], [1.021,-0.680], [1.033,-0.632], [1.045,-0.583], [1.056,-0.534], [1.068,-0.486], [1.080,-0.437], [1.091,-0.388], [1.103,-0.340], [1.114,-0.291], [1.131,-0.268], [1.156,-0.234], [1.181,-0.198], [1.198,-0.175], [1.215,-0.140], [1.248,-0.106], [1.264,-0.083], [1.290,-0.059], [1.358,-0.038], [1.431,-0.059], [1.464,-0.106], [1.480,-0.129], [1.497,-0.175], [1.489,-0.224], [1.480,-0.272], [1.472,-0.320], [1.464,-0.369], [1.455,-0.417], [1.447,-0.466], [1.439,-0.514], [1.431,-0.562], [1.422,-0.611], [1.414,-0.659], [1.414,-0.708], [1.447,-0.754], [1.464,-0.777], [1.496,-0.803], [1.580,-0.812], [1.630,-0.812], [1.677,-0.799], [1.730,-0.795], [1.785,-0.786],  ],\n  'n' : [ [0.033,-0.786], [0.067,-0.786], [0.085,-0.744], [0.102,-0.701], [0.119,-0.625], [0.145,-0.531], [0.170,-0.446], [0.196,-0.361], [0.221,-0.234], [0.255,-0.106], [0.292,0.010], [0.332,0.064], [0.374,0.038], [0.400,-0.013], [0.414,-0.059], [0.423,-0.106], [0.431,-0.149], [0.435,-0.198], [0.430,-0.254], [0.430,-0.310], [0.430,-0.365], [0.430,-0.421], [0.430,-0.476], [0.430,-0.532], [0.430,-0.588], [0.430,-0.643], [0.430,-0.699], [0.430,-0.754], [0.430,-0.699], [0.430,-0.643], [0.430,-0.588], [0.430,-0.532], [0.430,-0.476], [0.430,-0.421], [0.430,-0.365], [0.430,-0.310], [0.430,-0.254], [0.459,-0.242], [0.485,-0.217], [0.508,-0.198], [0.525,-0.175], [0.542,-0.152], [0.558,-0.129], [0.587,-0.098], [0.620,-0.059], [0.656,-0.013], [0.691,0.010], [0.741,0.010], [0.774,-0.013], [0.791,-0.036], [0.808,-0.059], [0.816,-0.106], [0.825,-0.149], [0.825,-0.234], [0.825,-0.293], [0.825,-0.361], [0.825,-0.421], [0.825,-0.480], [0.825,-0.523], [0.825,-0.574], [0.825,-0.616], [0.825,-0.662], [0.825,-0.708], [0.833,-0.761], [0.865,-0.812], [0.924,-0.820], [0.967,-0.812], [1.024,-0.786],  ],\n  'o' : [ [0.085,-0.727], [0.134,-0.659], [0.162,-0.608], [0.187,-0.557], [0.204,-0.514], [0.214,-0.480], [0.238,-0.430], [0.256,-0.395], [0.267,-0.361], [0.289,-0.319], [0.314,-0.268], [0.331,-0.245], [0.346,-0.222], [0.372,-0.183], [0.397,-0.152], [0.414,-0.129], [0.431,-0.106], [0.447,-0.083], [0.482,-0.072], [0.525,-0.055], [0.584,-0.055], [0.627,-0.072], [0.647,-0.083], [0.669,-0.106], [0.685,-0.123], [0.697,-0.149], [0.714,-0.175], [0.720,-0.224], [0.719,-0.272], [0.724,-0.320], [0.723,-0.368], [0.716,-0.417], [0.711,-0.465], [0.702,-0.513], [0.689,-0.562], [0.671,-0.610], [0.654,-0.658], [0.643,-0.701], [0.620,-0.752], [0.595,-0.795], [0.552,-0.829], [0.510,-0.846], [0.459,-0.854], [0.397,-0.842], [0.372,-0.820], [0.347,-0.791], [0.314,-0.754], [0.298,-0.731], [0.281,-0.708], [0.264,-0.685], [0.253,-0.659], [0.236,-0.616], [0.219,-0.574], [0.207,-0.531], [0.214,-0.480], [0.238,-0.430], [0.256,-0.395], [0.267,-0.361], [0.289,-0.319], [0.314,-0.268], [0.331,-0.245], [0.346,-0.222], [0.372,-0.183], [0.397,-0.152], [0.414,-0.129], [0.431,-0.106], [0.447,-0.083], [0.482,-0.072], [0.524,-0.106], [0.544,-0.149], [0.570,-0.183], [0.595,-0.200], [0.629,-0.217], [0.663,-0.225], [0.697,-0.225], [0.731,-0.225], [0.765,-0.225], [0.799,-0.221], [0.833,-0.217], [0.867,-0.208], [0.901,-0.191], [0.935,-0.174], [0.969,-0.149],  ],\n  'p' : [ [0.069,-0.801], [0.130,-0.767], [0.181,-0.693], [0.211,-0.610], [0.232,-0.524], [0.253,-0.438], [0.274,-0.352], [0.291,-0.300], [0.316,-0.257], [0.337,-0.179], [0.364,-0.136], [0.372,-0.215], [0.370,-0.323], [0.368,-0.431], [0.367,-0.539], [0.365,-0.646], [0.363,-0.754], [0.361,-0.862], [0.359,-0.970], [0.357,-1.078], [0.355,-1.186], [0.353,-1.294], [0.352,-1.402], [0.350,-1.510], [0.352,-1.402], [0.353,-1.294], [0.355,-1.186], [0.357,-1.078], [0.359,-0.970], [0.361,-0.862], [0.363,-0.754], [0.365,-0.646], [0.367,-0.539], [0.368,-0.431], [0.370,-0.323], [0.372,-0.215], [0.374,-0.107], [0.364,-0.136], [0.407,-0.091], [0.438,-0.048], [0.478,-0.020], [0.510,-0.002], [0.534,0.007], [0.564,0.017], [0.610,0.010], [0.662,-0.011], [0.709,-0.077], [0.722,-0.104], [0.753,-0.170], [0.771,-0.282], [0.771,-0.357], [0.774,-0.469], [0.760,-0.538], [0.748,-0.616], [0.726,-0.654], [0.691,-0.694], [0.651,-0.714], [0.589,-0.754], [0.531,-0.747], [0.476,-0.744], [0.425,-0.727], [0.476,-0.744], [0.531,-0.747], [0.589,-0.754], [0.625,-0.748], [0.678,-0.763], [0.763,-0.777], [0.814,-0.783], [0.878,-0.803], [0.935,-0.803], [0.996,-0.795], [1.054,-0.786],  ],\n  'q' : [ [0.033,-0.778], [0.067,-0.761], [0.117,-0.727], [0.145,-0.706], [0.183,-0.662], [0.216,-0.615], [0.233,-0.592], [0.275,-0.548], [0.299,-0.506], [0.333,-0.458], [0.349,-0.430], [0.383,-0.384], [0.416,-0.337], [0.449,-0.291], [0.476,-0.251], [0.508,-0.217], [0.550,-0.175], [0.582,-0.149], [0.627,-0.132], [0.678,-0.115], [0.729,-0.098], [0.780,-0.086], [0.832,-0.089], [0.850,-0.123], [0.847,-0.191], [0.843,-0.259], [0.840,-0.327], [0.836,-0.395], [0.833,-0.463], [0.830,-0.531], [0.826,-0.599], [0.823,-0.667], [0.819,-0.735], [0.765,-0.761], [0.712,-0.786], [0.627,-0.812], [0.559,-0.824], [0.476,-0.812], [0.406,-0.786], [0.349,-0.754], [0.304,-0.676], [0.283,-0.592], [0.299,-0.506], [0.333,-0.458], [0.349,-0.430], [0.383,-0.384], [0.416,-0.337], [0.449,-0.291], [0.476,-0.251], [0.508,-0.217], [0.550,-0.175], [0.582,-0.149], [0.627,-0.132], [0.678,-0.115], [0.729,-0.098], [0.780,-0.086], [0.832,-0.089], [0.850,-0.123], [0.847,-0.191], [0.843,-0.259], [0.840,-0.327], [0.836,-0.395], [0.833,-0.463], [0.830,-0.531], [0.826,-0.599], [0.823,-0.667], [0.819,-0.735], [0.816,-0.803], [0.813,-0.871], [0.809,-0.939], [0.806,-1.007], [0.802,-1.075], [0.799,-1.143], [0.796,-1.211], [0.792,-1.279], [0.789,-1.347], [0.785,-1.415], [0.782,-1.484], [0.779,-1.551], [0.775,-1.619], [0.816,-1.615], [0.867,-1.608], [0.901,-1.598], [0.935,-1.568], [0.969,-1.526], [1.003,-1.466], [1.037,-1.398], [1.054,-1.347], [1.062,-1.279], [1.054,-1.228], [1.037,-1.186], [1.003,-1.125], [0.969,-1.084], [0.935,-1.041], [0.901,-0.990], [0.867,-0.948], [0.850,-0.914], [0.850,-0.854], [0.898,-0.829], [0.952,-0.812], [1.003,-0.795], [1.054,-0.786], [1.139,-0.786], [1.224,-0.786],  ],\n  'r' : [ [0.085,-0.786], [0.170,-0.752], [0.221,-0.701], [0.255,-0.659], [0.289,-0.616], [0.309,-0.531], [0.332,-0.446], [0.349,-0.353], [0.362,-0.293], [0.374,-0.234], [0.389,-0.166], [0.400,-0.106], [0.527,-0.106], [0.612,-0.106], [0.697,-0.106], [0.782,-0.106], [0.867,-0.106], [0.867,-0.149], [0.859,-0.234], [0.850,-0.319], [0.833,-0.404], [0.816,-0.489], [0.807,-0.574], [0.833,-0.659], [0.867,-0.701], [0.935,-0.744], [1.020,-0.769], [1.122,-0.786], [1.241,-0.786],  ],\n  's' : [ [0.066,-0.769], [0.134,-0.731], [0.168,-0.701], [0.200,-0.667], [0.255,-0.615], [0.313,-0.531], [0.383,-0.446], [0.417,-0.378], [0.442,-0.319], [0.451,-0.242], [0.451,-0.191], [0.425,-0.064], [0.510,-0.140], [0.561,-0.191], [0.612,-0.234], [0.653,-0.276], [0.697,-0.319], [0.731,-0.402], [0.748,-0.446], [0.756,-0.490], [0.765,-0.534], [0.756,-0.578], [0.739,-0.622], [0.714,-0.666], [0.680,-0.710], [0.632,-0.747], [0.567,-0.786], [0.517,-0.801], [0.468,-0.803], [0.417,-0.801], [0.374,-0.786], [0.306,-0.761], [0.238,-0.727], [0.306,-0.761], [0.374,-0.786], [0.417,-0.801], [0.468,-0.803], [0.517,-0.801], [0.567,-0.786], [0.632,-0.747], [0.678,-0.769], [0.720,-0.786], [0.763,-0.786], [0.805,-0.786], [0.850,-0.786], [0.935,-0.786],  ],\n  't' : [ [0.085,-0.786], [0.170,-0.786], [0.238,-0.786], [0.298,-0.786], [0.374,-0.786], [0.445,-0.786], [0.484,-0.759], [0.499,-0.605], [0.514,-0.452], [0.529,-0.299], [0.543,-0.146], [0.558,0.008], [0.573,0.161], [0.588,0.314], [0.552,0.314], [0.522,0.314], [0.467,0.314], [0.411,0.314], [0.340,0.314], [0.255,0.314], [0.170,0.314], [0.255,0.314], [0.340,0.314], [0.411,0.314], [0.467,0.314], [0.522,0.314], [0.552,0.314], [0.633,0.314], [0.688,0.314], [0.729,0.314], [0.784,0.314], [0.840,0.314], [0.895,0.314], [0.978,0.314], [1.062,0.314], [0.978,0.314], [0.895,0.314], [0.840,0.314], [0.784,0.314], [0.729,0.314], [0.688,0.314], [0.633,0.314], [0.588,0.314], [0.602,0.467], [0.617,0.621], [0.632,0.774], [0.632,0.621], [0.632,0.467], [0.632,0.314], [0.632,0.161], [0.632,0.008], [0.632,-0.146], [0.632,-0.299], [0.632,-0.452], [0.632,-0.605], [0.632,-0.759], [0.659,-0.805], [0.720,-0.816], [0.807,-0.799], [0.894,-0.791], [0.978,-0.786], [1.062,-0.786], [1.147,-0.786], [1.232,-0.786],  ],\n  'u' : [ [0.043,-0.761], [0.085,-0.744], [0.128,-0.727], [0.156,-0.710], [0.179,-0.690], [0.204,-0.646], [0.221,-0.602], [0.238,-0.557], [0.255,-0.506], [0.286,-0.491], [0.293,-0.442], [0.299,-0.392], [0.306,-0.343], [0.312,-0.294], [0.319,-0.245], [0.325,-0.195], [0.332,-0.146], [0.338,-0.097], [0.344,-0.048], [0.338,-0.097], [0.332,-0.146], [0.325,-0.195], [0.319,-0.245], [0.312,-0.294], [0.306,-0.343], [0.299,-0.392], [0.293,-0.442], [0.286,-0.491], [0.280,-0.540], [0.273,-0.589], [0.267,-0.639], [0.260,-0.688], [0.254,-0.737], [0.260,-0.786], [0.289,-0.803], [0.332,-0.812], [0.383,-0.803], [0.425,-0.795], [0.461,-0.778], [0.501,-0.761], [0.544,-0.744], [0.583,-0.727], [0.616,-0.710], [0.646,-0.684], [0.671,-0.650], [0.682,-0.605], [0.686,-0.558], [0.689,-0.511], [0.693,-0.464], [0.697,-0.416], [0.700,-0.369], [0.704,-0.322], [0.708,-0.275], [0.711,-0.228], [0.715,-0.180], [0.719,-0.133], [0.723,-0.074], [0.726,-0.023], [0.723,-0.074], [0.719,-0.133], [0.715,-0.180], [0.711,-0.228], [0.708,-0.275], [0.704,-0.322], [0.700,-0.369], [0.697,-0.416], [0.693,-0.464], [0.712,-0.529], [0.719,-0.582], [0.731,-0.633], [0.748,-0.684], [0.756,-0.735], [0.790,-0.786], [0.845,-0.803], [0.901,-0.803], [0.944,-0.795], [1.020,-0.786],  ],\n  'v' : [ [0.030,-0.784], [0.050,-0.735], [0.070,-0.687], [0.091,-0.639], [0.111,-0.591], [0.131,-0.543], [0.151,-0.494], [0.172,-0.431], [0.184,-0.375], [0.204,-0.327], [0.224,-0.279], [0.245,-0.231], [0.265,-0.182], [0.285,-0.134], [0.321,-0.085], [0.348,-0.060], [0.388,-0.046], [0.430,-0.054], [0.455,-0.076], [0.476,-0.097], [0.488,-0.134], [0.498,-0.176], [0.508,-0.212], [0.509,-0.244], [0.505,-0.280], [0.503,-0.321], [0.501,-0.363], [0.498,-0.404], [0.496,-0.446], [0.493,-0.487], [0.491,-0.528], [0.488,-0.570], [0.486,-0.611], [0.493,-0.657], [0.509,-0.707], [0.525,-0.749], [0.554,-0.790], [0.593,-0.814], [0.635,-0.793], [0.674,-0.766], [0.689,-0.723], [0.703,-0.680], [0.718,-0.637], [0.733,-0.594], [0.737,-0.547], [0.753,-0.502], [0.759,-0.450], [0.769,-0.408], [0.780,-0.331], [0.791,-0.255], [0.803,-0.179], [0.814,-0.102], [0.886,-0.110], [0.960,-0.130], [1.015,-0.143], [1.058,-0.149],  ],\n  'w' : [ [0.030,-0.781], [0.050,-0.754], [0.083,-0.708], [0.102,-0.684], [0.123,-0.659], [0.146,-0.611], [0.170,-0.564], [0.193,-0.516], [0.216,-0.468], [0.240,-0.420], [0.262,-0.361], [0.284,-0.290], [0.306,-0.219], [0.328,-0.148], [0.350,-0.077], [0.361,-0.041], [0.356,-0.126], [0.352,-0.210], [0.348,-0.294], [0.343,-0.379], [0.339,-0.463], [0.342,-0.517], [0.351,-0.602], [0.359,-0.670], [0.390,-0.738], [0.433,-0.783], [0.495,-0.799], [0.565,-0.776], [0.589,-0.728], [0.612,-0.680], [0.636,-0.632], [0.655,-0.585], [0.673,-0.537], [0.689,-0.490], [0.704,-0.442], [0.711,-0.358], [0.719,-0.274], [0.726,-0.190], [0.734,-0.105], [0.741,-0.064], [0.753,-0.120], [0.765,-0.219], [0.777,-0.317], [0.789,-0.416], [0.801,-0.515], [0.812,-0.614], [0.824,-0.712], [0.867,-0.780], [0.911,-0.786], [0.952,-0.775], [0.988,-0.723], [1.014,-0.682], [1.037,-0.634], [1.061,-0.587], [1.073,-0.530], [1.085,-0.448], [1.091,-0.403], [1.101,-0.314], [1.112,-0.224], [1.122,-0.135], [1.133,-0.064], [1.188,-0.072], [1.244,-0.089], [1.298,-0.106], [1.356,-0.149],  ],\n  'x' : [ [0.085,-0.786], [0.170,-0.786], [0.220,-0.721], [0.262,-0.667], [0.304,-0.614], [0.346,-0.560], [0.388,-0.506], [0.430,-0.452], [0.471,-0.398], [0.522,-0.337], [0.555,-0.291], [0.597,-0.237], [0.639,-0.183], [0.681,-0.129], [0.723,-0.075], [0.765,-0.021], [0.799,0.021], [0.765,-0.021], [0.723,-0.075], [0.681,-0.129], [0.639,-0.183], [0.597,-0.237], [0.555,-0.291], [0.522,-0.337], [0.445,-0.429], [0.417,-0.383], [0.380,-0.315], [0.343,-0.248], [0.306,-0.181], [0.269,-0.114], [0.232,-0.046], [0.196,0.021], [0.232,-0.046], [0.269,-0.114], [0.306,-0.181], [0.343,-0.248], [0.380,-0.315], [0.417,-0.383], [0.445,-0.429], [0.491,-0.517], [0.528,-0.585], [0.565,-0.652], [0.602,-0.719], [0.639,-0.786], [0.680,-0.824], [0.718,-0.830], [0.763,-0.846], [0.799,-0.842], [0.834,-0.837], [0.863,-0.820], [0.901,-0.808], [0.935,-0.795], [0.986,-0.786],  ],\n  'y' : [ [0.033,-0.778], [0.066,-0.760], [0.099,-0.739], [0.124,-0.720], [0.145,-0.684], [0.166,-0.648], [0.187,-0.612], [0.208,-0.576], [0.229,-0.540], [0.251,-0.504], [0.272,-0.468], [0.293,-0.431], [0.314,-0.395], [0.335,-0.359], [0.357,-0.323], [0.378,-0.287], [0.399,-0.251], [0.420,-0.215], [0.441,-0.179], [0.462,-0.143], [0.513,-0.123], [0.547,-0.123], [0.586,-0.138], [0.604,-0.161], [0.611,-0.198], [0.606,-0.241], [0.601,-0.279], [0.585,-0.358], [0.570,-0.437], [0.554,-0.515], [0.539,-0.594], [0.523,-0.672], [0.521,-0.735], [0.531,-0.788], [0.549,-0.811], [0.568,-0.834], [0.586,-0.857], [0.609,-0.878], [0.635,-0.895], [0.669,-0.902], [0.703,-0.902], [0.773,-0.893], [0.838,-0.857], [0.870,-0.823], [0.943,-0.745], [0.950,-0.674], [0.957,-0.603], [0.964,-0.533], [0.971,-0.462], [0.977,-0.391], [0.984,-0.320], [0.991,-0.249], [0.998,-0.179], [1.005,-0.132], [0.998,-0.179], [0.991,-0.249], [0.984,-0.320], [0.977,-0.391], [0.971,-0.462], [0.964,-0.533], [0.957,-0.603], [0.950,-0.674], [0.943,-0.745], [0.936,-0.816], [0.929,-0.887], [0.923,-0.957], [0.916,-1.028], [0.909,-1.099], [0.902,-1.170], [0.895,-1.241], [0.888,-1.311], [0.881,-1.382], [0.875,-1.453], [0.868,-1.524], [0.838,-1.571], [0.787,-1.584], [0.720,-1.593], [0.652,-1.601], [0.590,-1.593], [0.543,-1.576], [0.524,-1.553], [0.506,-1.530], [0.488,-1.507], [0.472,-1.476], [0.466,-1.438], [0.473,-1.387], [0.497,-1.348], [0.511,-1.314], [0.534,-1.275], [0.548,-1.241], [0.567,-1.205], [0.582,-1.181], [0.597,-1.158], [0.612,-1.134], [0.627,-1.111], [0.642,-1.087], [0.657,-1.064], [0.698,-1.038], [0.747,-1.012], [0.796,-0.986], [0.846,-0.959], [0.983,-0.897], [1.038,-0.858], [1.094,-0.827], [1.151,-0.809], [1.207,-0.791], [1.258,-0.786],  ],\n  'z' : [ [0.034,-0.752], [0.067,-0.708], [0.083,-0.685], [0.116,-0.639], [0.133,-0.615], [0.166,-0.569], [0.183,-0.546], [0.216,-0.500], [0.233,-0.476], [0.266,-0.430], [0.287,-0.395], [0.316,-0.353], [0.333,-0.327], [0.366,-0.285], [0.389,-0.251], [0.440,-0.191], [0.491,-0.123], [0.516,-0.083], [0.549,-0.047], [0.576,-0.030], [0.615,-0.036], [0.649,-0.059], [0.665,-0.083], [0.682,-0.106], [0.699,-0.129], [0.708,-0.191], [0.699,-0.245], [0.678,-0.319], [0.652,-0.386], [0.615,-0.453], [0.582,-0.500], [0.542,-0.574], [0.499,-0.639], [0.466,-0.685], [0.449,-0.708], [0.399,-0.777], [0.383,-0.801], [0.399,-0.777], [0.449,-0.708], [0.466,-0.685], [0.499,-0.639], [0.549,-0.639], [0.576,-0.667], [0.599,-0.708], [0.615,-0.731], [0.642,-0.769], [0.665,-0.824], [0.669,-0.847], [0.665,-0.870], [0.665,-0.916], [0.665,-0.963], [0.652,-1.084], [0.627,-1.169], [0.602,-1.243], [0.582,-1.287], [0.566,-1.310], [0.532,-1.380], [0.516,-1.403], [0.493,-1.432], [0.459,-1.495], [0.432,-1.519], [0.401,-1.534], [0.366,-1.519], [0.349,-1.495], [0.304,-1.441], [0.283,-1.403], [0.270,-1.356], [0.283,-1.310], [0.303,-1.267], [0.333,-1.218], [0.349,-1.194], [0.366,-1.171], [0.383,-1.148], [0.399,-1.125], [0.416,-1.102], [0.432,-1.079], [0.449,-1.055], [0.466,-1.032], [0.501,-1.002], [0.536,-0.965], [0.571,-0.931], [0.605,-0.897], [0.640,-0.871], [0.675,-0.846], [0.710,-0.829], [0.745,-0.812], [0.780,-0.803], [0.815,-0.791], [0.850,-0.786], [0.892,-0.778], [0.935,-0.778], [0.978,-0.786],  ],\n  'a*' : [ [0.068,-0.174], [0.136,-0.149], [0.204,-0.132], [0.272,-0.098], [0.340,-0.089], [0.432,-0.081], [0.527,-0.055], [0.629,-0.036], [0.679,-0.036], [0.697,-0.149], [0.689,-0.293], [0.680,-0.404], [0.663,-0.489], [0.654,-0.592], [0.646,-0.639], [0.561,-0.718], [0.501,-0.773], [0.425,-0.801], [0.357,-0.820], [0.279,-0.801], [0.230,-0.754], [0.213,-0.731], [0.184,-0.681], [0.151,-0.616], [0.146,-0.557], [0.146,-0.500], [0.153,-0.455], [0.180,-0.395], [0.204,-0.353], [0.219,-0.319], [0.246,-0.276], [0.272,-0.234], [0.298,-0.191], [0.333,-0.157], [0.379,-0.132], [0.432,-0.081], [0.527,-0.055], [0.629,-0.036], [0.679,-0.036], [0.697,-0.149], [0.689,-0.293], [0.680,-0.404], [0.663,-0.489], [0.654,-0.592], [0.646,-0.639], [0.678,-0.744], [0.729,-0.801], [0.781,-0.786], [0.850,-0.786],  ],\n  'b*' : [ [0.043,-0.157], [0.085,-0.166], [0.128,-0.157], [0.179,-0.157], [0.230,-0.162], [0.281,-0.157], [0.332,-0.140], [0.365,-0.115], [0.391,-0.064], [0.414,-0.004], [0.443,0.064], [0.472,0.140], [0.500,0.241], [0.529,0.320], [0.544,0.399], [0.546,0.510], [0.530,0.602], [0.487,0.674], [0.431,0.743], [0.390,0.750], [0.355,0.739], [0.324,0.724], [0.300,0.686], [0.281,0.627], [0.275,0.497], [0.274,0.368], [0.272,0.238], [0.270,0.108], [0.274,-0.022], [0.275,-0.152], [0.277,-0.282], [0.279,-0.412], [0.281,-0.542], [0.291,-0.672], [0.309,-0.718], [0.339,-0.771], [0.369,-0.786], [0.420,-0.786], [0.457,-0.782], [0.494,-0.764], [0.522,-0.746], [0.548,-0.688], [0.562,-0.634], [0.580,-0.573], [0.594,-0.514], [0.613,-0.446], [0.619,-0.377], [0.628,-0.293], [0.630,-0.200], [0.631,-0.112], [0.701,-0.140], [0.748,-0.157], [0.799,-0.149],  ],\n  'c*' : [ [0.085,-0.140], [0.175,-0.132], [0.243,-0.123], [0.311,-0.106], [0.367,-0.089], [0.413,-0.081], [0.456,-0.072], [0.500,-0.064], [0.566,-0.064], [0.617,-0.106], [0.651,-0.191], [0.617,-0.106], [0.566,-0.064], [0.500,-0.064], [0.456,-0.072], [0.413,-0.081], [0.367,-0.094], [0.331,-0.123], [0.300,-0.152], [0.267,-0.191], [0.243,-0.222], [0.217,-0.268], [0.170,-0.407], [0.170,-0.497], [0.173,-0.565], [0.191,-0.657], [0.217,-0.708], [0.234,-0.731], [0.251,-0.754], [0.277,-0.795], [0.326,-0.829], [0.417,-0.846], [0.532,-0.829], [0.609,-0.820], [0.668,-0.812], [0.736,-0.803], [0.821,-0.795], [0.906,-0.786],  ],\n  'd*' : [ [0.068,-0.157], [0.136,-0.166], [0.204,-0.157], [0.272,-0.140], [0.340,-0.123], [0.425,-0.123], [0.469,-0.089], [0.515,-0.072], [0.629,-0.043], [0.697,-0.036], [0.782,-0.036], [0.697,-0.036], [0.629,-0.043], [0.515,-0.072], [0.469,-0.089], [0.425,-0.123], [0.357,-0.191], [0.333,-0.242], [0.313,-0.319], [0.298,-0.395], [0.289,-0.455], [0.282,-0.500], [0.279,-0.557], [0.287,-0.616], [0.320,-0.681], [0.366,-0.754], [0.415,-0.801], [0.459,-0.810], [0.510,-0.808], [0.561,-0.801], [0.637,-0.773], [0.697,-0.718], [0.799,-0.650], [0.867,-0.639], [0.867,-0.592], [0.867,-0.489], [0.867,-0.404], [0.867,-0.293], [0.867,-0.149], [0.867,0.064], [0.867,0.234], [0.867,0.404], [0.867,0.574], [0.867,0.744], [0.867,0.574], [0.867,0.404], [0.867,0.234], [0.867,0.064], [0.867,-0.149], [0.867,-0.293], [0.867,-0.404], [0.867,-0.489], [0.867,-0.592], [0.867,-0.639], [0.875,-0.701], [0.899,-0.744], [0.950,-0.801], [1.002,-0.824], [1.068,-0.815], [1.122,-0.812], [1.190,-0.795], [1.275,-0.786],  ],\n  'e*' : [ [0.085,-0.149], [0.136,-0.162], [0.170,-0.174], [0.204,-0.191], [0.231,-0.208], [0.264,-0.242], [0.315,-0.276], [0.383,-0.327], [0.451,-0.344], [0.501,-0.336], [0.552,-0.268], [0.566,-0.229], [0.568,-0.191], [0.559,-0.160], [0.542,-0.106], [0.525,-0.072], [0.495,-0.047], [0.452,-0.030], [0.410,-0.021], [0.367,-0.030], [0.325,-0.047], [0.294,-0.072], [0.260,-0.106], [0.235,-0.149], [0.231,-0.208], [0.231,-0.268], [0.231,-0.327], [0.235,-0.404], [0.240,-0.446], [0.250,-0.497], [0.260,-0.548], [0.281,-0.616], [0.298,-0.667], [0.332,-0.701], [0.365,-0.735], [0.417,-0.761], [0.485,-0.769], [0.552,-0.778], [0.620,-0.786], [0.680,-0.786], [0.765,-0.786],  ],\n  'f*' : [ [0.043,-0.191], [0.076,-0.234], [0.111,-0.310], [0.145,-0.395], [0.179,-0.446], [0.213,-0.489], [0.247,-0.531], [0.281,-0.574], [0.321,-0.642], [0.374,-0.592], [0.425,-0.548], [0.451,-0.446], [0.468,-0.361], [0.485,-0.276], [0.501,-0.191], [0.518,-0.106], [0.535,-0.038], [0.552,0.047], [0.565,0.131], [0.582,0.212], [0.605,0.299], [0.619,0.402], [0.632,0.506], [0.614,0.607], [0.578,0.667], [0.535,0.680], [0.485,0.684], [0.425,0.671], [0.374,0.652], [0.329,0.619], [0.298,0.531], [0.294,0.428], [0.292,0.299], [0.294,0.169], [0.296,-0.000], [0.296,-0.172], [0.296,-0.276], [0.298,-0.385], [0.297,-0.489], [0.296,-0.598], [0.295,-0.710], [0.295,-0.829], [0.292,-0.931], [0.289,-1.041], [0.286,-1.126], [0.281,-1.254], [0.281,-1.356], [0.279,-1.466], [0.272,-1.602], [0.323,-1.602], [0.374,-1.601], [0.423,-1.594], [0.474,-1.551], [0.510,-1.509], [0.542,-1.466], [0.550,-1.381], [0.542,-1.296], [0.533,-1.211], [0.522,-1.126], [0.508,-1.041], [0.491,-0.956], [0.468,-0.888], [0.442,-0.846], [0.383,-0.752], [0.420,-0.769], [0.468,-0.803], [0.510,-0.829], [0.567,-0.812], [0.639,-0.803], [0.723,-0.795], [0.807,-0.786],  ],\n  'g*' : [ [0.068,-0.157], [0.136,-0.166], [0.204,-0.174], [0.272,-0.183], [0.340,-0.174], [0.391,-0.179], [0.448,-0.175], [0.480,-0.149], [0.525,-0.132], [0.576,-0.115], [0.627,-0.098], [0.678,-0.086], [0.730,-0.089], [0.748,-0.123], [0.745,-0.191], [0.741,-0.259], [0.738,-0.327], [0.734,-0.395], [0.731,-0.463], [0.728,-0.531], [0.724,-0.599], [0.721,-0.667], [0.717,-0.735], [0.663,-0.761], [0.610,-0.786], [0.525,-0.812], [0.457,-0.824], [0.374,-0.812], [0.304,-0.786], [0.247,-0.754], [0.202,-0.676], [0.181,-0.592], [0.177,-0.548], [0.197,-0.506], [0.231,-0.458], [0.247,-0.430], [0.281,-0.384], [0.314,-0.337], [0.347,-0.291], [0.374,-0.251], [0.406,-0.217], [0.448,-0.175], [0.480,-0.149], [0.525,-0.132], [0.576,-0.115], [0.627,-0.098], [0.678,-0.086], [0.730,-0.089], [0.748,-0.123], [0.745,-0.191], [0.741,-0.259], [0.738,-0.327], [0.734,-0.395], [0.731,-0.463], [0.728,-0.531], [0.724,-0.599], [0.721,-0.667], [0.717,-0.735], [0.714,-0.803], [0.711,-0.871], [0.707,-0.939], [0.704,-1.007], [0.700,-1.075], [0.697,-1.143], [0.694,-1.211], [0.690,-1.279], [0.687,-1.347], [0.683,-1.415], [0.680,-1.484], [0.677,-1.551], [0.673,-1.619], [0.612,-1.615], [0.544,-1.608], [0.493,-1.598], [0.442,-1.568], [0.391,-1.526], [0.340,-1.466], [0.306,-1.398], [0.289,-1.347], [0.272,-1.279], [0.281,-1.228], [0.306,-1.186], [0.347,-1.125], [0.377,-1.084], [0.414,-1.041], [0.474,-0.990], [0.542,-0.948], [0.593,-0.914], [0.647,-0.871], [0.720,-0.829], [0.796,-0.820], [0.884,-0.812], [0.969,-0.803], [1.054,-0.786],  ],\n  'h*' : [ [0.068,-0.174], [0.136,-0.200], [0.204,-0.217], [0.272,-0.225], [0.323,-0.217], [0.303,-0.276], [0.326,-0.242], [0.349,-0.200], [0.383,-0.155], [0.432,-0.083], [0.483,-0.038], [0.508,0.013], [0.549,0.064], [0.575,0.131], [0.602,0.202], [0.617,0.249], [0.641,0.297], [0.651,0.370], [0.660,0.438], [0.662,0.523], [0.651,0.616], [0.641,0.693], [0.599,0.742], [0.542,0.769], [0.483,0.769], [0.406,0.738], [0.355,0.702], [0.321,0.636], [0.295,0.511], [0.295,0.425], [0.295,0.339], [0.295,0.227], [0.295,0.114], [0.295,0.001], [0.295,-0.111], [0.295,-0.224], [0.295,-0.336], [0.295,-0.449], [0.295,-0.561], [0.295,-0.674], [0.295,-0.786], [0.299,-0.674], [0.302,-0.561], [0.329,-0.514], [0.368,-0.447], [0.392,-0.386], [0.420,-0.307], [0.447,-0.255], [0.475,-0.185], [0.507,-0.149], [0.564,-0.132], [0.625,-0.123], [0.678,-0.132], [0.743,-0.166], [0.767,-0.229], [0.760,-0.307], [0.755,-0.375], [0.748,-0.453], [0.748,-0.533], [0.761,-0.623], [0.786,-0.717], [0.845,-0.766], [0.920,-0.794], [1.005,-0.786],  ],\n  'i*' : [ [0.051,-0.166], [0.084,-0.167], [0.118,-0.160], [0.154,-0.143], [0.192,-0.084], [0.233,-0.026], [0.227,-0.136], [0.224,-0.195], [0.218,-0.280], [0.216,-0.365], [0.216,-0.425], [0.216,-0.501], [0.216,-0.544], [0.214,-0.629], [0.219,-0.706], [0.241,-0.759], [0.271,-0.806], [0.347,-0.827], [0.431,-0.803],  ],\n  'j*' : [ [0.034,-0.155], [0.061,-0.162], [0.095,-0.166], [0.129,-0.174], [0.163,-0.157], [0.197,-0.140], [0.231,-0.115], [0.265,-0.089], [0.299,-0.072], [0.316,-0.055], [0.333,-0.050], [0.357,-0.038], [0.383,-0.049], [0.383,-0.099], [0.383,-0.167], [0.383,-0.276], [0.383,-0.395], [0.383,-0.513], [0.383,-0.632], [0.383,-0.751], [0.383,-0.869], [0.383,-0.988], [0.383,-1.107], [0.383,-1.225], [0.383,-1.344], [0.368,-1.405], [0.349,-1.466], [0.326,-1.514], [0.296,-1.530], [0.255,-1.534], [0.218,-1.518], [0.196,-1.496], [0.172,-1.406], [0.162,-1.296], [0.159,-1.211], [0.173,-1.126], [0.196,-1.053], [0.218,-1.005], [0.241,-0.957], [0.263,-0.909], [0.286,-0.861], [0.301,-0.837], [0.328,-0.808], [0.356,-0.780], [0.384,-0.753], [0.408,-0.742], [0.439,-0.734], [0.473,-0.733], [0.509,-0.750], [0.552,-0.767], [0.595,-0.786],  ],\n  'k*' : [ [0.043,-0.166], [0.085,-0.191], [0.119,-0.208], [0.153,-0.251], [0.187,-0.276], [0.221,-0.276], [0.272,-0.259], [0.323,-0.234], [0.337,-0.305], [0.384,-0.226], [0.431,-0.147], [0.479,-0.069], [0.526,0.010], [0.555,0.056], [0.584,0.103], [0.605,0.149], [0.622,0.195], [0.659,0.261], [0.677,0.309], [0.695,0.356], [0.713,0.404], [0.732,0.451], [0.750,0.499], [0.765,0.565], [0.771,0.635], [0.737,0.676], [0.695,0.684], [0.654,0.684], [0.603,0.684], [0.552,0.676], [0.501,0.659], [0.451,0.612], [0.400,0.562], [0.357,0.466], [0.340,0.369], [0.340,0.273], [0.340,0.176], [0.340,0.079], [0.340,0.010], [0.340,-0.066], [0.340,-0.143], [0.340,-0.219], [0.340,-0.296], [0.340,-0.372], [0.340,-0.449], [0.340,-0.525], [0.340,-0.601], [0.340,-0.678], [0.340,-0.754], [0.340,-0.847], [0.340,-0.754], [0.340,-0.678], [0.340,-0.601], [0.340,-0.525], [0.340,-0.449], [0.354,-0.372], [0.397,-0.361], [0.465,-0.353], [0.533,-0.344], [0.618,-0.327], [0.686,-0.302], [0.754,-0.276], [0.797,-0.234], [0.822,-0.198], [0.812,-0.140], [0.788,-0.089], [0.758,-0.059], [0.720,-0.032], [0.652,-0.055], [0.601,-0.106], [0.516,-0.191], [0.465,-0.276], [0.431,-0.336], [0.383,-0.378], [0.414,-0.421], [0.455,-0.453], [0.489,-0.500], [0.522,-0.546], [0.554,-0.592], [0.577,-0.639], [0.591,-0.662], [0.622,-0.708], [0.655,-0.754], [0.688,-0.801], [0.729,-0.846], [0.771,-0.871], [0.814,-0.863], [0.856,-0.846], [0.899,-0.829], [0.941,-0.812], [0.971,-0.803], [1.011,-0.786], [1.065,-0.786], [1.105,-0.786],  ],\n  'l*' : [ [0.031,-0.157], [0.054,-0.174], [0.088,-0.191], [0.122,-0.234], [0.156,-0.276], [0.207,-0.302], [0.241,-0.319], [0.284,-0.327], [0.306,-0.332], [0.340,-0.286], [0.377,-0.238], [0.403,-0.191], [0.435,-0.115], [0.459,-0.055], [0.483,0.013], [0.501,0.056], [0.510,0.095], [0.524,0.140], [0.534,0.190], [0.548,0.237], [0.554,0.284], [0.566,0.351], [0.578,0.404], [0.585,0.480], [0.594,0.566], [0.595,0.613], [0.585,0.682], [0.550,0.734], [0.515,0.771], [0.480,0.782], [0.451,0.786], [0.400,0.781], [0.347,0.767], [0.324,0.719], [0.315,0.672], [0.308,0.632], [0.304,0.574], [0.304,0.488], [0.304,0.401], [0.304,0.314], [0.304,0.227], [0.304,0.141], [0.304,0.054], [0.304,-0.033], [0.304,-0.119], [0.303,-0.206], [0.303,-0.293], [0.303,-0.380], [0.303,-0.466], [0.303,-0.553], [0.303,-0.640], [0.311,-0.702], [0.343,-0.752], [0.383,-0.778], [0.434,-0.784], [0.483,-0.807], [0.538,-0.821], [0.603,-0.803], [0.677,-0.795], [0.765,-0.786], [0.850,-0.786], [0.935,-0.786],  ],\n  'm*' : [ [0.034,-0.149], [0.085,-0.140], [0.136,-0.140], [0.187,-0.132], [0.238,-0.123], [0.272,-0.106], [0.315,-0.072], [0.349,-0.055], [0.394,-0.059], [0.410,-0.083], [0.414,-0.103], [0.419,-0.154], [0.424,-0.205], [0.430,-0.256], [0.435,-0.307], [0.440,-0.358], [0.431,-0.402], [0.421,-0.447], [0.411,-0.491], [0.402,-0.535], [0.392,-0.579], [0.382,-0.624], [0.373,-0.668], [0.363,-0.712], [0.353,-0.756], [0.344,-0.801], [0.353,-0.756], [0.363,-0.712], [0.373,-0.668], [0.382,-0.624], [0.392,-0.579], [0.402,-0.535], [0.411,-0.491], [0.421,-0.447], [0.431,-0.402], [0.440,-0.358], [0.460,-0.314], [0.488,-0.276], [0.510,-0.245], [0.527,-0.222], [0.543,-0.198], [0.560,-0.175], [0.577,-0.152], [0.593,-0.129], [0.627,-0.089], [0.661,-0.064], [0.711,-0.044], [0.760,-0.036], [0.776,-0.059], [0.793,-0.083], [0.810,-0.106], [0.820,-0.143], [0.830,-0.180], [0.840,-0.217], [0.850,-0.254], [0.859,-0.291], [0.848,-0.340], [0.836,-0.388], [0.825,-0.437], [0.813,-0.486], [0.801,-0.534], [0.790,-0.583], [0.778,-0.632], [0.766,-0.680], [0.755,-0.729], [0.754,-0.777], [0.755,-0.729], [0.766,-0.680], [0.778,-0.632], [0.790,-0.583], [0.801,-0.534], [0.813,-0.486], [0.825,-0.437], [0.836,-0.388], [0.848,-0.340], [0.859,-0.291], [0.876,-0.268], [0.901,-0.234], [0.926,-0.198], [0.943,-0.175], [0.961,-0.140], [0.993,-0.106], [1.009,-0.083], [1.035,-0.059], [1.103,-0.038], [1.176,-0.059], [1.209,-0.106], [1.225,-0.129], [1.242,-0.175], [1.234,-0.224], [1.225,-0.272], [1.217,-0.320], [1.209,-0.369], [1.200,-0.417], [1.192,-0.466], [1.184,-0.514], [1.176,-0.562], [1.167,-0.611], [1.159,-0.659], [1.159,-0.708], [1.192,-0.754], [1.209,-0.777], [1.241,-0.803], [1.325,-0.812], [1.375,-0.812], [1.422,-0.803], [1.475,-0.799], [1.564,-0.795], [1.649,-0.786],  ],\n  'n*' : [ [0.051,-0.132], [0.102,-0.115], [0.153,-0.098], [0.204,-0.047], [0.238,-0.004], [0.264,0.021], [0.291,0.038], [0.332,0.064], [0.374,0.038], [0.400,-0.013], [0.414,-0.059], [0.423,-0.106], [0.431,-0.149], [0.435,-0.198], [0.430,-0.254], [0.430,-0.310], [0.430,-0.365], [0.430,-0.421], [0.430,-0.476], [0.430,-0.532], [0.430,-0.588], [0.430,-0.643], [0.430,-0.699], [0.430,-0.754], [0.430,-0.699], [0.430,-0.643], [0.430,-0.588], [0.430,-0.532], [0.430,-0.476], [0.430,-0.421], [0.430,-0.365], [0.430,-0.310], [0.430,-0.254], [0.459,-0.242], [0.485,-0.217], [0.508,-0.198], [0.525,-0.175], [0.542,-0.152], [0.558,-0.129], [0.587,-0.098], [0.620,-0.059], [0.656,-0.013], [0.691,0.010], [0.741,0.010], [0.774,-0.013], [0.791,-0.036], [0.808,-0.059], [0.816,-0.106], [0.825,-0.149], [0.825,-0.234], [0.825,-0.293], [0.825,-0.361], [0.825,-0.421], [0.825,-0.480], [0.825,-0.523], [0.825,-0.574], [0.825,-0.616], [0.825,-0.662], [0.825,-0.708], [0.833,-0.761], [0.865,-0.812], [0.924,-0.820], [0.967,-0.812], [1.024,-0.786], [1.088,-0.786],  ],\n  'o*' : [ [0.051,-0.170], [0.102,-0.174], [0.153,-0.166], [0.204,-0.157], [0.255,-0.149], [0.306,-0.140], [0.346,-0.152], [0.363,-0.129], [0.380,-0.106], [0.396,-0.083], [0.431,-0.072], [0.474,-0.055], [0.533,-0.055], [0.576,-0.072], [0.596,-0.083], [0.618,-0.106], [0.634,-0.123], [0.646,-0.149], [0.663,-0.175], [0.669,-0.224], [0.668,-0.272], [0.673,-0.320], [0.671,-0.368], [0.665,-0.417], [0.660,-0.465], [0.651,-0.513], [0.637,-0.562], [0.620,-0.610], [0.603,-0.658], [0.592,-0.701], [0.570,-0.752], [0.544,-0.795], [0.501,-0.829], [0.459,-0.846], [0.408,-0.854], [0.346,-0.842], [0.321,-0.820], [0.296,-0.791], [0.263,-0.754], [0.247,-0.731], [0.230,-0.708], [0.213,-0.685], [0.202,-0.659], [0.185,-0.616], [0.168,-0.574], [0.156,-0.531], [0.163,-0.480], [0.187,-0.430], [0.205,-0.395], [0.216,-0.361], [0.238,-0.319], [0.263,-0.268], [0.280,-0.245], [0.295,-0.222], [0.321,-0.183], [0.346,-0.152], [0.363,-0.129], [0.380,-0.106], [0.396,-0.083], [0.431,-0.072], [0.473,-0.106], [0.493,-0.149], [0.518,-0.183], [0.544,-0.200], [0.578,-0.217], [0.612,-0.225], [0.646,-0.225], [0.680,-0.225], [0.714,-0.225], [0.748,-0.221], [0.782,-0.217], [0.816,-0.208], [0.850,-0.191], [0.884,-0.174], [0.918,-0.149],  ],\n  'p*' : [ [0.043,-0.153], [0.085,-0.157], [0.136,-0.157], [0.187,-0.157], [0.238,-0.140], [0.279,-0.136], [0.287,-0.215], [0.285,-0.323], [0.283,-0.431], [0.282,-0.539], [0.280,-0.646], [0.278,-0.754], [0.276,-0.862], [0.274,-0.970], [0.272,-1.078], [0.270,-1.186], [0.268,-1.294], [0.267,-1.402], [0.265,-1.510], [0.267,-1.402], [0.268,-1.294], [0.270,-1.186], [0.272,-1.078], [0.274,-0.970], [0.276,-0.862], [0.278,-0.754], [0.280,-0.646], [0.282,-0.539], [0.283,-0.431], [0.285,-0.323], [0.287,-0.215], [0.289,-0.107], [0.279,-0.136], [0.322,-0.091], [0.353,-0.048], [0.393,-0.020], [0.425,-0.002], [0.449,0.007], [0.479,0.017], [0.525,0.010], [0.577,-0.011], [0.624,-0.077], [0.637,-0.104], [0.668,-0.170], [0.686,-0.282], [0.686,-0.357], [0.689,-0.469], [0.675,-0.538], [0.663,-0.616], [0.641,-0.654], [0.606,-0.694], [0.566,-0.714], [0.504,-0.754], [0.446,-0.747], [0.391,-0.744], [0.340,-0.727], [0.391,-0.744], [0.446,-0.747], [0.504,-0.754], [0.540,-0.748], [0.593,-0.763], [0.678,-0.777], [0.729,-0.783], [0.793,-0.803], [0.850,-0.803], [0.911,-0.795], [0.969,-0.786],  ],\n  'q*' : [ [0.051,-0.153], [0.102,-0.157], [0.153,-0.162], [0.204,-0.166], [0.255,-0.183], [0.306,-0.200], [0.357,-0.191], [0.408,-0.183], [0.459,-0.166], [0.514,-0.149], [0.559,-0.132], [0.610,-0.115], [0.661,-0.098], [0.712,-0.086], [0.764,-0.089], [0.782,-0.123], [0.779,-0.191], [0.775,-0.259], [0.772,-0.327], [0.768,-0.395], [0.765,-0.463], [0.762,-0.531], [0.758,-0.599], [0.755,-0.667], [0.751,-0.735], [0.697,-0.761], [0.644,-0.786], [0.559,-0.812], [0.491,-0.824], [0.408,-0.812], [0.338,-0.786], [0.281,-0.754], [0.236,-0.676], [0.215,-0.592], [0.207,-0.548], [0.231,-0.506], [0.265,-0.458], [0.281,-0.430], [0.315,-0.384], [0.348,-0.337], [0.381,-0.291], [0.408,-0.251], [0.440,-0.217], [0.482,-0.175], [0.514,-0.149], [0.559,-0.132], [0.610,-0.115], [0.661,-0.098], [0.712,-0.086], [0.764,-0.089], [0.782,-0.123], [0.779,-0.191], [0.775,-0.259], [0.772,-0.327], [0.768,-0.395], [0.765,-0.463], [0.762,-0.531], [0.758,-0.599], [0.755,-0.667], [0.751,-0.735], [0.748,-0.803], [0.745,-0.871], [0.741,-0.939], [0.738,-1.007], [0.734,-1.075], [0.731,-1.143], [0.728,-1.211], [0.724,-1.279], [0.721,-1.347], [0.717,-1.415], [0.714,-1.484], [0.711,-1.551], [0.707,-1.619], [0.748,-1.615], [0.799,-1.608], [0.833,-1.598], [0.867,-1.568], [0.901,-1.526], [0.935,-1.466], [0.969,-1.398], [0.986,-1.347], [0.995,-1.279], [0.986,-1.228], [0.969,-1.186], [0.935,-1.125], [0.901,-1.084], [0.867,-1.041], [0.833,-0.990], [0.799,-0.948], [0.782,-0.914], [0.782,-0.854], [0.830,-0.829], [0.884,-0.812], [0.935,-0.803], [0.986,-0.799], [1.020,-0.795], [1.105,-0.791], [1.207,-0.786],  ],\n  'r*' : [ [0.085,-0.174], [0.170,-0.183], [0.170,-0.064], [0.255,-0.064], [0.340,-0.064], [0.425,-0.064], [0.510,-0.064], [0.510,-0.149], [0.501,-0.234], [0.493,-0.319], [0.476,-0.404], [0.459,-0.489], [0.451,-0.574], [0.476,-0.659], [0.510,-0.701], [0.578,-0.744], [0.663,-0.769], [0.765,-0.786],  ],\n  's*' : [ [0.085,-0.149], [0.170,-0.157], [0.221,-0.174], [0.272,-0.200], [0.323,-0.234], [0.374,-0.234], [0.425,-0.225], [0.476,-0.217], [0.527,-0.200], [0.561,-0.191], [0.603,-0.166], [0.663,-0.145], [0.748,-0.119], [0.819,-0.106], [0.820,-0.174], [0.830,-0.222], [0.842,-0.289], [0.855,-0.353], [0.867,-0.402], [0.867,-0.446], [0.867,-0.490], [0.859,-0.534], [0.850,-0.578], [0.842,-0.622], [0.825,-0.666], [0.782,-0.710], [0.657,-0.769], [0.611,-0.757], [0.547,-0.735], [0.497,-0.684], [0.447,-0.616], [0.397,-0.531], [0.354,-0.446], [0.332,-0.361], [0.323,-0.276], [0.332,-0.361], [0.354,-0.446], [0.397,-0.531], [0.447,-0.616], [0.497,-0.684], [0.547,-0.735], [0.611,-0.757], [0.657,-0.769], [0.700,-0.786], [0.742,-0.795], [0.785,-0.803], [0.850,-0.812], [0.935,-0.803], [1.020,-0.795], [1.105,-0.786],  ],\n  't*' : [ [0.085,-0.191], [0.170,-0.234], [0.255,-0.276], [0.340,-0.259], [0.425,-0.191], [0.510,-0.106], [0.558,0.008], [0.573,0.161], [0.588,0.314], [0.552,0.314], [0.522,0.314], [0.467,0.314], [0.411,0.314], [0.340,0.314], [0.255,0.314], [0.170,0.314], [0.255,0.314], [0.340,0.314], [0.411,0.314], [0.467,0.314], [0.522,0.314], [0.552,0.314], [0.633,0.314], [0.688,0.314], [0.729,0.314], [0.784,0.314], [0.840,0.314], [0.895,0.314], [0.978,0.314], [1.062,0.314], [0.978,0.314], [0.895,0.314], [0.840,0.314], [0.784,0.314], [0.729,0.314], [0.688,0.314], [0.633,0.314], [0.588,0.314], [0.602,0.467], [0.617,0.621], [0.632,0.774], [0.632,0.621], [0.632,0.467], [0.632,0.314], [0.632,0.161], [0.632,0.008], [0.632,-0.146], [0.632,-0.299], [0.632,-0.452], [0.632,-0.605], [0.632,-0.759], [0.659,-0.805], [0.720,-0.816], [0.807,-0.799], [0.894,-0.791], [0.978,-0.786], [1.062,-0.786], [1.147,-0.786], [1.232,-0.786],  ],\n  'u*' : [ [0.043,-0.157], [0.085,-0.166], [0.128,-0.157], [0.162,-0.157], [0.196,-0.140], [0.230,-0.106], [0.272,-0.081], [0.306,-0.055], [0.344,-0.048], [0.338,-0.097], [0.332,-0.146], [0.325,-0.195], [0.319,-0.245], [0.312,-0.294], [0.306,-0.343], [0.299,-0.392], [0.293,-0.442], [0.286,-0.491], [0.280,-0.540], [0.273,-0.589], [0.267,-0.639], [0.260,-0.688], [0.254,-0.737], [0.260,-0.786], [0.289,-0.803], [0.332,-0.812], [0.383,-0.803], [0.425,-0.795], [0.461,-0.778], [0.501,-0.761], [0.544,-0.744], [0.583,-0.727], [0.616,-0.710], [0.646,-0.684], [0.671,-0.650], [0.682,-0.605], [0.686,-0.558], [0.689,-0.511], [0.693,-0.464], [0.697,-0.416], [0.700,-0.369], [0.704,-0.322], [0.708,-0.275], [0.711,-0.228], [0.715,-0.180], [0.719,-0.133], [0.723,-0.074], [0.726,-0.023], [0.723,-0.074], [0.719,-0.133], [0.715,-0.180], [0.711,-0.228], [0.708,-0.275], [0.704,-0.322], [0.700,-0.369], [0.697,-0.416], [0.693,-0.464], [0.712,-0.529], [0.719,-0.582], [0.731,-0.633], [0.748,-0.684], [0.756,-0.735], [0.790,-0.786], [0.845,-0.803], [0.901,-0.803], [0.944,-0.795], [1.020,-0.786],  ],\n  'v*' : [ [0.051,-0.157], [0.102,-0.140], [0.136,-0.123], [0.162,-0.098], [0.187,-0.081], [0.211,-0.055], [0.243,-0.054], [0.268,-0.076], [0.289,-0.097], [0.301,-0.134], [0.311,-0.176], [0.321,-0.212], [0.322,-0.244], [0.318,-0.280], [0.316,-0.321], [0.314,-0.363], [0.311,-0.404], [0.309,-0.446], [0.306,-0.487], [0.304,-0.528], [0.301,-0.570], [0.299,-0.611], [0.306,-0.657], [0.322,-0.707], [0.338,-0.749], [0.367,-0.790], [0.406,-0.814], [0.448,-0.793], [0.487,-0.766], [0.502,-0.723], [0.516,-0.680], [0.531,-0.637], [0.546,-0.594], [0.550,-0.547], [0.566,-0.502], [0.572,-0.450], [0.582,-0.408], [0.593,-0.331], [0.604,-0.255], [0.616,-0.179], [0.627,-0.102], [0.699,-0.110], [0.773,-0.130], [0.828,-0.143], [0.871,-0.149],  ],\n  'w*' : [ [0.051,-0.128], [0.102,-0.115], [0.153,-0.081], [0.187,-0.064], [0.225,-0.041], [0.220,-0.126], [0.216,-0.210], [0.212,-0.294], [0.207,-0.379], [0.203,-0.463], [0.206,-0.517], [0.215,-0.602], [0.223,-0.670], [0.254,-0.738], [0.297,-0.783], [0.359,-0.799], [0.429,-0.776], [0.453,-0.728], [0.476,-0.680], [0.500,-0.632], [0.519,-0.585], [0.537,-0.537], [0.553,-0.490], [0.568,-0.442], [0.575,-0.358], [0.583,-0.274], [0.590,-0.190], [0.598,-0.105], [0.605,-0.064], [0.617,-0.120], [0.629,-0.219], [0.641,-0.317], [0.653,-0.416], [0.665,-0.515], [0.676,-0.614], [0.688,-0.712], [0.731,-0.780], [0.775,-0.786], [0.816,-0.775], [0.852,-0.723], [0.878,-0.682], [0.901,-0.634], [0.925,-0.587], [0.937,-0.530], [0.949,-0.448], [0.955,-0.403], [0.965,-0.314], [0.976,-0.224], [0.986,-0.135], [0.997,-0.064], [1.052,-0.072], [1.108,-0.089], [1.162,-0.106], [1.220,-0.149],  ],\n  'x*' : [ [0.043,-0.106], [0.085,-0.064], [0.128,-0.004], [0.196,0.021], [0.232,-0.046], [0.269,-0.114], [0.306,-0.181], [0.343,-0.248], [0.380,-0.315], [0.417,-0.383], [0.445,-0.429], [0.430,-0.452], [0.388,-0.506], [0.346,-0.560], [0.304,-0.614], [0.262,-0.667], [0.220,-0.721], [0.170,-0.786], [0.220,-0.721], [0.262,-0.667], [0.304,-0.614], [0.346,-0.560], [0.388,-0.506], [0.430,-0.452], [0.471,-0.398], [0.522,-0.337], [0.555,-0.291], [0.597,-0.237], [0.639,-0.183], [0.681,-0.129], [0.723,-0.075], [0.765,-0.021], [0.799,0.021], [0.765,-0.021], [0.723,-0.075], [0.681,-0.129], [0.639,-0.183], [0.597,-0.237], [0.555,-0.291], [0.522,-0.337], [0.471,-0.398], [0.445,-0.429], [0.491,-0.517], [0.528,-0.585], [0.565,-0.652], [0.602,-0.719], [0.639,-0.786], [0.680,-0.824], [0.718,-0.830], [0.763,-0.846], [0.799,-0.842], [0.834,-0.837], [0.863,-0.820], [0.901,-0.808], [0.935,-0.795], [0.986,-0.786],  ],\n  'y*' : [ [0.043,-0.157], [0.085,-0.166], [0.128,-0.157], [0.162,-0.157], [0.196,-0.149], [0.230,-0.140], [0.264,-0.123], [0.306,-0.123], [0.340,-0.123], [0.379,-0.138], [0.397,-0.161], [0.405,-0.198], [0.399,-0.241], [0.394,-0.279], [0.378,-0.358], [0.363,-0.437], [0.347,-0.515], [0.332,-0.594], [0.317,-0.672], [0.315,-0.735], [0.325,-0.788], [0.343,-0.811], [0.361,-0.834], [0.379,-0.857], [0.402,-0.878], [0.428,-0.895], [0.462,-0.902], [0.496,-0.902], [0.566,-0.893], [0.632,-0.857], [0.663,-0.823], [0.737,-0.745], [0.743,-0.674], [0.750,-0.603], [0.757,-0.533], [0.764,-0.462], [0.771,-0.391], [0.778,-0.320], [0.785,-0.249], [0.791,-0.179], [0.799,-0.132], [0.791,-0.179], [0.785,-0.249], [0.778,-0.320], [0.771,-0.391], [0.764,-0.462], [0.757,-0.533], [0.750,-0.603], [0.743,-0.674], [0.737,-0.745], [0.730,-0.816], [0.723,-0.887], [0.716,-0.957], [0.709,-1.028], [0.702,-1.099], [0.695,-1.170], [0.689,-1.241], [0.682,-1.311], [0.675,-1.382], [0.668,-1.453], [0.661,-1.524], [0.631,-1.571], [0.580,-1.584], [0.513,-1.593], [0.446,-1.601], [0.383,-1.593], [0.336,-1.576], [0.318,-1.553], [0.300,-1.530], [0.281,-1.507], [0.265,-1.476], [0.260,-1.438], [0.267,-1.387], [0.291,-1.348], [0.304,-1.314], [0.327,-1.275], [0.342,-1.241], [0.360,-1.205], [0.375,-1.181], [0.390,-1.158], [0.405,-1.134], [0.420,-1.111], [0.435,-1.087], [0.450,-1.064], [0.491,-1.038], [0.541,-1.012], [0.590,-0.986], [0.639,-0.959], [0.777,-0.897], [0.832,-0.858], [0.888,-0.827], [0.944,-0.809], [1.001,-0.791], [1.052,-0.786],  ],\n  'z*' : [ [0.043,-0.157], [0.085,-0.166], [0.136,-0.174], [0.187,-0.174], [0.238,-0.174], [0.289,-0.174], [0.340,-0.157], [0.374,-0.140], [0.406,-0.115], [0.431,-0.083], [0.464,-0.047], [0.491,-0.030], [0.530,-0.036], [0.564,-0.059], [0.595,-0.083], [0.612,-0.106], [0.629,-0.149], [0.623,-0.191], [0.614,-0.245], [0.593,-0.319], [0.567,-0.386], [0.530,-0.453], [0.497,-0.500], [0.457,-0.574], [0.414,-0.639], [0.381,-0.685], [0.364,-0.708], [0.314,-0.777], [0.298,-0.801], [0.314,-0.777], [0.364,-0.708], [0.381,-0.685], [0.414,-0.639], [0.464,-0.639], [0.491,-0.667], [0.514,-0.708], [0.530,-0.731], [0.557,-0.769], [0.580,-0.824], [0.584,-0.847], [0.580,-0.870], [0.580,-0.916], [0.580,-0.963], [0.567,-1.084], [0.542,-1.169], [0.517,-1.243], [0.497,-1.287], [0.481,-1.310], [0.447,-1.380], [0.431,-1.403], [0.408,-1.432], [0.374,-1.495], [0.347,-1.519], [0.316,-1.534], [0.281,-1.519], [0.264,-1.495], [0.219,-1.441], [0.198,-1.403], [0.185,-1.356], [0.198,-1.310], [0.218,-1.267], [0.248,-1.218], [0.264,-1.194], [0.281,-1.171], [0.298,-1.148], [0.314,-1.125], [0.331,-1.102], [0.347,-1.079], [0.364,-1.055], [0.381,-1.032], [0.416,-1.002], [0.451,-0.965], [0.486,-0.931], [0.520,-0.897], [0.555,-0.871], [0.590,-0.846], [0.625,-0.829], [0.660,-0.812], [0.695,-0.803], [0.730,-0.791], [0.765,-0.786], [0.816,-0.778], [0.867,-0.778], [0.918,-0.786],  ],\n  ',' : [ [0.085,-0.786], [0.170,-0.786], [0.255,-0.786], [0.340,-0.786], [0.357,-0.701], [0.391,-0.616], [0.459,-0.701], [0.476,-0.786], [0.493,-0.871], [0.493,-0.956], [0.459,-1.041], [0.425,-1.126], [0.357,-1.211], [0.255,-1.296], [0.357,-1.211], [0.425,-1.126], [0.459,-1.041], [0.493,-0.956], [0.493,-0.871], [0.476,-0.786], [0.459,-0.701], [0.391,-0.616], [0.459,-0.701], [0.476,-0.786], [0.595,-0.786], [0.680,-0.786], [0.765,-0.786], [0.850,-0.786],  ],\n  '?' : [ [0.085,-0.786], [0.170,-0.786], [0.272,-0.786], [0.340,-0.786], [0.425,-0.786], [0.425,-0.786], [0.425,-0.701], [0.425,-0.616], [0.425,-0.531], [0.425,-0.446], [0.425,-0.361], [0.425,-0.276], [0.425,-0.191], [0.425,-0.064], [0.527,-0.038], [0.586,-0.021], [0.640,0.004], [0.697,0.080], [0.734,0.149], [0.749,0.252], [0.748,0.387], [0.741,0.516], [0.726,0.600], [0.712,0.659], [0.672,0.740], [0.641,0.777], [0.586,0.786], [0.537,0.794], [0.485,0.786], [0.412,0.744], [0.340,0.701], [0.213,0.616], [0.340,0.701], [0.412,0.744], [0.485,0.786], [0.537,0.794], [0.586,0.786], [0.641,0.777], [0.672,0.740], [0.712,0.659], [0.726,0.600], [0.741,0.516], [0.748,0.387], [0.749,0.252], [0.734,0.149], [0.697,0.080], [0.640,0.004], [0.586,-0.021], [0.527,-0.038], [0.425,-0.064], [0.425,-0.191], [0.425,-0.276], [0.425,-0.361], [0.425,-0.446], [0.425,-0.531], [0.425,-0.616], [0.425,-0.701], [0.425,-0.786], [0.612,-0.786], [0.561,-0.659], [0.425,-0.574], [0.289,-0.659], [0.238,-0.786], [0.289,-0.914], [0.425,-0.999], [0.561,-0.914], [0.612,-0.786], [0.425,-0.786], [0.595,-0.786], [0.680,-0.786], [0.765,-0.786], [0.850,-0.786], [0.935,-0.786], [1.020,-0.786], [1.105,-0.786],  ],\n  '&' : [ [0.085,-0.786], [0.170,-0.786], [0.238,-0.786], [0.344,-0.778], [0.425,-0.774], [0.501,-0.774], [0.630,-0.761], [0.731,-0.748], [0.816,-0.684], [0.901,-0.574], [0.969,-0.506], [1.020,-0.440], [1.105,-0.319], [1.207,-0.191], [1.105,-0.319], [1.020,-0.440], [0.969,-0.506], [0.901,-0.574], [0.816,-0.684], [0.731,-0.748], [0.630,-0.761], [0.501,-0.774], [0.425,-0.774], [0.344,-0.778], [0.298,-0.718], [0.272,-0.676], [0.255,-0.599], [0.247,-0.497], [0.255,-0.327], [0.306,-0.191], [0.408,-0.064], [0.493,0.004], [0.544,0.047], [0.663,0.089], [0.756,0.154], [0.799,0.234], [0.842,0.335], [0.875,0.429], [0.885,0.520], [0.888,0.614], [0.871,0.690], [0.837,0.749], [0.790,0.777], [0.706,0.786], [0.637,0.786], [0.570,0.777], [0.499,0.760], [0.464,0.734], [0.440,0.681], [0.429,0.605], [0.422,0.548], [0.424,0.463], [0.432,0.404], [0.459,0.306], [0.501,0.174], [0.578,0.064], [0.646,-0.106], [0.714,-0.276], [0.765,-0.446], [0.816,-0.616], [0.867,-0.786], [0.935,-0.829], [1.020,-0.829], [1.097,-0.803], [1.191,-0.786], [1.290,-0.786], [1.385,-0.786], [1.462,-0.786],  ],\n  '$' : [ [0.085,-0.786], [0.170,-0.786], [0.255,-0.786], [0.340,-0.786], [0.425,-0.786], [0.510,-0.786], [0.510,-1.041], [0.510,-0.786], [0.510,-0.531], [0.510,-0.276], [0.510,-0.021], [0.510,0.234], [0.510,0.489], [0.510,0.829], [0.544,0.829], [0.544,0.489], [0.544,0.234], [0.544,-0.021], [0.544,-0.276], [0.544,-0.531], [0.544,-0.786], [0.544,-1.041], [0.544,-0.786], [0.652,-0.786], [0.729,-0.778], [0.790,-0.733], [0.829,-0.664], [0.887,-0.560], [0.912,-0.429], [0.904,-0.334], [0.880,-0.267], [0.831,-0.191], [0.774,-0.140], [0.708,-0.140], [0.629,-0.140], [0.544,-0.140], [0.475,-0.140], [0.408,-0.132], [0.340,-0.098], [0.306,-0.072], [0.272,-0.030], [0.221,0.038], [0.187,0.115], [0.170,0.242], [0.187,0.341], [0.238,0.440], [0.289,0.497], [0.349,0.530], [0.425,0.548], [0.510,0.548], [0.592,0.548], [0.680,0.548], [0.765,0.548], [0.850,0.548], [0.765,0.548], [0.680,0.548], [0.592,0.548], [0.510,0.548], [0.425,0.548], [0.349,0.530], [0.289,0.497], [0.238,0.440], [0.187,0.341], [0.170,0.242], [0.187,0.115], [0.221,0.038], [0.272,-0.030], [0.306,-0.072], [0.340,-0.098], [0.408,-0.132], [0.475,-0.140], [0.544,-0.140], [0.629,-0.140], [0.708,-0.140], [0.774,-0.140], [0.831,-0.191], [0.880,-0.267], [0.904,-0.334], [0.912,-0.429], [0.887,-0.560], [0.829,-0.664], [0.790,-0.733], [0.729,-0.778], [0.652,-0.786], [0.510,-0.786], [0.425,-0.786], [0.340,-0.786], [0.255,-0.786], [0.170,-0.786], [0.085,-0.786], [0.170,-0.786], [0.255,-0.786], [0.340,-0.786], [0.425,-0.786], [0.510,-0.786], [0.595,-0.786], [0.680,-0.786], [0.765,-0.786], [0.850,-0.786], [0.935,-0.786], [1.020,-0.786], [1.105,-0.786],  ],\n  '!' : [ [0.085,-0.786], [0.170,-0.786], [0.255,-0.786], [0.340,-0.786], [0.425,-0.786], [0.510,-0.786], [0.510,-0.531], [0.510,-0.276], [0.510,-0.021], [0.510,0.234], [0.510,0.489], [0.510,0.786], [0.510,0.489], [0.510,0.234], [0.510,-0.021], [0.510,-0.276], [0.510,-0.531], [0.510,-0.786], [0.697,-0.786], [0.646,-0.659], [0.510,-0.574], [0.374,-0.659], [0.323,-0.786], [0.374,-0.914], [0.510,-0.999], [0.646,-0.914], [0.697,-0.786], [0.510,-0.786], [0.680,-0.786], [0.765,-0.786], [0.850,-0.786], [0.935,-0.786],  ],\n}\n","export let raysol_sanserif = {\n  ' ' : [ [0.000,-0.786], [0.085,-0.786], [0.170,-0.786], [0.255,-0.786], [0.340,-0.786], [0.425,-0.786], [0.510,-0.786], [0.595,-0.786], [0.680,-0.786], [1.020,-0.786],  ],\n  '0' : [ [0.085,-0.786], [0.170,-0.786], [0.255,-0.786], [0.340,-0.786], [0.425,-0.786], [0.544,-0.691], [0.629,-0.595], [0.680,-0.500], [0.723,-0.404], [0.765,-0.308], [0.799,-0.213], [0.833,-0.117], [0.840,-0.009], [0.833,0.117], [0.799,0.212], [0.765,0.308], [0.723,0.404], [0.680,0.499], [0.629,0.595], [0.544,0.690], [0.425,0.786], [0.306,0.690], [0.221,0.595], [0.170,0.499], [0.128,0.404], [0.085,0.308], [0.051,0.212], [0.017,0.117], [0.010,-0.009], [0.017,-0.117], [0.051,-0.213], [0.085,-0.308], [0.128,-0.404], [0.170,-0.500], [0.221,-0.595], [0.306,-0.691], [0.425,-0.786], [0.510,-0.786], [0.595,-0.786], [0.680,-0.786], [0.765,-0.786], [0.850,-0.786], [1.190,-0.786],  ],\n  '1' : [ [0.085,-0.786], [0.085,-0.629], [0.085,-0.472], [0.085,-0.315], [0.085,-0.157], [0.085,-0.000], [0.085,0.157], [0.085,0.314], [0.085,0.472], [0.085,0.629], [0.085,0.786], [0.085,0.629], [0.085,0.472], [0.085,0.314], [0.085,0.157], [0.085,-0.000], [0.085,-0.157], [0.085,-0.315], [0.085,-0.472], [0.085,-0.629], [0.085,-0.786], [0.170,-0.786], [0.510,-0.786],  ],\n  '2' : [ [0.085,-0.786], [0.170,-0.786], [0.085,-0.786], [0.177,-0.599], [0.269,-0.412], [0.360,-0.225], [0.452,-0.038], [0.544,0.149], [0.612,0.276], [0.654,0.404], [0.663,0.531], [0.637,0.616], [0.587,0.701], [0.527,0.752], [0.451,0.782], [0.383,0.786], [0.315,0.782], [0.238,0.752], [0.179,0.701], [0.128,0.616], [0.085,0.531], [0.128,0.616], [0.179,0.701], [0.238,0.752], [0.315,0.782], [0.383,0.786], [0.451,0.782], [0.527,0.752], [0.587,0.701], [0.637,0.616], [0.663,0.531], [0.654,0.404], [0.612,0.276], [0.544,0.149], [0.452,-0.038], [0.360,-0.225], [0.269,-0.412], [0.177,-0.599], [0.085,-0.786], [0.170,-0.786], [0.255,-0.786], [0.340,-0.786], [0.425,-0.786], [0.510,-0.786], [0.595,-0.786], [0.680,-0.786], [0.765,-0.786], [0.765,-0.786], [0.850,-0.574], [0.850,-0.786], [0.935,-0.786], [1.275,-0.786],  ],\n  '3' : [ [0.085,-0.786], [0.170,-0.786], [0.255,-0.786], [0.340,-0.786], [0.340,-0.786], [0.408,-0.782], [0.485,-0.752], [0.544,-0.701], [0.595,-0.616], [0.620,-0.531], [0.612,-0.404], [0.570,-0.276], [0.476,-0.149], [0.340,0.064], [0.255,0.064], [0.340,0.064], [0.501,0.149], [0.570,0.276], [0.612,0.404], [0.620,0.531], [0.595,0.616], [0.544,0.701], [0.485,0.752], [0.408,0.782], [0.340,0.786], [0.272,0.782], [0.196,0.752], [0.136,0.701], [0.085,0.616], [0.043,0.531], [0.085,0.616], [0.136,0.701], [0.196,0.752], [0.272,0.782], [0.340,0.786], [0.408,0.782], [0.485,0.752], [0.544,0.701], [0.595,0.616], [0.620,0.531], [0.612,0.404], [0.570,0.276], [0.501,0.149], [0.340,0.064], [0.255,0.064], [0.340,0.064], [0.476,-0.149], [0.570,-0.276], [0.612,-0.404], [0.620,-0.531], [0.595,-0.616], [0.544,-0.701], [0.485,-0.752], [0.408,-0.782], [0.340,-0.786], [0.272,-0.782], [0.196,-0.752], [0.136,-0.701], [0.085,-0.616], [0.043,-0.531], [0.000,-0.438], [0.043,-0.531], [0.085,-0.616], [0.136,-0.701], [0.196,-0.752], [0.272,-0.782], [0.340,-0.786], [0.340,-0.786], [0.425,-0.786], [0.510,-0.786], [0.595,-0.786], [0.680,-0.786], [1.020,-0.786],  ],\n  '4' : [ [0.085,-0.786], [0.170,-0.786], [0.255,-0.786], [0.340,-0.786], [0.425,-0.786], [0.510,-0.786], [0.595,-0.786], [0.595,-0.616], [0.595,-0.446], [0.595,-0.276], [0.595,-0.106], [0.595,-0.000], [0.510,-0.000], [0.425,-0.000], [0.340,-0.000], [0.255,-0.000], [0.170,-0.000], [0.068,-0.000], [0.085,0.064], [0.085,0.234], [0.085,0.404], [0.085,0.574], [0.085,0.744], [0.085,0.786], [0.085,0.744], [0.085,0.574], [0.085,0.404], [0.085,0.234], [0.085,0.064], [0.085,-0.000], [0.170,-0.000], [0.255,-0.000], [0.340,-0.000], [0.425,-0.000], [0.510,-0.000], [0.595,-0.000], [0.680,-0.000], [0.807,-0.000], [0.935,-0.000], [0.807,-0.000], [0.680,-0.000], [0.595,-0.000], [0.595,0.064], [0.595,0.234], [0.595,0.404], [0.595,0.574], [0.595,0.744], [0.595,0.786], [0.595,0.744], [0.595,0.574], [0.595,0.404], [0.595,0.234], [0.595,0.064], [0.595,-0.000], [0.595,-0.106], [0.595,-0.276], [0.595,-0.446], [0.595,-0.616], [0.595,-0.786], [0.680,-0.786], [0.765,-0.786], [0.850,-0.786], [0.935,-0.786], [1.020,-0.786], [1.360,-0.786],  ],\n  '5' : [ [0.085,-0.786], [0.170,-0.786], [0.255,-0.786], [0.340,-0.786], [0.425,-0.786], [0.425,-0.744], [0.493,-0.740], [0.570,-0.710], [0.629,-0.659], [0.680,-0.574], [0.706,-0.489], [0.714,-0.361], [0.697,-0.191], [0.654,-0.064], [0.561,0.064], [0.425,0.174], [0.272,0.166], [0.136,0.140], [0.153,0.302], [0.170,0.463], [0.187,0.625], [0.204,0.786], [0.289,0.786], [0.374,0.786], [0.459,0.786], [0.544,0.786], [0.680,0.786], [0.799,0.786], [0.680,0.786], [0.544,0.786], [0.459,0.786], [0.374,0.786], [0.289,0.786], [0.204,0.786], [0.187,0.625], [0.170,0.463], [0.153,0.302], [0.136,0.140], [0.272,0.166], [0.425,0.174], [0.561,0.064], [0.654,-0.064], [0.697,-0.191], [0.714,-0.361], [0.706,-0.489], [0.680,-0.574], [0.629,-0.659], [0.570,-0.710], [0.493,-0.740], [0.425,-0.744], [0.357,-0.740], [0.281,-0.710], [0.221,-0.659], [0.170,-0.616], [0.128,-0.548], [0.076,-0.421], [0.128,-0.548], [0.170,-0.616], [0.221,-0.659], [0.281,-0.710], [0.357,-0.740], [0.425,-0.744], [0.425,-0.786], [0.510,-0.786], [0.595,-0.786], [0.680,-0.786], [0.765,-0.786], [0.850,-0.786], [1.190,-0.786],  ],\n  '6' : [ [0.085,-0.786], [0.170,-0.786], [0.255,-0.786], [0.340,-0.786], [0.425,-0.786], [0.357,-0.744], [0.425,-0.740], [0.501,-0.710], [0.561,-0.659], [0.612,-0.574], [0.637,-0.489], [0.629,-0.361], [0.587,-0.234], [0.510,-0.106], [0.442,-0.038], [0.357,-0.021], [0.272,-0.038], [0.442,-0.038], [0.357,-0.021], [0.272,-0.038], [0.204,-0.106], [0.128,-0.234], [0.085,-0.361], [0.112,-0.247], [0.139,-0.132], [0.167,-0.017], [0.194,0.098], [0.221,0.212], [0.248,0.327], [0.275,0.442], [0.303,0.557], [0.330,0.671], [0.357,0.786], [0.330,0.671], [0.303,0.557], [0.275,0.442], [0.248,0.327], [0.221,0.212], [0.194,0.098], [0.167,-0.017], [0.139,-0.132], [0.112,-0.247], [0.085,-0.361], [0.076,-0.489], [0.102,-0.574], [0.153,-0.659], [0.213,-0.710], [0.289,-0.740], [0.357,-0.744], [0.425,-0.786], [0.510,-0.786], [0.595,-0.786], [0.680,-0.786], [1.020,-0.786],  ],\n  '7' : [ [0.085,-0.786], [0.170,-0.786], [0.221,-0.629], [0.272,-0.472], [0.323,-0.315], [0.374,-0.157], [0.425,-0.000], [0.476,0.157], [0.527,0.314], [0.578,0.472], [0.629,0.629], [0.680,0.786], [0.606,0.786], [0.531,0.786], [0.457,0.786], [0.383,0.786], [0.308,0.786], [0.234,0.786], [0.159,0.786], [0.043,0.786], [0.159,0.786], [0.234,0.786], [0.308,0.786], [0.383,0.786], [0.457,0.786], [0.531,0.786], [0.606,0.786], [0.680,0.786], [0.629,0.629], [0.578,0.472], [0.527,0.314], [0.476,0.157], [0.425,-0.000], [0.374,-0.157], [0.323,-0.315], [0.272,-0.472], [0.221,-0.629], [0.170,-0.786], [0.255,-0.786], [0.340,-0.786], [0.425,-0.786], [0.510,-0.786], [0.595,-0.786], [0.680,-0.786], [0.765,-0.786], [1.105,-0.786],  ],\n  '8' : [ [0.085,-0.786], [0.170,-0.786], [0.255,-0.786], [0.340,-0.786], [0.340,-0.744], [0.408,-0.740], [0.485,-0.710], [0.544,-0.659], [0.595,-0.574], [0.620,-0.489], [0.612,-0.361], [0.570,-0.234], [0.493,-0.106], [0.425,0.021], [0.340,0.021], [0.255,0.021], [0.179,0.149], [0.111,0.276], [0.068,0.404], [0.060,0.531], [0.085,0.616], [0.136,0.701], [0.196,0.752], [0.272,0.782], [0.340,0.786], [0.408,0.782], [0.485,0.752], [0.544,0.701], [0.595,0.616], [0.620,0.531], [0.612,0.404], [0.570,0.276], [0.501,0.149], [0.425,0.021], [0.340,0.021], [0.255,0.021], [0.187,-0.106], [0.111,-0.234], [0.068,-0.361], [0.060,-0.489], [0.085,-0.574], [0.136,-0.659], [0.196,-0.710], [0.272,-0.740], [0.340,-0.744], [0.340,-0.786], [0.425,-0.786], [0.510,-0.786], [0.595,-0.786], [0.680,-0.786], [1.020,-0.786],  ],\n  '9' : [ [0.085,-0.786], [0.170,-0.786], [0.255,-0.786], [0.340,-0.786], [0.425,-0.786], [0.510,-0.786], [0.595,-0.786], [0.646,-0.786], [0.646,-0.616], [0.646,-0.446], [0.646,-0.276], [0.646,-0.106], [0.646,0.064], [0.646,0.234], [0.646,0.404], [0.595,0.276], [0.527,0.149], [0.365,0.064], [0.204,0.149], [0.136,0.276], [0.093,0.404], [0.085,0.531], [0.111,0.616], [0.162,0.701], [0.221,0.752], [0.298,0.782], [0.365,0.786], [0.433,0.782], [0.510,0.752], [0.570,0.701], [0.620,0.616], [0.646,0.531], [0.646,0.404], [0.646,0.234], [0.646,0.064], [0.646,-0.106], [0.646,-0.276], [0.646,-0.446], [0.646,-0.616], [0.646,-0.786], [0.680,-0.786], [0.765,-0.786], [1.105,-0.786],  ],\n  'A' : [ [0.085,-0.786], [0.128,-0.629], [0.170,-0.472], [0.213,-0.315], [0.255,-0.157], [0.298,-0.000], [0.340,0.157], [0.383,0.314], [0.425,0.472], [0.468,0.629], [0.510,0.786], [0.552,0.629], [0.595,0.472], [0.637,0.314], [0.680,0.157], [0.723,-0.000], [0.765,-0.157], [0.680,-0.157], [0.595,-0.157], [0.510,-0.157], [0.425,-0.157], [0.340,-0.157], [0.255,-0.157], [0.340,-0.157], [0.425,-0.157], [0.510,-0.157], [0.595,-0.157], [0.680,-0.157], [0.765,-0.157], [0.807,-0.315], [0.850,-0.472], [0.892,-0.629], [0.935,-0.786], [1.275,-0.786],  ],\n  'B' : [ [0.085,-0.786], [0.085,-0.701], [0.085,-0.616], [0.085,-0.531], [0.085,-0.446], [0.085,-0.361], [0.085,-0.276], [0.085,-0.191], [0.085,-0.106], [0.085,-0.021], [0.085,0.064], [0.085,0.149], [0.085,0.234], [0.085,0.319], [0.085,0.404], [0.085,0.489], [0.085,0.574], [0.085,0.659], [0.085,0.744], [0.085,0.786], [0.153,0.786], [0.221,0.786], [0.289,0.786], [0.357,0.786], [0.425,0.786], [0.459,0.777], [0.510,0.752], [0.561,0.701], [0.595,0.667], [0.629,0.616], [0.663,0.531], [0.697,0.446], [0.697,0.404], [0.663,0.319], [0.629,0.234], [0.595,0.183], [0.561,0.149], [0.510,0.098], [0.459,0.072], [0.425,0.064], [0.357,0.064], [0.289,0.064], [0.221,0.064], [0.153,0.064], [0.085,0.064], [0.153,0.064], [0.221,0.064], [0.289,0.064], [0.357,0.064], [0.425,0.064], [0.459,0.055], [0.510,0.030], [0.561,-0.021], [0.595,-0.055], [0.629,-0.106], [0.663,-0.191], [0.697,-0.276], [0.714,-0.361], [0.697,-0.446], [0.663,-0.531], [0.629,-0.616], [0.595,-0.667], [0.561,-0.701], [0.510,-0.752], [0.459,-0.778], [0.425,-0.786], [0.357,-0.786], [0.289,-0.786], [0.221,-0.786], [0.153,-0.786], [0.085,-0.786], [0.153,-0.786], [0.221,-0.786], [0.289,-0.786], [0.357,-0.786], [0.425,-0.786], [0.561,-0.786], [0.646,-0.786], [0.765,-0.786], [1.105,-0.786],  ],\n  'C' : [ [0.085,-0.786], [0.170,-0.786], [0.255,-0.786], [0.340,-0.786], [0.425,-0.786], [0.510,-0.786], [0.510,-0.744], [0.442,-0.740], [0.365,-0.710], [0.306,-0.659], [0.255,-0.574], [0.213,-0.489], [0.170,-0.395], [0.136,-0.276], [0.102,-0.132], [0.085,0.021], [0.102,0.174], [0.136,0.319], [0.170,0.438], [0.213,0.531], [0.255,0.616], [0.306,0.701], [0.365,0.752], [0.442,0.782], [0.510,0.786], [0.578,0.782], [0.654,0.752], [0.714,0.701], [0.765,0.616], [0.807,0.531], [0.765,0.616], [0.714,0.701], [0.654,0.752], [0.578,0.782], [0.510,0.786], [0.442,0.782], [0.365,0.752], [0.306,0.701], [0.255,0.616], [0.213,0.531], [0.170,0.438], [0.136,0.319], [0.102,0.174], [0.085,0.021], [0.102,-0.132], [0.136,-0.276], [0.170,-0.395], [0.213,-0.489], [0.255,-0.574], [0.306,-0.659], [0.365,-0.710], [0.442,-0.740], [0.510,-0.744], [0.578,-0.740], [0.654,-0.710], [0.714,-0.659], [0.765,-0.574], [0.807,-0.489], [0.765,-0.574], [0.714,-0.659], [0.654,-0.710], [0.578,-0.740], [0.510,-0.744], [0.510,-0.786], [0.425,-0.786], [0.374,-0.786], [0.425,-0.786], [0.510,-0.786], [0.595,-0.786], [0.680,-0.786], [0.765,-0.786], [0.850,-0.786], [1.190,-0.786],  ],\n  'D' : [ [0.085,-0.786], [0.170,-0.786], [0.255,-0.786], [0.340,-0.786], [0.408,-0.740], [0.485,-0.710], [0.544,-0.659], [0.595,-0.574], [0.637,-0.489], [0.680,-0.395], [0.714,-0.276], [0.748,-0.132], [0.765,0.021], [0.748,0.174], [0.714,0.319], [0.680,0.438], [0.637,0.531], [0.595,0.616], [0.544,0.701], [0.485,0.752], [0.408,0.782], [0.340,0.786], [0.272,0.786], [0.196,0.786], [0.136,0.786], [0.085,0.744], [0.085,0.659], [0.085,0.574], [0.085,0.489], [0.085,0.404], [0.085,0.319], [0.085,0.234], [0.085,0.149], [0.085,0.064], [0.085,-0.021], [0.085,-0.106], [0.085,-0.191], [0.085,-0.276], [0.085,-0.361], [0.085,-0.446], [0.085,-0.531], [0.085,-0.616], [0.085,-0.701], [0.085,-0.786], [0.170,-0.786], [0.255,-0.786], [0.340,-0.786], [0.425,-0.786], [0.510,-0.786], [0.595,-0.786], [0.680,-0.786], [0.765,-0.786], [0.850,-0.786], [1.190,-0.786],  ],\n  'E' : [ [0.085,-0.786], [0.085,-0.786], [0.085,-0.701], [0.085,-0.616], [0.085,-0.531], [0.085,-0.446], [0.085,-0.361], [0.085,-0.276], [0.085,-0.191], [0.085,-0.106], [0.085,-0.021], [0.085,0.064], [0.153,0.064], [0.085,0.064], [0.153,0.064], [0.221,0.064], [0.289,0.064], [0.357,0.064], [0.425,0.064], [0.493,0.064], [0.561,0.064], [0.629,0.064], [0.561,0.064], [0.493,0.064], [0.425,0.064], [0.357,0.064], [0.289,0.064], [0.221,0.064], [0.085,0.064], [0.085,0.149], [0.085,0.234], [0.085,0.319], [0.085,0.404], [0.085,0.489], [0.085,0.574], [0.085,0.659], [0.085,0.744], [0.085,0.786], [0.153,0.786], [0.221,0.786], [0.289,0.786], [0.357,0.786], [0.425,0.786], [0.493,0.786], [0.561,0.786], [0.629,0.786], [0.629,0.701], [0.629,0.531], [0.629,0.701], [0.561,0.786], [0.493,0.786], [0.425,0.786], [0.357,0.786], [0.289,0.786], [0.221,0.786], [0.153,0.786], [0.085,0.786], [0.085,0.744], [0.085,0.659], [0.085,0.574], [0.085,0.489], [0.085,0.404], [0.085,0.319], [0.085,0.234], [0.085,0.149], [0.085,0.064], [0.085,-0.021], [0.085,-0.106], [0.085,-0.191], [0.085,-0.276], [0.085,-0.361], [0.085,-0.446], [0.085,-0.531], [0.085,-0.616], [0.085,-0.701], [0.085,-0.786], [0.153,-0.786], [0.221,-0.786], [0.289,-0.786], [0.357,-0.786], [0.425,-0.786], [0.493,-0.786], [0.561,-0.786], [0.629,-0.701], [0.629,-0.531], [0.629,-0.701], [0.629,-0.786], [0.714,-0.786], [1.054,-0.786],  ],\n  'F' : [ [0.085,-0.786], [0.085,-0.786], [0.085,-0.701], [0.085,-0.616], [0.085,-0.531], [0.085,-0.446], [0.085,-0.361], [0.085,-0.276], [0.085,-0.191], [0.085,-0.106], [0.085,-0.021], [0.085,0.064], [0.153,0.064], [0.085,0.064], [0.153,0.064], [0.221,0.064], [0.289,0.064], [0.357,0.064], [0.425,0.064], [0.493,0.064], [0.425,0.064], [0.357,0.064], [0.289,0.064], [0.221,0.064], [0.085,0.064], [0.085,0.786], [0.153,0.786], [0.221,0.786], [0.289,0.786], [0.357,0.786], [0.425,0.786], [0.493,0.786], [0.561,0.786], [0.629,0.786], [0.561,0.786], [0.493,0.786], [0.425,0.786], [0.357,0.786], [0.289,0.786], [0.221,0.786], [0.153,0.786], [0.085,0.786], [0.085,0.744], [0.085,0.659], [0.085,0.574], [0.085,0.489], [0.085,0.404], [0.085,0.319], [0.085,0.234], [0.085,0.149], [0.085,0.064], [0.085,-0.021], [0.085,-0.106], [0.085,-0.191], [0.085,-0.276], [0.085,-0.361], [0.085,-0.446], [0.085,-0.531], [0.085,-0.616], [0.085,-0.701], [0.085,-0.786], [0.153,-0.786], [0.221,-0.786], [0.289,-0.786], [0.357,-0.786], [0.425,-0.786], [0.493,-0.786], [0.561,-0.786], [0.629,-0.786], [0.969,-0.786],  ],\n  'G' : [ [0.085,-0.786], [0.170,-0.786], [0.255,-0.786], [0.340,-0.786], [0.425,-0.786], [0.425,-0.744], [0.493,-0.740], [0.570,-0.710], [0.629,-0.659], [0.680,-0.574], [0.723,-0.489], [0.765,-0.395], [0.799,-0.276], [0.833,-0.132], [0.850,0.021], [0.765,0.021], [0.680,0.021], [0.595,0.021], [0.510,0.021], [0.425,0.021], [0.510,0.021], [0.595,0.021], [0.680,0.021], [0.765,0.021], [0.850,0.021], [0.833,-0.132], [0.799,-0.276], [0.765,-0.395], [0.723,-0.489], [0.680,-0.574], [0.629,-0.659], [0.570,-0.710], [0.493,-0.740], [0.425,-0.744], [0.357,-0.740], [0.281,-0.710], [0.221,-0.659], [0.170,-0.574], [0.128,-0.489], [0.085,-0.395], [0.051,-0.276], [0.017,-0.132], [0.000,0.021], [0.017,0.174], [0.051,0.319], [0.085,0.438], [0.128,0.531], [0.170,0.616], [0.221,0.701], [0.281,0.752], [0.357,0.782], [0.425,0.786], [0.493,0.782], [0.570,0.752], [0.629,0.701], [0.680,0.616], [0.629,0.701], [0.570,0.752], [0.493,0.782], [0.425,0.786], [0.357,0.782], [0.281,0.752], [0.221,0.701], [0.170,0.616], [0.128,0.531], [0.085,0.438], [0.051,0.319], [0.017,0.174], [0.000,0.021], [0.017,-0.132], [0.051,-0.276], [0.085,-0.395], [0.128,-0.489], [0.170,-0.574], [0.221,-0.659], [0.281,-0.710], [0.357,-0.740], [0.425,-0.744], [0.425,-0.786], [0.510,-0.786], [0.595,-0.786], [0.680,-0.786], [0.765,-0.786], [0.850,-0.786], [0.935,-0.786], [1.275,-0.786],  ],\n  'H' : [ [0.085,-0.786], [0.085,-0.701], [0.085,-0.616], [0.085,-0.531], [0.085,-0.446], [0.085,-0.361], [0.085,-0.276], [0.085,-0.191], [0.085,-0.106], [0.085,-0.021], [0.085,0.064], [0.153,0.064], [0.085,0.064], [0.153,0.064], [0.221,0.064], [0.289,0.064], [0.357,0.064], [0.425,0.064], [0.493,0.064], [0.561,0.064], [0.629,0.064], [0.697,0.064], [0.765,0.064], [0.765,0.149], [0.765,0.234], [0.765,0.319], [0.765,0.404], [0.765,0.489], [0.765,0.574], [0.765,0.659], [0.765,0.744], [0.765,0.786], [0.765,0.744], [0.765,0.659], [0.765,0.574], [0.765,0.489], [0.765,0.404], [0.765,0.319], [0.765,0.234], [0.765,0.149], [0.765,0.064], [0.697,0.064], [0.629,0.064], [0.561,0.064], [0.493,0.064], [0.425,0.064], [0.357,0.064], [0.289,0.064], [0.221,0.064], [0.153,0.064], [0.085,0.064], [0.153,0.064], [0.085,0.064], [0.085,0.149], [0.085,0.234], [0.085,0.319], [0.085,0.404], [0.085,0.489], [0.085,0.574], [0.085,0.659], [0.085,0.744], [0.085,0.786], [0.085,0.744], [0.085,0.659], [0.085,0.574], [0.085,0.489], [0.085,0.404], [0.085,0.319], [0.085,0.234], [0.085,0.149], [0.085,0.064], [0.085,-0.021], [0.085,0.064], [0.153,0.064], [0.085,0.064], [0.153,0.064], [0.221,0.064], [0.289,0.064], [0.357,0.064], [0.425,0.064], [0.493,0.064], [0.561,0.064], [0.629,0.064], [0.697,0.064], [0.765,0.064], [0.765,-0.021], [0.765,-0.106], [0.765,-0.191], [0.765,-0.276], [0.765,-0.361], [0.765,-0.446], [0.765,-0.531], [0.765,-0.616], [0.765,-0.701], [0.765,-0.786], [0.850,-0.786], [1.190,-0.786],  ],\n  'I' : [ [0.085,-0.786], [0.170,-0.786], [0.255,-0.786], [0.340,-0.786], [0.340,-0.701], [0.340,-0.616], [0.340,-0.531], [0.340,-0.446], [0.340,-0.361], [0.340,-0.276], [0.340,-0.191], [0.340,-0.106], [0.340,-0.021], [0.340,0.064], [0.340,0.149], [0.340,0.234], [0.340,0.319], [0.340,0.404], [0.340,0.489], [0.340,0.574], [0.340,0.659], [0.340,0.744], [0.340,0.786], [0.255,0.786], [0.170,0.786], [0.085,0.786], [0.170,0.786], [0.255,0.786], [0.340,0.786], [0.425,0.786], [0.510,0.786], [0.595,0.786], [0.510,0.786], [0.425,0.786], [0.340,0.744], [0.340,0.659], [0.340,0.574], [0.340,0.489], [0.340,0.404], [0.340,0.319], [0.340,0.234], [0.340,0.149], [0.340,0.064], [0.340,-0.021], [0.340,-0.106], [0.340,-0.191], [0.340,-0.276], [0.340,-0.361], [0.340,-0.446], [0.340,-0.531], [0.340,-0.616], [0.340,-0.701], [0.340,-0.786], [0.255,-0.701], [0.170,-0.701], [0.085,-0.701], [0.170,-0.701], [0.255,-0.701], [0.340,-0.701], [0.425,-0.701], [0.510,-0.701], [0.595,-0.701], [0.510,-0.701], [0.425,-0.701], [0.340,-0.701], [0.340,-0.786], [0.425,-0.786], [0.510,-0.786], [0.595,-0.786], [0.680,-0.786], [1.020,-0.786],  ],\n  'J' : [ [0.085,-0.786], [0.170,-0.786], [0.255,-0.786], [0.340,-0.786], [0.391,-0.786], [0.425,-0.778], [0.476,-0.752], [0.527,-0.701], [0.561,-0.667], [0.595,-0.616], [0.629,-0.531], [0.663,-0.446], [0.680,-0.361], [0.680,-0.276], [0.680,-0.191], [0.680,-0.106], [0.680,-0.021], [0.680,0.064], [0.680,0.149], [0.680,0.234], [0.680,0.319], [0.680,0.404], [0.680,0.489], [0.680,0.574], [0.680,0.659], [0.680,0.744], [0.680,0.786], [0.680,0.744], [0.680,0.659], [0.680,0.574], [0.680,0.489], [0.680,0.404], [0.680,0.319], [0.680,0.234], [0.680,0.149], [0.680,0.064], [0.680,-0.021], [0.680,-0.106], [0.680,-0.191], [0.680,-0.276], [0.680,-0.361], [0.663,-0.446], [0.629,-0.531], [0.595,-0.616], [0.561,-0.667], [0.527,-0.701], [0.476,-0.752], [0.425,-0.778], [0.391,-0.786], [0.340,-0.786], [0.289,-0.786], [0.255,-0.778], [0.204,-0.752], [0.153,-0.701], [0.119,-0.667], [0.085,-0.616], [0.051,-0.531], [0.017,-0.446], [0.000,-0.361], [0.017,-0.446], [0.051,-0.531], [0.085,-0.616], [0.119,-0.667], [0.153,-0.701], [0.204,-0.752], [0.255,-0.778], [0.289,-0.786], [0.340,-0.786], [0.425,-0.786], [0.510,-0.786], [0.595,-0.786], [0.680,-0.786], [0.765,-0.786], [1.105,-0.786],  ],\n  'K' : [ [0.085,-0.786], [0.085,-0.786], [0.085,-0.701], [0.085,-0.616], [0.085,-0.531], [0.085,-0.446], [0.085,-0.361], [0.085,-0.276], [0.085,-0.191], [0.085,-0.106], [0.085,-0.021], [0.085,0.064], [0.085,0.149], [0.085,0.234], [0.085,0.319], [0.085,0.404], [0.085,0.489], [0.085,0.574], [0.085,0.659], [0.085,0.744], [0.085,0.786], [0.085,0.744], [0.085,0.659], [0.085,0.574], [0.085,0.489], [0.085,0.404], [0.085,0.319], [0.085,0.234], [0.085,0.149], [0.085,0.064], [0.224,0.136], [0.279,0.208], [0.333,0.280], [0.388,0.353], [0.442,0.425], [0.496,0.497], [0.551,0.569], [0.605,0.642], [0.660,0.714], [0.714,0.786], [0.660,0.714], [0.605,0.642], [0.551,0.569], [0.496,0.497], [0.442,0.425], [0.388,0.353], [0.333,0.280], [0.279,0.208], [0.224,0.136], [0.170,0.064], [0.224,-0.021], [0.279,-0.106], [0.333,-0.191], [0.388,-0.276], [0.442,-0.361], [0.496,-0.446], [0.551,-0.531], [0.605,-0.616], [0.660,-0.701], [0.714,-0.786], [0.799,-0.786], [1.139,-0.786],  ],\n  'L' : [ [0.085,-0.786], [0.085,-0.701], [0.085,-0.616], [0.085,-0.531], [0.085,-0.446], [0.085,-0.361], [0.085,-0.276], [0.085,-0.191], [0.085,-0.106], [0.085,-0.021], [0.085,0.064], [0.085,0.149], [0.085,0.234], [0.085,0.319], [0.085,0.404], [0.085,0.489], [0.085,0.574], [0.085,0.659], [0.085,0.744], [0.085,0.786], [0.085,0.744], [0.085,0.659], [0.085,0.574], [0.085,0.489], [0.085,0.404], [0.085,0.319], [0.085,0.234], [0.085,0.149], [0.085,0.064], [0.085,-0.021], [0.085,-0.106], [0.085,-0.191], [0.085,-0.276], [0.085,-0.361], [0.085,-0.446], [0.085,-0.531], [0.085,-0.616], [0.085,-0.701], [0.085,-0.786], [0.170,-0.786], [0.255,-0.786], [0.340,-0.786], [0.425,-0.786], [0.510,-0.786], [0.595,-0.786], [0.680,-0.786], [0.765,-0.786], [0.765,-0.574], [0.765,-0.446], [0.765,-0.574], [0.765,-0.701], [0.765,-0.786], [0.680,-0.786], [0.765,-0.786], [0.850,-0.786], [1.190,-0.786],  ],\n  'M' : [ [0.085,-0.786], [0.085,-0.786], [0.119,-0.629], [0.153,-0.472], [0.187,-0.315], [0.221,-0.157], [0.255,-0.000], [0.289,0.157], [0.323,0.314], [0.357,0.472], [0.391,0.629], [0.425,0.786], [0.459,0.629], [0.493,0.472], [0.527,0.314], [0.561,0.157], [0.595,-0.000], [0.629,-0.157], [0.663,-0.315], [0.697,-0.472], [0.731,-0.629], [0.765,-0.786], [0.799,-0.629], [0.833,-0.472], [0.867,-0.315], [0.901,-0.157], [0.935,-0.000], [0.969,0.157], [1.003,0.314], [1.037,0.472], [1.071,0.629], [1.105,0.786], [1.139,0.629], [1.173,0.472], [1.207,0.314], [1.241,0.157], [1.275,-0.000], [1.309,-0.157], [1.343,-0.315], [1.377,-0.472], [1.411,-0.629], [1.445,-0.786], [1.530,-0.786], [1.870,-0.786],  ],\n  'N' : [ [0.085,-0.786], [0.085,-0.701], [0.085,-0.616], [0.085,-0.531], [0.085,-0.446], [0.085,-0.361], [0.085,-0.276], [0.085,-0.191], [0.085,-0.106], [0.085,-0.021], [0.085,0.064], [0.085,0.149], [0.085,0.234], [0.085,0.319], [0.085,0.404], [0.085,0.489], [0.085,0.574], [0.085,0.659], [0.085,0.744], [0.085,0.786], [0.170,0.629], [0.255,0.472], [0.340,0.314], [0.425,0.157], [0.510,-0.000], [0.595,-0.157], [0.680,-0.315], [0.765,-0.472], [0.850,-0.629], [0.935,-0.786], [0.935,-0.701], [0.935,-0.616], [0.935,-0.531], [0.935,-0.446], [0.935,-0.361], [0.935,-0.276], [0.935,-0.191], [0.935,-0.106], [0.935,-0.021], [0.935,0.064], [0.935,0.149], [0.935,0.234], [0.935,0.319], [0.935,0.404], [0.935,0.489], [0.935,0.574], [0.935,0.659], [0.935,0.744], [0.935,0.786], [0.935,0.744], [0.935,0.659], [0.935,0.574], [0.935,0.489], [0.935,0.404], [0.935,0.319], [0.935,0.234], [0.935,0.149], [0.935,0.064], [0.935,-0.021], [0.935,-0.106], [0.935,-0.191], [0.935,-0.276], [0.935,-0.361], [0.935,-0.446], [0.935,-0.531], [0.935,-0.616], [0.935,-0.701], [0.935,-0.786], [1.020,-0.786], [1.360,-0.786],  ],\n  'O' : [ [0.085,-0.786], [0.170,-0.786], [0.255,-0.786], [0.340,-0.786], [0.425,-0.786], [0.510,-0.786], [0.510,-0.744], [0.578,-0.740], [0.654,-0.710], [0.714,-0.659], [0.765,-0.574], [0.807,-0.489], [0.850,-0.395], [0.884,-0.276], [0.918,-0.132], [0.935,0.021], [0.918,0.174], [0.884,0.319], [0.850,0.438], [0.807,0.531], [0.765,0.616], [0.714,0.701], [0.654,0.752], [0.578,0.782], [0.510,0.786], [0.442,0.782], [0.365,0.752], [0.306,0.701], [0.255,0.616], [0.213,0.531], [0.170,0.438], [0.136,0.319], [0.102,0.174], [0.085,0.021], [0.102,-0.132], [0.136,-0.276], [0.170,-0.395], [0.213,-0.489], [0.255,-0.574], [0.306,-0.659], [0.365,-0.710], [0.442,-0.740], [0.510,-0.744], [0.510,-0.786], [0.595,-0.786], [0.680,-0.786], [0.765,-0.786], [0.850,-0.786], [0.935,-0.786], [1.020,-0.786], [1.360,-0.786],  ],\n  'P' : [ [0.085,-0.786], [0.085,-0.701], [0.085,-0.616], [0.085,-0.531], [0.085,-0.446], [0.085,-0.361], [0.085,-0.276], [0.085,-0.191], [0.085,-0.106], [0.085,-0.021], [0.085,0.064], [0.153,0.064], [0.221,0.064], [0.289,0.064], [0.357,0.064], [0.425,0.064], [0.459,0.072], [0.510,0.098], [0.561,0.149], [0.595,0.183], [0.629,0.234], [0.663,0.319], [0.697,0.404], [0.697,0.446], [0.663,0.531], [0.629,0.616], [0.595,0.667], [0.561,0.701], [0.510,0.752], [0.459,0.777], [0.425,0.786], [0.357,0.786], [0.289,0.786], [0.221,0.786], [0.153,0.786], [0.085,0.786], [0.085,0.744], [0.085,0.659], [0.085,0.574], [0.085,0.489], [0.085,0.404], [0.085,0.319], [0.085,0.234], [0.085,0.149], [0.085,0.064], [0.085,-0.021], [0.085,-0.106], [0.085,-0.191], [0.085,-0.276], [0.085,-0.361], [0.085,-0.446], [0.085,-0.531], [0.085,-0.616], [0.085,-0.701], [0.085,-0.786], [0.153,-0.786], [0.221,-0.786], [0.289,-0.786], [0.357,-0.786], [0.425,-0.786], [0.493,-0.786], [0.561,-0.786], [0.629,-0.786], [0.697,-0.786], [0.765,-0.786], [1.105,-0.786],  ],\n  'Q' : [ [0.085,-0.786], [0.170,-0.786], [0.255,-0.786], [0.340,-0.786], [0.425,-0.786], [0.510,-0.786], [0.510,-0.744], [0.578,-0.740], [0.654,-0.710], [0.714,-0.659], [0.765,-0.574], [0.807,-0.489], [0.850,-0.395], [0.884,-0.276], [0.918,-0.132], [0.935,0.021], [0.918,0.174], [0.884,0.319], [0.850,0.438], [0.807,0.531], [0.765,0.616], [0.714,0.701], [0.654,0.752], [0.578,0.782], [0.510,0.786], [0.442,0.782], [0.365,0.752], [0.306,0.701], [0.255,0.616], [0.213,0.531], [0.170,0.438], [0.136,0.319], [0.102,0.174], [0.085,0.021], [0.102,-0.132], [0.136,-0.276], [0.170,-0.395], [0.213,-0.489], [0.255,-0.574], [0.306,-0.659], [0.365,-0.710], [0.442,-0.740], [0.510,-0.744], [0.510,-0.786], [0.595,-0.786], [0.680,-0.786], [0.765,-0.786], [0.799,-0.854], [0.833,-0.922], [0.867,-0.990], [0.765,-0.786], [0.765,-0.786], [0.867,-0.990], [0.833,-0.922], [0.799,-0.854], [0.765,-0.786], [0.731,-0.718], [0.697,-0.650], [0.663,-0.582], [0.629,-0.514], [0.595,-0.446], [0.629,-0.514], [0.663,-0.582], [0.697,-0.650], [0.731,-0.718], [0.765,-0.786], [0.850,-0.786], [0.935,-0.786], [1.020,-0.786], [1.360,-0.786],  ],\n  'R' : [ [0.085,-0.786], [0.085,-0.701], [0.085,-0.616], [0.085,-0.531], [0.085,-0.446], [0.085,-0.361], [0.085,-0.276], [0.085,-0.191], [0.085,-0.106], [0.085,-0.021], [0.085,0.064], [0.085,0.149], [0.085,0.234], [0.085,0.319], [0.085,0.404], [0.085,0.489], [0.085,0.574], [0.085,0.659], [0.085,0.744], [0.085,0.786], [0.153,0.786], [0.221,0.786], [0.289,0.786], [0.357,0.786], [0.425,0.786], [0.459,0.777], [0.510,0.752], [0.561,0.701], [0.595,0.667], [0.629,0.616], [0.663,0.531], [0.697,0.446], [0.697,0.404], [0.663,0.319], [0.629,0.234], [0.595,0.183], [0.561,0.149], [0.510,0.098], [0.459,0.072], [0.425,0.064], [0.357,0.064], [0.289,0.064], [0.221,0.064], [0.153,0.064], [0.085,0.064], [0.153,0.064], [0.221,0.064], [0.289,0.064], [0.357,0.064], [0.391,-0.021], [0.425,-0.106], [0.459,-0.191], [0.493,-0.276], [0.527,-0.361], [0.561,-0.446], [0.595,-0.531], [0.629,-0.616], [0.663,-0.701], [0.697,-0.786], [0.765,-0.786], [1.105,-0.786],  ],\n  'S' : [ [0.085,-0.786], [0.170,-0.786], [0.255,-0.786], [0.340,-0.786], [0.425,-0.786], [0.425,-0.744], [0.493,-0.740], [0.570,-0.710], [0.629,-0.659], [0.680,-0.574], [0.706,-0.489], [0.697,-0.361], [0.654,-0.234], [0.561,-0.106], [0.425,0.021], [0.289,0.149], [0.196,0.276], [0.153,0.404], [0.145,0.531], [0.170,0.616], [0.221,0.701], [0.281,0.752], [0.357,0.782], [0.425,0.786], [0.493,0.782], [0.570,0.752], [0.629,0.701], [0.680,0.616], [0.723,0.531], [0.680,0.616], [0.629,0.701], [0.570,0.752], [0.493,0.782], [0.425,0.786], [0.357,0.782], [0.281,0.752], [0.221,0.701], [0.170,0.616], [0.145,0.531], [0.153,0.404], [0.196,0.276], [0.289,0.149], [0.425,0.021], [0.561,-0.106], [0.654,-0.234], [0.697,-0.361], [0.706,-0.489], [0.680,-0.574], [0.629,-0.659], [0.570,-0.710], [0.493,-0.740], [0.425,-0.744], [0.357,-0.740], [0.281,-0.710], [0.221,-0.659], [0.170,-0.574], [0.128,-0.489], [0.085,-0.395], [0.128,-0.489], [0.170,-0.574], [0.221,-0.659], [0.281,-0.710], [0.357,-0.740], [0.425,-0.744], [0.425,-0.786], [0.425,-0.744], [0.510,-0.786], [0.595,-0.786], [0.680,-0.786], [0.765,-0.786], [1.105,-0.786],  ],\n  'T' : [ [0.085,-0.786], [0.170,-0.786], [0.255,-0.786], [0.340,-0.786], [0.425,-0.786], [0.510,-0.786], [0.595,-0.786], [0.595,-0.701], [0.595,-0.616], [0.595,-0.531], [0.595,-0.446], [0.595,-0.361], [0.595,-0.276], [0.595,-0.191], [0.595,-0.106], [0.595,-0.021], [0.595,0.064], [0.595,0.149], [0.595,0.234], [0.595,0.319], [0.595,0.404], [0.595,0.489], [0.595,0.574], [0.595,0.659], [0.595,0.744], [0.595,0.786], [0.510,0.786], [0.425,0.786], [0.340,0.786], [0.255,0.786], [0.170,0.786], [0.085,0.786], [0.170,0.786], [0.255,0.786], [0.340,0.786], [0.425,0.786], [0.510,0.786], [0.595,0.786], [0.680,0.786], [0.765,0.786], [0.850,0.786], [0.935,0.786], [1.020,0.786], [1.105,0.786], [1.020,0.786], [0.935,0.786], [0.850,0.786], [0.765,0.786], [0.680,0.786], [0.595,0.744], [0.595,0.659], [0.595,0.574], [0.595,0.489], [0.595,0.404], [0.595,0.319], [0.595,0.234], [0.595,0.149], [0.595,0.064], [0.595,-0.021], [0.595,-0.106], [0.595,-0.191], [0.595,-0.276], [0.595,-0.361], [0.595,-0.446], [0.595,-0.531], [0.595,-0.616], [0.595,-0.701], [0.595,-0.786], [0.680,-0.786], [0.765,-0.786], [0.850,-0.786], [0.935,-0.786], [1.020,-0.786], [1.105,-0.786], [1.445,-0.786],  ],\n  'U' : [ [0.085,-0.786], [0.170,-0.786], [0.255,-0.786], [0.340,-0.786], [0.425,-0.786], [0.510,-0.786], [0.510,-0.744], [0.578,-0.740], [0.654,-0.710], [0.714,-0.659], [0.765,-0.574], [0.807,-0.489], [0.850,-0.395], [0.884,-0.276], [0.918,-0.132], [0.935,0.021], [0.935,0.106], [0.935,0.191], [0.935,0.276], [0.935,0.361], [0.935,0.446], [0.935,0.531], [0.935,0.616], [0.935,0.701], [0.935,0.786], [0.935,0.701], [0.935,0.616], [0.935,0.531], [0.935,0.446], [0.935,0.361], [0.935,0.276], [0.935,0.191], [0.935,0.106], [0.935,0.021], [0.918,-0.132], [0.884,-0.276], [0.850,-0.395], [0.807,-0.489], [0.765,-0.574], [0.714,-0.659], [0.654,-0.710], [0.578,-0.740], [0.510,-0.744], [0.442,-0.740], [0.365,-0.710], [0.306,-0.659], [0.255,-0.574], [0.213,-0.489], [0.170,-0.395], [0.136,-0.276], [0.102,-0.132], [0.085,0.021], [0.085,0.106], [0.085,0.191], [0.085,0.276], [0.085,0.361], [0.085,0.446], [0.085,0.531], [0.085,0.616], [0.085,0.701], [0.085,0.786], [0.085,0.701], [0.085,0.616], [0.085,0.531], [0.085,0.446], [0.085,0.361], [0.085,0.276], [0.085,0.191], [0.085,0.106], [0.085,0.021], [0.102,-0.132], [0.136,-0.276], [0.170,-0.395], [0.213,-0.489], [0.255,-0.574], [0.306,-0.659], [0.365,-0.710], [0.442,-0.740], [0.510,-0.744], [0.510,-0.786], [0.595,-0.786], [0.680,-0.786], [0.765,-0.786], [0.850,-0.786], [0.935,-0.786], [1.020,-0.786], [1.360,-0.786],  ],\n  'V' : [ [0.085,-0.786], [0.170,-0.786], [0.255,-0.786], [0.340,-0.786], [0.425,-0.786], [0.510,-0.786], [0.595,-0.786], [0.646,-0.629], [0.697,-0.472], [0.748,-0.315], [0.799,-0.157], [0.850,-0.000], [0.901,0.157], [0.952,0.314], [1.003,0.472], [1.054,0.629], [1.105,0.786], [1.054,0.629], [1.003,0.472], [0.952,0.314], [0.901,0.157], [0.850,-0.000], [0.799,-0.157], [0.748,-0.315], [0.697,-0.472], [0.646,-0.629], [0.595,-0.786], [0.544,-0.629], [0.493,-0.472], [0.442,-0.315], [0.391,-0.157], [0.340,-0.000], [0.289,0.157], [0.238,0.314], [0.187,0.472], [0.136,0.629], [0.085,0.786], [0.136,0.629], [0.187,0.472], [0.238,0.314], [0.289,0.157], [0.340,-0.000], [0.391,-0.157], [0.442,-0.315], [0.493,-0.472], [0.544,-0.629], [0.595,-0.786], [0.680,-0.786], [0.765,-0.786], [0.850,-0.786], [0.935,-0.786], [1.020,-0.786], [1.105,-0.786], [1.190,-0.786], [1.530,-0.786],  ],\n  'W' : [ [0.085,-0.786], [0.170,-0.786], [0.255,-0.786], [0.340,-0.786], [0.425,-0.786], [0.425,-0.786], [0.391,-0.629], [0.357,-0.472], [0.323,-0.315], [0.289,-0.157], [0.255,-0.000], [0.221,0.157], [0.187,0.314], [0.153,0.472], [0.119,0.629], [0.085,0.786], [0.119,0.629], [0.153,0.472], [0.187,0.314], [0.221,0.157], [0.255,-0.000], [0.289,-0.157], [0.323,-0.315], [0.357,-0.472], [0.391,-0.629], [0.425,-0.786], [0.459,-0.629], [0.493,-0.472], [0.527,-0.315], [0.561,-0.157], [0.595,-0.000], [0.629,0.157], [0.663,0.314], [0.697,0.472], [0.731,0.629], [0.765,0.786], [0.799,0.629], [0.833,0.472], [0.867,0.314], [0.901,0.157], [0.935,-0.000], [0.969,-0.157], [1.003,-0.315], [1.037,-0.472], [1.071,-0.629], [1.105,-0.786], [1.139,-0.629], [1.173,-0.472], [1.207,-0.315], [1.241,-0.157], [1.275,-0.000], [1.309,0.157], [1.343,0.314], [1.377,0.472], [1.411,0.629], [1.445,0.786], [1.411,0.629], [1.377,0.472], [1.343,0.314], [1.309,0.157], [1.275,-0.000], [1.241,-0.157], [1.207,-0.315], [1.173,-0.472], [1.139,-0.629], [1.105,-0.786], [1.190,-0.786], [1.275,-0.786], [1.360,-0.786], [1.445,-0.786], [1.530,-0.786], [1.870,-0.786],  ],\n  'X' : [ [0.085,-0.786], [0.187,-0.629], [0.289,-0.472], [0.391,-0.315], [0.493,-0.157], [0.595,-0.000], [0.697,0.157], [0.799,0.314], [0.901,0.472], [1.003,0.629], [1.105,0.786], [1.003,0.629], [0.901,0.472], [0.799,0.314], [0.697,0.157], [0.595,-0.000], [0.493,0.157], [0.391,0.314], [0.289,0.472], [0.187,0.629], [0.085,0.786], [0.187,0.629], [0.289,0.472], [0.391,0.314], [0.493,0.157], [0.595,-0.000], [0.697,-0.157], [0.799,-0.315], [0.901,-0.472], [1.003,-0.629], [1.105,-0.786], [1.190,-0.786], [1.530,-0.786],  ],\n  'Y' : [ [0.085,-0.786], [0.170,-0.786], [0.255,-0.786], [0.340,-0.786], [0.425,-0.786], [0.510,-0.786], [0.595,-0.786], [0.595,-0.701], [0.595,-0.616], [0.595,-0.531], [0.595,-0.446], [0.595,-0.361], [0.595,-0.276], [0.595,-0.191], [0.595,-0.106], [0.595,-0.021], [0.595,-0.000], [0.697,0.157], [0.799,0.314], [0.901,0.472], [1.003,0.629], [1.105,0.786], [1.003,0.629], [0.901,0.472], [0.799,0.314], [0.697,0.157], [0.595,-0.000], [0.493,0.157], [0.391,0.314], [0.289,0.472], [0.187,0.629], [0.085,0.786], [0.187,0.629], [0.289,0.472], [0.391,0.314], [0.493,0.157], [0.595,-0.000], [0.595,-0.021], [0.595,-0.106], [0.595,-0.191], [0.595,-0.276], [0.595,-0.361], [0.595,-0.446], [0.595,-0.531], [0.595,-0.616], [0.595,-0.701], [0.595,-0.786], [0.680,-0.786], [0.765,-0.786], [0.850,-0.786], [0.935,-0.786], [1.020,-0.786], [1.105,-0.786], [1.190,-0.786], [1.530,-0.786],  ],\n  'Z' : [ [0.085,-0.786], [0.187,-0.629], [0.289,-0.472], [0.391,-0.315], [0.493,-0.157], [0.595,-0.000], [0.697,0.157], [0.799,0.314], [0.901,0.472], [1.003,0.629], [1.105,0.786], [0.935,0.786], [0.765,0.786], [0.595,0.786], [0.425,0.786], [0.255,0.786], [0.085,0.786], [0.255,0.786], [0.425,0.786], [0.595,0.786], [0.765,0.786], [0.935,0.786], [1.105,0.786], [1.003,0.629], [0.901,0.472], [0.799,0.314], [0.697,0.157], [0.595,-0.000], [0.493,-0.157], [0.391,-0.315], [0.289,-0.472], [0.187,-0.629], [0.085,-0.769], [0.255,-0.769], [0.425,-0.769], [0.595,-0.769], [0.765,-0.769], [0.935,-0.769], [1.105,-0.769], [1.105,-0.786], [1.190,-0.786], [1.530,-0.786],  ],\n  'a' : [ [0.068,-0.786], [0.153,-0.786], [0.238,-0.786], [0.374,-0.786], [0.442,-0.786], [0.510,-0.786], [0.578,-0.786], [0.646,-0.786], [0.646,-0.701], [0.646,-0.616], [0.646,-0.531], [0.646,-0.446], [0.646,-0.361], [0.646,-0.276], [0.646,-0.191], [0.646,-0.106], [0.646,-0.021], [0.646,0.064], [0.578,0.064], [0.510,0.064], [0.442,0.064], [0.374,0.064], [0.340,0.055], [0.289,0.030], [0.238,-0.021], [0.204,-0.055], [0.170,-0.106], [0.136,-0.191], [0.102,-0.276], [0.085,-0.361], [0.102,-0.446], [0.136,-0.531], [0.170,-0.616], [0.204,-0.667], [0.238,-0.701], [0.289,-0.752], [0.340,-0.778], [0.374,-0.786], [0.442,-0.786], [0.510,-0.786], [0.578,-0.786], [0.731,-0.786], [1.071,-0.786],  ],\n  'b' : [ [0.085,-0.786], [0.153,-0.786], [0.221,-0.786], [0.289,-0.786], [0.357,-0.786], [0.425,-0.786], [0.459,-0.778], [0.510,-0.752], [0.561,-0.701], [0.595,-0.667], [0.629,-0.616], [0.663,-0.531], [0.697,-0.446], [0.714,-0.361], [0.697,-0.276], [0.663,-0.191], [0.629,-0.106], [0.595,-0.055], [0.561,-0.021], [0.510,0.030], [0.459,0.055], [0.425,0.064], [0.357,0.064], [0.289,0.064], [0.221,0.064], [0.153,0.064], [0.085,0.064], [0.085,0.149], [0.085,0.234], [0.085,0.319], [0.085,0.404], [0.085,0.489], [0.085,0.574], [0.085,0.659], [0.085,0.744], [0.085,0.786], [0.085,0.744], [0.085,0.659], [0.085,0.574], [0.085,0.489], [0.085,0.404], [0.085,0.319], [0.085,0.234], [0.085,0.149], [0.085,0.064], [0.085,-0.021], [0.085,-0.106], [0.085,-0.191], [0.085,-0.276], [0.085,-0.361], [0.085,-0.446], [0.085,-0.531], [0.085,-0.616], [0.085,-0.701], [0.085,-0.786], [0.017,-0.786], [0.085,-0.786], [0.153,-0.786], [0.221,-0.786], [0.289,-0.786], [0.357,-0.786], [0.425,-0.786], [0.561,-0.786], [0.646,-0.786], [0.765,-0.786], [1.105,-0.786],  ],\n  'c' : [ [0.085,-0.786], [0.170,-0.786], [0.255,-0.786], [0.374,-0.786], [0.340,-0.778], [0.289,-0.752], [0.238,-0.701], [0.204,-0.667], [0.170,-0.616], [0.136,-0.531], [0.102,-0.446], [0.085,-0.361], [0.102,-0.276], [0.136,-0.191], [0.170,-0.106], [0.204,-0.055], [0.238,-0.021], [0.289,0.030], [0.340,0.055], [0.374,0.064], [0.442,0.064], [0.510,0.064], [0.578,0.064], [0.646,0.064], [0.578,0.064], [0.510,0.064], [0.442,0.064], [0.374,0.064], [0.340,0.055], [0.289,0.030], [0.238,-0.021], [0.204,-0.055], [0.170,-0.106], [0.136,-0.191], [0.102,-0.276], [0.085,-0.361], [0.102,-0.446], [0.136,-0.531], [0.170,-0.616], [0.204,-0.667], [0.238,-0.701], [0.289,-0.752], [0.340,-0.778], [0.374,-0.786], [0.442,-0.786], [0.510,-0.786], [0.578,-0.786], [0.646,-0.786], [0.986,-0.786],  ],\n  'd' : [ [0.085,-0.786], [0.170,-0.786], [0.255,-0.786], [0.374,-0.786], [0.442,-0.786], [0.510,-0.786], [0.578,-0.786], [0.646,-0.786], [0.714,-0.786], [0.714,-0.701], [0.714,-0.616], [0.714,-0.531], [0.714,-0.446], [0.714,-0.361], [0.714,-0.276], [0.714,-0.191], [0.714,-0.106], [0.714,-0.021], [0.714,0.064], [0.714,0.149], [0.714,0.234], [0.714,0.319], [0.714,0.404], [0.714,0.489], [0.714,0.574], [0.714,0.659], [0.714,0.744], [0.714,0.786], [0.714,0.744], [0.714,0.659], [0.714,0.574], [0.714,0.489], [0.714,0.404], [0.714,0.319], [0.714,0.234], [0.714,0.149], [0.714,0.064], [0.646,0.064], [0.578,0.064], [0.510,0.064], [0.442,0.064], [0.374,0.064], [0.340,0.055], [0.289,0.030], [0.238,-0.021], [0.204,-0.055], [0.170,-0.106], [0.136,-0.191], [0.102,-0.276], [0.085,-0.361], [0.102,-0.446], [0.136,-0.531], [0.170,-0.616], [0.204,-0.667], [0.238,-0.701], [0.289,-0.752], [0.340,-0.778], [0.374,-0.786], [0.442,-0.786], [0.510,-0.786], [0.578,-0.786], [0.646,-0.786], [0.714,-0.786], [0.799,-0.786], [1.139,-0.786],  ],\n  'e' : [ [0.085,-0.786], [0.170,-0.786], [0.255,-0.786], [0.374,-0.786], [0.340,-0.778], [0.289,-0.752], [0.238,-0.701], [0.204,-0.667], [0.170,-0.616], [0.128,-0.531], [0.102,-0.446], [0.094,-0.361], [0.179,-0.361], [0.255,-0.361], [0.332,-0.361], [0.408,-0.361], [0.476,-0.361], [0.518,-0.361], [0.595,-0.361], [0.671,-0.361], [0.748,-0.361], [0.723,-0.276], [0.706,-0.191], [0.663,-0.106], [0.629,-0.055], [0.595,-0.021], [0.544,0.030], [0.493,0.055], [0.442,0.064], [0.374,0.064], [0.340,0.055], [0.289,0.030], [0.238,-0.021], [0.204,-0.055], [0.170,-0.106], [0.128,-0.191], [0.102,-0.276], [0.102,-0.446], [0.128,-0.531], [0.170,-0.616], [0.204,-0.667], [0.238,-0.701], [0.289,-0.752], [0.340,-0.778], [0.442,-0.786], [0.510,-0.786], [0.578,-0.786], [0.646,-0.786], [0.714,-0.786], [0.816,-0.786], [1.156,-0.786],  ],\n  'f' : [ [0.085,-0.786], [0.170,-0.786], [0.255,-0.786], [0.340,-0.786], [0.425,-0.786], [0.425,-0.701], [0.425,-0.616], [0.425,-0.531], [0.425,-0.446], [0.425,-0.361], [0.425,-0.276], [0.425,-0.191], [0.425,-0.106], [0.425,-0.021], [0.425,0.064], [0.510,0.064], [0.595,0.064], [0.680,0.064], [0.807,0.064], [0.680,0.064], [0.595,0.064], [0.510,0.064], [0.425,0.064], [0.340,0.064], [0.255,0.064], [0.170,0.064], [0.043,0.064], [0.170,0.064], [0.255,0.064], [0.340,0.064], [0.425,0.064], [0.425,0.149], [0.425,0.234], [0.425,0.319], [0.442,0.446], [0.468,0.531], [0.510,0.616], [0.544,0.667], [0.578,0.701], [0.629,0.752], [0.680,0.777], [0.714,0.786], [0.782,0.786], [0.850,0.786], [0.782,0.786], [0.714,0.786], [0.680,0.777], [0.629,0.752], [0.578,0.701], [0.544,0.667], [0.510,0.616], [0.468,0.531], [0.442,0.446], [0.425,0.319], [0.425,0.234], [0.425,0.149], [0.425,0.064], [0.425,-0.021], [0.425,-0.106], [0.425,-0.191], [0.425,-0.276], [0.425,-0.361], [0.425,-0.446], [0.425,-0.531], [0.425,-0.616], [0.425,-0.701], [0.425,-0.786], [0.510,-0.786], [0.595,-0.786], [0.680,-0.786], [0.765,-0.786], [0.850,-0.786], [0.935,-0.786], [1.275,-0.786],  ],\n  'g' : [ [0.085,-0.786], [0.170,-0.786], [0.255,-0.786], [0.340,-0.786], [0.442,-0.786], [0.510,-0.786], [0.578,-0.786], [0.646,-0.786], [0.646,-0.871], [0.646,-0.956], [0.646,-1.041], [0.646,-1.126], [0.629,-1.254], [0.603,-1.339], [0.561,-1.424], [0.527,-1.475], [0.493,-1.509], [0.442,-1.560], [0.391,-1.585], [0.357,-1.594], [0.289,-1.594], [0.221,-1.594], [0.153,-1.594], [0.221,-1.594], [0.289,-1.594], [0.357,-1.594], [0.391,-1.585], [0.442,-1.560], [0.493,-1.509], [0.527,-1.475], [0.561,-1.424], [0.603,-1.339], [0.629,-1.254], [0.646,-1.126], [0.646,-1.041], [0.646,-0.956], [0.646,-0.871], [0.646,-0.786], [0.646,-0.701], [0.646,-0.616], [0.646,-0.531], [0.646,-0.446], [0.646,-0.361], [0.646,-0.276], [0.646,-0.191], [0.646,-0.106], [0.646,-0.021], [0.646,0.064], [0.578,0.064], [0.510,0.064], [0.442,0.064], [0.374,0.064], [0.340,0.055], [0.289,0.030], [0.238,-0.021], [0.204,-0.055], [0.170,-0.106], [0.136,-0.191], [0.102,-0.276], [0.085,-0.361], [0.102,-0.446], [0.136,-0.531], [0.170,-0.616], [0.204,-0.667], [0.238,-0.701], [0.289,-0.752], [0.340,-0.778], [0.374,-0.786], [0.442,-0.786], [0.510,-0.786], [0.578,-0.786], [0.714,-0.786], [1.054,-0.786],  ],\n  'h' : [ [0.085,-0.786], [0.085,-0.701], [0.085,-0.616], [0.085,-0.531], [0.085,-0.446], [0.085,-0.361], [0.085,-0.276], [0.085,-0.191], [0.085,-0.106], [0.085,-0.021], [0.085,0.064], [0.085,0.149], [0.085,0.234], [0.085,0.319], [0.085,0.404], [0.085,0.489], [0.085,0.574], [0.085,0.659], [0.085,0.744], [0.085,0.744], [0.085,0.786], [0.085,0.659], [0.085,0.574], [0.085,0.489], [0.085,0.404], [0.085,0.319], [0.085,0.234], [0.085,0.149], [0.085,0.064], [0.085,-0.106], [0.102,-0.064], [0.153,-0.030], [0.238,0.021], [0.323,0.064], [0.425,0.064], [0.510,0.021], [0.595,-0.030], [0.646,-0.064], [0.663,-0.106], [0.663,-0.191], [0.663,-0.276], [0.663,-0.361], [0.663,-0.446], [0.663,-0.531], [0.663,-0.616], [0.663,-0.701], [0.663,-0.786], [0.748,-0.786], [1.088,-0.786],  ],\n  'i' : [ [0.085,-0.786], [0.085,-0.701], [0.085,-0.616], [0.085,-0.531], [0.085,-0.446], [0.085,-0.361], [0.085,-0.276], [0.085,-0.191], [0.085,-0.106], [0.085,-0.021], [0.085,0.064], [0.085,-0.021], [0.085,-0.106], [0.085,-0.191], [0.085,-0.276], [0.085,-0.361], [0.085,-0.446], [0.085,-0.531], [0.085,-0.616], [0.085,-0.701], [0.085,-0.786], [0.170,-0.786], [0.510,-0.786],  ],\n  'j' : [ [0.085,-0.786], [0.170,-0.786], [0.255,-0.786], [0.340,-0.786], [0.425,-0.786], [0.493,-0.786], [0.493,-0.701], [0.493,-0.616], [0.493,-0.531], [0.493,-0.446], [0.493,-0.361], [0.493,-0.276], [0.493,-0.191], [0.493,-0.106], [0.493,-0.021], [0.493,0.064], [0.493,-0.021], [0.493,-0.106], [0.493,-0.191], [0.493,-0.276], [0.493,-0.361], [0.493,-0.446], [0.493,-0.531], [0.493,-0.616], [0.493,-0.701], [0.493,-0.786], [0.493,-0.871], [0.493,-0.956], [0.493,-1.041], [0.493,-1.126], [0.476,-1.254], [0.451,-1.339], [0.408,-1.424], [0.374,-1.475], [0.340,-1.509], [0.289,-1.560], [0.238,-1.585], [0.204,-1.594], [0.136,-1.594], [0.068,-1.594], [0.000,-1.594], [0.068,-1.594], [0.136,-1.594], [0.204,-1.594], [0.238,-1.585], [0.289,-1.560], [0.340,-1.509], [0.374,-1.475], [0.408,-1.424], [0.451,-1.339], [0.476,-1.254], [0.493,-1.126], [0.493,-1.041], [0.493,-0.956], [0.493,-0.871], [0.493,-0.786], [0.442,-0.786], [0.493,-0.786], [0.578,-0.786], [0.918,-0.786],  ],\n  'k' : [ [0.085,-0.786], [0.085,-0.701], [0.085,-0.616], [0.085,-0.531], [0.085,-0.446], [0.085,-0.361], [0.085,-0.276], [0.085,-0.191], [0.085,-0.106], [0.085,-0.021], [0.085,0.064], [0.085,0.149], [0.085,0.234], [0.085,0.319], [0.085,0.404], [0.085,0.489], [0.085,0.574], [0.085,0.659], [0.085,0.744], [0.085,0.744], [0.085,0.786], [0.085,0.659], [0.085,0.574], [0.085,0.489], [0.085,0.404], [0.085,0.319], [0.085,0.234], [0.085,0.149], [0.085,0.064], [0.085,-0.021], [0.085,-0.106], [0.085,-0.191], [0.085,-0.276], [0.085,-0.361], [0.184,-0.295], [0.283,-0.228], [0.383,-0.162], [0.482,-0.095], [0.581,-0.029], [0.680,0.038], [0.581,-0.029], [0.482,-0.095], [0.383,-0.162], [0.283,-0.228], [0.184,-0.295], [0.085,-0.361], [0.184,-0.432], [0.283,-0.503], [0.383,-0.574], [0.482,-0.645], [0.581,-0.716], [0.680,-0.786], [0.765,-0.786], [1.105,-0.786],  ],\n  'l' : [ [0.085,-0.786], [0.085,-0.701], [0.085,-0.616], [0.085,-0.531], [0.085,-0.446], [0.085,-0.361], [0.085,-0.276], [0.085,-0.191], [0.085,-0.106], [0.085,-0.021], [0.085,0.064], [0.085,0.149], [0.085,0.234], [0.085,0.319], [0.085,0.404], [0.085,0.489], [0.085,0.574], [0.085,0.659], [0.085,0.744], [0.085,0.744], [0.085,0.786], [0.085,0.659], [0.085,0.574], [0.085,0.489], [0.085,0.404], [0.085,0.319], [0.085,0.234], [0.085,0.149], [0.085,0.064], [0.085,-0.021], [0.085,-0.106], [0.085,-0.191], [0.085,-0.276], [0.085,-0.361], [0.085,-0.446], [0.085,-0.531], [0.085,-0.616], [0.085,-0.701], [0.085,-0.786], [0.170,-0.786], [0.510,-0.786],  ],\n  'm' : [ [0.085,-0.786], [0.085,-0.701], [0.085,-0.616], [0.085,-0.531], [0.085,-0.446], [0.085,-0.361], [0.085,-0.276], [0.085,-0.191], [0.085,-0.106], [0.085,-0.021], [0.153,0.004], [0.255,0.030], [0.323,0.047], [0.391,0.047], [0.459,0.030], [0.561,0.004], [0.612,-0.021], [0.629,-0.106], [0.629,-0.191], [0.629,-0.276], [0.629,-0.361], [0.629,-0.446], [0.629,-0.531], [0.629,-0.616], [0.629,-0.701], [0.629,-0.808], [0.629,-0.701], [0.629,-0.616], [0.629,-0.531], [0.629,-0.446], [0.629,-0.361], [0.629,-0.276], [0.629,-0.191], [0.629,-0.106], [0.646,-0.021], [0.697,0.004], [0.799,0.030], [0.867,0.047], [0.935,0.047], [1.003,0.030], [1.105,0.004], [1.156,-0.021], [1.173,-0.106], [1.173,-0.191], [1.173,-0.276], [1.173,-0.361], [1.173,-0.446], [1.173,-0.531], [1.173,-0.616], [1.173,-0.701], [1.173,-0.786], [1.258,-0.786], [1.598,-0.786],  ],\n  'n' : [ [0.085,-0.786], [0.085,-0.701], [0.085,-0.616], [0.085,-0.531], [0.085,-0.446], [0.085,-0.361], [0.085,-0.276], [0.085,-0.191], [0.085,-0.106], [0.085,-0.021], [0.153,0.004], [0.255,0.030], [0.323,0.047], [0.391,0.047], [0.459,0.030], [0.561,0.004], [0.612,-0.021], [0.629,-0.106], [0.629,-0.191], [0.629,-0.276], [0.629,-0.361], [0.629,-0.446], [0.629,-0.531], [0.629,-0.616], [0.629,-0.701], [0.629,-0.786], [0.714,-0.786], [1.054,-0.786],  ],\n  'o' : [ [0.085,-0.786], [0.170,-0.786], [0.255,-0.786], [0.340,-0.786], [0.425,-0.786], [0.510,-0.786], [0.595,-0.786], [0.646,-0.786], [0.680,-0.778], [0.731,-0.752], [0.782,-0.701], [0.816,-0.667], [0.850,-0.616], [0.884,-0.531], [0.918,-0.446], [0.935,-0.361], [0.918,-0.276], [0.884,-0.191], [0.850,-0.106], [0.816,-0.055], [0.782,-0.021], [0.731,0.030], [0.680,0.055], [0.646,0.064], [0.578,0.064], [0.510,0.064], [0.442,0.064], [0.374,0.064], [0.340,0.055], [0.289,0.030], [0.238,-0.021], [0.204,-0.055], [0.170,-0.106], [0.136,-0.191], [0.102,-0.276], [0.085,-0.361], [0.102,-0.446], [0.136,-0.531], [0.170,-0.616], [0.204,-0.667], [0.238,-0.701], [0.289,-0.752], [0.340,-0.778], [0.374,-0.786], [0.425,-0.786], [0.510,-0.786], [0.595,-0.786], [0.680,-0.786], [0.765,-0.786], [0.850,-0.786], [0.935,-0.786], [1.020,-0.786], [1.360,-0.786],  ],\n  'p' : [ [0.085,-0.786], [0.085,-0.871], [0.085,-0.956], [0.085,-1.041], [0.085,-1.126], [0.085,-1.211], [0.085,-1.296], [0.085,-1.381], [0.085,-1.466], [0.085,-1.551], [0.085,-1.211], [0.085,-1.551], [0.085,-1.466], [0.085,-1.381], [0.085,-1.296], [0.085,-1.211], [0.085,-1.126], [0.085,-1.041], [0.085,-0.956], [0.085,-0.871], [0.153,-0.786], [0.221,-0.786], [0.289,-0.786], [0.357,-0.786], [0.391,-0.778], [0.442,-0.752], [0.493,-0.701], [0.527,-0.667], [0.561,-0.616], [0.595,-0.531], [0.629,-0.446], [0.646,-0.361], [0.629,-0.276], [0.595,-0.191], [0.561,-0.106], [0.527,-0.055], [0.493,-0.021], [0.442,0.030], [0.391,0.055], [0.357,0.064], [0.289,0.064], [0.221,0.064], [0.153,0.064], [0.085,0.064], [0.085,-0.021], [0.085,-0.106], [0.085,-0.191], [0.085,-0.276], [0.085,-0.361], [0.085,-0.446], [0.085,-0.531], [0.085,-0.616], [0.085,-0.701], [0.085,-0.786], [0.153,-0.786], [0.221,-0.786], [0.289,-0.786], [0.357,-0.786], [0.493,-0.786], [0.578,-0.786], [0.663,-0.786], [0.731,-0.786], [1.071,-0.786],  ],\n  'q' : [ [0.085,-0.786], [0.170,-0.786], [0.255,-0.786], [0.374,-0.786], [0.442,-0.786], [0.510,-0.786], [0.578,-0.786], [0.646,-0.786], [0.646,-0.871], [0.646,-0.956], [0.646,-1.041], [0.646,-1.126], [0.663,-1.254], [0.689,-1.339], [0.731,-1.424], [0.765,-1.475], [0.799,-1.509], [0.850,-1.560], [0.901,-1.585], [0.935,-1.594], [1.003,-1.594], [1.071,-1.594], [1.139,-1.594], [1.071,-1.594], [1.003,-1.594], [0.935,-1.594], [0.901,-1.585], [0.850,-1.560], [0.799,-1.509], [0.765,-1.475], [0.731,-1.424], [0.689,-1.339], [0.663,-1.254], [0.646,-1.126], [0.646,-1.041], [0.646,-0.956], [0.646,-0.871], [0.646,-0.786], [0.646,-0.701], [0.646,-0.616], [0.646,-0.531], [0.646,-0.446], [0.646,-0.361], [0.646,-0.276], [0.646,-0.191], [0.646,-0.106], [0.646,-0.021], [0.646,0.064], [0.578,0.064], [0.510,0.064], [0.442,0.064], [0.374,0.064], [0.340,0.055], [0.289,0.030], [0.238,-0.021], [0.204,-0.055], [0.170,-0.106], [0.136,-0.191], [0.102,-0.276], [0.085,-0.361], [0.102,-0.446], [0.136,-0.531], [0.170,-0.616], [0.204,-0.667], [0.238,-0.701], [0.289,-0.752], [0.340,-0.778], [0.374,-0.786], [0.442,-0.786], [0.510,-0.786], [0.578,-0.786], [0.714,-0.786], [0.816,-0.786], [0.918,-0.786], [1.020,-0.786], [1.105,-0.786], [1.224,-0.786], [1.564,-0.786],  ],\n  'r' : [ [0.085,-0.786], [0.085,-0.701], [0.085,-0.616], [0.085,-0.531], [0.085,-0.446], [0.085,-0.361], [0.085,-0.276], [0.085,-0.191], [0.085,-0.106], [0.085,-0.021], [0.085,0.064], [0.085,-0.021], [0.085,0.149], [0.085,0.191], [0.085,0.149], [0.085,-0.021], [0.153,0.004], [0.255,0.030], [0.323,0.055], [0.391,0.064], [0.459,0.055], [0.527,0.030], [0.595,-0.021], [0.527,0.030], [0.459,0.055], [0.391,0.064], [0.323,0.055], [0.255,0.030], [0.153,0.004], [0.085,-0.021], [0.085,-0.106], [0.085,-0.191], [0.085,-0.276], [0.085,-0.361], [0.085,-0.446], [0.085,-0.531], [0.085,-0.616], [0.085,-0.701], [0.085,-0.786], [0.170,-0.786], [0.255,-0.786], [0.340,-0.786], [0.425,-0.786], [0.510,-0.786], [0.595,-0.786], [0.680,-0.786], [1.020,-0.786],  ],\n  's' : [ [0.085,-0.786], [0.170,-0.786], [0.255,-0.786], [0.340,-0.786], [0.425,-0.786], [0.510,-0.786], [0.561,-0.786], [0.595,-0.778], [0.646,-0.752], [0.697,-0.701], [0.731,-0.667], [0.765,-0.616], [0.756,-0.565], [0.731,-0.531], [0.663,-0.489], [0.595,-0.446], [0.510,-0.404], [0.425,-0.361], [0.340,-0.319], [0.255,-0.276], [0.187,-0.234], [0.119,-0.191], [0.102,-0.115], [0.119,-0.055], [0.153,-0.021], [0.204,0.030], [0.255,0.055], [0.289,0.064], [0.357,0.064], [0.425,0.064], [0.493,0.064], [0.561,0.064], [0.595,0.055], [0.646,0.030], [0.697,-0.021], [0.731,-0.055], [0.697,-0.021], [0.646,0.030], [0.595,0.055], [0.561,0.064], [0.493,0.064], [0.425,0.064], [0.357,0.064], [0.289,0.064], [0.255,0.055], [0.204,0.030], [0.153,-0.021], [0.119,-0.055], [0.102,-0.115], [0.119,-0.191], [0.187,-0.234], [0.255,-0.276], [0.340,-0.319], [0.425,-0.361], [0.510,-0.404], [0.595,-0.446], [0.663,-0.489], [0.731,-0.531], [0.756,-0.565], [0.765,-0.616], [0.731,-0.667], [0.697,-0.701], [0.646,-0.752], [0.595,-0.778], [0.561,-0.786], [0.510,-0.786], [0.425,-0.786], [0.340,-0.786], [0.289,-0.786], [0.255,-0.778], [0.204,-0.752], [0.153,-0.701], [0.119,-0.667], [0.060,-0.616], [0.119,-0.667], [0.153,-0.701], [0.204,-0.752], [0.255,-0.778], [0.289,-0.786], [0.340,-0.786], [0.425,-0.786], [0.510,-0.786], [0.595,-0.786], [0.680,-0.786], [0.765,-0.786], [0.850,-0.786], [1.190,-0.786],  ],\n  't' : [ [0.085,-0.786], [0.170,-0.786], [0.255,-0.786], [0.340,-0.786], [0.374,-0.786], [0.374,-0.701], [0.374,-0.616], [0.374,-0.531], [0.374,-0.446], [0.374,-0.361], [0.374,-0.276], [0.374,-0.191], [0.374,-0.106], [0.374,-0.021], [0.374,0.064], [0.374,0.149], [0.374,0.234], [0.374,0.319], [0.374,0.361], [0.374,0.446], [0.306,0.446], [0.238,0.446], [0.170,0.446], [0.043,0.446], [0.170,0.446], [0.238,0.446], [0.306,0.446], [0.374,0.446], [0.442,0.446], [0.510,0.446], [0.578,0.446], [0.706,0.446], [0.578,0.446], [0.510,0.446], [0.442,0.446], [0.374,0.446], [0.374,0.531], [0.374,0.616], [0.374,0.701], [0.374,0.786], [0.374,0.701], [0.374,0.616], [0.374,0.531], [0.374,0.446], [0.374,0.361], [0.374,0.319], [0.374,0.234], [0.374,0.149], [0.374,0.064], [0.374,-0.021], [0.374,-0.106], [0.374,-0.191], [0.374,-0.276], [0.374,-0.361], [0.374,-0.446], [0.374,-0.531], [0.374,-0.616], [0.374,-0.701], [0.374,-0.786], [0.459,-0.786], [0.544,-0.786], [0.663,-0.786], [0.765,-0.786], [1.105,-0.786],  ],\n  'u' : [ [0.085,-0.786], [0.170,-0.786], [0.255,-0.786], [0.340,-0.786], [0.425,-0.786], [0.323,-0.769], [0.255,-0.752], [0.153,-0.727], [0.102,-0.701], [0.085,-0.616], [0.085,-0.531], [0.085,-0.446], [0.085,-0.361], [0.085,-0.276], [0.085,-0.191], [0.085,-0.106], [0.085,-0.021], [0.085,0.064], [0.085,-0.021], [0.085,-0.106], [0.085,-0.191], [0.085,-0.276], [0.085,-0.361], [0.085,-0.446], [0.085,-0.531], [0.085,-0.616], [0.102,-0.701], [0.153,-0.727], [0.255,-0.752], [0.323,-0.769], [0.391,-0.786], [0.459,-0.769], [0.527,-0.752], [0.629,-0.727], [0.680,-0.701], [0.697,-0.701], [0.697,-0.616], [0.697,-0.531], [0.697,-0.446], [0.697,-0.361], [0.697,-0.276], [0.697,-0.191], [0.697,-0.106], [0.697,-0.021], [0.697,0.064], [0.697,-0.021], [0.697,-0.106], [0.697,-0.191], [0.697,-0.276], [0.697,-0.361], [0.697,-0.446], [0.697,-0.531], [0.697,-0.616], [0.697,-0.701], [0.697,-0.786], [0.782,-0.786], [1.122,-0.786],  ],\n  'v' : [ [0.085,-0.786], [0.170,-0.786], [0.255,-0.786], [0.340,-0.786], [0.468,-0.786], [0.429,-0.701], [0.391,-0.616], [0.353,-0.531], [0.315,-0.446], [0.276,-0.361], [0.238,-0.276], [0.200,-0.191], [0.162,-0.106], [0.123,-0.021], [0.085,0.064], [0.123,-0.021], [0.162,-0.106], [0.200,-0.191], [0.238,-0.276], [0.276,-0.361], [0.315,-0.446], [0.353,-0.531], [0.391,-0.616], [0.429,-0.701], [0.468,-0.786], [0.506,-0.701], [0.544,-0.616], [0.582,-0.531], [0.620,-0.446], [0.659,-0.361], [0.697,-0.276], [0.735,-0.191], [0.773,-0.106], [0.812,-0.021], [0.850,0.064], [0.812,-0.021], [0.773,-0.106], [0.735,-0.191], [0.697,-0.276], [0.659,-0.361], [0.620,-0.446], [0.582,-0.531], [0.544,-0.616], [0.506,-0.701], [0.468,-0.786], [0.552,-0.786], [0.663,-0.786], [0.765,-0.786], [0.850,-0.786], [0.935,-0.786], [1.275,-0.786],  ],\n  'w' : [ [0.085,-0.786], [0.170,-0.786], [0.255,-0.786], [0.340,-0.786], [0.315,-0.701], [0.289,-0.616], [0.264,-0.531], [0.238,-0.446], [0.213,-0.361], [0.187,-0.276], [0.162,-0.191], [0.136,-0.106], [0.111,-0.021], [0.085,0.064], [0.111,-0.021], [0.136,-0.106], [0.162,-0.191], [0.187,-0.276], [0.213,-0.361], [0.238,-0.446], [0.264,-0.531], [0.289,-0.616], [0.315,-0.701], [0.340,-0.786], [0.365,-0.701], [0.391,-0.616], [0.417,-0.531], [0.442,-0.446], [0.468,-0.361], [0.493,-0.276], [0.518,-0.191], [0.544,-0.106], [0.570,-0.021], [0.595,0.064], [0.620,-0.021], [0.646,-0.106], [0.671,-0.191], [0.697,-0.276], [0.723,-0.361], [0.748,-0.446], [0.773,-0.531], [0.799,-0.616], [0.825,-0.701], [0.850,-0.786], [0.875,-0.701], [0.901,-0.616], [0.926,-0.531], [0.952,-0.446], [0.978,-0.361], [1.003,-0.276], [1.028,-0.191], [1.054,-0.106], [1.079,-0.021], [1.105,0.064], [1.079,-0.021], [1.054,-0.106], [1.028,-0.191], [1.003,-0.276], [0.978,-0.361], [0.952,-0.446], [0.926,-0.531], [0.901,-0.616], [0.875,-0.701], [0.850,-0.786], [0.935,-0.786], [1.020,-0.786], [1.105,-0.786], [1.190,-0.786], [1.530,-0.786],  ],\n  'x' : [ [0.076,-0.701], [0.153,-0.616], [0.230,-0.531], [0.306,-0.446], [0.383,-0.361], [0.459,-0.276], [0.535,-0.191], [0.612,-0.106], [0.689,-0.021], [0.765,0.064], [0.689,-0.021], [0.612,-0.106], [0.535,-0.191], [0.459,-0.276], [0.383,-0.361], [0.306,-0.276], [0.230,-0.191], [0.153,-0.106], [0.076,-0.021], [0.000,0.064], [0.076,-0.021], [0.153,-0.106], [0.230,-0.191], [0.306,-0.276], [0.383,-0.361], [0.459,-0.446], [0.535,-0.531], [0.612,-0.616], [0.689,-0.701], [0.765,-0.786], [1.105,-0.786],  ],\n  'y' : [ [0.085,-0.786], [0.170,-0.786], [0.255,-0.786], [0.340,-0.786], [0.468,-0.786], [0.429,-0.701], [0.391,-0.616], [0.353,-0.531], [0.315,-0.446], [0.276,-0.361], [0.238,-0.276], [0.200,-0.191], [0.162,-0.106], [0.123,-0.021], [0.085,0.064], [0.123,-0.021], [0.162,-0.106], [0.200,-0.191], [0.238,-0.276], [0.276,-0.361], [0.315,-0.446], [0.353,-0.531], [0.391,-0.616], [0.429,-0.701], [0.468,-0.786], [0.506,-0.701], [0.544,-0.616], [0.582,-0.531], [0.620,-0.446], [0.659,-0.361], [0.697,-0.276], [0.735,-0.191], [0.773,-0.106], [0.812,-0.021], [0.850,0.064], [0.812,-0.021], [0.773,-0.106], [0.735,-0.191], [0.697,-0.276], [0.659,-0.361], [0.620,-0.446], [0.582,-0.531], [0.544,-0.616], [0.506,-0.701], [0.468,-0.786], [0.429,-0.871], [0.391,-0.956], [0.353,-1.041], [0.315,-1.126], [0.276,-1.211], [0.238,-1.296], [0.200,-1.381], [0.238,-1.296], [0.276,-1.211], [0.315,-1.126], [0.353,-1.041], [0.391,-0.956], [0.429,-0.871], [0.468,-0.786], [0.552,-0.786], [0.637,-0.786], [0.723,-0.786], [0.807,-0.786], [0.935,-0.786], [1.275,-0.786],  ],\n  'z' : [ [0.085,-0.786], [0.162,-0.701], [0.238,-0.616], [0.315,-0.531], [0.391,-0.446], [0.468,-0.361], [0.544,-0.276], [0.620,-0.191], [0.697,-0.106], [0.773,-0.021], [0.850,0.064], [0.765,0.064], [0.680,0.064], [0.595,0.064], [0.510,0.064], [0.425,0.064], [0.340,0.064], [0.255,0.064], [0.170,0.064], [0.085,0.064], [0.170,0.064], [0.255,0.064], [0.340,0.064], [0.425,0.064], [0.510,0.064], [0.595,0.064], [0.680,0.064], [0.765,0.064], [0.850,0.064], [0.773,-0.021], [0.697,-0.106], [0.620,-0.191], [0.544,-0.276], [0.468,-0.361], [0.391,-0.446], [0.315,-0.531], [0.238,-0.616], [0.162,-0.701], [0.085,-0.786], [0.170,-0.786], [0.255,-0.786], [0.340,-0.786], [0.425,-0.786], [0.510,-0.786], [0.595,-0.786], [0.680,-0.786], [0.765,-0.786], [0.850,-0.786], [0.935,-0.786], [1.275,-0.786],  ],\n  'a*' : [ [0.085,-0.786], [0.170,-0.786], [0.510,-0.786],  ],\n  'b*' : [ [0.085,-0.786], [0.170,-0.786], [0.510,-0.786],  ],\n  'c*' : [ [0.085,-0.786], [0.170,-0.786], [0.510,-0.786],  ],\n  'd*' : [ [0.085,-0.786], [0.170,-0.786], [0.510,-0.786],  ],\n  'e*' : [ [0.085,-0.786], [0.170,-0.786], [0.510,-0.786],  ],\n  'f*' : [ [0.085,-0.786], [0.170,-0.786], [0.510,-0.786],  ],\n  'g*' : [ [0.085,-0.786], [0.170,-0.786], [0.510,-0.786],  ],\n  'h*' : [ [0.085,-0.786], [0.170,-0.786], [0.510,-0.786],  ],\n  'i*' : [ [0.085,-0.786], [0.170,-0.786], [0.510,-0.786],  ],\n  'j*' : [ [0.085,-0.786], [0.170,-0.786], [0.510,-0.786],  ],\n  'k*' : [ [0.085,-0.786], [0.170,-0.786], [0.510,-0.786],  ],\n  'l*' : [ [0.085,-0.786], [0.170,-0.786], [0.510,-0.786],  ],\n  'm*' : [ [0.085,-0.786], [0.170,-0.786], [0.510,-0.786],  ],\n  'n*' : [ [0.085,-0.786], [0.170,-0.786], [0.510,-0.786],  ],\n  'o*' : [ [0.085,-0.786], [0.170,-0.786], [0.510,-0.786],  ],\n  'p*' : [ [0.085,-0.786], [0.170,-0.786], [0.510,-0.786],  ],\n  'q*' : [ [0.085,-0.786], [0.170,-0.786], [0.510,-0.786],  ],\n  'r*' : [ [0.085,-0.786], [0.170,-0.786], [0.510,-0.786],  ],\n  's*' : [ [0.085,-0.786], [0.170,-0.786], [0.510,-0.786],  ],\n  't*' : [ [0.085,-0.786], [0.170,-0.786], [0.510,-0.786],  ],\n  'u*' : [ [0.085,-0.786], [0.170,-0.786], [0.510,-0.786],  ],\n  'v*' : [ [0.085,-0.786], [0.170,-0.786], [0.510,-0.786],  ],\n  'w*' : [ [0.085,-0.786], [0.170,-0.786], [0.510,-0.786],  ],\n  'x*' : [ [0.085,-0.786], [0.170,-0.786], [0.510,-0.786],  ],\n  'y*' : [ [0.085,-0.786], [0.170,-0.786], [0.510,-0.786],  ],\n  'z*' : [ [0.085,-0.786], [0.170,-0.786], [0.510,-0.786],  ],\n  ',' : [ [0.085,-0.786], [0.170,-0.786], [0.187,-0.701], [0.221,-0.616], [0.289,-0.701], [0.306,-0.786], [0.323,-0.871], [0.323,-0.956], [0.289,-1.041], [0.255,-1.126], [0.187,-1.211], [0.085,-1.296], [0.187,-1.211], [0.255,-1.126], [0.289,-1.041], [0.323,-0.956], [0.323,-0.871], [0.306,-0.786], [0.289,-0.701], [0.221,-0.616], [0.289,-0.701], [0.306,-0.786], [0.425,-0.786], [0.765,-0.786],  ],\n  '?' : [ [0.085,-0.786], [0.170,-0.786], [0.255,-0.786], [0.340,-0.786], [0.425,-0.786], [0.425,-0.701], [0.425,-0.616], [0.425,-0.531], [0.425,-0.446], [0.425,-0.361], [0.425,-0.276], [0.425,-0.191], [0.425,-0.106], [0.425,-0.081], [0.452,-0.038], [0.476,0.004], [0.510,0.072], [0.544,0.149], [0.578,0.208], [0.612,0.276], [0.629,0.319], [0.646,0.361], [0.654,0.404], [0.660,0.472], [0.663,0.531], [0.654,0.574], [0.637,0.616], [0.620,0.659], [0.587,0.701], [0.561,0.735], [0.527,0.752], [0.485,0.773], [0.451,0.782], [0.417,0.786], [0.383,0.786], [0.340,0.783], [0.315,0.782], [0.272,0.769], [0.238,0.752], [0.204,0.731], [0.179,0.701], [0.150,0.659], [0.128,0.616], [0.102,0.574], [0.085,0.531], [0.102,0.574], [0.128,0.616], [0.150,0.659], [0.179,0.701], [0.204,0.731], [0.238,0.752], [0.272,0.769], [0.315,0.782], [0.340,0.783], [0.383,0.786], [0.417,0.786], [0.451,0.782], [0.485,0.773], [0.527,0.752], [0.561,0.735], [0.587,0.701], [0.620,0.659], [0.637,0.616], [0.654,0.574], [0.663,0.531], [0.660,0.472], [0.654,0.404], [0.646,0.361], [0.629,0.319], [0.612,0.276], [0.578,0.208], [0.544,0.149], [0.510,0.072], [0.476,0.004], [0.452,-0.038], [0.425,-0.081], [0.425,-0.106], [0.425,-0.149], [0.425,-0.191], [0.425,-0.234], [0.425,-0.276], [0.425,-0.319], [0.425,-0.361], [0.425,-0.404], [0.425,-0.446], [0.425,-0.489], [0.425,-0.531], [0.425,-0.574], [0.425,-0.616], [0.425,-0.659], [0.425,-0.701], [0.425,-0.744], [0.425,-0.786], [0.340,-0.786], [0.425,-0.786], [0.612,-0.786], [0.561,-0.659], [0.425,-0.574], [0.289,-0.659], [0.238,-0.786], [0.289,-0.914], [0.425,-0.999], [0.561,-0.914], [0.612,-0.786], [0.425,-0.786], [0.510,-0.786], [0.595,-0.786], [0.680,-0.786], [1.020,-0.786],  ],\n  '&' : [ [0.085,-0.786], [0.174,-0.778], [0.255,-0.774], [0.332,-0.774], [0.460,-0.761], [0.561,-0.748], [0.646,-0.684], [0.731,-0.574], [0.799,-0.506], [0.850,-0.440], [0.935,-0.319], [1.037,-0.191], [0.935,-0.319], [0.850,-0.440], [0.799,-0.506], [0.731,-0.574], [0.646,-0.684], [0.561,-0.748], [0.460,-0.761], [0.332,-0.774], [0.255,-0.774], [0.174,-0.778], [0.128,-0.718], [0.102,-0.676], [0.085,-0.599], [0.076,-0.497], [0.085,-0.327], [0.136,-0.191], [0.238,-0.064], [0.323,0.004], [0.374,0.047], [0.493,0.089], [0.587,0.154], [0.629,0.234], [0.672,0.335], [0.706,0.429], [0.715,0.520], [0.718,0.614], [0.701,0.690], [0.667,0.749], [0.620,0.777], [0.535,0.786], [0.468,0.786], [0.400,0.777], [0.329,0.760], [0.294,0.734], [0.270,0.681], [0.259,0.605], [0.252,0.548], [0.254,0.463], [0.262,0.404], [0.289,0.306], [0.332,0.174], [0.408,0.064], [0.476,-0.106], [0.544,-0.276], [0.595,-0.446], [0.646,-0.616], [0.697,-0.786], [0.765,-0.829], [0.850,-0.829], [0.926,-0.803], [1.021,-0.786], [1.120,-0.786], [1.460,-0.786],  ],\n  '$' : [ [0.102,-0.786], [0.221,-0.786], [0.306,-0.786], [0.391,-0.786], [0.476,-0.786], [0.476,-0.786], [0.476,-1.126], [0.476,-0.786], [0.476,-0.531], [0.476,-0.276], [0.476,-0.021], [0.476,0.234], [0.476,0.489], [0.476,0.829], [0.510,0.829], [0.510,0.489], [0.510,0.234], [0.510,-0.021], [0.510,-0.276], [0.510,-0.531], [0.510,-0.786], [0.510,-1.126], [0.510,-0.786], [0.476,-0.786], [0.476,-0.871], [0.595,-0.910], [0.671,-0.880], [0.731,-0.829], [0.782,-0.744], [0.807,-0.659], [0.799,-0.531], [0.756,-0.404], [0.663,-0.276], [0.476,-0.149], [0.289,-0.021], [0.196,0.106], [0.153,0.234], [0.145,0.361], [0.170,0.446], [0.221,0.531], [0.281,0.582], [0.357,0.612], [0.476,0.616], [0.595,0.612], [0.671,0.582], [0.731,0.531], [0.782,0.446], [0.825,0.361], [0.782,0.446], [0.731,0.531], [0.671,0.582], [0.595,0.612], [0.476,0.616], [0.357,0.612], [0.281,0.582], [0.221,0.531], [0.170,0.446], [0.145,0.361], [0.153,0.234], [0.196,0.106], [0.289,-0.021], [0.476,-0.149], [0.663,-0.276], [0.756,-0.404], [0.799,-0.531], [0.807,-0.659], [0.782,-0.744], [0.731,-0.829], [0.671,-0.880], [0.595,-0.910], [0.476,-0.914], [0.357,-0.910], [0.281,-0.880], [0.221,-0.829], [0.170,-0.744], [0.128,-0.659], [0.085,-0.565], [0.128,-0.659], [0.170,-0.744], [0.221,-0.829], [0.281,-0.880], [0.357,-0.910], [0.476,-0.914], [0.476,-0.786], [0.561,-0.786], [0.646,-0.786], [0.731,-0.786], [0.816,-0.786], [0.901,-0.786], [1.241,-0.786],  ],\n  '!' : [ [0.085,-0.786], [0.170,-0.786], [0.255,-0.786], [0.255,-0.531], [0.255,-0.276], [0.255,-0.021], [0.255,0.234], [0.255,0.489], [0.255,0.786], [0.255,0.489], [0.255,0.234], [0.255,-0.021], [0.255,-0.276], [0.255,-0.531], [0.255,-0.786], [0.442,-0.786], [0.391,-0.659], [0.255,-0.574], [0.119,-0.659], [0.068,-0.786], [0.119,-0.914], [0.255,-0.999], [0.391,-0.914], [0.442,-0.786], [0.255,-0.786], [0.425,-0.786], [0.510,-0.786], [0.850,-0.786],  ],\n}\n","import Victor from 'victor'\nimport { raysol_cursive } from './raysol_cursive'\nimport { raysol_sanserif } from './raysol_sanserif'\n\nconst fontSpacing = 1.5\n\n// Format for vertices: [x,y,b] where in a 0:7(8) by -1:7 grid defining x,y and b defines the line or curve.\n// Bulge directions could be represented by a 0:4 list starting at none, then NE and going clockwise.\n// 4  1\n// 3  2\nlet billsey = {\n  ' ': [ [8,-1,0] ],\n  'A': [ [0,0,0], [3.5,7,0], [7,0,0], [5,3.5,0], [2,3.5,0], [0,0,0], [0,-1,0], [8,-1,0] ],\n  'B': [ [0,0,0], [0,7,0], [3.5,7,0], [7,5.25,1], [3.5,3.5,2], [0,3.5,0], [3.5,3.5,0], [7,1.75,1], [3.5,0,2], [0,0,0], [0,-1,0], [8,-1,0] ],\n  'C': [ [3.5,-1,0], [3.5,0,0], [0,3.5,3], [3.5,7,4], [7,5.25,1], [3.5,7,1], [0,3.5,4], [3.5,0,3], [7,1.75,2], [3.5,0,2], [3.5,-1,0], [8,-1,0] ],\n  'D': [ [0,0,0], [0,7,0], [3.5,7,0], [7,3.5,1], [3.5,0,2], [0,0,0], [0,-1,0], [8,-1,0] ],\n  'E': [ [0,0,0], [0,7,0], [7,7,0], [0,7,0], [0,3.5,0], [3.5,3.5,0], [0,3.5,0], [0,0,0], [7,0,0], [0,0,0], [0,-1,0], [8,-1,0] ],\n  'F': [ [0,0,0], [0,7,0], [7,7,0], [0,7,0], [0,3.5,0], [3.5,3.5,0], [0,3.5,0], [0,0,0], [0,-1,0], [8,-1,0] ],\n  'G': [ [3.5,-1,0], [3.5,0,0], [0,3.5,3], [3.5,7,4], [7,5.25,1], [3.5,7,1], [0,3.5,4], [3.5,0,3], [7,1.75,2], [5.25,1.75,0], [7,1.75,0], [3.5,0,2], [3.5,-1,0], [8,-1,0] ],\n  'H': [ [0,0,0], [0,7,0], [0,3.5,0], [7,3.5,0], [7,7,0], [7,0,0], [7,3.5,0], [0,3.5,0], [0,0,0], [0,-1,0], [8,-1,0] ],\n  'I': [ [3.5,-1,0], [3.5,7,0], [0,7,0], [7,7,0], [3.5,7,0], [3.5,0,0], [0,0,0], [7,0,0], [3.5,0,0], [3.5,-1,0], [8,-1,0] ],\n  'J': [ [3.5,-1,0], [3.5,0,0], [0,1.75,3], [3.5,0,3], [7,1.75,2], [7,7,0], [7,1.75,0], [3.5,0,2], [3.5,-1,0], [8,-1,0] ],\n  'K': [ [0,0,0], [0,7,0], [0,1.75,0], [3.5,3.5,0], [7,7,0], [3.5,3.5,0], [7,0,0], [3.5,3.5,0], [0,1.75,0], [0,0,0], [0,-1,0], [8,-1,0] ],\n  'L': [ [0,0,0], [0,7,0], [0,0,0], [7,0,0], [0,0,0], [0,-1,0], [8,-1,0] ],\n  'M': [ [0,0,0], [0,7,0], [3.5,0,0], [7,7,0], [7,0,0], [7,7,0], [3.5,0,0], [0,7,0], [0,0,0], [0,-1,0], [8,-1,0] ],\n  'N': [ [0,0,0], [0,7,0], [7,0,0], [7,7,0], [7,0,0], [0,7,0], [0,0,0], [0,-1,0], [8,-1,0] ],\n  'O': [ [3.5,-1,0], [3.5, 0, 0], [0, 3.5, 3], [3.5, 7, 4], [7.0, 3.5, 1], [3.5, 0, 2], [3.5, -1, 0], [8, -1, 0] ],\n  'P': [ [0,0,0], [0,7,0], [3.5,7,0], [7,5.25,1], [3.5,3.5,2], [0,3.5,0], [0,0,0], [0,-1,0], [8,-1,0] ],\n  'Q': [ [3.5,-1,0], [3.5, 0, 0], [0, 3.5, 3], [3.5, 7, 4], [7.0, 3.5, 1], [3.5, 0, 2], [4.325,0.5,4], [6.075,0,0], [7,0.5,2], [6.075,0,2], [4.325,0.5,0], [3.5,0,4], [3.5, -1, 0], [8, -1, 0] ],\n  'R': [ [0,0,0], [0,7,0], [3.5,7,0], [7,5.25,1], [3.5,3.5,2], [7,0,0], [3.5,3.5,0], [0,3.5,0], [0,0,0], [0,-1,0], [8,-1,0] ],\n  'S': [ [3.5,-1,0], [3.5,0,0], [0,1.75,3], [3.5,0,3], [7,1.75,2], [3.5,3.5,1], [0,5.25,3], [3.5,7,4], [7,5.25,1], [3.5,7,1], [0,5.25,4], [3.5,3.5,3], [7,1.75,1], [3.5,0,2], [3.5,-1,0], [8,-1,0] ],\n  'T': [ [3.5,-1,0], [3.5,7,0], [0,7,0], [7,7,0], [3.5,7,0], [3.5,0,0], [3.5,-1,0], [8,-1,0] ],\n  'U': [ [3.5,-1,0], [3.5,0,0], [0,3.5,3], [0,7,0], [0,3.5,0], [3.5,0,3], [7,3.5,2], [7,7,0], [7,3.5,0], [3.5,0,2], [3.5,-1,0], [8,-1,0] ],\n  'V': [ [3.5,-1,0], [3.5,0,0], [0,7,0], [3.5,0,0], [7,7,0], [3.5,0,0], [3.5,-1,0], [8,-1,0] ],\n  'W': [ [1.75,-1,0], [1.75,0,0], [0,7,0], [1.75,0,0], [3.5,7,0], [5.25,0,0], [7,7,0], [5.25,0,0], [3.5,7,0], [1.75,0,0], [1.75,-1,0], [8,-1,0] ],\n  'X': [ [0,0,0], [7,7,0], [3.5,3.5,0], [0,7,0], [7,0,0], [3.5,3.5,0], [0,0,0], [0,-1,0], [8,-1,0] ],\n  'Y': [ [3.5,-1,0], [3.5,3.5,0], [0,7,0], [3.5,3.5,0], [7,7,0], [3.5,3.5,0], [3.5,-1,0], [8,-1,0] ],\n  'Z': [ [0,0,0], [7,0,0], [0,0,0], [7,7,0], [0,7,0], [7,7,0], [0,0,0], [0,-1,0], [8,-1,0] ],\n  '0': [ [3.5,-1,0], [3.5,0,0], [6,3.5,2], [3.5,7,1], [1,3.5,4], [3.5,0,3], [3.5,-1,0], [8,-1,0] ],\n  '1': [ [0,-1,0], [0,0,0], [0,0,0], [7,0,0], [3.5,0,0], [3.5,7,0], [1.5,6,2], [3.5,7,2], [3.5,0,0], [0,0,0], [0,-1,0], [8,-1,0] ],\n  '2': [ [1,-1,0], [1,0,0], [6,5.25,0], [3.5,7,1], [1,5.25,4], [3.5,7,4], [6,5.25,1], [1,0,0], [6,0,0], [1,0,0], [1,-1,0], [8,-1,0] ],\n  '3': [ [3.5,-1,0], [3.5,0,0], [1,1.75,3], [3.5,0,3], [6,1.75,2], [3.5,3.5,1], [6,5.25,2], [3.5,7,1], [1,5.25,4], [3.5,7,4], [6,5.25,1], [3.5,3.5,2], [6,1.75,1], [3.5,0,2], [3.5,-1,0], [8,-1,0] ],\n  '4': [ [3.5,-1,0], [3.5,0,0], [3.5,7,0], [1,3.5,0], [6,3.5,0], [3.5,3.5,0], [3.5,-1,0], [8,-1,0] ],\n  '5': [ [3.5,-1,0], [3.5,0,0], [1,1.75,3], [3.5,0,3], [6,1.75,2], [3.5,3.5,1],[1,3.5,0], [1,7,0], [6,7,0], [1,7,0], [1,3.5,0], [3.5,3.5,0], [6,1.75,1], [3.5,0,2], [3.5,-1,0], [8,-1,0] ],\n  '6': [ [3.5,-1,0], [3.5,0,0], [1,1.75,3], [5.25,7,4], [1,1.75,4], [3.5,0,3],[6,1.75,2], [3.5,3.5,1], [1,1.75,4], [3.5,0,3], [3.5,-1,0], [8,-1,0] ],\n  '7': [ [3.5,-1,0], [3.5,0,0], [6,7,0], [1,7,0], [6,7,0], [3.5,0,0], [3.5,-1,0], [8,-1,0] ],\n  '8': [ [3.5,-1,0], [3.5,0,0], [1,1.75,3], [6,5.25,0], [3.5,7,1], [1,5.25,4], [6,1.75,0], [3.5,0,2], [3.5,-1,0], [8,-1,0] ],\n  '9': [ [3.5,-1,0], [3.5,0,0], [6,5.25,2], [3.5,7,1], [1,5.25,4], [3.5,3.5,3], [6,5.25,2], [3.5,0,2], [3.5,-1,0], [8,-1,0] ],\n  '$': [ [3.5,-1,0], [3.5,0.5,0], [0,2.00,3], [3.5,0.5,3], [7,2.00,2], [3.5,3.5,1], [0,5.00,3], [3.5,6.5,4], [7,5.00,1], [3.5,6.5,1], [3.5, 7, 0], [3.5, 0, 0], [3.5,-1,0], [8,-1,0] ],\n  '.': [ [3.5,-1,0], [3.5,0.5,0], [3,1,3], [3.5,1.5,4], [4,1,1], [3.5,0.5,2], [3.5,-1,0], [8,-1,0] ],\n}\n\n// This is a clever way to create a range from 0..32, and then compute an x,y for each of those\n// points on the unit circle from zero to pi/2.\nconst curve = [...Array(32).keys()].map((index) => {\n  let angle = (index+1) * Math.PI/2.0/32.0\n  return new Victor(Math.cos(angle), Math.sin(angle))\n})\n\nconst billseyConverter = (vertices) => {\n  let newVertices = []\n  let prevPoint = new Victor(0,0)\n  vertices.forEach( (vertex) => {\n    switch (vertex[2]) {\n    case 0:\n    default:\n      newVertices.push(new Victor(vertex[0] / 8.0, vertex[1] / 4.0))\n      break\n    case 1: // NE\n      if (vertex[1] < prevPoint[1]) { // clockwise\n        let width = Math.abs(vertex[0] - prevPoint[0]) / 8.0\n        let height = Math.abs(vertex[1] - prevPoint[1]) / 4.0\n        newVertices = newVertices.concat(curve.map( cv => new Victor(cv.x * width + prevPoint[0] / 8.0, cv.y * height + vertex[1] / 4.0)).reverse())\n      } else { // ccwise\n        let width = Math.abs(vertex[0] - prevPoint[0]) / 8.0\n        let height = Math.abs(vertex[1] - prevPoint[1]) / 4.0\n        newVertices = newVertices.concat(curve.map( cv => new Victor(cv.x * width + vertex[0] / 8.0, cv.y * height + prevPoint[1] / 4.0)))\n      }\n      newVertices.push(new Victor(vertex[0] / 8.0, vertex[1] / 4.0))\n      break\n    case 2: // SE\n      if (vertex[1] < prevPoint[1]) { // clockwise\n        let width = Math.abs(vertex[0] - prevPoint[0]) / 8.0\n        let height = -Math.abs(vertex[1] - prevPoint[1]) / 4.0\n        newVertices = newVertices.concat(curve.map( cv => new Victor(cv.x * width + vertex[0] / 8.0, cv.y * height + prevPoint[1] / 4.0)))\n      } else { // ccwise\n        let width = Math.abs(vertex[0] - prevPoint[0]) / 8.0\n        let height = -Math.abs(vertex[1] - prevPoint[1]) / 4.0\n        newVertices = newVertices.concat(curve.map( cv => new Victor(cv.x * width + prevPoint[0] / 8.0, cv.y * height + vertex[1] / 4.0)).reverse())\n      }\n      newVertices.push(new Victor(vertex[0] / 8.0, vertex[1] / 4.0))\n      break\n    case 3: // SW\n      if (vertex[1] > prevPoint[1]) { // clockwise\n        let width = -Math.abs(vertex[0] - prevPoint[0]) / 8.0\n        let height = -Math.abs(vertex[1] - prevPoint[1]) / 4.0\n        newVertices = newVertices.concat(curve.map( cv => new Victor(cv.x * width + prevPoint[0] / 8.0, cv.y * height + vertex[1] / 4.0)).reverse())\n      } else { // ccwise\n        let width = -Math.abs(vertex[0] - prevPoint[0]) / 8.0\n        let height = -Math.abs(vertex[1] - prevPoint[1]) / 4.0\n        newVertices = newVertices.concat(curve.map( cv => new Victor(cv.x * width + vertex[0] / 8.0, cv.y * height + prevPoint[1] / 4.0)))\n      }\n      newVertices.push(new Victor(vertex[0] / 8.0, vertex[1] / 4.0))\n      break\n    case 4: // NW\n      if (vertex[1] > prevPoint[1]) { // clockwise\n        let width = -Math.abs(vertex[0] - prevPoint[0]) / 8.0\n        let height = Math.abs(vertex[1] - prevPoint[1]) / 4.0\n        newVertices = newVertices.concat(curve.map( cv => new Victor(cv.x * width + vertex[0] / 8.0, cv.y * height + prevPoint[1] / 4.0)))\n      } else { // ccwise\n        let width = -Math.abs(vertex[0] - prevPoint[0]) / 8.0\n        let height = Math.abs(vertex[1] - prevPoint[1]) / 4.0\n        newVertices = newVertices.concat(curve.map( cv => new Victor(cv.x * width + prevPoint[0] / 8.0, cv.y * height + vertex[1] / 4.0)).reverse())\n      }\n      newVertices.push(new Victor(vertex[0] / 8.0, vertex[1] / 4.0))\n      break\n    }\n    prevPoint = vertex\n  })\n\n  const scale = 0.6;\n  const offset_y = -0.5\n  const scaledVertices = newVertices.map( vertex => {\n    return new Victor(scale * vertex.x, scale * vertex.y + offset_y)\n  })\n  return {\n    maxX: fontSpacing,\n    vertices: scaledVertices,\n  }\n}\n\nconst raysolConverter = (vertices) => {\n  let newVertices = []\n  vertices.forEach( (vertex) => {\n    newVertices.push(new Victor(vertex[0], vertex[1]))\n  })\n\n  return {\n    maxX: fontSpacing,\n    vertices: newVertices,\n  }\n}\n\nexport const MonospaceFont = (ch) => {\n  let upper = ch.toUpperCase()\n  if (billsey.hasOwnProperty(upper)) {\n    return billseyConverter(billsey[upper])\n  } else {\n    return billseyConverter(billsey[' '])\n  }\n}\n\nexport const CursiveFont = (ch) => {\n  if (raysol_cursive.hasOwnProperty(ch)) {\n    return raysolConverter(raysol_cursive[ch])\n  } else {\n    return raysolConverter(raysol_cursive[' '])\n  }\n}\n\nexport const SansSerifFont = (ch) => {\n  if (raysol_cursive.hasOwnProperty(ch)) {\n    return raysolConverter(raysol_sanserif[ch])\n  } else {\n    return raysolConverter(raysol_sanserif[' '])\n  }\n}\n","import { CursiveFont, SansSerifFont, MonospaceFont } from './Fonts'\nimport Victor from 'victor'\nimport Shape, { shapeOptions } from '../Shape'\nimport { arc } from '../../common/geometry'\n\nconst options = {\n  ...shapeOptions,\n  ...{\n    inputText: {\n      title: 'Text',\n      type: 'textarea',\n    },\n    inputFont: {\n      title: 'Font',\n      type: 'dropdown',\n      choices: ['Cursive', 'Sans Serif', 'Monospace'],\n    },\n    rotateDir: {\n      title: 'Rotate',\n      type: 'dropdown',\n      choices: ['Top', 'Center', 'Bottom'],\n    },\n  }\n}\n\nfunction getMaxX(points) {\n  // Measure the width of the line\n  let maxX = 0\n  points.forEach( (point) => {\n    if (point.x > maxX) {\n      maxX = point.x\n    }\n  })\n  return maxX\n}\n\nexport default class InputText extends Shape {\n  constructor() {\n    super('Text')\n  }\n\n  getInitialState() {\n    return {\n      ...super.getInitialState(),\n      ...{\n        type: 'inputText',\n        inputText: 'Sandify',\n        inputFont: 'Cursive',\n        rotateDir: 'Center',\n        repeatEnabled: false\n      }\n    }\n  }\n\n  getVertices(state) {\n    let points = []\n    let prevLetter = ''\n    let x = 0.0\n    let lines = []\n    let textPoints = []\n\n    for (let chi = 0; chi < state.shape.inputText.length; chi++) {\n      var nextLetter = state.shape.inputText[chi]\n      if (prevLetter === 'b' || prevLetter === 'v' || prevLetter === 'o' || prevLetter === 'w') {\n        // Save this letter before we possibly add in a '*'\n        prevLetter = nextLetter\n        if (nextLetter.search('[a-z]+') !== -1 && state.shape.inputFont === 'Cursive')\n        {\n          nextLetter = nextLetter + '*'\n        }\n      }\n      else {\n        prevLetter = nextLetter\n      }\n\n      if (nextLetter === '\\n') {\n        // New line\n        lines.push(points)\n        points = []\n        x = 0.0\n        continue\n      }\n\n      var shape = undefined\n      if (state.shape.inputFont === 'Cursive') {\n        shape = CursiveFont(nextLetter)\n      } else if (state.shape.inputFont === 'Sans Serif') {\n        shape = SansSerifFont(nextLetter)\n      } else if (state.shape.inputFont === 'Monospace') {\n        shape = MonospaceFont(nextLetter)\n      } else {\n        // Internal error, but I'm going to just recover\n        shape = CursiveFont(nextLetter)\n      }\n\n      // TODO add in the \"Kern\" here.\n      for (let vi = 0; vi < shape.vertices.length; vi++) {\n        points.push(new Victor(shape.vertices[vi].x + x, shape.vertices[vi].y))\n      }\n      x += shape.vertices[shape.vertices.length-1].x\n    }\n    // Save the last line we were working on.\n    lines.push(points)\n\n    // The height of a row of text, including the space above.\n    const maxY = 2.4\n\n    if (state.shape.rotateDir === 'Center') {\n      // Starting Y offset\n      let y = (lines.length - 1) * maxY / 2.0\n\n      // Capture some wrap around points, to connect the lines.\n      let connectorPoints = []\n      lines.forEach( (points) => {\n        let maxX = getMaxX(points)\n        let widthOffset = maxX / 2.0\n\n        // Add in the connector points (if we have any)\n        textPoints = [...textPoints, ...connectorPoints]\n        connectorPoints = []\n\n        // offset the line's vertices\n        textPoints = [...textPoints, ...points.map( (point) => {\n          return new Victor(point.x - widthOffset, point.y + y)\n        })]\n\n        // Add in some points way off, so to wrap around for this line.\n        connectorPoints.push(new Victor(1e9, y))\n        connectorPoints.push(new Victor(1e9, -1e9))\n        connectorPoints.push(new Victor(-1e9, -1e9))\n        y -= maxY\n        connectorPoints.push(new Victor(-1e9, y))\n      })\n    } else {\n      // This variable controls \"Top\" vs. \"Bottom\"\n      let direction = 1.0\n      if (state.shape.rotateDir === 'Bottom') {\n        direction = -1.0\n        lines.reverse()\n      }\n\n      // Some constants to rotate the letters.\n      //\n      // The \"lines\" object contains lines of words, in vertices.\n      // The vertices are in X, Y, the X starts at 0, the Y goes between -something and +something.\n      // The middle of the word is about at Y=0.\n      //\n      // We want the words to follow around a circle. We want them to stay about the same size, as\n      // if they were plotted in a line. We want them to be centered.\n      //\n      // r is the radius, theta is the angle.\n      // rPerY is the multiplier to get from Y to r.\n      // thetaPerX is the multiplier to get from X to theta.\n      //\n      // The Max is based on how far away from the center we start.\n      //\n      // Offset is because we want to start the row far away from the center.\n      //\n      // thetaCenter is how far off from the theta=0 we start the words.\n      //\n      const maxRPerY = 0.8\n      let rPerY = direction * maxRPerY\n      let thetaCenter = direction * Math.PI / 2.0\n      const maxROffset = maxY * 2.0\n      let rOffset = maxROffset\n      const rOffsetPerLine = rOffset / lines.length\n      let thetaPerX = -rPerY / rOffset\n\n      // This captures the previous angle, so we can track around for the next line.\n      let lastTheta\n\n      lines.forEach( (points) => {\n\n        let maxX = getMaxX(points)\n        // This widthOffset is in X.\n        let widthOffset = maxX / 2.0\n\n        // Scale the size of the words to fit within one circle.\n        if (Math.PI * 2.0 < Math.abs(thetaPerX * maxX)) {\n          // We are going to roll all the way around\n          thetaPerX = direction * -Math.PI * 2.0 / maxX\n          rPerY = -thetaPerX * rOffset\n        }\n\n        // Add in the connector points (if we have any)\n        if (lastTheta) {\n          let endTheta = thetaCenter + thetaPerX * -widthOffset\n\n          // Get the Y value of the first point in the next (this) line.\n          let r = rOffset + rPerY * 0.0\n          if (points.length > 0) {\n            r = rOffset + rPerY * points[0].y\n          }\n\n          textPoints = [...textPoints, ...arc(r, lastTheta, endTheta)]\n        }\n\n        // Transform the points and add them to textPoints.\n        textPoints = [...textPoints, ...points.map( (point) => {\n          const r = rOffset + rPerY * point.y\n          lastTheta = thetaCenter + thetaPerX * (point.x - widthOffset)\n          return new Victor(r * Math.cos(lastTheta), r * Math.sin(lastTheta))\n        })]\n\n        // Set up for the next line.\n        rOffset -= rOffsetPerLine\n        rPerY = direction * Math.sqrt(maxRPerY * rOffset / maxROffset)\n        thetaPerX = -rPerY / rOffset\n      })\n    }\n\n    const scale = 2.5 // to normalize starting size\n    textPoints.forEach(point => point.multiply({x: scale, y: scale }))\n    return textPoints\n  }\n\n  getOptions() {\n    return options\n  }\n}\n","import Victor from 'victor'\nimport { vertexRoundP } from './geometry'\n\nexport const onSubtypeChange = (subtype, changes, attrs) => {\n  // if we switch back with too many iterations, the code\n  // will crash from recursion, so we'll set a ceiling where needed\n  if (subtype) {\n    let max = subtype.maxIterations\n    let min = subtype.minIterations\n    let iterations = attrs.iterations || 1\n\n    if (max) {\n      iterations = Math.min(iterations, max)\n    }\n\n    if (min) {\n      iterations = Math.max(iterations, min)\n    }\n\n    changes.iterations = iterations\n  }\n\n  return changes\n}\n\nexport const onMinIterations = (subtype, state) => {\n  return (subtype && subtype.minIterations) || 1\n}\n\nexport const onMaxIterations = (subtype, state) => {\n  return (subtype && subtype.maxIterations) || 7\n}\n\n// Implements a Lindenmayer system (L-system). See https://en.wikipedia.org/wiki/L-system.\n// Adapted from http://bl.ocks.org/nitaku/ce638f8bd5e70cb809e1\nexport const lsystem = (config) => {\n  let input = config.axiom\n  let output\n\n  for (let i=0; i<config.iterations; i++) {\n    output = ''\n\n    for (let j=0; j<input.length; j++) {\n      let char = input[j]\n\n      if (config.rules[char] !== undefined) {\n        output += config.rules[char]\n      } else {\n        output += char\n      }\n    }\n    input = output\n  }\n  return output\n}\n\nconst lsystemDraw = (vertex, angle, config) => {\n  return vertexRoundP(vertex.clone().add({x: -config.side * Math.cos(angle), y: -config.side * Math.sin(angle)}), 2)\n}\n\nexport const lsystemPath = (instructions, config) => {\n  let vertex = new Victor(0, 0)\n  let currVertices = [vertex]\n  let angle = -Math.PI/2\n\n  if (config.startingAngle) {\n    angle = typeof config.startingAngle === 'function' ?\n      config.startingAngle(config.iterations) :\n      config.startingAngle\n  }\n\n  // This will store the previous return paths we are not working on.\n  let returnPaths = []\n  for (let i=0; i<instructions.length; i++) {\n    let char = instructions[i]\n\n    if (char === '+') {\n      angle += config.angle\n      if (returnPaths.length) {\n        returnPaths.slice(-1)[0].push('-')\n      }\n    } else if (char === '-') {\n      angle -= config.angle\n      if (returnPaths.length) {\n        returnPaths.slice(-1)[0].push('+')\n      }\n    } else if (config.draw.includes(char)) {\n      vertex = lsystemDraw(vertex, angle, config)\n      currVertices.push(vertex)\n      if (returnPaths.length) {\n        returnPaths.slice(-1)[0].push('B')\n      }\n    } else if (char === '[') {\n      // open a branch\n      returnPaths.push([])\n\n    } else if (char === ']') {\n      // Return to the beginning of the branch\n      let returnPath = returnPaths.pop().reverse()\n\n      for (let j=0; j<returnPath.length; j++) {\n        let revChar = returnPath[j]\n\n        if (revChar === '+') {\n          angle += config.angle\n        } else if (revChar === '-') {\n          angle -= config.angle\n        } else if (revChar === 'B') {\n          // Reverse Draw\n          vertex = lsystemDraw(vertex, angle + Math.PI, config)\n          currVertices.push(vertex)\n        }\n      }\n    }\n  }\n\n  return currVertices\n}\n","// L-system instructions for space filling curves\nexport const subtypes = {\n  // http://mathforum.org/advanced/robertd/lsys2d.html\n  '32-segment': {\n    axiom: 'F+F+F+F',\n    draw: ['F'],\n    rules:  {\n      F: '-F+F-F-F+F+FF-F+F+FF+F-F-FF+FF-FF+F+F-FF-F-F+FF-F-F+F+F-F+'\n    },\n    startingAngle: Math.PI,\n    maxIterations: 2\n  },\n  // http://www.kevs3d.co.uk/dev/lsystems/\n  'Cog Triangle': {\n    axiom: 'W----W----W',\n    draw: ['F'],\n    rules:  {\n      W: '+++X--F--ZFX+',\n      X: '---W++F++YFW-',\n      Y: '+ZFX--F--Z+++',\n      Z: '-YFW++F++Y---'\n    },\n    angle: Math.PI/6,\n    minIterations: 1,\n    maxIterations: 8\n  },\n  // https://onlinemathtools.com/l-system-generator\n  'Fractal Tree': {\n    axiom: 'F',\n    draw: ['F'],\n    rules:  {\n      F: 'F[+FF][-FF]F[-F][+F]F',\n    },\n    angle: Math.PI/5,\n    maxIterations: 5\n  },\n  // https://www.vexlio.com/blog/drawing-simple-organics-with-l-systems/\n  'Fractal Tree 2': {\n    axiom: 'F',\n    draw: ['F'],\n    rules:  {\n      F: 'F[-F][+F]',\n    },\n    angle: 10*Math.PI/72,\n    maxIterations: 9\n  },\n  // https://www.vexlio.com/blog/drawing-simple-organics-with-l-systems/\n  'Fractal Tree 3': {\n    axiom: 'X',\n    draw: ['F'],\n    rules:  {\n      F: 'FF',\n      X: 'F+[-F-XF-X][+FF][--XF[+X]][++F-X]'\n    },\n    angle: Math.PI/8,\n    maxIterations: 6\n  },\n  // https://www.vexlio.com/blog/drawing-simple-organics-with-l-systems/\n  'Fractal Tree 4': {\n    axiom: 'X',\n    draw: ['F'],\n    rules:  {\n      F: 'FX[FX[+XF]]',\n      X: 'FF[+XZ++X-F[+ZX]][-X++F-X]',\n      Z: '[+F-X-F][++ZX]'\n    },\n    angle: Math.PI/8,\n    maxIterations: 5\n  },\n  // http://algorithmicbotany.org/papers/abop/abop-ch1.pdf\n  'Fractal Tree 5': {\n    axiom: 'X',\n    draw: ['F'],\n    rules:  {\n      X: 'F[+X]F[-X]+X',\n      F: 'FF'\n    },\n    angle: Math.PI/9,\n    maxIterations: 8\n  },\n  // http://mathforum.org/advanced/robertd/lsys2d.html\n  'Gosper (flowsnake)': {\n    axiom: 'A',\n    draw: ['A', 'B'],\n    rules:  {\n      A: 'A-B--B+A++AA+B-',\n      B: '+A-BB--B-A++A+B'\n    },\n    angle: Math.PI / 3,\n    maxIterations: 5\n  },\n  // http://mathforum.org/advanced/robertd/lsys2d.html\n  'Ice': {\n    axiom: 'F+F+F+F',\n    draw: ['F'],\n    rules:  {\n      F: 'FF+F++F+F'\n    },\n    startingAngle: Math.PI,\n    maxIterations: 6\n  },\n  // https://fronkonstin.com/2017/06/26/a-shiny-app-to-draw-curves-based-on-l-systems/\n  'Koch Cube 1': {\n    axiom: 'F-F-F-F',\n    draw: ['F'],\n    rules:  {\n      F: 'FF-F-F-F-FF',\n    },\n    maxIterations: 5\n  },\n  // http://algorithmicbotany.org/papers/abop/abop-ch1.pdf\n  'Koch Cube 2': {\n    axiom: 'F-F-F-F',\n    draw: ['F'],\n    rules:  {\n      F: 'FF-F+F-F-FF',\n    },\n    maxIterations: 5\n  },\n  // https://onlinemathtools.com/l-system-generator\n  'Koch Curve': {\n    axiom: 'F',\n    draw: ['F'],\n    rules:  {\n      F: 'F+F--F+F'\n    },\n    angle: 4*Math.PI/9,\n    startingAngle: Math.PI,\n    maxIterations: 7\n  },\n  // https://fronkonstin.com/2017/06/26/a-shiny-app-to-draw-curves-based-on-l-systems/\n  'Koch Flower': {\n    axiom: 'F-F-F-F',\n    draw: ['F'],\n    rules:  {\n      F: 'FF-F-F-F-F-F+F',\n    },\n    maxIterations: 4\n  },\n  // http://mathforum.org/advanced/robertd/lsys2d.html\n  'Koch Island': {\n    axiom: 'F+F+F+F',\n    draw: ['F'],\n    rules:  {\n      F: 'F+F-F-FF+F+F-F'\n    },\n    startingAngle: Math.PI,\n    maxIterations: 4\n  },\n  'Koch Snowflake': {\n    axiom: 'F--F--F--',\n    draw: ['F'],\n    rules:  {\n      F: 'F+F--F+F'\n    },\n    angle: Math.PI / 3,\n    startingAngle: -Math.PI / 3,\n    maxIterations: 5\n  },\n  // http://mathforum.org/advanced/robertd/lsys2d.html\n  'McWorter\\'s Pentadendrite': {\n    axiom: 'F-F-F-F-F',\n    draw: ['F'],\n    rules:  {\n      F: 'F-F-F++F+F-F',\n    },\n    angle: 2*Math.PI/5,\n    maxIterations: 5\n  },\n  // https://onlinemathtools.com/l-system-generator\n  'Penrose Tile': {\n     axiom: '[7]++[7]++[7]++[7]++[7]',\n     draw: ['6', '7', '8', '9'],\n    rules: {\n      6: '8++9----7[-8----6]++',\n      7: '+8--9[---6--7]+',\n      8: '-6++7[+++8++9]-',\n      9: '--8++++6[+9++++7]--7'\n    },\n    angle: Math.PI/5,\n    maxIterations: 6\n  },\n  'Plusses': {\n    axiom: 'XYXYXYX+XYXYXYX+XYXYXYX+XYXYXYX',\n    draw: ['F'],\n    rules:  {\n      X: 'FX+FX+FXFY-FY-',\n      Y: '+FX+FXFY-FY-FY'\n    },\n    maxIterations: 4\n  },\n  // http://mathforum.org/advanced/robertd/lsys2d.html\n  'Red Dragon': {\n    axiom: 'FA',\n    draw: ['F'],\n    rules:  {\n      A: 'A+BF+',\n      B: '-FA-B'\n    },\n    minIterations: 9,\n    maxIterations: 15,\n    startingAngle: Math.PI\n  },\n  // http://mathforum.org/advanced/robertd/lsys2d.html\n  'Sierpinski Triangle (arrowhead)': {\n    axiom: 'X',\n    draw: ['X', 'Y'],\n    rules:  {\n      X: 'Y+X+Y',\n      Y: 'X-Y-X'\n    },\n    angle: Math.PI / 3,\n    startingAngle: (i) => {\n      if (i % 2 === 0) {\n        return 0\n      } else {\n        return -Math.PI/3\n      }\n    },\n    maxIterations: 8\n  },\n}\n","import Shape, { shapeOptions } from '../Shape'\nimport {\n  lsystem,\n  lsystemPath,\n  onSubtypeChange,\n  onMinIterations,\n  onMaxIterations\n} from '../../common/lindenmayer'\nimport { subtypes } from './subtypes'\nimport { resizeVertices } from '../../common/geometry'\n\nconst options = {\n  ...shapeOptions,\n  ...{\n    subtype: {\n      title: 'Type',\n      type: 'dropdown',\n      choices: Object.keys(subtypes),\n      onChange: (changes, attrs) => {\n        return onSubtypeChange(subtypes[changes.subtype], changes, attrs)\n      }\n    },\n    iterations: {\n      title: 'Iterations',\n      min: (state) => {\n        return onMinIterations(subtypes[state.subtype], state)\n      },\n      max: (state) => {\n        return onMaxIterations(subtypes[state.subtype], state)\n      }\n    },\n  }\n}\n\nexport default class LSystem extends Shape {\n  constructor() {\n    super('Fractal Line Writer')\n    this.link = 'https://en.wikipedia.org/wiki/L-system'\n    this.linkText = 'L-systems on Wikipedia'\n  }\n\n  getInitialState() {\n    return {\n      ...super.getInitialState(),\n      ...{\n        type: 'lsystem',\n        iterations: 3,\n        subtype: 'McWorter\\'s Pentadendrite',\n        repeatEnabled: false\n      }\n    }\n  }\n\n  getVertices(state) {\n    const shape = state.shape\n    const iterations = shape.iterations || 1\n\n    // generate our vertices using a set of l-system rules\n    let config = subtypes[shape.subtype]\n    config.iterations = iterations\n    config.side = 5\n\n    if (config.angle === undefined) { config.angle = Math.PI/2 }\n\n    let curve = lsystemPath(lsystem(config), config)\n    const scale = 18.0 // to normalize starting size\n    return resizeVertices(curve, scale, scale)\n  }\n\n  getOptions() {\n    return options\n  }\n}\n","import PolarMachine from './PolarMachine'\nimport Victor from 'victor'\n\n// Machine that clips vertices that fall inside the machine limits\nexport default class PolarInvertedMachine extends PolarMachine {\n  constructor(vertices, settings, layerInfo={}) {\n    super(vertices, settings, layerInfo)\n  }\n\n  // Walk the given vertices, clipping as needed along the perimeter\n  enforceLimits() {\n    return this.enforceInvertedLimits()\n  }\n\n  // Finds the nearest vertex that is in the bounds of the circle. This will change the\n  // shape. i.e. this doesn't care about the line segment, only about the point.\n  nearestVertex(vertex) {\n    const size = this.settings.maxRadius\n\n    if ( vertex.length() < size) {\n      const scale = size / vertex.length()\n      return vertex.multiply(new Victor(scale, scale))\n    } else {\n      return vertex\n    }\n  }\n\n  // Take a given line, and if the line goes out of bounds, returns the vertices\n  // around the outside edge to follow around without messing up the shape of the vertices.\n  clipLine(start, end, log=false) {\n    const size = this.settings.maxRadius\n    const radStart = start.magnitude()\n    const radEnd = end.magnitude()\n\n    if (radStart < size && radEnd < size) {\n      if (log) { console.log('line is inside limits') }\n      return []\n    }\n\n    const intersections = this.getIntersections(start, end)\n    if (!intersections.intersection) {\n      if (log) { console.log('line is outside limits') }\n      return [end]\n    }\n\n    if (intersections.points[0].on && intersections.points[1].on) {\n      let point = intersections.points[0].point\n      let otherPoint = intersections.points[1].point\n\n      if (log) { console.log('line is outside limits, but intersects within limits') }\n      return [\n        ...this.tracePerimeter(point, otherPoint),\n        otherPoint,\n        end\n      ]\n    }\n\n    if (radStart <= size) {\n      const point1 = (intersections.points[0].on && Math.abs(intersections.points[0].point - start) > 0.0001) ? intersections.points[0].point : intersections.points[1].point\n      if (log) { console.log('start is inside limits') }\n      return [ point1, end ]\n    } else {\n      const point1 = intersections.points[0].on ? intersections.points[0].point : intersections.points[1].point\n      if (log) { console.log('end is inside limits') }\n      return [ start, point1 ]\n    }\n  }\n\n  // Returns the vertex if it's outside the bounds of the circle.\n  inBounds(vertex) {\n    return vertex.length() < this.settings.maxRadius\n  }\n}\n","import RectMachine from './RectMachine'\nimport Victor from 'victor'\nimport clip from 'liang-barsky'\n\n// Machine that clips vertices that fall inside the machine limits\nexport default class RectInvertedMachine extends RectMachine {\n  constructor(vertices, settings, layerInfo={}) {\n    super(vertices, settings, layerInfo)\n  }\n\n  enforceLimits() {\n    return this.enforceInvertedLimits()\n  }\n\n  clipLine(start, end, log=false) {\n    const quadrantStart = this.pointLocation(start)\n    const quadrantEnd = this.pointLocation(end)\n\n    if (quadrantStart === 0b0000 && quadrantEnd === 0b0000) {\n      if (log) { console.log('line is inside limits') }\n      return []\n    }\n\n    let a = [start.x, start.y]\n    let b = [end.x, end.y]\n    const bounds = [-this.sizeX, -this.sizeY, this.sizeX, this.sizeY]\n    const clipped = clip(a, b, bounds)\n\n    if (quadrantStart === 0b000) {\n      if (log) { console.log('start is inside limits') }\n      return [new Victor(b[0], b[1]), end]\n    }\n\n    if (quadrantEnd === 0b000) {\n      if (log) { console.log('end is inside limits') }\n      return [start, new Victor(a[0], a[1])]\n    }\n\n    if (clipped) {\n      if (log) { console.log('line is outside limits, but intersects within limits') }\n      return [\n        start,\n        ...this.tracePerimeter(new Victor(a[0], a[1]), new Victor(b[0], b[1]), true),\n        end\n      ]\n    } else {\n      if (log) { console.log('line is outside limits') }\n      return [start, end]\n    }\n  }\n\n  // Finds the nearest vertex that is in the bounds. This will change the shape. i.e. this\n  // doesn't care about the line segment, only about the point.\n  nearestVertex(vertex) {\n    if (this.pointLocation(vertex) === 0b0000) {\n      return this.nearestPerimeterVertex(vertex)\n    } else {\n      return vertex\n    }\n  }\n}\n","import Victor from 'victor'\nimport { shapeOptions } from './Shape'\nimport Effect from './Effect'\nimport { rotate, offset, circle } from '../common/geometry'\nimport PolarMachine from '../features/machine/PolarMachine'\nimport RectMachine from '../features/machine/RectMachine'\nimport PolarInvertedMachine from '../features/machine/PolarInvertedMachine'\nimport RectInvertedMachine from '../features/machine/RectInvertedMachine'\n\nconst options = {\n  ...shapeOptions,\n  ...{\n    maskMachine: {\n      title: 'Mask shape',\n      type: 'togglebutton',\n      choices: ['rectangle', 'circle'],\n      onChange: (changes, attrs) => {\n        if (changes.maskMachine === 'circle') {\n          changes.rotation = 0\n\n          const size = Math.min(attrs.startingWidth, attrs.startingHeight)\n          changes.startingHeight = size\n          changes.startingWidth = size\n          changes.canRotate = false\n          changes.canChangeHeight = false\n        } else {\n          changes.canRotate = true\n          changes.canChangeHeight = true\n        }\n\n        return changes\n      }\n    },\n    maskMinimizeMoves: {\n      title: 'Try to minimize perimeter moves',\n      type: 'checkbox'\n    },\n    maskInvert: {\n      title: 'Invert',\n      type: 'checkbox'\n    },\n    maskBorder: {\n      title: 'Draw border',\n      type: 'checkbox'\n    }\n  }\n}\n\nexport default class Mask extends Effect {\n  constructor() {\n    super('Mask')\n  }\n\n  getInitialState() {\n    return {\n      ...super.getInitialState(),\n      ...{\n        type: 'mask',\n        selectGroup: 'effects',\n        startingWidth: 100,\n        startingHeight: 100,\n        maskMinimizeMoves: false,\n        maskMachine: 'rectangle',\n        maskBorder: false,\n        maskInvert: false\n      }\n    }\n  }\n\n  getVertices(state) {\n    const width = state.shape.startingWidth\n    const height = state.shape.startingHeight\n\n    if (state.shape.dragging && state.shape.maskMachine === 'circle') {\n      return circle(width/2)\n    } else {\n      return [\n        new Victor(-width/2, height/2),\n        new Victor(width/2, height/2),\n        new Victor(width/2, -height/2),\n        new Victor(-width/2, -height/2),\n        new Victor(-width/2, height/2),\n      ]\n    }\n  }\n\n  applyEffect(effect, layer, vertices) {\n    vertices = vertices.map(vertex => {\n      return rotate(offset(vertex, -effect.offsetX, -effect.offsetY), effect.rotation)\n    })\n\n    if (!layer.dragging && !effect.dragging) {\n      const machineClass = effect.maskMachine === 'circle' ?\n        (effect.maskInvert ? PolarInvertedMachine : PolarMachine) :\n        (effect.maskInvert ? RectInvertedMachine : RectMachine)\n\n      const machine = new machineClass(\n        vertices,\n        { minX: 0, maxX: effect.startingWidth, minY: 0, maxY: effect.startingHeight, minimizeMoves: effect.maskMinimizeMoves, maxRadius: effect.startingWidth/2, perimeterConstant: effect.maskPerimeterConstant, mask: true },\n        { border: effect.maskBorder })\n      vertices = machine.polish().vertices\n    }\n\n    return vertices.map(vertex => {\n      return offset(rotate(vertex, -effect.rotation), effect.offsetX, effect.offsetY)\n    })\n  }\n\n  getOptions() {\n    return options\n  }\n}\n","// https://gitlab.ilmiont.net/ilmiont/noisejs/\n// This project is no longer maintained by the contributor (deleted from Github),\n// and was in turn adapted from an older project, https://github.com/josephg/noisejs.\n//\n//\n//\n// MIT License\n//\n// Copyright (c) 2018 James Walker\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and\n// associated documentation files (the \"Software\"), to deal in the Software without restriction,\n// including without limitation the rights to use, copy, modify, merge, publish, distribute,\n// sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all copies or\n// substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT\n// NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\n/**\n * Perlin fade function.\n *\n * @param {Number} t\n * @return {Number}\n */\nfunction fade(t) {\n    return t*t*t*(t*(t*6-15)+10);\n}\n\n\n/**\n * Perlin lerp function.\n *\n * @param {Number} a\n * @param {Number} b\n * @param {Number} t\n * @return {Number}\n */\nfunction lerp(a, b, t) {\n    return (1-t)*a + t*b;\n}\n\n\n/**\n * Grad class.\n *\n * @package noisejs\n */\nclass Grad {\n\n    /**\n     * Constructor.\n     *\n     * @param {Number} x\n     * @param {Number} y\n     * @param {Number} z\n     * @return {self}\n     */\n    constructor(x, y, z) {\n\n        /**\n         * x\n         *\n         * @type {Number}\n         */\n        this.x = x;\n\n        /**\n         * y\n         *\n         * @type {Number}\n         */\n        this.y = y;\n\n        /**\n         * z\n         *\n         * @type {Number}\n         */\n        this.z = z;\n    }\n\n\n    /**\n     * 2D dot product.\n     *\n     * @param {Number} x\n     * @param {Number} y\n     * @return {Number}\n     */\n    dot2(x, y) {\n        return this.x * x + this.y * y;\n    };\n\n\n    /**\n     * 3D dot product.\n     *\n     * @param {Number} x\n     * @param {Number} y\n     * @param {Number} z\n     * @return {Number}\n     */\n    dot3(x, y, z) {\n        return this.x * x + this.y * y + this.z * z;\n    };\n\n}\n\n\n/**\n * noisejs\n *\n * @package noisejs\n */\nclass noise {\n\n    /**\n     * Constructor.\n     *\n     * @return {self}\n     */\n    constructor() {\n\n        // Seed\n        this.seed(0);\n\n    }\n\n\n    /**\n     * Seed the noise generation.\n     *\n     * Supports 2^16 different seeding values.\n     *\n     * @param {Number} seed\n     * @return {void}\n     */\n    seed(seed) {\n\n        // Scale the seed\n        if (seed > 0 && seed < 1) {\n            seed *= 65536;\n        }\n\n        // Floor the seed\n        seed = Math.floor(seed);\n        if (seed < 256) {\n            seed |= seed << 8;\n        }\n\n        // Iterate the seed\n        for (var i = 0; i < 256; i++) {\n            var v\n            if (i & 1) v = p[i] ^ (seed & 255);\n            else v = p[i] ^ ((seed>>8) & 255);\n\n            // Use permutation table\n            perm[i] = perm[i + 256] = v;\n            gradP[i] = gradP[i + 256] = grad3[v % 12];\n        }\n\n    };\n\n\n    /**\n     * Generate 2D Simplex noise.\n     *\n     * @param {Number} xin\n     * @param {Number} yin\n     * @return {Number}\n     */\n    simplex2(xin, yin) {\n        // Noise contributions from the three corners\n        var n0, n1, n2;\n\n        // Skew the input space to determine which simplex cell we're in\n        var s = (xin+yin)*F2;\n        var i = Math.floor(xin+s);\n        var j = Math.floor(yin+s);\n        var t = (i+j)*G2;\n\n        // The x,y distances from the cell origin, unskewed.\n        var x0 = xin-i+t;\n        var y0 = yin-j+t;\n\n        // For the 2D case, the simplex shape is an equilateral triangle.\n        // Determine which simplex we are in.\n        // Offsets for second (middle) corner of simplex in (i,j) coords\n        var i1, j1;\n\n        // lower triangle, XY order: (0,0)->(1,0)->(1,1)\n        if (x0 > y0) {\n            i1=1;\n            j1=0;\n        }\n        // upper triangle, YX order: (0,0)->(0,1)->(1,1)\n        else {\n            i1=0;\n            j1=1;\n        }\n\n        // A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and\n        // a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where\n        // c = (3-sqrt(3))/6\n        var x1 = x0 - i1 + G2;      // Offsets for middle corner in (x,y) unskewed coords\n        var y1 = y0 - j1 + G2;\n        var x2 = x0 - 1 + 2 * G2;   // Offsets for last corner in (x,y) unskewed coords\n        var y2 = y0 - 1 + 2 * G2;\n\n        // Work out the hashed gradient indices of the three simplex corners\n        i &= 255;\n        j &= 255;\n\n        // Get indices from permutation table\n        var gi0 = gradP[i+perm[j]];\n        var gi1 = gradP[i+i1+perm[j+j1]];\n        var gi2 = gradP[i+1+perm[j+1]];\n\n        // Calculate the contribution from the three corners\n        var t0 = 0.5 - x0*x0-y0*y0;\n        if (t0 < 0) {\n            n0 = 0;\n        }\n        // (x,y) of grad3 used for 2D gradient\n        else {\n            t0 *= t0;\n            n0 = t0 * t0 * gi0.dot2(x0, y0);\n        }\n\n        // Second corner\n        var t1 = 0.5 - x1*x1-y1*y1;\n        if (t1 < 0) {\n            n1 = 0;\n        }\n        else {\n          t1 *= t1;\n          n1 = t1 * t1 * gi1.dot2(x1, y1);\n        }\n\n        // Third corner\n        var t2 = 0.5 - x2*x2-y2*y2;\n        if (t2 < 0) {\n            n2 = 0;\n        }\n        else {\n            t2 *= t2;\n            n2 = t2 * t2 * gi2.dot2(x2, y2);\n        }\n\n        // Add contributions from each corner to get the final noise value.\n        // The result is scaled to return values in the interval [-1,1].\n        return 70 * (n0 + n1 + n2);\n\n    };\n\n\n    /**\n     * Generate 3D Simplex noise.\n     *\n     * @param {Number} xin\n     * @param {Number} yin\n     * @param {Number} zin\n     * @return {Number}\n     */\n    simplex3(xin, yin, zin) {\n\n        // Noise contributions from the four corners\n        var n0, n1, n2, n3;\n\n        // Skew the input space to determine which simplex cell we're in\n        var s = (xin+yin+zin)*F3;\n        var i = Math.floor(xin+s);\n        var j = Math.floor(yin+s);\n        var k = Math.floor(zin+s);\n\n        // The x,y distances from the cell origin, unskewed.\n        var t = (i+j+k)*G3;\n        var x0 = xin-i+t;\n        var y0 = yin-j+t;\n        var z0 = zin-k+t;\n\n        // For the 3D case, the simplex shape is a slightly irregular tetrahedron.\n        // Determine which simplex we are in.\n        // Offsets for second corner of simplex in (i,j,k) coords\n        // Offsets for third corner of simplex in (i,j,k) coords\n        var i1, j1, k1;\n        var i2, j2, k2;\n        if (x0 >= y0) {\n            if (y0 >= z0) {\n                i1=1; i2=1;\n                j1=0; j2=1;\n                k1=0; k2=0;\n            }\n            else if (x0 >= z0) {\n                i1=1; i2=1;\n                j1=0; j2=0;\n                k1=0; k2=1;\n            }\n            else {\n                i1=0; i2=1;\n                j1=0; j2=0;\n                k1=1; k2=1;\n            }\n        }\n        else {\n            if (y0 < z0) {\n                i1=0; i2=0;\n                j1=0; j2=1;\n                k1=1; k2=1;\n            }\n            else if (x0 < z0) {\n                i1=0; i2=0;\n                j1=1; j2=1;\n                k1=0; k2=1;\n            }\n            else {\n                i1=0; i2=1;\n                j1=1; j2=1;\n                k1=0; k2=0;\n            }\n        }\n\n        // A step of (1,0,0) in (i,j,k) means a step of (1-c,-c,-c) in (x,y,z),\n        // a step of (0,1,0) in (i,j,k) means a step of (-c,1-c,-c) in (x,y,z), and\n        // a step of (0,0,1) in (i,j,k) means a step of (-c,-c,1-c) in (x,y,z), where\n        // c = 1/6.\n\n        // Offsets for second corner\n        var x1 = x0 - i1 + G3;\n        var y1 = y0 - j1 + G3;\n        var z1 = z0 - k1 + G3;\n\n        // Offsets for third corner\n        var x2 = x0 - i2 + 2 * G3;\n        var y2 = y0 - j2 + 2 * G3;\n        var z2 = z0 - k2 + 2 * G3;\n\n        // Offsets for fourth corner\n        var x3 = x0 - 1 + 3 * G3;\n        var y3 = y0 - 1 + 3 * G3;\n        var z3 = z0 - 1 + 3 * G3;\n\n        // Work out the hashed gradient indices of the four simplex corners\n        i &= 255;\n        j &= 255;\n        k &= 255;\n\n        //Get indices from permutation table\n        var gi0 = gradP[i+   perm[j+   perm[k   ]]];\n        var gi1 = gradP[i+i1+perm[j+j1+perm[k+k1]]];\n        var gi2 = gradP[i+i2+perm[j+j2+perm[k+k2]]];\n        var gi3 = gradP[i+ 1+perm[j+ 1+perm[k+ 1]]];\n\n        // Calculate the contribution from the four corners\n        // First corner\n        var t0 = 0.6 - x0*x0 - y0*y0 - z0*z0;\n        if (t0 < 0) {\n            n0 = 0;\n        }\n        // (x,y) of grad3 used for 2D gradient\n        else {\n            t0 *= t0;\n            n0 = t0 * t0 * gi0.dot3(x0, y0, z0);\n        }\n\n        // Second corner\n        var t1 = 0.6 - x1*x1 - y1*y1 - z1*z1;\n        if (t1 < 0) {\n            n1 = 0;\n        }\n        else {\n            t1 *= t1;\n            n1 = t1 * t1 * gi1.dot3(x1, y1, z1);\n        }\n\n        // Third corner\n        var t2 = 0.6 - x2*x2 - y2*y2 - z2*z2;\n        if (t2 < 0) {\n            n2 = 0;\n        }\n        else {\n            t2 *= t2;\n            n2 = t2 * t2 * gi2.dot3(x2, y2, z2);\n        }\n\n        // Fourth corner\n        var t3 = 0.6 - x3*x3 - y3*y3 - z3*z3;\n        if (t3 < 0) {\n            n3 = 0;\n        }\n        else {\n            t3 *= t3;\n            n3 = t3 * t3 * gi3.dot3(x3, y3, z3);\n        }\n\n        // Add contributions from each corner to get the final noise value.\n        // The result is scaled to return values in the interval [-1,1].\n        return 32 * (n0 + n1 + n2 + n3);\n\n    };\n\n\n    /**\n     * Generate 2D Perlin noise.\n     *\n     * @param {Number} x\n     * @param {Number} y\n     * @return {Number}\n     */\n    perlin2(x, y) {\n\n        // Find unit grid cell containing point\n        var X = Math.floor(x), Y = Math.floor(y);\n\n        // Get relative xy coordinates of point within that cell\n        x = x - X; y = y - Y;\n\n        // Wrap the integer cells at 255 (smaller integer period can be introduced here)\n        X = X & 255; Y = Y & 255;\n\n        // Calculate noise contributions from each of the four corners\n        var n00 = gradP[X+perm[Y]].dot2(x, y);\n        var n01 = gradP[X+perm[Y+1]].dot2(x, y-1);\n        var n10 = gradP[X+1+perm[Y]].dot2(x-1, y);\n        var n11 = gradP[X+1+perm[Y+1]].dot2(x-1, y-1);\n\n        // Compute the fade curve value for x\n        var u = fade(x);\n\n        // Interpolate the four results\n        return lerp(\n            lerp(n00, n10, u),\n            lerp(n01, n11, u),\n            fade(y)\n        );\n\n    };\n\n\n    /**\n     * Generate 3D Perlin noise.\n     *\n     * @param {Number} x\n     * @param {Number} y\n     * @param {Number} z\n     * @return {Number}\n     */\n    perlin3(x, y, z) {\n\n        // Find unit grid cell containing point\n        var X = Math.floor(x), Y = Math.floor(y), Z = Math.floor(z);\n\n        // Get relative xyz coordinates of point within that cell\n        x = x - X; y = y - Y; z = z - Z;\n\n        // Wrap the integer cells at 255 (smaller integer period can be introduced here)\n        X = X & 255; Y = Y & 255; Z = Z & 255;\n\n        // Calculate noise contributions from each of the eight corners\n        var n000 = gradP[X+  perm[Y+  perm[Z  ]]].dot3(x,   y,     z);\n        var n001 = gradP[X+  perm[Y+  perm[Z+1]]].dot3(x,   y,   z-1);\n        var n010 = gradP[X+  perm[Y+1+perm[Z  ]]].dot3(x,   y-1,   z);\n        var n011 = gradP[X+  perm[Y+1+perm[Z+1]]].dot3(x,   y-1, z-1);\n        var n100 = gradP[X+1+perm[Y+  perm[Z  ]]].dot3(x-1,   y,   z);\n        var n101 = gradP[X+1+perm[Y+  perm[Z+1]]].dot3(x-1,   y, z-1);\n        var n110 = gradP[X+1+perm[Y+1+perm[Z  ]]].dot3(x-1, y-1,   z);\n        var n111 = gradP[X+1+perm[Y+1+perm[Z+1]]].dot3(x-1, y-1, z-1);\n\n        // Compute the fade curve value for x, y, z\n        var u = fade(x);\n        var v = fade(y);\n        var w = fade(z);\n\n        // Interpolate\n        return lerp(\n            lerp(\n                lerp(n000, n100, u),\n                lerp(n001, n101, u), w\n            ),\n            lerp(\n                lerp(n010, n110, u),\n                lerp(n011, n111, u), w\n            ),\n           v\n        );\n\n    };\n};\n\n\n/**\n * 3D gradients\n *\n * @type {Array}\n */\nvar grad3 = [\n    new Grad(1,1,0), new Grad(-1,1,0), new Grad(1,-1,0), new Grad(-1,-1,0),\n    new Grad(1,0,1), new Grad(-1,0,1), new Grad(1,0,-1), new Grad(-1,0,-1),\n    new Grad(0,1,1), new Grad(0,-1,1), new Grad(0,1,-1), new Grad(0,-1,-1)\n];\n\n\n/**\n * Permutation table\n *\n * @type {Array}\n */\nvar p = [\n    151,160,137,91,90,15,\n    131,13,201,95,96,53,194,233,7,\n    225,140,36,103,30,69,142,8,99,\n    37,240,21,10,23,190,6,148,247,\n    20,234,75,0,26,197,62,94,252,\n    219,203,117,35,11,32,57,177,33,\n    88,237,149,56,87,174,20,125,136,\n    171,168,68,175,74,165,71,134,\n    139,48,27,166,77,146,158,231,\n    83,111,229,122,60,211,133,230,\n    220,105,92,41,55,46,245,40,244,\n    102,143,54,65,25,63,161,1,216,80,\n    73,209,76,132,187,208,89,18,169,\n    200,196,135,130,116,188,159,86,\n    164,100,109,198,173,186,3,64,52,\n    217,226,250,124,123,5,202,38,147,\n    118,126,255,82,85,212,207,206,59,\n    227,47,16,58,17,182,189,28,42,223,\n    183,170,213,119,248,152,2,44,154,\n    163, 70,221,153,101,155,167,43,172,\n    9,129,22,39,253,19,98,108,110,79,\n    113,224,232,178,185,112,104,218,\n    246,97,228,251,34,242,193,238,210,\n    144,12,191,179,162,241,81,51,145,235,\n    249,14,239,107,49,192,214,31,181,199,\n    106,157,184,84,204,176,115,121,50,45,\n    127,4,150,254,138,236,205,93,222,114,\n    67,29,24,72,243,141,128,195,78,66,\n    215,61,156,180\n];\n\n\n// Double the permutation table length (avoid array wrapping)\nvar perm = new Array(512);\nvar gradP = new Array(512);\n\n\n// Skewing and unskewing factors for generating 2D, 3D and 4D noise\nvar F3 = 1/3;\nvar G3 = 1/6;\nvar F2 = 0.5*(Math.sqrt(3)-1);\nvar G2 = (3-Math.sqrt(3))/6;\n\nconst noisejs = new noise()\nexport default noisejs;\n","import { shapeOptions } from './Shape'\nimport Victor from 'victor'\nimport Effect from './Effect'\nimport noise from '../common/noise'\nimport { subsample } from '../common/geometry'\n\nconst options = {\n  ...shapeOptions,\n  ...{\n    seed: {\n      title: 'Random seed',\n      min: 1\n    },\n    noiseMagnification: {\n      title: 'Magnification',\n      min: 1,\n      max: 100,\n      step: 1,\n      isVisible: (state) => { return state.noiseApplication !== 'Linear' }\n    },\n    noiseAmplitude: {\n      title: 'Amplitude',\n      min: 0,\n      max: 20,\n      step: 1\n    },\n    noiseType: {\n      title: 'Noise type',\n      type: 'togglebutton',\n      choices: ['Perlin', 'Simplex'],\n    },\n    noiseApplication: {\n      title: 'Application',\n      type: 'togglebutton',\n      choices: ['Contour', 'Linear'],\n    },\n  }\n}\n\nexport default class Noise extends Effect {\n  constructor() {\n    super('Noise')\n  }\n\n  getInitialState() {\n    return {\n      ...super.getInitialState(),\n      ...{\n        type: 'noise',\n        selectGroup: 'effects',\n        seed: 1,\n        noiseAmplitude: 4,\n        noiseMagnification: 58,\n        noiseType: 'Simplex',\n        noiseApplication: 'Contour',\n        canTransform: false,\n        repeatEnabled: false,\n        canChangeSize: false,\n        canRotate: false,\n        canMove: false,\n        subsample: true\n      }\n    }\n  }\n\n  applyEffect(effect, layer, vertices) {\n    if (effect.noiseAmplitude > 0) {\n      noise.seed(effect.seed)\n      vertices = subsample(vertices, 2.0)\n\n      if (effect.noiseApplication === 'Linear') {\n        return this.applyLinearEffect(effect, vertices)\n      } else {\n        return this.applyRadialEffect(effect, vertices, this.contour)\n      }\n    } else {\n      return vertices\n    }\n  }\n\n  applyLinearEffect(effect, vertices) {\n    return vertices.map(vertex => {\n      const a = this.octaveNoise(effect.noiseType, vertex.x, vertex.y, 2, effect.noiseAmplitude)\n      return new Victor(vertex.x + a, vertex.y + a)\n    })\n  }\n\n  applyRadialEffect(effect, vertices, contourFn) {\n    let periodDenominator = effect.noiseType === 'Simplex' ?\n      100 + 6 * effect.noiseMagnification :\n      100 + effect.noiseMagnification\n    if (periodDenominator === 0) periodDenominator = 1\n    const period = 1/periodDenominator\n\n    return vertices.map(vertex => {\n      const v = this.noise(effect.noiseType, vertex.x * period, vertex.y * period)\n      const a = v * Math.PI * 2\n      return contourFn(a * effect.noiseAmplitude, vertex)\n    })\n  }\n\n  noise(noiseType, x, y) {\n    return noiseType === 'Simplex' ? noise.simplex2(x, y) : noise.perlin2(x, y)\n  }\n\n  octaveNoise(noiseType, x, y, octaves, persistence) {\n      let total = 0\n      let frequency = 1\n      let amplitude = 1\n\n      for(let i=0; i<octaves; i++) {\n        total += this.noise(noiseType, x * frequency, y * frequency) * amplitude\n        amplitude *= persistence\n        frequency *= 2\n      }\n\n      return total\n  }\n\n  contour(a, vertex) {\n    return new Victor(vertex.x + Math.cos(a) * 5, vertex.y + Math.sin(a) * 5)\n  }\n\n  getVertices(state) {\n    // not needed\n    return []\n  }\n\n  getOptions() {\n    return options\n  }\n}\n","import Shape, { shapeOptions } from './Shape'\nimport { getMachineInstance } from '../features/machine/computer'\nimport Victor from 'victor'\nimport noise from '../common/noise'\nimport seedrandom from 'seedrandom'\nimport { shapeSimilarity } from 'curve-matcher'\nimport { offset } from '../common/geometry'\n\nconst options = {\n  ...shapeOptions,\n  ...{\n    numParticles: {\n      title: 'Number of waves',\n      min: 1\n    },\n    seed: {\n      title: 'Random seed',\n      min: 1\n    },\n    noiseLevel: {\n      title: 'Noise level',\n      min: 0,\n      max: 600,\n      step: 10\n    },\n    noiseType: {\n      title: 'Type',\n      type: 'dropdown',\n      choices: ['Perlin', 'Simplex'],\n    },\n  }\n}\n\nexport default class NoiseWave extends Shape {\n  constructor() {\n    super('Noise Waves')\n  }\n\n  getInitialState() {\n    return {\n      ...super.getInitialState(),\n      ...{\n        type: 'noise_wave',\n        noise: 1,\n        seed: 1,\n        noiseLevel: 0,\n        noiseType: 'Perlin',\n        numParticles: 100,\n        selectGroup: 'Erasers',\n        canTransform: false,\n        repeatEnabled: false,\n        canChangeSize: false,\n        autosize: false,\n        usesMachine: true,\n      }\n    }\n  }\n\n  getVertices(state) {\n    // without this adjustment, using an inverted circular mask causes clipping issues\n    const adjustment = .001\n\n    const machine = {\n      maxRadius: state.machine.maxRadius - adjustment,\n      rectangular: state.machine.rectangular,\n      minX: state.machine.minX,\n      maxX: state.machine.maxX,\n      minY: state.machine.minY,\n      maxY: state.machine.maxY\n    }\n\n    const shape = state.shape\n    const rng = seedrandom(shape.seed)\n    let vertices = []\n    let sizeX, sizeY\n\n    if (machine.rectangular) {\n      sizeX = machine.maxX - machine.minX\n      sizeY = machine.maxY - machine.minY\n    } else {\n      sizeX = sizeY = machine.maxRadius * 2.0\n    }\n\n    const machineInstance = getMachineInstance([], machine)\n\n    noise.seed(shape.seed)\n\n    const particles = []\n    for (let i=0; i<shape.numParticles; i++) {\n      const p1 = {\n        x: sizeX * rng() - sizeX/2,\n        y: sizeY * rng() - sizeY/2,\n        a: 0\n      }\n\n      particles.push(p1)\n      particles.push({\n        x: p1.x,\n        y: p1.y,\n        a: 2*Math.PI / 2\n      })\n\n    }\n\n    const vertexGroups = particles.map( (particle) => {\n      let group = []\n      let wasInside = false\n\n      // Arbitrarily choose 1000 iterations. This will stop particles that don't ever intersect with\n      // the machine. It needs to be high enough to always leave the machine for particles that\n      // don't move very fast.\n      for (let iterations=0; iterations<=1000; iterations++) {\n        // This has side effects on the particle\n        const newVertex = this.getParticleVertex(particle, shape)\n        group.push(newVertex)\n\n        // Stop if we entered and then exited the machine coordinates.\n        const inside = machineInstance.inBounds(newVertex)\n        if (wasInside && !inside) {\n          break\n        }\n        wasInside = inside\n      }\n      return group\n    })\n\n    let prevCurve\n    for (let j=0; j<particles.length; j=j+2) {\n      const curve = this.getCurve(vertexGroups, j);\n\n      // Connect to the previous vertex, if there are any previous vertices.\n      if (vertices.length > 0) {\n        const start = vertices[vertices.length - 1]\n        const end = curve[0]\n        const startPerimeter = machineInstance.nearestPerimeterVertex(start)\n        const endPerimeter = machineInstance.nearestPerimeterVertex(end)\n        vertices = vertices.concat([startPerimeter, machineInstance.tracePerimeter(startPerimeter, endPerimeter), endPerimeter, end].flat())\n      }\n\n      if (!prevCurve || shapeSimilarity(curve, prevCurve, { estimationPoints: 100, rotations: 0 }) < ((state.shape.noiseSimilarity || 88) / 100)) {\n        vertices = vertices.concat(curve)\n      }\n      prevCurve = curve\n    }\n\n    vertices = vertices.map(vertex => {\n      return offset(vertex, -state.shape.offsetX, -state.shape.offsetY)\n    })\n\n    return vertices\n  }\n\n  getCurve(vertexGroups, idx) {\n    const pEndVertices = vertexGroups[idx]\n    const pStartVertices = vertexGroups[idx+1]\n    return pStartVertices.reverse().concat(pEndVertices)\n  }\n\n  getParticleVertex(p, options) {\n    let periodDenominator = 600 - options.noiseLevel\n    if (options.noiseLevel >= 600) periodDenominator = 1\n    const period = 1/periodDenominator\n    const v = options.noiseType === 'Simplex' ? noise.simplex2(p.x * period, p.y * period) : noise.perlin2(p.x * period, p.y * period)\n    const a = v * 2 * Math.PI + p.a\n\n    p.x += Math.cos(a) * 5\n    p.y += Math.sin(a) * 5\n\n    return new Victor(p.x + options.offsetX, p.y + options.offsetY)\n  }\n\n  getOptions() {\n    return options\n  }\n}\n","import Victor from 'victor'\nimport Shape from './Shape'\n\nexport default class Point extends Shape {\n  constructor() {\n    super('Point')\n  }\n\n  getInitialState() {\n    return {\n      ...super.getInitialState(),\n      ...{\n        type: 'point',\n        autosize: false,\n        startingWidth: 1,\n        startingHeight: 1,\n        canTransform: false,\n        shouldCache: false,\n        canChangeSize: false,\n        repeatEnabled: false,\n      }\n    }\n  }\n\n  getVertices(state) {\n    return [new Victor(0.0, 0.0)]\n  }\n}\n","import Victor from 'victor'\nimport Shape, { shapeOptions } from './Shape'\n\nconst options = {\n  ...shapeOptions,\n  ...{\n    polygonSides: {\n      title: 'Number of sides',\n      min: 3\n    },\n    roundCorners: {\n      title: 'Round corners',\n      type: 'checkbox',\n    },\n    roundFraction: {\n      title: 'Round fraction',\n      min: 0.05,\n      max: 0.5,\n      step: 0.025,\n      isVisible: (state) => { return state.roundCorners }\n    },\n  }\n}\n\nexport default class Polygon extends Shape {\n  constructor() {\n    super('Polygon')\n  }\n\n  getInitialState() {\n    return {\n      ...super.getInitialState(),\n      ...{\n        type: 'polygon',\n        polygonSides: 4,\n        roundCorners: false,\n        roundFraction: 0.25,\n      }\n    }\n  }\n\n  // Returns a list of points from (start, end] along the line.\n  getLineVertices(startPoint, endPoint, numberOfPoints) {\n    const resolution = 1.0/numberOfPoints\n    let points = []\n    for (let d=resolution; d<=1.0; d+=resolution) {\n      points.push(new Victor(startPoint.x + (endPoint.x - startPoint.x)*d,\n                             startPoint.y + (endPoint.y - startPoint.y)*d))\n    }\n    return points\n  }\n\n  getVertices(state) {\n    // beta is the fraction to have rounded.\n    const beta = state.shape.roundFraction\n    // alpha is the fration to have straight.\n    const alpha = (1.0-beta)\n    let points = []\n    for (let i=0; i<=state.shape.polygonSides; i++) {\n      const angle = Math.PI * 2.0 / state.shape.polygonSides * (0.5 + i)\n      if (state.shape.roundCorners && beta !== 0.0) {\n        // angles that make up the arc.\n        const angleStart = Math.PI * 2.0 / state.shape.polygonSides * i\n        const angleEnd = Math.PI * 2.0 / state.shape.polygonSides * (i + 1)\n        const angleResolution = 0.10\n        if (points.length > 0) {\n          // Start with a line. We use a bunch of points for this, so they get stretch about evenly\n          // as the curves do.\n          const numberOfLinePoints = (angleEnd - angleStart)/angleResolution/beta\n          points = points.concat(this.getLineVertices(points[points.length-1],\n                                                      new Victor(alpha * Math.cos(angle) + beta * Math.cos(angleStart),\n                                                                 alpha * Math.sin(angle) + beta * Math.sin(angleStart)),\n                                                      numberOfLinePoints))\n        }\n        if (i !== state.shape.polygonSides) {\n          // Create the arc.\n          for (let arcAngle=angleStart + angleResolution; arcAngle<=angleEnd; arcAngle += angleResolution) {\n            points.push(new Victor(alpha * Math.cos(angle) + beta * Math.cos(arcAngle), alpha * Math.sin(angle) + beta * Math.sin(arcAngle)))\n          }\n        }\n      } else {\n        // Not rounded corners.\n        points.push(new Victor(Math.cos(angle), Math.sin(angle)))\n      }\n    }\n    return points\n  }\n\n  getOptions() {\n    return options\n  }\n}\n","import Victor from 'victor'\nimport Shape, { shapeOptions } from './Shape'\n\nconst options = {\n  ...shapeOptions,\n  ...{\n    reuleauxSides: {\n      title: 'Number of sides',\n      step: 1,\n      min: 2\n    },\n  }\n}\n\nexport default class Reuleaux extends Shape {\n  constructor() {\n    super('Reuleaux')\n  }\n\n  getInitialState() {\n    return {\n      ...super.getInitialState(),\n      ...{\n        type: 'reuleaux',\n        reuleauxSides: 3\n      }\n    }\n  }\n\n  getVertices(state) {\n    let points = []\n    // Construct an equalateral triangle\n    let corners = []\n    // Initial location at PI/2\n    let angle = Math.PI/2.0\n    // How much of the circle in one side?\n    let coverageAngle = Math.PI/state.shape.reuleauxSides\n    let halfCoverageAngle = 0.5 * coverageAngle\n    for (let c=0; c<state.shape.reuleauxSides; c++) {\n      let startAngle = angle + Math.PI - halfCoverageAngle\n      corners.push( [new Victor(Math.cos(angle), Math.sin(angle)), startAngle] )\n      angle += 2.0 * Math.PI / state.shape.reuleauxSides\n    }\n    let length = 0.5 / Math.cos(Math.PI/2.0/state.shape.reuleauxSides)\n    const scale = 1.7\n    for (let corn=0; corn < corners.length; corn++) {\n      for (let i=0; i<128; i++) {\n        let angle = coverageAngle  * (i / 128.0) + corners[corn][1]\n        points.push(new Victor(scale * (length * corners[corn][0].x + Math.cos(angle)),\n                           scale * (length * corners[corn][0].y + Math.sin(angle))))\n      }\n    }\n    return points\n  }\n\n  getOptions() {\n    return options\n  }\n}\n","import Victor from 'victor'\nimport Shape, { shapeOptions } from './Shape'\n\nconst options = {\n  ...shapeOptions,\n  ...{\n    roseN: {\n      title: 'Numerator',\n      step: 1,\n      min: 1\n    },\n    roseD: {\n      title: 'Denominator',\n      step: 1,\n      min: 1\n    },\n  }\n}\n\nexport default class Rose extends Shape {\n  constructor() {\n    super('Rose')\n    this.link = 'http://mathworld.wolfram.com/Rose.html'\n    this.linkText = 'Wolfram Mathworld'\n  }\n\n  getInitialState() {\n    return {\n      ...super.getInitialState(),\n      ...{\n        type: 'rose',\n        roseN: 3,\n        roseD: 2,\n        transformMethod: 'intact',\n      }\n    }\n  }\n\n  getVertices(state) {\n    let points = []\n    let a = 2\n    let n = parseInt(state.shape.roseN)\n    let d = parseInt(state.shape.roseD)\n    let p = (n * d % 2 === 0) ? 2 : 1\n    let thetaClose = d * p * 32 * n\n    let resolution = 64 * n\n\n    for (let i=0; i<thetaClose+1; i++) {\n      let theta = Math.PI * 2.0 / (resolution) * i\n      let r = 0.5 * a * Math.sin((n / d) * theta)\n      points.push(new Victor(r * Math.cos(theta), r * Math.sin(theta)))\n    }\n    return points\n  }\n\n  getOptions() {\n    return options\n  }\n}\n","// L-system instructions for space filling curves\nexport const subtypes = {\n  // http://mathforum.org/advanced/robertd/lsys2d.html\n  'Gosper (flowsnake)': {\n    axiom: 'A',\n    draw: ['A', 'B'],\n    rules:  {\n      A: 'A-B--B+A++AA+B-',\n      B: '+A-BB--B-A++A+B'\n    },\n    angle: Math.PI / 3,\n    iterationsGrow: (config) => {\n      return config.iterations\n    },\n    maxIterations: 6\n  },\n  // http://mathforum.org/advanced/robertd/lsys2d.html\n  'Hilbert': {\n    axiom: 'L',\n    draw: 'F',\n    rules: {\n      L: '+RF-LFL-FR+',\n      R: '-LF+RFR+FL-'\n    },\n    startingAngle: Math.PI,\n    minIterations: 2\n  },\n  // http://mathforum.org/advanced/robertd/lsys2d.html\n  'Hilbert 2': {\n    axiom: 'X',\n    draw: 'F',\n    rules: {\n      X: 'XFYFX+F+YFXFY-F-XFYFX',\n      Y: 'YFXFY-F-XFYFX+F+YFXFY'\n    },\n    startingAngle: Math.PI,\n    maxIterations: 4\n  },\n  // https://en.wikipedia.org/wiki/Sierpi%C5%84ski_curve\n  'Sierpinski': {\n    axiom: 'F--XF--F--XF',\n    draw: ['F', 'G'],\n    rules: {\n      X: 'XF+G+XF--F--XF+G+X'\n    },\n    startingAngle: Math.PI/4,\n    angle: Math.PI/4,\n    maxIterations: 6\n  },\n  // https://onlinemathtools.com/l-system-generator\n  'Penrose Tile': {\n     axiom: '[7]++[7]++[7]++[7]++[7]',\n     draw: ['6', '7', '8', '9'],\n    rules: {\n      6: '8++9----7[-8----6]++',\n      7: '+8--9[---6--7]+',\n      8: '-6++7[+++8++9]-',\n      9: '--8++++6[+9++++7]--7'\n    },\n    angle: Math.PI/5,\n    maxIterations: 6,\n    iterationsGrow: (config) => {\n      return 1 + Math.max(1, 3/config.iterations)\n    }\n  },\n  // https://en.wikipedia.org/wiki/Sierpi%C5%84ski_curve\n  'Sierpinski Square': {\n    axiom: 'F+XF+F+XF',\n    draw: 'F',\n    rules: {\n      X: 'XF-F+F-XF+F+XF-F+F-X'\n    },\n    startingAngle: Math.PI/4,\n    maxIterations: 6\n  },\n}\n","import Shape, { shapeOptions } from '../Shape'\nimport {\n  lsystem,\n  lsystemPath,\n  onSubtypeChange,\n  onMinIterations,\n  onMaxIterations\n} from '../../common/lindenmayer'\nimport { resizeVertices } from '../../common/geometry'\nimport { subtypes } from './subtypes'\n\nconst options = {\n  ...shapeOptions,\n  ...{\n    fillerSubtype: {\n      title: 'Type',\n      type: 'dropdown',\n      choices: Object.keys(subtypes),\n      onChange: (changes, attrs) => {\n        return onSubtypeChange(subtypes[changes.fillerSubtype], changes, attrs)\n      }\n    },\n    iterations: {\n      title: 'Iterations',\n      min: (state) => {\n        return onMinIterations(subtypes[state.fillerSubtype], state)\n      },\n      max: (state) => {\n        return onMaxIterations(subtypes[state.fillerSubtype], state)\n      }\n    }\n  }\n}\n\nexport default class SpaceFiller extends Shape {\n  constructor() {\n    super('Space Filler')\n    this.linkText = 'Fractal charm: space filling curves'\n    this.link = 'https://www.youtube.com/watch?v=RU0wScIj36o'\n  }\n\n  getInitialState() {\n    return {\n      ...super.getInitialState(),\n      ...{\n        type: 'space_filler',\n        selectGroup: 'Erasers',\n        canTransform: false,\n        iterations: 6,\n        fillerSubtype: 'Hilbert',\n        repeatEnabled: false,\n        canChangeSize: false,\n        autosize: false,\n        usesMachine: true,\n      }\n    }\n  }\n\n  getVertices(state) {\n    const machine = state.machine\n    const iterations = state.shape.iterations || 1\n\n    let sizeX, sizeY\n    if (machine.rectangular) {\n      sizeX = machine.maxX - machine.minX\n      sizeY = machine.maxY - machine.minY\n    } else {\n      sizeX = sizeY = machine.maxRadius * 2.0\n    }\n\n    // generate our vertices using a set of l-system rules\n    let config = subtypes[state.shape.fillerSubtype]\n    config.iterations = iterations\n\n    if (config.side === undefined) { config.side = 5 }\n    if (config.angle === undefined) { config.angle = Math.PI/2 }\n\n    let curve = lsystemPath(lsystem(config), config)\n    let scale = 1\n\n    if (config.iterationsGrow) {\n      scale = (typeof config.iterationsGrow === 'function') ? config.iterationsGrow(config) : config.iterationsGrow\n    }\n\n    return resizeVertices(curve, sizeX*scale, sizeY*scale)\n  }\n\n  getOptions() {\n    return options\n  }\n}\n","import Victor from 'victor'\nimport Shape, { shapeOptions } from './Shape'\n\nconst options = {\n  ...shapeOptions,\n  ...{\n    points: {\n      title: 'Number of points',\n      min: 2\n    },\n    starRatio: {\n      title: 'Size of points',\n      step: 0.05,\n      min: 0.05\n    },\n  }\n}\n\nexport default class Star extends Shape {\n  constructor() {\n    super('Star')\n  }\n\n  getInitialState() {\n    return {\n      ...super.getInitialState(),\n      ...{\n        type: 'star',\n        points: 5,\n        starRatio: 0.5,\n      }\n    }\n  }\n\n  getVertices(state) {\n    let points = []\n    for (let i=0; i<=state.shape.points * 2; i++) {\n      let angle = Math.PI * 2.0 / (2.0 * state.shape.points) * i\n      let star_scale = 1.0\n      if (i % 2 === 0) {\n        star_scale *= state.shape.starRatio\n      }\n      points.push(new Victor(star_scale * Math.cos(angle), star_scale * Math.sin(angle)))\n    }\n    return points\n  }\n\n  getOptions() {\n    return options\n  }\n}\n","import Victor from 'victor'\nimport Graph, { mix } from '../../common/Graph'\nimport { eulerianTrail } from '../../common/eulerianTrail'\nimport { difference } from '../../common/util'\nimport Shape, { shapeOptions } from '../Shape'\n\nconst vecTriangle = [\n  new Victor(-0.85, -0.4907477295),\n  new Victor(0.85, -0.4907477295),\n  new Victor(0.0,  0.9814954573),\n]\n\nconst vecSquare = [\n  new Victor(-0.7, -0.7),\n  new Victor( 0.7,  0.7),\n  new Victor(-0.7,  0.7),\n\n  new Victor(-0.7, -0.7),\n  new Victor(0.7,  0.7),\n  new Victor(0.7, -0.7)\n]\n\nfunction getEdges(edges, a, b, c, count, settings) {\n  let da, db, dc\n\n  if (count === 0) {\n    if (settings.rotate > 0) {\n      da = Math.sqrt(Math.pow(a.x, 2) + Math.pow(a.y, 2)) * (settings.rotate * Math.PI / 180.0)\n      db = Math.sqrt(Math.pow(b.x, 2) + Math.pow(b.y, 2)) * (settings.rotate * Math.PI / 180.0)\n      dc = Math.sqrt(Math.pow(c.x, 2) + Math.pow(c.y, 2)) * (settings.rotate * Math.PI / 180.0)\n    } else {\n      da = (settings.rotate * Math.PI / 180.0)\n      db = (settings.rotate * Math.PI / 180.0)\n      dc = (settings.rotate * Math.PI / 180.0)\n    }\n\n    let ap = new Victor(\n      (a.x * Math.cos(da)) - (a.y * Math.sin(da)),\n      (a.x * Math.sin(da)) + (a.y * Math.cos(da)))\n    let bp = new Victor(\n      (b.x * Math.cos(db)) - (b.y * Math.sin(db)),\n      (b.x * Math.sin(db)) + (b.y * Math.cos(db)))\n    let cp = new Victor(\n      (c.x * Math.cos(dc)) - (c.y * Math.sin(dc)),\n      (c.x * Math.sin(dc)) + (c.y * Math.cos(dc)))\n\n    edges.push([ap, bp], [ap, cp], [bp, cp])\n    return\n  }\n\n  let ab = mix(a, b, 0.5)\n  let ac = mix(a, c, 0.5)\n  let bc = mix(b, c, 0.5)\n\n  getEdges(edges, ab, ac, bc, count - 1, settings)\n  getEdges(edges, c, ac, bc, count - 1, settings)\n  getEdges(edges, b, bc, ab, count - 1, settings)\n  getEdges(edges, a, ab, ac, count - 1, settings)\n}\n\nconst options = {\n  ...shapeOptions,\n  ...{\n    tessellationTwistNumSides: {\n      title: \"Number of sides\",\n      min: 3\n    },\n    tessellationTwistIterations: {\n      title: \"Iterations\",\n      min: 0,\n      max: 4\n    },\n    tessellationTwistRotate: {\n      title: \"Rotate and twist\",\n      step: 5,\n      min: 0\n    }\n  }\n}\n\n// Adapted from https://codepen.io/rafaelpascoalrodrigues/pen/KpBJve.\nexport default class TessellationTwist extends Shape {\n  constructor() {\n    super('Tessellation Twist')\n  }\n\n  getInitialState() {\n    return {\n      ...super.getInitialState(),\n      ...{\n        type: 'tessellation_twist',\n        tessellationTwistNumSides: 5,\n        tessellationTwistIterations: 2,\n        tessellationTwistRotate: 0,\n        repeatEnabled: false,\n      }\n    }\n  }\n\n  getShapeVertices(numSides) {\n    let vertices = []\n    for (let i=0; i<=numSides; i++) {\n      let angle = Math.PI * 2.0 / numSides * (0.5 + i)\n      let angle2 = Math.PI * 2.0 / numSides * (0.5 + ((i + 1) % numSides))\n\n      vertices.push(new Victor(0, 0))\n      vertices.push(new Victor(Math.cos(angle), Math.sin(angle)))\n      vertices.push(new Victor(Math.cos(angle2), Math.sin(angle2)))\n    }\n    return vertices\n  }\n\n  getVertices(state) {\n    let vertices\n    let edges = []\n    const tessellation = parseInt(state.shape.tessellationTwistIterations)\n    const sides = parseInt(state.shape.tessellationTwistNumSides)\n\n    switch (sides) {\n      case 3:\n        vertices = vecTriangle.slice(0)\n        break\n      case 4:\n        vertices = vecSquare.slice(0)\n        break\n      default:\n        vertices = this.getShapeVertices(sides)\n        break\n    }\n\n    // build our tessellations\n    for (var i = 0; i < vertices.length; i += 3) {\n      getEdges(edges, vertices[i + 0], vertices[i + 1], vertices[i + 2],\n        tessellation, { rotate: parseInt(state.shape.tessellationTwistRotate) })\n    }\n\n    // build edge and adjacency maps; this serves to ensure unique\n    // vertices and edges, and give us a string-based key to access and run\n    // algorithms on them.\n    let graph = new Graph()\n\n    edges.forEach((edge) => {\n      let v1 = edge[0]\n      let v2 = edge[1]\n\n      graph.addNode(v1)\n      graph.addNode(v2)\n      graph.addEdge(v1, v2)\n    })\n\n    // build a graph\n    // find the eulerian trail that efficiently visits all of the vertices\n    let trail = eulerianTrail({edges: Object.values(graph.edgeMap)})\n\n    let prevKey\n    let walkedVertices = []\n    var walkedEdges = []\n\n    // if there are nodes with an odd number of edges (as in pentagon and hexagon)\n    // there is not a eulerian trail that visits all of the nodes. So we need to identify\n    // the missing nodes and create edges for them. There is a complex algorithm\n    // (chinese postman) that can be used to do this for the general case, but\n    // it's computationally expensive and overkill for our situation.\n    for (i = 0; i < trail.length-1; i++) {\n      let edge = [trail[i], trail[i+1]].sort().toString()\n      walkedEdges.push(edge)\n    }\n    walkedEdges = new Set(walkedEdges)\n\n    let missingEdges = Array.from(difference(walkedEdges, graph.edgeKeys)).reduce((hash, d) => {\n      d = d.split(',')\n      hash[d[0] + ',' + d[1]] = d[2] + ',' + d[3]\n      return hash\n    }, {})\n\n    trail.forEach((key, index) => {\n      let vertex = graph.nodeMap[key]\n\n      if (prevKey) {\n        if (!graph.hasEdge(key, prevKey)) {\n          // non-eulerian move, so we'll walk the shortest valid path between them\n          let path = graph.dijkstraShortestPath(prevKey, key)\n          path.shift()\n          path.forEach(node => walkedVertices.push(node))\n          walkedVertices.push(vertex)\n        } else {\n          walkedVertices.push(vertex)\n        }\n      } else {\n        walkedVertices.push(vertex)\n      }\n\n      // add any missing edges\n      if (missingEdges[key]) {\n        let missingVertex = graph.nodeMap[missingEdges[key]]\n        let edgeKey = [key, missingEdges[key]].sort().toString()\n\n        if (graph.edgeMap[edgeKey]) {\n          // only add valid edges\n          walkedVertices.push(missingVertex)\n          walkedVertices.push(vertex)\n        }\n        delete missingEdges[key]\n      }\n\n      prevKey = key\n    })\n\n    const scale = 10.5 // to normalize starting size\n    walkedVertices.forEach(point => {\n      if (!point.visited) {\n        point.multiply({x: scale, y: scale })\n        point.visited = true\n      }\n    })\n    return walkedVertices\n  }\n\n  getOptions() {\n    return options\n  }\n}\n","// adapted from https://github.com/mauriciopoppe/eulerian-trail/blob/master/lib/eulerian-trail.js\n// commented out thrown exceptions to return non-optimal eulerian paths\nexport const eulerianTrail = (options) => {\n  var g = []\n  var i\n  var edgePointer = []\n  var edgeUsed = []\n  var trail = []\n\n  var id = {}\n  var idReverse = []\n  var idCount = 0\n\n  function getId(x) {\n    if (!id.hasOwnProperty(x)) {\n      edgePointer[idCount] = 0\n      idReverse[idCount] = x\n      id[x] = idCount++\n    }\n    return id[x]\n  }\n\n  function dfs(v) {\n    for (; edgePointer[v] < g[v].length; edgePointer[v] += 1) {\n      var edge = g[v][edgePointer[v]]\n      var to = edge[0]\n      var id = edge[1]\n      if (!edgeUsed[id]) {\n        edgeUsed[id] = true\n        dfs(to)\n      }\n    }\n    trail.push(v)\n  }\n\n  function pushEdge(u, v, id) {\n    g[u] = g[u] || []\n    g[v] = g[v] || []\n    g[u].push([v, id])\n  }\n\n  var deg = []\n  var inDeg = [], outDeg = []\n\n  for (i = 0; i < options.edges.length; i += 1) {\n    var edge = options.edges[i]\n    var u = getId(edge[0])\n    var v = getId(edge[1])\n\n    pushEdge(u, v, i)\n    if (!options.directed) {\n      pushEdge(v, u, i)\n    }\n\n    if (options.directed) {\n      outDeg[u] = outDeg[u] || 0\n      inDeg[u] = inDeg[u] || 0\n      outDeg[v] = outDeg[v] || 0\n      inDeg[v] = inDeg[v] || 0\n      outDeg[u] += 1\n      inDeg[v] += 1\n    } else {\n      deg[u] = deg[u] || 0\n      deg[v] = deg[v] || 0\n      deg[u] += 1\n      deg[v] += 1\n    }\n  }\n\n  function checkDirected() {\n    var oddVertex = 0\n    var start = 0\n\n    for (i = 0; i < idCount; i += 1) {\n      if (outDeg[i] - inDeg[i] !== 0) {\n        if (outDeg[i] > inDeg[i]) {\n          start = i\n        }\n        oddVertex += 1\n      }\n    }\n    return {odd: oddVertex, start: start}\n  }\n\n  function checkUndirected() {\n    var oddVertex = 0\n    var start = 0\n\n    for (i = 0; i < idCount; i += 1) {\n      if (deg[i] % 2 !== 0) {\n        start = i\n        oddVertex += 1\n      }\n    }\n    return {odd: oddVertex, start: start}\n  }\n\n  var check = options.directed ? checkDirected() : checkUndirected()\n  if (check.odd % 2 !== 0 || check.odd > 2) {\n//    throw Error('the graph does not have an eulerian trail')\n  }\n  dfs(check.start)\n\n  if (trail.length !== options.edges.length + 1) {\n//    throw Error('the graph does not have an eulerian trail')\n  }\n\n  trail.reverse()\n\n  // id to input\n  return trail.map(function (id) {\n    return idReverse[id]\n  })\n}\n","import Victor from 'victor'\n\nlet Vicious1Vertices = () => {\n  return [\n    new Victor(-0.745613252629, 0.342139688058),\n    new Victor(-0.722681883112, 0.350763810109),\n    new Victor(-0.700286039815, 0.359363989838),\n    new Victor(-0.683380317501, 0.365945196632),\n    new Victor(-0.666520036737, 0.372640251609),\n    new Victor(-0.649705686141, 0.379449643388),\n    new Victor(-0.632937754332, 0.386372394731),\n    new Victor(-0.61621672993, 0.393408994259),\n    new Victor(-0.59954407879, 0.400558464732),\n    new Victor(-0.582920289531, 0.40782080615),\n    new Victor(-0.566345850773, 0.415195529896),\n    new Victor(-0.549821739752, 0.42268214735),\n    new Victor(-0.533348933706, 0.430280658513),\n    new Victor(-0.516927921255, 0.437990574764),\n    new Victor(-0.500559191017, 0.445811896105),\n    new Victor(-0.484244208848, 0.453743645298),\n    new Victor(-0.467982974749, 0.461785822342),\n    new Victor(-0.451776954575, 0.46993793862),\n    new Victor(-0.435626636946, 0.478199505511),\n    new Victor(-0.417042020391, 0.487809171708),\n    new Victor(-0.398529230801, 0.497557117029),\n    new Victor(-0.380089734033, 0.507441875618),\n    new Victor(-0.361724018706, 0.517463936093),\n    new Victor(-0.343433550675, 0.527621343979),\n    new Victor(-0.325218818561, 0.537915076515),\n    new Victor(-0.307080799601, 0.548343667842),\n    new Victor(-0.289020959651, 0.558906629343),\n    new Victor(-0.271040275948, 0.569603472399),\n    new Victor(-0.253139237112, 0.580433708391),\n    new Victor(-0.235319797618, 0.591396360082),\n    new Victor(-0.217581468846, 0.60249142747),\n    new Victor(-0.199926693892, 0.61371793332),\n    new Victor(-0.182355472755, 0.625075389011),\n    new Victor(-0.164869271291, 0.636562817306),\n    new Victor(-0.147469066739, 0.648180218206),\n    new Victor(-0.130155347716, 0.659926125854),\n    new Victor(-0.112929580079, 0.671800540249),\n    new Victor(-0.0957922524482, 0.683802484155),\n    new Victor(-0.0787448306786, 0.695931957571),\n    new Victor(-0.0617878033894, 0.708187006022),\n    new Victor(-0.0449226364371, 0.720568118127),\n    new Victor(-0.0281493298216, 0.733074316648),\n    new Victor(-0.0114698380183, 0.745704624347),\n    new Victor(0.00511535035415, 0.758458552606),\n    new Victor(0.021605258058, 0.771335124187),\n    new Victor(0.0379993964745, 0.78433433909),\n    new Victor(0.0542962997473, 0.79745424284),\n    new Victor(0.0689143087782, 0.809362371934),\n    new Victor(0.0834609794625, 0.821357963795),\n    new Victor(0.0979358231812, 0.833440041186),\n    new Victor(0.112337862697, 0.845608604107),\n    new Victor(0.12666660939, 0.857863652558),\n    new Victor(0.140921574643, 0.870203720682),\n    new Victor(0.155102758455, 0.882629297099),\n    new Victor(0.169209183589, 0.895138915952),\n    new Victor(0.181539967956, 0.906207597924),\n    new Victor(0.193955771996, 0.91718051061),\n    new Victor(0.206455618473, 0.928057165389),\n    new Victor(0.219038530147, 0.938837562262),\n    new Victor(0.22146207946, 0.940840899396),\n    new Victor(0.223916411758, 0.942806124262),\n    new Victor(0.226401527041, 0.944732748242),\n    new Victor(0.228916936691, 0.946620282717),\n    new Victor(0.230887047745, 0.948104706671),\n    new Victor(0.232926054052, 0.949493361338),\n    new Victor(0.235029069424, 0.950783803623),\n    new Victor(0.237191207672, 0.951972124576),\n    new Victor(0.239407582608, 0.953055881104),\n    new Victor(0.241672819425, 0.954032630111),\n    new Victor(0.243982520555, 0.954900417123),\n    new Victor(0.246330822571, 0.955656799046),\n    new Victor(0.248847209458, 0.956426373676),\n    new Victor(0.251395845187, 0.957082100124),\n    new Victor(0.253971354951, 0.957622512531),\n    new Victor(0.256568363942, 0.958047610898),\n    new Victor(0.259181985973, 0.958355440751),\n    new Victor(0.261806846237, 0.958546002088),\n    new Victor(0.264437081308, 0.958618806291),\n    new Victor(0.267068293617, 0.958573364741),\n    new Victor(0.269695108356, 0.958410166058),\n    new Victor(0.2723116621, 0.95812921024),\n    new Victor(0.274913068661, 0.957731474526),\n    new Victor(0.277493953231, 0.957217447535),\n    new Victor(0.280048941005, 0.956588595122),\n    new Victor(0.282573634412, 0.955845405908),\n    new Victor(0.285062170027, 0.954989834366),\n    new Victor(0.287510150281, 0.954023834973),\n    new Victor(0.289695253613, 0.953107674698),\n    new Victor(0.291880845564, 0.952108937844),\n    new Victor(0.301388879047, 0.947138218659),\n    new Victor(0.310845118937, 0.942069775711),\n    new Victor(0.320249076614, 0.936904097619),\n    new Victor(0.329599286221, 0.931642650239),\n    new Victor(0.363485000908, 0.912453612212),\n    new Victor(0.397329182996, 0.8931922586),\n    new Victor(0.431132321104, 0.873858589404),\n    new Victor(0.464893926612, 0.854453093243),\n    new Victor(0.498613999522, 0.834975281497),\n    new Victor(0.532292539832, 0.815425642786),\n    new Victor(0.565929058925, 0.795804177109),\n    new Victor(0.599524045418, 0.776110884466),\n    new Victor(0.614195802519, 0.767461354237),\n    new Victor(0.628780096852, 0.758665238364),\n    new Victor(0.643274973942, 0.749722536847),\n    new Victor(0.657679456551, 0.740634715542),\n    new Victor(0.663100193664, 0.737124966608),\n    new Victor(0.668459853424, 0.733522380099),\n    new Victor(0.673756481358, 0.729827933253),\n    new Victor(0.678988611609, 0.72604211469),\n    new Victor(0.681833350338, 0.72394251965),\n    new Victor(0.684601864533, 0.721743246372),\n    new Victor(0.687290245243, 0.719446737951),\n    new Victor(0.689896049373, 0.717056903336),\n    new Victor(0.692415367973, 0.714576674241),\n    new Victor(0.694845269331, 0.71200800514),\n    new Victor(0.697182821733, 0.709355293604),\n    new Victor(0.699425093466, 0.706621471345),\n    new Victor(0.70031242523, 0.705263599663),\n    new Victor(0.70110301047, 0.703846605105),\n    new Victor(0.701792940234, 0.702378794191),\n    new Victor(0.702378794191, 0.700866030346),\n    new Victor(0.702858129247, 0.699316131471),\n    new Victor(0.703228502307, 0.697736426848),\n    new Victor(0.703487470278, 0.696135222997),\n    new Victor(0.703634544541, 0.694519360583),\n    new Victor(0.703808492838, 0.692484263226),\n    new Victor(0.704005894839, 0.688243540547),\n    new Victor(0.704113390977, 0.683999886156),\n    new Victor(0.704130981255, 0.679754765908),\n    new Victor(0.704059154289, 0.675510622897),\n    new Victor(0.703896932843, 0.671268434362),\n    new Victor(0.703645294154, 0.667031132015),\n    new Victor(0.703303749604, 0.662799693094),\n    new Victor(0.702872787811, 0.658576560692),\n    new Victor(0.701225165173, 0.648144060414),\n    new Victor(0.699422161753, 0.637737456933),\n    new Victor(0.697463288931, 0.627358704724),\n    new Victor(0.695350012565, 0.617010735501),\n    new Victor(0.693864122754, 0.60962184181),\n    new Victor(0.691242194203, 0.596705692105),\n    new Victor(0.688638833167, 0.58378514483),\n    new Victor(0.686055016884, 0.570860688605),\n    new Victor(0.683489768115, 0.557932812049),\n    new Victor(0.679173798139, 0.53578860744),\n    new Victor(0.675031287842, 0.513610688133),\n    new Victor(0.671063214461, 0.491401008603),\n    new Victor(0.667269089377, 0.469161523326),\n    new Victor(0.663649889828, 0.446892232301),\n    new Victor(0.660205127196, 0.424595578622),\n    new Victor(0.65693480148, 0.402273028147),\n    new Victor(0.653839889918, 0.379925069493),\n    new Victor(0.65092039251, 0.357553168517),\n    new Victor(0.648176309256, 0.335159768314),\n    new Victor(0.645608128774, 0.312745357501),\n    new Victor(0.643215362447, 0.290311401936),\n    new Victor(0.641387928086, 0.272862824121),\n    new Victor(0.640313455316, 0.262524627274),\n    new Victor(0.639318138793, 0.252178123907),\n    new Victor(0.638402467138, 0.241824779876),\n    new Victor(0.637566440349, 0.231464595183),\n    new Victor(0.636809569807, 0.221098058444),\n    new Victor(0.636132344132, 0.210726146899),\n    new Victor(0.635534763324, 0.200349349165),\n    new Victor(0.635016338763, 0.189968153863),\n    new Victor(0.634136336281, 0.166283334136),\n    new Victor(0.633371647838, 0.14259411684),\n    new Victor(0.632722273436, 0.118901479213),\n    new Victor(0.632187724454, 0.0952059098725),\n    new Victor(0.631768489513, 0.0715078974381),\n    new Victor(0.631464568611, 0.0478084191472),\n    new Victor(0.63127547313, 0.0241079636186),\n    new Victor(0.631201691689, 0.000406530852484),\n    new Victor(0.631270098323, -0.0222394852774),\n    new Victor(0.631441114908, -0.0448845241697),\n    new Victor(0.631715230062, -0.0675285858243),\n    new Victor(0.632092443786, -0.0901711816225),\n    new Victor(0.63257226746, -0.112811822945),\n    new Victor(0.633154701085, -0.135450021174),\n    new Victor(0.63384023328, -0.158085776309),\n    new Victor(0.634628864044, -0.180717622493),\n    new Victor(0.635306089719, -0.195449968327),\n    new Victor(0.636126969325, -0.210174984878),\n    new Victor(0.637091014243, -0.22489120629),\n    new Victor(0.638198713093, -0.239597655326),\n    new Victor(0.639449577254, -0.254292377511),\n    new Victor(0.640843606728, -0.268974395606),\n    new Victor(0.642380801514, -0.283642243756),\n    new Victor(0.644060672993, -0.298293967485),\n    new Victor(0.64612020129, -0.31581290641),\n    new Victor(0.6482320118, -0.333325493289),\n    new Victor(0.65039757038, -0.350831239505),\n    new Victor(0.652615411173, -0.368331122296),\n    new Victor(0.654741880247, -0.384873800832),\n    new Victor(0.656970959272, -0.401402798041),\n    new Victor(0.659303625486, -0.417918113923),\n    new Victor(0.661739390269, -0.434418282622),\n    new Victor(0.664278253622, -0.450902815519),\n    new Victor(0.666919726926, -0.467371223995),\n    new Victor(0.66966381018, -0.483822530812),\n    new Victor(0.672510992004, -0.500256735972),\n    new Victor(0.675460295159, -0.516672862235),\n    new Victor(0.678512696885, -0.533069932364),\n    new Victor(0.681666731323, -0.54944794636),\n    new Victor(0.684923375712, -0.565805926984),\n    new Victor(0.688253801542, -0.582478578124),\n    new Victor(0.691624294115, -0.599143411363),\n    new Victor(0.695033876193, -0.615799938082),\n    new Victor(0.698483036394, -0.632448158282),\n    new Victor(0.700362264349, -0.641257466863),\n    new Victor(0.702110053844, -0.650093649478),\n    new Victor(0.703725916259, -0.658955240272),\n    new Victor(0.705209362975, -0.667839796151),\n    new Victor(0.705560191283, -0.670609776202),\n    new Victor(0.705811829972, -0.673129583421),\n    new Victor(0.705988709982, -0.675296119238),\n    new Victor(0.706054184903, -0.677469495719),\n    new Victor(0.706007766116, -0.679642872199),\n    new Victor(0.70584945362, -0.681811362492),\n    new Victor(0.705579736035, -0.683968614552),\n    new Victor(0.705199590599, -0.686109253572),\n    new Victor(0.704709505929, -0.688227904745),\n    new Victor(0.704111436502, -0.690317727409),\n    new Victor(0.702891355326, -0.694066410943),\n    new Victor(0.701505632372, -0.697756460219),\n    new Victor(0.699955733497, -0.701380545956),\n    new Victor(0.698245567651, -0.704932316108),\n    new Victor(0.696378555166, -0.708403464156),\n    new Victor(0.694358116374, -0.711788126674),\n    new Victor(0.692188648844, -0.715079462999),\n    new Victor(0.689874061527, -0.718270143849),\n    new Victor(0.688711148751, -0.719521985248),\n    new Victor(0.687505237521, -0.720732294048),\n    new Victor(0.686256816453, -0.721899115774),\n    new Victor(0.684968817262, -0.723021473187),\n    new Victor(0.683641728566, -0.724097900432),\n    new Victor(0.68227750484, -0.725126443034),\n    new Victor(0.68087761194, -0.726106612373),\n    new Victor(0.679444492961, -0.727036942593),\n    new Victor(0.669607619016, -0.733287843069),\n    new Victor(0.659707713245, -0.739438576688),\n    new Victor(0.649746730121, -0.745489632069),\n    new Victor(0.639724669646, -0.751439054737),\n    new Victor(0.626066307964, -0.75960143201),\n    new Victor(0.588245257356, -0.781929357292),\n    new Victor(0.550379253818, -0.804180569421),\n    new Victor(0.512467808729, -0.826354091159),\n    new Victor(0.474510922092, -0.848449922505),\n    new Victor(0.436509082523, -0.87046806346),\n    new Victor(0.398462290023, -0.892408514024),\n    new Victor(0.360370544593, -0.914271274197),\n    new Victor(0.322234334851, -0.936056343978),\n    new Victor(0.311636192795, -0.942000391839),\n    new Victor(0.303639945919, -0.946411153865),\n    new Victor(0.301535464691, -0.947610713051),\n    new Victor(0.299393848434, -0.94874333146),\n    new Victor(0.29721754024, -0.949807054616),\n    new Victor(0.295008494586, -0.9508013939),\n    new Victor(0.292769154566, -0.951725372076),\n    new Victor(0.290501474654, -0.952577523286),\n    new Victor(0.288207897946, -0.95335784753),\n    new Victor(0.285890867534, -0.954064878953),\n    new Victor(0.282197886545, -0.955003515693),\n    new Victor(0.278465327432, -0.955768692754),\n    new Victor(0.274700519477, -0.956358455661),\n    new Victor(0.270912257819, -0.956772315796),\n    new Victor(0.267109337597, -0.957008318683),\n    new Victor(0.263299088092, -0.957066464322),\n    new Victor(0.259490304444, -0.956946752712),\n    new Victor(0.255691781792, -0.956649183855),\n    new Victor(0.251910849416, -0.956174246369),\n    new Victor(0.248156302456, -0.95552340611),\n    new Victor(0.244436447432, -0.954697640316),\n    new Victor(0.240758613626, -0.953699392081),\n    new Victor(0.240319833932, -0.953534238922),\n    new Victor(0.238502171947, -0.952568728147),\n    new Victor(0.236709918141, -0.951555821348),\n    new Victor(0.234945026988, -0.950496007142),\n    new Victor(0.233208964345, -0.949390262768),\n    new Victor(0.23150270745, -0.948239076844),\n    new Victor(0.22982723354, -0.94704293799),\n    new Victor(0.228184008471, -0.945803312061),\n    new Victor(0.226574009482, -0.944520687677),\n    new Victor(0.224074235635, -0.942570121375),\n    new Victor(0.212583875626, -0.933021043911),\n    new Victor(0.201218113415, -0.923323914947),\n    new Victor(0.189977926239, -0.913481666195),\n    new Victor(0.178866245811, -0.903494297655),\n    new Victor(0.161323853183, -0.887790577622),\n    new Victor(0.143655885521, -0.872228557044),\n    new Victor(0.125862831443, -0.856809213159),\n    new Victor(0.107946156805, -0.841533523206),\n    new Victor(0.0899073274635, -0.82640295304),\n    new Victor(0.0717468320377, -0.811418479899),\n    new Victor(0.0534666250026, -0.796580103784),\n    new Victor(0.0350671949772, -0.781890267787),\n    new Victor(0.0165500078179, -0.767348483291),\n    new Victor(-0.00208395923779, -0.752956704771),\n    new Victor(-0.0208327517145, -0.738715420845),\n    new Victor(-0.0396958809936, -0.724625608751),\n    new Victor(-0.0586718812184, -0.710688245726),\n    new Victor(-0.0777597751514, -0.69690382039),\n    new Victor(-0.0969580969362, -0.683274287218),\n    new Victor(-0.116265380716, -0.66979964621),\n    new Victor(-0.135680649254, -0.656480874603),\n    new Victor(-0.155202436693, -0.643318949635),\n    new Victor(-0.174829765796, -0.630314359925),\n    new Victor(-0.194561170706, -0.617469059948),\n    new Victor(-0.214395674185, -0.604782561085),\n    new Victor(-0.234331321759, -0.592256329193),\n    new Victor(-0.254367624808, -0.579891341509),\n    new Victor(-0.274502628858, -0.567688086652),\n    new Victor(-0.29394086248, -0.556123456584),\n    new Victor(-0.313469979201, -0.54471371868),\n    new Victor(-0.333088513165, -0.533458384321),\n    new Victor(-0.352795975753, -0.522359407981),\n    new Victor(-0.372590901108, -0.511416789662),\n    new Victor(-0.392471334756, -0.500631017982),\n    new Victor(-0.412437276696, -0.490003070179),\n    new Victor(-0.432486283835, -0.47953392349),\n    new Victor(-0.452617867553, -0.469224066534),\n    new Victor(-0.472830073375, -0.459073499311),\n    new Victor(-0.493122412682, -0.449083687678),\n    new Victor(-0.513493419618, -0.439255120252),\n    new Victor(-0.533941628327, -0.429588285654),\n    new Victor(-0.554465572951, -0.420083183884),\n    new Victor(-0.575064276254, -0.410741769415),\n    new Victor(-0.595736272379, -0.401563065011),\n    new Victor(-0.61648009547, -0.392549025148),\n    new Victor(-0.637294768288, -0.383699161205),\n    new Victor(-0.658179313597, -0.37501493904),\n    new Victor(-0.679131776921, -0.366496358653),\n    new Victor(-0.698898362385, -0.3585812225),\n    new Victor(-0.718729934152, -0.350830262268),\n    new Victor(-0.738624537745, -0.34324250072),\n    new Victor(-0.758581195928, -0.33581989233),\n    new Victor(-0.778598442844, -0.32856194848),\n    new Victor(-0.798674812635, -0.32146915779),\n    new Victor(-0.818809328066, -0.314542497496),\n    new Victor(-0.83900003466, -0.307782456217),\n    new Victor(-0.849647527216, -0.304229708827),\n    new Victor(-0.859482935305, -0.301024369413),\n    new Victor(-0.86930319621, -0.297772122593),\n    new Victor(-0.879107821313, -0.294472968367),\n    new Victor(-0.888896810615, -0.291126906735),\n    new Victor(-0.898669186876, -0.287733937697),\n    new Victor(-0.908425927336, -0.284294061253),\n    new Victor(-0.918165566137, -0.28080825464),\n    new Victor(-0.927888591898, -0.277275540622),\n    new Victor(-0.931015263683, -0.276110673371),\n    new Victor(-0.934077437785, -0.27478553915),\n    new Victor(-0.937066807683, -0.273304046909),\n    new Victor(-0.939975066859, -0.271669128361),\n    new Victor(-0.942794886029, -0.269885669693),\n    new Victor(-0.945518447293, -0.267958557094),\n    new Victor(-0.948138909988, -0.265892676752),\n    new Victor(-0.950648456212, -0.263693892093),\n    new Victor(-0.953040245302, -0.261368066543),\n    new Victor(-0.955308902451, -0.258921063527),\n    new Victor(-0.957447586996, -0.256360212328),\n    new Victor(-0.959450435511, -0.25369186499),\n    new Victor(-0.961260768213, -0.251131991028),\n    new Victor(-0.962993410524, -0.248518368997),\n    new Victor(-0.96464591935, -0.245853930609),\n    new Victor(-0.966217317453, -0.24314063034),\n    new Victor(-0.972878657732, -0.231316055063),\n    new Victor(-0.972926053757, -0.0130031238537),\n    new Victor(-0.972925565138, 0.00628803550555),\n    new Victor(-0.97291628138, 0.0249869888634),\n    new Victor(-0.972898202484, 0.0430570898088),\n    new Victor(-0.972858135742, 0.0776097691758),\n    new Victor(-0.972741844464, 0.112162448543),\n    new Victor(-0.972548351414, 0.146714639291),\n    new Victor(-0.972277656592, 0.181266341421),\n    new Victor(-0.972203875151, 0.189501034277),\n    new Victor(-0.972085629398, 0.197735727134),\n    new Victor(-0.971922919333, 0.205968954135),\n    new Victor(-0.971715256338, 0.214201692516),\n    new Victor(-0.971568670694, 0.217132916776),\n    new Victor(-0.971310679961, 0.220056811754),\n    new Victor(-0.970942749994, 0.222968491261),\n    new Victor(-0.970464880795, 0.225864534966),\n    new Victor(-0.969878049601, 0.228740056681),\n    new Victor(-0.96918274503, 0.231591636074),\n    new Victor(-0.968380432939, 0.234414875576),\n    new Victor(-0.967472090565, 0.237205866236),\n    new Victor(-0.966500716365, 0.23992551855),\n    new Victor(-0.965406210223, 0.242597774839),\n    new Victor(-0.964191015235, 0.245217260296),\n    new Victor(-0.962857085875, 0.247778600114),\n    new Victor(-0.961408331095, 0.250276908105),\n    new Victor(-0.959846705368, 0.252705832225),\n    new Victor(-0.958176117646, 0.255061463523),\n    new Victor(-0.956399499642, 0.257337938573),\n    new Victor(-0.954520760305, 0.259531348425),\n    new Victor(-0.952544297207, 0.261636318272),\n    new Victor(-0.950473530677, 0.263649427781),\n    new Victor(-0.948313346904, 0.265565790766),\n    new Victor(-0.946067654839, 0.267381009657),\n    new Victor(-0.94374134067, 0.269092641359),\n    new Victor(-0.941339779204, 0.270695799685),\n    new Victor(-0.93886736801, 0.27218804154),\n    new Victor(-0.936329481894, 0.273565946593),\n    new Victor(-0.933731007046, 0.274826094512),\n    new Victor(-0.93107829551, 0.27596701944),\n    new Victor(-0.928375744855, 0.276985301047),\n    new Victor(-0.913861323012, 0.282438287001),\n    new Victor(-0.899294130338, 0.287750550737),\n    new Victor(-0.884676121307, 0.292920137779),\n    new Victor(-0.870008761776, 0.297948025366),\n    new Victor(-0.854391527272, 0.303278856616),\n    new Victor(-0.838793348902, 0.308665390412),\n    new Victor(-0.823214226666, 0.314107138133),\n    new Victor(-0.807654649182, 0.319603611161),\n    new Victor(-0.792114127832, 0.325155298116),\n    new Victor(-0.776593639853, 0.330761710377),\n    new Victor(-0.761093185246, 0.336423336564),\n    new Victor(-0.745613252629, 0.342139688058),\n  ];\n}\n\nexport default Vicious1Vertices;\n","import Vicious1Vertices from './Vicious1Vertices'\nimport Shape from '../Shape'\n\nexport default class V1Engineering extends Shape {\n  constructor() {\n    super('V1Engineering')\n  }\n\n  getInitialState() {\n    return {\n      ...super.getInitialState(),\n      ...{\n        type: 'v1Engineering',\n      }\n    }\n  }\n\n  getVertices(state) {\n    return Vicious1Vertices()\n  }\n}\n","import { degToRad } from '../common/geometry'\nimport Victor from 'victor'\nimport Shape, { shapeOptions } from './Shape'\n\nconst options = {\n  ...shapeOptions,\n  ...{\n    wiperType: {\n      title: 'Type',\n      type: 'togglebutton',\n      choices: ['Lines', 'Spiral'],\n    },\n    wiperSize: {\n      title: 'Wiper size',\n      min: 1\n    },\n    wiperAngleDeg: {\n      title: 'Wiper angle',\n      isVisible: (state) => { return state.wiperType === 'Lines' },\n    },\n  }\n}\n\nconst outOfBounds = (point, width, height) => {\n  if (point.x < -width/2.0) {\n    return true\n  }\n  if (point.y < -height/2.0) {\n    return true\n  }\n  if (point.x > width/2.0) {\n    return true\n  }\n  if (point.y > height/2.0) {\n    return true\n  }\n  return false\n}\n\n// Intersect the line with the boundary, and return the point exactly on the boundary.\n// This will keep the shape. i.e. It will follow the line segment, and return the point on that line\n// segment.\nfunction boundPoint(good, bad, size_x, size_y) {\n  var dx = good.x - bad.x\n  var dy = good.y - bad.y\n\n  var fixed = Victor(bad.x, bad.y)\n  var distance = 0\n  if (bad.x < -size_x || bad.x > size_x) {\n    if (bad.x < -size_x) {\n      // we are leaving the left\n      fixed.x = -size_x\n    } else {\n      // we are leaving the right\n      fixed.x = size_x\n    }\n    distance = (fixed.x - good.x) / dx\n    fixed.y = good.y + distance * dy\n    // We fixed x, but y might have the same problem, so we'll rerun this, with different points.\n    return boundPoint(good, fixed, size_x, size_y)\n  }\n  if (bad.y < -size_y || bad.y > size_y) {\n    if (bad.y < -size_y) {\n      // we are leaving the bottom\n      fixed.y = -size_y\n    } else {\n      // we are leaving the top\n      fixed.y = size_y\n    }\n    distance = (fixed.y - good.y) / dy\n    fixed.x = good.x + distance * dx\n  }\n  return fixed\n}\n\nfunction nearEnough(end, point) {\n  if (point.clone().subtract(end).length() < 0.01) {\n    return true\n  }\n  return false\n}\n\nfunction spiralVertices(state) {\n  // Determine the max radius\n  let maxRadius = state.machine.maxRadius\n  if (state.machine.rectangular) {\n    const halfHeight = (state.machine.maxY - state.machine.minY)/2.0\n    const halfWidth = (state.machine.maxX - state.machine.minX)/2.0\n    maxRadius = Math.sqrt(Math.pow(halfHeight, 2.0) + Math.pow(halfWidth, 2.0))\n  }\n\n  let vertices = []\n  let emergencyBreak = 0\n  let radius = 0.1\n  let angle = 0\n  const arcLength = 1.0\n  const radiusPerAngle = state.shape.wiperSize / (2.0 * Math.PI)\n\n  while (radius <= maxRadius) {\n    // Save where we are right now.\n    vertices.push(new Victor(radius * Math.cos(angle), radius * Math.sin(angle)))\n\n    // We want to have the next point be about the right arc length.\n    let deltaAngle = arcLength / radius * 2.0 * Math.PI\n\n    // Limit this at small radii\n    deltaAngle = Math.min(deltaAngle, 0.1)\n\n    // Update for the next point.\n    angle += deltaAngle\n    radius += deltaAngle * radiusPerAngle\n\n    emergencyBreak += 1\n    if (emergencyBreak > 1e9) {\n      // If we get to this point: bail. We did something terrible.\n      break\n    }\n  }\n\n  return vertices\n}\n\nfunction linearVertices(state) {\n  // Get the angle between 0,180\n  let angle = (180.0 - (state.shape.wiperAngleDeg % 360)) % 180.0\n  if (angle < 0.0) {\n    angle += 180.0\n  }\n  angle = degToRad(angle)\n\n  // Start with the defaults for 0,45\n  let height = 1\n  let width = 1\n  let outputVertices = []\n  let machine = state.machine\n  if (machine.rectangular) {\n    height = machine.maxY - machine.minY\n    width = machine.maxX - machine.minX\n  } else {\n    height = machine.maxRadius * 2.0\n    width = height\n  }\n\n  let startLocation = Victor(-width/2.0, height/2.0)\n  let cosa = Math.cos(angle)\n  let sina = Math.sin(angle)\n\n  // These can be zero, but infinity isn't great for out math, so let's just clip it.\n  if (Math.abs(cosa) < 1.0e-10) {\n    cosa = 1.0e-10\n  }\n  if (Math.abs(sina) < 1.0e-10) {\n    sina = 1.0e-10\n  }\n  let orig_delta_w = Victor(state.shape.wiperSize / cosa, 0.0)\n  let orig_delta_h = Victor(0.0, -state.shape.wiperSize / sina)\n\n  if (angle > Math.PI/4.0 && angle < 0.75 * Math.PI) {\n    // flip the logic of x,y\n    let temp = orig_delta_w.clone()\n    orig_delta_w = orig_delta_h.clone()\n    orig_delta_h = temp\n  }\n  if (angle > Math.PI/2.0) {\n    startLocation = Victor(-width/2.0, -height/2.0)\n    orig_delta_w = orig_delta_w.clone().multiply(Victor(-1.0, -1.0))\n    orig_delta_h = orig_delta_h.clone().multiply(Victor(-1.0, -1.0))\n  }\n  let delta_w = orig_delta_w\n  let delta_h = orig_delta_h\n  let endLocation = startLocation.clone().multiply(Victor(-1.0, -1.0))\n  outputVertices.push(startLocation)\n  let nextWidthPoint = startLocation\n  let nextHeightPoint = startLocation\n\n  let emergency_break = 0\n  while (emergency_break < 1000) {\n    emergency_break += 1\n\n    // \"right\"\n    nextWidthPoint = nextWidthPoint.clone().add(delta_w)\n    if (outOfBounds(nextWidthPoint, width, height)) {\n      let corner = boundPoint(nextWidthPoint.clone().subtract(delta_w), nextWidthPoint, width/2.0, height/2.0)\n      outputVertices.push(corner)\n      if (nearEnough(endLocation, corner)) {\n        break\n      }\n      nextWidthPoint = boundPoint(nextHeightPoint, nextWidthPoint, width/2.0, height/2.0)\n      delta_w = orig_delta_h\n    }\n    outputVertices.push(nextWidthPoint)\n    if (nearEnough(endLocation, nextWidthPoint)) {\n      break\n    }\n\n    // \"down-left\"\n    nextHeightPoint = nextHeightPoint.clone().add(delta_h)\n    if (outOfBounds(nextHeightPoint, width, height)) {\n      nextHeightPoint = boundPoint(nextWidthPoint, nextHeightPoint, width/2.0, height/2.0)\n      delta_h = orig_delta_w\n    }\n    outputVertices.push(nextHeightPoint)\n    if (nearEnough(endLocation, nextHeightPoint)) {\n      break\n    }\n\n    // \"down\"\n    nextHeightPoint = nextHeightPoint.clone().add(delta_h)\n    outputVertices.push(nextHeightPoint)\n    if (nearEnough(endLocation, nextHeightPoint)) {\n      break\n    }\n    if (outOfBounds(nextHeightPoint, width, height)) {\n      let corner = boundPoint(nextHeightPoint.clone().subtract(delta_h), nextHeightPoint, width/2.0, height/2.0)\n      outputVertices.push(corner)\n      if (nearEnough(endLocation, corner)) {\n        break\n      }\n      nextHeightPoint = boundPoint(nextWidthPoint, nextHeightPoint, width/2.0, height/2.0)\n      delta_h = orig_delta_w\n    }\n    outputVertices.push(nextHeightPoint)\n    if (nearEnough(endLocation, nextHeightPoint)) {\n      break\n    }\n\n    // \"up-right\"\n    nextWidthPoint = nextWidthPoint.clone().add(delta_w)\n    outputVertices.push(nextWidthPoint)\n    if (nearEnough(endLocation, nextWidthPoint)) {\n      break\n    }\n    if (outOfBounds(nextWidthPoint, width, height)) {\n      nextWidthPoint = boundPoint(nextHeightPoint, nextWidthPoint, width/2.0, height/2.0)\n      delta_w = orig_delta_h\n    }\n  }\n  return outputVertices\n}\n\nexport default class Wiper extends Shape {\n  constructor() {\n    super('Wiper')\n  }\n\n  getInitialState() {\n    return {\n      ...super.getInitialState(),\n      ...{\n        type: 'wiper',\n        wiperAngleDeg: 15,\n        wiperSize: 4,\n        wiperType: 'Lines',\n        selectGroup: 'Erasers',\n        canTransform: false,\n        canChangeSize: false,\n        shouldCache: false,\n        autosize: false,\n        usesMachine: true,\n        repeatEnabled: false,\n      }\n    }\n  }\n\n  getVertices(state) {\n    if (state.shape.wiperType === 'Lines') {\n      return linearVertices(state)\n    } else {\n      return spiralVertices(state)\n    }\n  }\n\n  getOptions() {\n    return options\n  }\n}\n","import { createSlice } from '@reduxjs/toolkit'\nimport { GCODE, THETARHO, SVG } from '../../models/Exporter'\n\n// Determine default file type; this is a little fussy because we want to ensure\n// that if the user has a rectangular table, but somehow wants to export theta\n// rho (or vice versa), we'll save that setting.\nlet fileType\nif (localStorage.getItem('export_fileType')) {\n  fileType = localStorage.getItem('export_fileType')\n\n  // accommodate older type names\n  if (fileType === 'GCode (.gcode)') {\n    fileType = GCODE\n  } else if (fileType === 'Theta Rho (.thr)') {\n    fileType = THETARHO\n  } else if (fileType === 'SVG (.svg)') {\n    fileType = SVG\n  }\n} else if (localStorage.getItem('machine_rect_active')) {\n  fileType = localStorage.getItem('machine_rect_active') ? GCODE : THETARHO\n} else {\n  fileType = GCODE\n}\n\nconst exporterSlice = createSlice({\n  name: 'exporter',\n  initialState: {\n    fileName: 'sandify',\n    fileType: fileType,\n    pre: localStorage.getItem('export_pre') ? localStorage.getItem('export_pre') : '',\n    post: localStorage.getItem('export_post') ? localStorage.getItem('export_post') : '',\n    reverse: false,\n    show: false,\n    polarRhoMax: localStorage.getItem('export_polarRhoMax') ? localStorage.getItem('export_polarRhoMax') : 1.0,\n    unitsPerCircle: localStorage.getItem('export_unitsPerCircle') ? localStorage.getItem('export_unitsPerCircle') : 6.0\n  },\n  reducers: {\n    updateExporter(state, action) {\n      Object.assign(state, action.payload)\n      Object.keys(action.payload).forEach(key => {\n        localStorage.setItem(\"export_\" + key, action.payload[key])\n      })\n    },\n  }\n})\n\nexport const {\n  updateExporter\n} = exporterSlice.actions\n\nexport default exporterSlice.reducer\n","import Circle from '../models/Circle'\nimport Epicycloid from '../models/Epicycloid'\nimport FileImport from '../models/FileImport'\nimport Fisheye from '../models/Fisheye'\nimport Warp from '../models/Warp'\nimport CirclePacker from '../models/circle_packer/CirclePacker'\nimport FractalSpirograph from '../models/fractal_spirograph/FractalSpirograph'\n// import Freeform from '../models/Freeform'\nimport Heart from '../models/Heart'\nimport Hypocycloid from '../models/Hypocycloid'\nimport InputText from '../models/input_text/InputText'\nimport LSystem from '../models/lsystem/LSystem'\nimport Mask from '../models/Mask'\nimport Noise from '../models/Noise'\nimport NoiseWave from '../models/NoiseWave'\nimport Point from '../models/Point'\nimport Polygon from '../models/Polygon'\nimport Reuleaux from '../models/Reuleaux'\nimport Rose from '../models/Rose'\nimport SpaceFiller from '../models/space_filler/SpaceFiller'\nimport Star from '../models/Star'\nimport TessellationTwist from '../models/tessellation_twist/TessellationTwist'\nimport V1Engineering from '../models/v1_engineering/V1Engineering'\nimport Wiper from '../models/Wiper'\n\n/*----------------------------------------------\nSupported input shapes\n-----------------------------------------------*/\nexport const registeredShapes = {\n  polygon: new Polygon(),\n  star: new Star(),\n  circle: new Circle(),\n  heart: new Heart(),\n  reuleaux: new Reuleaux(),\n  epicycloid: new Epicycloid(),\n  hypocycloid: new Hypocycloid(),\n  rose: new Rose(),\n  inputText: new InputText(),\n  v1Engineering: new V1Engineering(),\n  lsystem: new LSystem(),\n  fractal_spirograph: new FractalSpirograph(),\n  tessellation_twist: new TessellationTwist(),\n  point: new Point(),\n  // freeform: new Freeform(),\n  circle_packer: new CirclePacker(),\n  wiper: new Wiper(),\n  space_filler: new SpaceFiller(),\n  noise_wave: new NoiseWave(),\n  file_import: new FileImport(),\n  fisheye: new Fisheye(),\n  mask: new Mask(),\n  noise: new Noise(),\n  warp: new Warp()\n}\n\nexport const getShape = (layer) => {\n  return registeredShapes[layer.type]\n}\n\nexport const getShapeDefaults = () => {\n  return Object.keys(registeredShapes).map(id => {\n    const state = registeredShapes[id].getInitialState()\n    state.name = registeredShapes[id].name\n    state.id = id\n    return state\n  })\n}\n\nexport const getShapeSelectOptions = (includeEffects=true) => {\n  const groupOptions = []\n  const shapes = getShapeDefaults()\n\n  for (const shape of shapes) {\n    const optionLabel = { value: shape.id, label: shape.name }\n    var found = false\n\n    for (const group of groupOptions) {\n      if (group.label === shape.selectGroup) {\n        found = true\n        group.options.push(optionLabel)\n      }\n    }\n    if (!found) {\n      if (shape.selectGroup === 'import') {\n        // Users can't manually select this group.\n        continue\n      } else if (shape.selectGroup === 'effects' && !includeEffects) {\n        continue\n      }\n      const newOptions = [ optionLabel ]\n      groupOptions.push( { label: shape.selectGroup, options: newOptions } )\n    }\n  }\n\n  return groupOptions\n}\n","import { createSlice } from '@reduxjs/toolkit'\nimport uniqueId from 'lodash/uniqueId'\nimport arrayMove from 'array-move'\nimport { getShape } from '../../models/shapes'\n\nconst protectedAttrs = [\n  'repeatEnabled', 'canTransform', 'selectGroup', 'canChangeSize', 'autosize',\n  'usesMachine', 'shouldCache', 'canChangeHeight', 'canRotate'\n]\nconst newLayerType = localStorage.getItem('currentShape') || 'polygon'\nconst newLayerName = getShape({type: newLayerType}).name.toLowerCase()\n\nconst layersSlice = createSlice({\n  name: 'layer',\n  initialState: {\n    current: null,\n    selected: null,\n    newLayerType: newLayerType,\n    newLayerName: newLayerName,\n    newLayerNameOverride: false,\n    copyLayerName: null,\n    byId: {},\n    allIds: []\n  },\n  reducers: {\n    addLayer(state, action) {\n      let layer = { ...action.payload }\n      layer.id = uniqueId('layer-')\n      layer.name = layer.name || state.newLayerName\n      state.byId[layer.id] = layer\n\n      const index = state.allIds.findIndex(id => id === state.current) + 1\n      state.allIds.splice(index, 0, layer.id)\n\n      state.current = layer.id\n      state.selected = layer.id\n      state.newLayerNameOverride = false\n      state.newLayerName = layer.name\n      if (layer.type !== 'file_import' && !layer.effect) {\n        localStorage.setItem('currentShape', layer.type)\n      }\n    },\n    moveLayer(state, action) {\n      const { oldIndex, newIndex } = action.payload\n      state.allIds = arrayMove(state.allIds, oldIndex, newIndex)\n    },\n    copyLayer(state, action) {\n      const source = state.byId[action.payload]\n      const layer = { ...source, name: state.copyLayerName }\n      layer.id = uniqueId('layer-')\n      state.byId[layer.id] = layer\n\n      const index = state.allIds.findIndex(id => id === state.current) + 1\n      state.allIds.splice(index, 0, layer.id)\n\n      state.current = layer.id\n      state.selected = layer.id\n    },\n    removeLayer(state, action) {\n      const deleteId = action.payload\n      const idx = state.allIds.findIndex(id => id === deleteId)\n      state.allIds.splice(idx, 1)\n      delete state.byId[deleteId]\n\n      if (deleteId === state.current) {\n        if (idx === state.allIds.length) {\n          state.current = state.allIds[idx-1]\n          state.selected = state.allIds[idx-1]\n        } else {\n          state.current = state.allIds[idx]\n          state.selected = state.allIds[idx]\n        }\n      }\n    },\n    restoreDefaults(state, action) {\n      const id = action.payload\n      const layer = state.byId[id]\n      const defaults = getShape(layer).getInitialState(layer)\n\n      state.byId[layer.id] = {\n        id: layer.id,\n        name: layer.name,\n        ...defaults\n      }\n    },\n    setCurrentLayer(state, action) {\n      const current = state.byId[action.payload]\n\n      if (current) {\n        state.current = current.id\n        state.selected = current.id\n        state.copyLayerName = current.name\n      }\n    },\n    setSelectedLayer(state, action) {\n      state.selected = action.payload\n    },\n    setShapeType(state, action) {\n      const changes = action.payload\n      const defaults = getShape(changes).getInitialState()\n      const layer = state.byId[changes.id]\n\n      layer.type = changes.type\n      Object.keys(defaults).forEach(attr => {\n        if (layer[attr] === undefined) {\n          layer[attr] = defaults[attr]\n        }\n      })\n\n      protectedAttrs.forEach(attr => {\n        layer[attr] = defaults[attr]\n      })\n\n      state.byId[layer.id] = layer\n    },\n    setNewLayerType(state, action) {\n      let attrs = { newLayerType: action.payload }\n      if (!state.newLayerNameOverride) {\n        const shape = getShape({type: action.payload})\n        attrs.newLayerName = shape.name.toLowerCase()\n      }\n      Object.assign(state, attrs)\n    },\n    updateLayer(state, action) {\n      const layer = action.payload\n      state.byId[layer.id] = {...state.byId[layer.id], ...layer}\n    },\n    updateLayers(state, action) {\n      Object.assign(state, action.payload)\n    },\n    toggleRepeat(state, action) {\n      const transform = action.payload\n      state.byId[transform.id].repeatEnabled = !state.byId[transform.id].repeatEnabled\n    },\n    toggleGrow(state, action) {\n      const transform = action.payload\n      state.byId[transform.id].growEnabled = !state.byId[transform.id].growEnabled\n    },\n    toggleSpin(state, action) {\n      const transform = action.payload\n      state.byId[transform.id].spinEnabled = !state.byId[transform.id].spinEnabled\n    },\n    toggleTrack(state, action) {\n      const transform = action.payload\n      state.byId[transform.id].trackEnabled = !state.byId[transform.id].trackEnabled\n    },\n    toggleTrackGrow(state, action) {\n      const transform = action.payload\n      state.byId[transform.id].trackGrowEnabled = !state.byId[transform.id].trackGrowEnabled\n    },\n    toggleVisible(state, action) {\n      const transform = action.payload\n      state.byId[transform.id].visible = !state.byId[transform.id].visible\n    },\n  }\n})\n\nexport const {\n  addLayer,\n  copyLayer,\n  moveLayer,\n  removeLayer,\n  restoreDefaults,\n  setCurrentLayer,\n  setSelectedLayer,\n  setShapeType,\n  setNewLayerType,\n  updateLayer,\n  updateLayers,\n  toggleRepeat,\n  toggleSpin,\n  toggleGrow,\n  toggleTrack,\n  toggleTrackGrow,\n  toggleVisible\n} = layersSlice.actions\n\nexport default layersSlice.reducer\n","import { createSelectorCreator, defaultMemoize, createSelector } from 'reselect'\nimport { memoizeArrayProducingFn } from '../../common/selectors'\nimport isEqual from 'lodash'\nimport { log } from '../../common/util'\n\n// the make selector functions below are patterned after the comment here:\n// https://github.com/reduxjs/reselect/issues/74#issuecomment-472442728\nconst cachedSelectors = {}\n\n// ensures we only create a single selector for a given layer\nexport const getCachedSelector = (fn, ...layerIds) => {\n  if (!cachedSelectors[fn.name]) {\n    cachedSelectors[fn.name] = {}\n  }\n\n  const key = layerIds.join('-')\n  if (!cachedSelectors[fn.name][key]) {\n    cachedSelectors[fn.name][key] = fn.apply(null, layerIds)\n  }\n\n  return cachedSelectors[fn.name][key]\n}\n\n// does a deep equality check instead of checking immutability; used in cases\n// where a selector depends on another selector that returns a new object each time,\n// e.g., makeGetLayerIndex\nconst createDeepEqualSelector = createSelectorCreator(defaultMemoize, isEqual)\n\n// root selectors\nconst getCurrentLayerId = state => { return state.layers.current }\nexport const getLayersById = state => { return state.layers.byId }\nexport const getLayerIds = state => { return state.layers.allIds }\n\n// derived selectors\nexport const getVisibleLayerIds = createSelector(\n  [ getLayerIds, getLayersById ],\n  (layerIds, layers) => {\n    return layerIds.filter(id => layers[id].visible)\n  }\n)\n\n export const getVisibleNonEffectIds = createSelector(\n   [ getLayerIds, getLayersById ],\n   (layerIds, layers) => {\n     return layerIds.filter(id => layers[id].visible && !layers[id].effect)\n   }\n )\n\nexport const getCurrentLayer = createSelector(\n  [ getLayersById, getCurrentLayerId ],\n  (layers, current) => layers[current]\n)\n\nexport const getAllLayersInfo = createSelector(\n  [ getLayerIds, getLayersById ],\n  (layerIds, layersById) => {\n    log(\"getAllLayersInfo\")\n    return layerIds.map(id => layersById[id])\n  }\n)\n\nexport const getNumLayers = createSelector(\n  getLayerIds,\n  (layerIds) => {\n    log(\"getNumLayer\")\n    return layerIds.length\n  }\n)\n\n// puts the current layer last in the list to ensure it can be rotated; else\n// the handle will not rotate\nexport const getKonvaLayerIds = createSelector(\n  [ getCurrentLayer, getVisibleLayerIds ],\n  (currentLayer, visibleLayerIds) => {\n      const kIds = visibleLayerIds.filter(id => id !== currentLayer.id)\n      if (currentLayer.visible) {\n        kIds.push(currentLayer.id)\n      }\n      return kIds\n  }\n)\n\nexport const isDragging = createSelector(\n  [ getLayerIds, getLayersById ],\n  (layerIds, layers) => {\n    log(\"isDragging\")\n    return layerIds.filter(id => layers[id].visible && layers[id].dragging).length > 0\n  }\n)\n\nexport const getNumVisibleLayers = createDeepEqualSelector(\n  getVisibleLayerIds,\n  (layers) => {\n    return layers.length\n  }\n)\n\nexport const makeGetLayerIndex = layerId => {\n  return createDeepEqualSelector(\n    getVisibleLayerIds,\n    (visibleLayerIds) => {\n      return visibleLayerIds.findIndex(id => id === layerId)\n    }\n  )\n}\n\nexport const makeGetLayer = layerId => {\n  return createSelector(\n    getLayersById,\n    (layers) => {\n      return layers[layerId]\n    }\n  )\n}\n\n// returns any effects tied to a given layer; memoizeArrayProducingFn will ensure we\n// only recompute transformed vertices when an effect changes.\nexport const makeGetEffects = layerId => {\n  return createSelector(\n    [\n      getLayersById,\n      getVisibleLayerIds\n    ],\n    memoizeArrayProducingFn(\n      (layers, visibleLayerIds) => {\n        let index = visibleLayerIds.findIndex(id => id === layerId)\n        const layer = layers[layerId]\n\n        if (layer.effect || index === visibleLayerIds.length - 1) {\n          return []\n        } else {\n          index = index + 1\n          const effects = []\n          let id = visibleLayerIds[index]\n\n          while (id && layers[id].effect) {\n            effects.push(layers[id])\n            index = index + 1\n            id = visibleLayerIds[index]\n          }\n\n          return effects\n        }\n      }\n    )\n  )\n}\n","import { defaultMemoize } from 'reselect'\n\n// from https://github.com/reduxjs/reselect/issues/441\nexport const memoizeArrayProducingFn = (fn) => {\n  const memArray = defaultMemoize((...array) => array);\n  return (...args) => memArray(...fn(...args));\n};\n","const transformOptions = {\n  startingWidth: {\n    title: 'Initial width',\n    min: 1,\n    isVisible: (state) => { return state.canChangeSize },\n    onChange: (changes, attrs) => {\n      if (!attrs.canChangeHeight) {\n        changes.startingHeight = changes.startingWidth\n      }\n      return changes\n    }\n  },\n  startingHeight: {\n    title: 'Initial height',\n    min: 1,\n    isVisible: (state) => { return state.canChangeSize && state.canChangeHeight },\n  },\n  offsetX: {\n    title: 'X offset',\n    isVisible: (state) => { return state.canMove }\n  },\n  offsetY: {\n    title: 'Y offset',\n    isVisible: (state) => { return state.canMove }\n  },\n  rotation: {\n    title: 'Rotate (degrees)',\n    isVisible: state => { return state.canRotate }\n  },\n  connectionMethod: {\n    title: 'Connect to next layer',\n    choices: ['line', 'along perimeter']\n  },\n  backtrackPct: {\n    title: 'Backtrack at end (%)',\n    min: 0,\n    max: 100,\n    step: 2\n  },\n  drawPortionPct: {\n    title: 'Draw portion of path (%)',\n    min: 0,\n    max: 100,\n    step: 2\n  },\n  rotateStartingPct: {\n    title: 'Rotate starting point (%)',\n    min: -100,\n    max: 100,\n    step: 2\n  },\n  reverse: {\n    title: 'Reverse path',\n    type: 'checkbox',\n    isVisible: (state) => { return !state.effect }\n  },\n  numLoops: {\n    title: 'Number of loops',\n    min: 1\n  },\n  transformMethod: {\n    title: 'When transforming shape',\n    type: 'dropdown',\n    choices: ['smear', 'intact'],\n  },\n  growEnabled: {\n    title: 'Scale'\n  },\n  growValue: {\n    title: 'Scale (+/-)',\n  },\n  growMethod: {\n    title: 'Scale by',\n    choices: ['constant', 'function']\n  },\n  growMathInput: {\n    title: 'Scale function (i)',\n    type: 'text',\n    isVisible: state => { return state.growMethod === 'function' },\n  },\n  growMath: {\n  },\n  spinEnabled: {\n    title: 'Spin',\n    isVisible: state => { return state.growMethod === 'constant'},\n  },\n  spinValue: {\n    title: 'Spin (+/-)',\n    step: 0.1,\n  },\n  spinMethod: {\n    title: 'Spin by',\n    type: 'dropdown',\n    choices: ['constant', 'function']\n  },\n  spinMathInput: {\n    title: 'Spin function (i)',\n    type: 'text',\n    isVisible: state => { return state.spinMethod === 'function' },\n  },\n  spinMath: {\n    title: 'Spin function (i)',\n  },\n  spinSwitchbacks: {\n    title: 'Switchbacks',\n    isVisible: state => { return state.spinMethod === 'constant'},\n  },\n  trackEnabled: {\n    title: 'Track'\n  },\n  trackGrowEnabled: {\n    title: 'Scale track'\n  },\n  trackValue: {\n    title: 'Track size',\n  },\n  trackNumLoops: {\n    title: 'Number of loops at each track position',\n    min: 1\n  },\n  trackLength: {\n    title: 'Track length',\n    step: 0.05\n  },\n  trackGrow: {\n    title: 'Scale (+/-)',\n  },\n}\n\n// used as a way to keep a shape's transform settings separate. Actual state\n// is stored on Shape.\nexport default class Transform {\n  getOptions() {\n    return transformOptions\n  }\n}\n","import { connect } from 'react-redux'\nimport React, { Component } from 'react'\nimport {\n  Accordion,\n  Card,\n  Col,\n  Form,\n  Row,\n  ToggleButton,\n  ToggleButtonGroup,\n} from 'react-bootstrap'\nimport InputOption from '../../components/InputOption'\nimport { updateLayer, toggleGrow } from '../layers/layersSlice'\nimport { getCurrentLayer } from '../layers/selectors'\nimport Transform from '../../models/Transform'\n\nconst mapStateToProps = (state, ownProps) => {\n  const layer = getCurrentLayer(state)\n\n  return {\n    layer: layer,\n    active: layer.growEnabled,\n    options: (new Transform()).getOptions()\n  }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  const { id } = ownProps\n\n  return {\n    onChange: (attrs) => {\n      attrs.id = id\n      dispatch(updateLayer(attrs))\n    },\n    onGrowMethodChange: (value) => {\n      dispatch(updateLayer({ growMethod: value, id: id}))\n    },\n    onGrow: () => {\n      dispatch(toggleGrow({id: id}))\n    },\n  }\n}\n\nclass ScaleTransform extends Component {\n  render() {\n    const activeClassName = this.props.active ? 'active' : ''\n    const activeKey = this.props.active ? 1 : null\n\n    return (\n      <Accordion defaultActiveKey={activeKey} activeKey={activeKey}>\n        <Card className={`${activeClassName} overflow-auto`}>\n          <Accordion.Toggle as={Card.Header} eventKey={1} onClick={this.props.onGrow}>\n            <h3>Scale</h3>\n            Grows or shrinks the shape\n          </Accordion.Toggle>\n\n          <Accordion.Collapse eventKey={1}>\n            <Card.Body>\n\n              <InputOption\n                onChange={this.props.onChange}\n                options={this.props.options}\n                key=\"growValue\"\n                optionKey=\"growValue\"\n                index={2}\n                model={this.props.layer} />\n              <Row className=\"align-items-center pb-2\">\n                <Col sm={5}>\n                  <Form.Label htmlFor=\"growMethod\">\n                    Scale by\n                  </Form.Label>\n                </Col>\n                <Col sm={7}>\n                  <ToggleButtonGroup id=\"growMethod\" type=\"radio\" name=\"growMethod\" value={this.props.layer.growMethod} onChange={this.props.onGrowMethodChange}>\n                    <ToggleButton variant=\"light\" value=\"constant\">constant</ToggleButton>\n                    <ToggleButton variant=\"light\" value=\"function\">function</ToggleButton>\n                  </ToggleButtonGroup>\n                </Col>\n              </Row>\n\n              <InputOption\n                onChange={this.props.onChange}\n                options={this.props.options}\n                key=\"growMathInput\"\n                optionKey=\"growMathInput\"\n                delayKey=\"growMath\"\n                index={1}\n                model={this.props.layer} />\n            </Card.Body>\n          </Accordion.Collapse>\n        </Card>\n      </Accordion>\n    )\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(ScaleTransform)\n","import { connect } from 'react-redux'\nimport React, { Component } from 'react'\nimport {\n  Accordion,\n  Card,\n  Col,\n  Form,\n  Row,\n  ToggleButton,\n  ToggleButtonGroup,\n} from 'react-bootstrap'\nimport InputOption from '../../components/InputOption'\nimport { toggleSpin, updateLayer } from '../layers/layersSlice'\nimport { getCurrentLayer } from '../layers/selectors'\nimport Transform from '../../models/Transform'\n\nconst mapStateToProps = (state, ownProps) => {\n  const layer = getCurrentLayer(state)\n\n  return {\n    layer: layer,\n    active: layer.spinEnabled,\n    options: (new Transform()).getOptions()\n  }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  const { id } = ownProps\n\n  return {\n    onChange: (attrs) => {\n      attrs.id = id\n      dispatch(updateLayer(attrs))\n    },\n    onSpinMethodChange: (value) => {\n      dispatch(updateLayer({ spinMethod: value, id: id}))\n    },\n    onSpin: () => {\n      dispatch(toggleSpin({id: id}))\n    },\n  }\n}\n\nclass RotationTransform extends Component {\n  render() {\n    const activeClassName = this.props.active ? 'active' : ''\n    const activeKey = this.props.active ? 1 : null\n\n    return (\n      <Accordion defaultActiveKey={activeKey} activeKey={activeKey}>\n        <Card className={`${activeClassName} overflow-auto`}>\n          <Accordion.Toggle as={Card.Header} eventKey={1} onClick={this.props.onSpin}>\n            <h3>Spin</h3>\n            Spins the shape\n          </Accordion.Toggle>\n\n          <Accordion.Collapse eventKey={1}>\n            <Card.Body>\n\n              <InputOption\n                onChange={this.props.onChange}\n                options={this.props.options}\n                key=\"spinValue\"\n                optionKey=\"spinValue\"\n                index={0}\n                model={this.props.layer} />\n\n              <Row className=\"align-items-center pb-2\">\n                <Col sm={5}>\n                  <Form.Label htmlFor=\"spinMethod\">\n                    Scale by\n                  </Form.Label>\n                </Col>\n\n                <Col sm={7}>\n                  <ToggleButtonGroup id=\"spinMethod\" type=\"radio\" name=\"spinMethod\" value={this.props.layer.spinMethod} onChange={this.props.onSpinMethodChange}>\n                    <ToggleButton variant=\"light\" value=\"constant\">constant</ToggleButton>\n                    <ToggleButton variant=\"light\" value=\"function\">function</ToggleButton>\n                  </ToggleButtonGroup>\n                </Col>\n              </Row>\n\n              <InputOption\n                onChange={this.props.onChange}\n                options={this.props.options}\n                key=\"spinMathInput\"\n                optionKey=\"spinMathInput\"\n                delayKey=\"spinMath\"\n                index={1}\n                model={this.props.layer} />\n\n              <InputOption\n                onChange={this.props.onChange}\n                options={this.props.options}\n                key=\"spinSwitchbacks\"\n                optionKey=\"spinSwitchbacks\"\n                index={0}\n                model={this.props.layer} />\n            </Card.Body>\n          </Accordion.Collapse>\n        </Card>\n      </Accordion>\n    )\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RotationTransform)\n","import { connect } from 'react-redux'\nimport React, { Component } from 'react'\nimport {\n  Accordion,\n  Card\n} from 'react-bootstrap'\nimport InputOption from '../../components/InputOption'\nimport {\n  toggleTrack,\n  toggleTrackGrow,\n  updateLayer\n} from '../layers/layersSlice'\nimport { getCurrentLayer } from '../layers/selectors'\nimport Transform from '../../models/Transform'\n\nconst mapStateToProps = (state, ownProps) => {\n  const layer = getCurrentLayer(state)\n\n  return {\n    layer: layer,\n    active: layer.trackEnabled,\n    activeGrow: layer.trackGrowEnabled,\n    options: new Transform().getOptions()\n  }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  const { id } = ownProps\n\n  return {\n    onChange: (attrs) => {\n      attrs.id = id\n      dispatch(updateLayer(attrs))\n    },\n    onTrack: () => {\n      dispatch(toggleTrack({id: id}))\n    },\n    onTrackGrow: () => {\n      dispatch(toggleTrackGrow({id: id}))\n    },\n  }\n}\n\nclass TrackTransform extends Component {\n  render() {\n    const activeClassName = this.props.active ? 'active' : ''\n    const activeKey = this.props.active ? 1 : null\n    const activeGrowClassName = this.props.activeGrow ? 'active' : ''\n    const activeGrowKey = this.props.activeGrow ? 1 : null\n\n    return (\n      <Accordion defaultActiveKey={activeKey} activeKey={activeKey}>\n        <Card className={activeClassName}>\n          <Accordion.Toggle as={Card.Header} eventKey={1} onClick={this.props.onTrack}>\n            <h3>Track</h3>\n            Moves the shape along a track (shown in green)\n          </Accordion.Toggle>\n\n          <Accordion.Collapse eventKey={1}>\n            <Card.Body>\n              <InputOption\n                onChange={this.props.onChange}\n                options={this.props.options}\n                key=\"trackValue\"\n                optionKey=\"trackValue\"\n                index={0}\n                model={this.props.layer} />\n\n              <InputOption\n                onChange={this.props.onChange}\n                options={this.props.options}\n                key=\"trackLength\"\n                optionKey=\"trackLength\"\n                index={0}\n                step={0.05}\n                model={this.props.layer} />\n\n              <InputOption\n                onChange={this.props.onChange}\n                options={this.props.options}\n                key=\"trackNumLoops\"\n                optionKey=\"trackNumLoops\"\n                index={0}\n                model={this.props.layer} />\n\n              <Accordion defaultActiveKey={activeGrowKey} className=\"mt-3\">\n                <Card className={activeGrowClassName}>\n                  <Accordion.Toggle as={Card.Header} eventKey={1} onClick={this.props.onTrackGrow}>\n                    <h3>Scale track</h3>\n                    Grows or shrinks the track\n                  </Accordion.Toggle>\n\n                  <Accordion.Collapse eventKey={1}>\n                    <Card.Body>\n                      <InputOption\n                        onChange={this.props.onChange}\n                        options={this.props.options}\n                        key=\"trackGrow\"\n                        optionKey=\"trackGrow\"\n                        index={0}\n                        model={this.props.layer} />\n                    </Card.Body>\n                  </Accordion.Collapse>\n                </Card>\n              </Accordion>\n            </Card.Body>\n          </Accordion.Collapse>\n        </Card>\n      </Accordion>\n    )\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(TrackTransform)\n","import { connect } from 'react-redux'\nimport React, { Component } from 'react'\nimport {\n  Accordion,\n  Card,\n  Row,\n  Col,\n  Form,\n  ToggleButton,\n  ToggleButtonGroup\n} from 'react-bootstrap'\nimport InputOption from '../../components/InputOption'\nimport CheckboxOption from '../../components/CheckboxOption'\nimport ToggleButtonOption from '../../components/ToggleButtonOption'\nimport { updateLayer, toggleRepeat } from '../layers/layersSlice'\nimport { getCurrentLayer } from '../layers/selectors'\nimport Transform from '../../models/Transform'\nimport ScaleTransform from './ScaleTransform'\nimport RotationTransform from './RotationTransform'\nimport TrackTransform from './TrackTransform'\n\nconst mapStateToProps = (state, ownProps) => {\n  const layer = getCurrentLayer(state)\n\n  return {\n    layer: layer,\n    active: layer.repeatEnabled,\n    options: (new Transform()).getOptions()\n  }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  const { id } = ownProps\n\n  return {\n    onChange: (attrs) => {\n      attrs.id = id\n      dispatch(updateLayer(attrs))\n    },\n    onRepeat: () => {\n      dispatch(toggleRepeat({id: id}))\n    },\n    ontransformMethodChange: (value) => {\n      dispatch(updateLayer({ transformMethod: value, id: id}))\n    }\n  }\n}\n\nclass Transforms extends Component {\n  render() {\n    const activeClassName = this.props.active ? 'active' : ''\n    const activeKey = this.props.active ? 1 : null\n\n    return (\n      <div className=\"transforms\">\n        <InputOption\n          onChange={this.props.onChange}\n          options={this.props.options}\n          key=\"startingWidth\"\n          optionKey=\"startingWidth\"\n          index={0}\n          model={this.props.layer} />\n\n        <InputOption\n          onChange={this.props.onChange}\n          options={this.props.options}\n          key=\"startingHeight\"\n          optionKey=\"startingHeight\"\n          index={0}\n          model={this.props.layer} />\n\n        <InputOption\n          onChange={this.props.onChange}\n          options={this.props.options}\n          key=\"offsetX\"\n          optionKey=\"offsetX\"\n          index={0}\n          model={this.props.layer} />\n\n        <InputOption\n          onChange={this.props.onChange}\n          options={this.props.options}\n          key=\"offsetY\"\n          optionKey=\"offsetY\"\n          index={0}\n          model={this.props.layer} />\n\n         <InputOption\n          onChange={this.props.onChange}\n          options={this.props.options}\n          key=\"rotation\"\n          optionKey=\"rotation\"\n          index={0}\n          model={this.props.layer} />\n\n         <CheckboxOption\n          onChange={this.props.onChange}\n          options={this.props.options}\n          key=\"reverse\"\n          optionKey=\"reverse\"\n          index={0}\n          model={this.props.layer} />\n\n        {this.props.layer.canTransform && <Accordion className=\"mt-3\" defaultActiveKey={activeKey} activeKey={activeKey}>\n          <Card className={activeClassName}>\n            <Accordion.Toggle as={Card.Header} eventKey={1} onClick={this.props.onRepeat}>\n              <h3>Loop and transform</h3>\n              Draws the shape multiple times, transforming it each time.\n            </Accordion.Toggle>\n\n            <Accordion.Collapse eventKey={1}>\n              <Card.Body>\n                <InputOption\n                  onChange={this.props.onChange}\n                  options={this.props.options}\n                  key=\"numLoops\"\n                  optionKey=\"numLoops\"\n                  index={0}\n                  model={this.props.layer} />\n\n                  <Row className=\"align-items-center pb-2\">\n                    <Col sm={5}>\n                      <Form.Label htmlFor=\"transformMethod\">\n                        When transforming shape\n                      </Form.Label>\n                    </Col>\n\n                    <Col sm={7}>\n                      <ToggleButtonGroup id=\"transformMethod\" type=\"radio\" name=\"transformMethod\" value={this.props.layer.transformMethod} onChange={this.props.ontransformMethodChange}>\n                        <ToggleButton variant=\"light\" value=\"smear\">smear</ToggleButton>\n                        <ToggleButton variant=\"light\" value=\"intact\">keep intact</ToggleButton>\n                      </ToggleButtonGroup>\n                    </Col>\n                  </Row>\n\n                  <Accordion className=\"mt-3\">\n                    <ScaleTransform id={this.props.layer.id} />\n                    <RotationTransform id={this.props.layer.id} />\n                    <TrackTransform id={this.props.layer.id} />\n                  </Accordion>\n              </Card.Body>\n            </Accordion.Collapse>\n          </Card>\n        </Accordion>\n      }\n\n      {!this.props.layer.effect && <Card className=\"mt-3\">\n        <Card.Body>\n          <h3 className=\"mb-3\">Fine tuning (advanced)</h3>\n          <ToggleButtonOption\n            onChange={this.props.onChange}\n            options={this.props.options}\n            optionKey=\"connectionMethod\"\n            key=\"connectionMethod\"\n            index={0}\n            model={this.props.layer} />\n\n          <InputOption\n            onChange={this.props.onChange}\n            options={this.props.options}\n            key=\"drawPortionPct\"\n            optionKey=\"drawPortionPct\"\n            min={0}\n            max={100}\n            index={0}\n            model={this.props.layer} />\n\n          <InputOption\n            onChange={this.props.onChange}\n            options={this.props.options}\n            key=\"backtrackPct\"\n            optionKey=\"backtrackPct\"\n            min={0}\n            max={100}\n            index={0}\n            model={this.props.layer} />\n\n          <InputOption\n            onChange={this.props.onChange}\n            options={this.props.options}\n            key=\"rotateStartingPct\"\n            optionKey=\"rotateStartingPct\"\n            min={0}\n            max={100}\n            index={0}\n            model={this.props.layer} />\n        </Card.Body>\n      </Card>}\n    </div>\n    )\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Transforms)\n","import { connect } from 'react-redux'\nimport React, { Component } from 'react'\nimport { Button, Card, Row, Col } from 'react-bootstrap'\nimport Select from 'react-select'\nimport CommentsBox from '../../components/CommentsBox'\nimport InputOption from '../../components/InputOption'\nimport DropdownOption from '../../components/DropdownOption'\nimport CheckboxOption from '../../components/CheckboxOption'\nimport ToggleButtonOption from '../../components/ToggleButtonOption'\nimport Transforms from '../transforms/Transforms'\nimport { updateLayer, setShapeType, restoreDefaults } from '../layers/layersSlice'\nimport { getCurrentLayer } from './selectors'\nimport { getShape, getShapeSelectOptions } from '../../models/shapes'\nimport './Layer.scss'\n\nconst mapStateToProps = (state, ownProps) => {\n  const layer = getCurrentLayer(state)\n  const shape = getShape(layer)\n\n  return {\n    layer: layer,\n    shape: shape,\n    options: shape.getOptions(),\n    selectOptions: getShapeSelectOptions(false),\n    showShapeSelectRender: layer.selectGroup !== 'import' && !layer.effect,\n    link: shape.link,\n    linkText: shape.linkText\n  }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  const { id } = ownProps\n\n  return {\n    onChange: (attrs) => {\n      attrs.id = id\n      dispatch(updateLayer(attrs))\n    },\n    onChangeType: (selected) => {\n      dispatch(setShapeType({id: id, type: selected.value}))\n    },\n    onRestoreDefaults: (event) => {\n      dispatch(restoreDefaults(id))\n    }\n  }\n}\n\nclass Layer extends Component {\n  render() {\n    const selectedOption = { value: this.props.shape.id, label: this.props.shape.name }\n    const optionsRender = Object.keys(this.props.options).map((key, index) => {\n      return this.getOptionComponent(key, index)\n    })\n\n    const linkText = this.props.linkText || this.props.link\n    const linkRender = this.props.link ? <Row><Col sm={5}></Col><Col sm={7}><p className=\"mt-2\">See <a target=\"_blank\" rel=\"noopener noreferrer\" href={this.props.link}>{linkText}</a> for ideas.</p></Col></Row> : undefined\n    let optionsListRender = undefined\n\n    if (Object.entries(this.props.options).length > 0) {\n      optionsListRender =\n        <div className=\"m-0\">\n          {optionsRender}\n        </div>\n    }\n\n    let shapeSelectRender = undefined\n\n    if (this.props.showShapeSelectRender) {\n      shapeSelectRender =\n        <Row className=\"align-items-center\">\n          <Col sm={5}>\n            Shape\n          </Col>\n\n          <Col sm={7}>\n            <Select\n              value={selectedOption}\n              onChange={this.props.onChangeType}\n              maxMenuHeight={305}\n              options={this.props.selectOptions} />\n          </Col>\n        </Row>\n    }\n\n    return (\n      <Card className=\"p-3 overflow-auto flex-grow-1\" style={{borderTop: \"1px solid #aaa\", borderBottom: \"none\"}}>\n        <Row className=\"align-items-center mb-2\">\n          <Col sm={5}>\n            <h2 className=\"panel m-0\">Properties</h2>\n          </Col>\n          <Col sm={7}>\n            <Button className=\"ml-auto\" variant=\"outline-primary\" size=\"sm\" onClick={this.props.onRestoreDefaults}>Restore defaults</Button>\n          </Col>\n        </Row>\n\n        { shapeSelectRender }\n\n        { linkRender }\n\n        <div className=\"pt-1\">\n          { optionsListRender }\n          <Transforms id={this.props.layer.id} />\n        </div>\n      </Card>\n    )\n  }\n\n  getOptionComponent(key, index) {\n    const option = this.props.options[key]\n\n    if (option.type === 'dropdown') {\n      return  <DropdownOption\n                onChange={this.props.onChange}\n                options={this.props.options}\n                optionKey={key}\n                key={key}\n                index={index}\n                model={this.props.layer} />\n    } else if (option.type === 'checkbox') {\n      return  <CheckboxOption\n                onChange={this.props.onChange}\n                options={this.props.options}\n                optionKey={key}\n                key={key}\n                index={index}\n                model={this.props.layer} />\n    } else if (option.type === 'comments') {\n      return  <CommentsBox\n                options={this.props.options}\n                optionKey={key}\n                key={key}\n                comments={this.props.layer.comments} />\n    } else if (option.type === 'togglebutton') {\n      return  <ToggleButtonOption\n                onChange={this.props.onChange}\n                options={this.props.options}\n                optionKey={key}\n                key={key}\n                index={index}\n                model={this.props.layer} />\n    } else {\n      return  <InputOption\n                onChange={this.props.onChange}\n                options={this.props.options}\n                optionKey={key}\n                key={key}\n                index={index}\n                model={this.props.layer} />\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Layer)\n","export default class Importer {\n  constructor(fileName, text) {\n    this.fileName = fileName\n    this.text = text\n  }\n}\n","import Importer from './Importer'\n\nexport default class ThetaRhoImporter extends Importer {\n  constructor(fileName, text) {\n    super(fileName, text)\n    this.label = 'ThetaRho'\n  }\n\n  // calls callback, returning an object containing relevant properties\n  import(callback) {\n    let hasVertex = false\n    let props = {\n      comments: [],\n      originalAspectRatio: 1.0,\n      fileName: this.fileName\n    }\n\n    let lines = this.text.split('\\n')\n    let thetaRhos = []\n\n    for (let ii = 0; ii < lines.length; ii++) {\n      var line = lines[ii].trim()\n\n      if (line.length === 0) {\n        // blank lines\n        continue\n      }\n\n      if (line.indexOf(\"#\") === 0 && !hasVertex) {\n        props.comments.push(lines[ii])\n      }\n\n      if (line.indexOf(\"#\") !== 0) {\n        hasVertex = true\n\n        // This is a point, let's try to read it.\n        var pointStrings = line.split(/\\s+/)\n        if (pointStrings.length !== 2) {\n          continue\n        }\n\n        thetaRhos.push([parseFloat(pointStrings[0]), parseFloat(pointStrings[1])])\n      }\n    }\n\n    props.vertices = this.convertToXY(thetaRhos)\n    callback(this, props)\n  }\n\n  convertToXY(thetaRhos) {\n    var vertices = []\n    var previous = undefined\n    var max_angle = Math.PI / 64.0\n    for (let ii = 0; ii < thetaRhos.length; ii++) {\n      var next = thetaRhos[ii]\n      if (previous) {\n        if (Math.abs(next[0] - previous[0]) < max_angle) {\n          // These sin, cos elements are inverted. I'm not sure why\n          vertices.push({\n                        x: previous[1] * Math.sin(previous[0]),\n                        y: previous[1] * Math.cos(previous[0])\n          })\n        } else {\n          // We need to do some interpolating.\n          let deltaAngle = next[0] - previous[0]\n          let rhoStep = max_angle / Math.abs(deltaAngle) * (next[1] - previous[1])\n          var rho = previous[1]\n          if (deltaAngle > 0.0) {\n            var emergency_break = 0\n            for (let angle = previous[0]; angle < next[0]; angle += max_angle, rho += rhoStep) {\n              vertices.push({\n                            x: rho * Math.sin(angle),\n                            y: rho * Math.cos(angle)\n              })\n              if (emergency_break++ > 100000) {\n                break\n              }\n            }\n          } else {\n            for (let angle = previous[0]; angle > next[0]; angle -= max_angle, rho += rhoStep) {\n              vertices.push({\n                            x: rho * Math.sin(angle),\n                            y: rho * Math.cos(angle)\n              })\n              if (emergency_break++ > 100000) {\n                break\n              }\n            }\n          }\n        }\n      }\n      previous = next\n    }\n    return vertices\n  }\n}\n","import Importer from './Importer'\nimport Toolpath from 'gcode-toolpath';\n\nexport default class GCodeImporter extends Importer {\n  constructor(fileName, text) {\n    super(fileName, text)\n    this.label = 'Gcode'\n  }\n\n  // calls callback, returning an object containing relevant properties\n  import(callback) {\n    let props = {\n      comments: [],\n      vertices: [],\n      fileName: this.fileName\n    }\n    let lines = this.text.split('\\n')\n\n    // This assumes the line is already trimmed and not empty.\n    // The paranthesis isn't perfect, since it usually has a match, but I don't think anyone will\n    // care. I think there are firmwares that do this same kind of hack.\n    const isComment = (line) => {\n      return (line.indexOf(\";\") === 0) || (line.indexOf('(') === 0)\n    }\n\n    const addVertex = (x, y) => {\n      props.vertices.push({x: x,y: y})\n    }\n\n    // Read the initial comments\n    for (let ii = 0; ii < lines.length; ii++) {\n      let line = lines[ii].trim()\n      if (line.length === 0) {\n        // blank lines\n        continue\n      }\n      if (isComment(line)) {\n        props.comments.push(lines[ii])\n      } else {\n        break\n      }\n    }\n\n    // GCode reader object. More info here:\n    // https://github.com/cncjs/gcode-toolpath/blob/master/README.md\n    const toolpath = new Toolpath({\n      // @param {object} modal The modal object.\n      // @param {object} v1 A 3D vector of the start point.\n      // @param {object} v2 A 3D vector of the end point.\n      addLine: (modal, v1, v2) => {\n        if (v1.x !== v2.x || v1.y !== v2.y) {\n          addVertex(v2.x, v2.y)\n        }\n      },\n      // @param {object} modal The modal object.\n      // @param {object} v1 A 3D vector of the start point.\n      // @param {object} v2 A 3D vector of the end point.\n      // @param {object} v0 A 3D vector of the fixed point.\n      addArcCurve: (modal, v1, v2, v0) => {\n        if (v1.x !== v2.x || v1.y !== v2.y) {\n          // We can't use arc, we have to go a specific direction (not the shortest path).\n          let startTheta = Math.atan2(v1.y-v0.y, v1.x-v0.x)\n          let endTheta   = Math.atan2(v2.y-v0.y, v2.x-v0.x)\n          let deltaTheta = endTheta - startTheta\n          const radius   = Math.sqrt(Math.pow(v2.x-v0.x, 2.0) + Math.pow(v2.y-v0.y, 2.0))\n          let direction  = 1.0 // Positive, so anticlockwise.\n\n          // Clockwise\n          if (modal.motion === 'G2') {\n            if (deltaTheta > 0.0) {\n              endTheta -= 2.0*Math.PI\n              deltaTheta -= 2.0*Math.PI\n            }\n            direction = -1.0\n          } else if (modal.motion === 'G3') {\n            // Anti-clockwise\n            if (deltaTheta < 0.0) {\n              endTheta += 2.0*Math.PI\n              deltaTheta += 2.0*Math.PI\n            }\n          }\n\n          // What angle do we need to have a resolution of approx. 0.5mm?\n          const arcResolution = 0.5\n          const arcLength = Math.abs(deltaTheta) * radius\n          const thetaStep = deltaTheta * arcResolution/arcLength\n          for (let theta = startTheta;\n               direction * theta <= direction * endTheta;\n               theta += thetaStep) {\n            addVertex(v0.x + radius * Math.cos(theta), v0.y + radius * Math.sin(theta))\n          }\n          // Save the final point, in case our math didn't quite get there.\n          addVertex(v2.x, v2.y)\n        }\n      }\n    });\n\n    toolpath.loadFromString(this.text, (err, results) => {\n      callback(this, this.normalizeCoords(props))\n    })\n  }\n\n  normalizeCoords(props) {\n    const vertices = props.vertices\n    let minX = 1e9\n    let minY = 1e9\n    let maxX = -1e9\n    let maxY = -1e9\n\n    vertices.forEach( (vertex) => {\n      minX = Math.min(vertex.x, minX)\n      minY = Math.min(vertex.y, minY)\n      maxX = Math.max(vertex.x, maxX)\n      maxY = Math.max(vertex.y, maxY)\n    })\n\n    const offsetX = (maxX + minX)/2.0\n    const offsetY = (maxY + minY)/2.0\n    const scaleX = 1.0/(maxX - offsetX)\n    const scaleY = 1.0/(maxY - offsetY)\n\n    props.originalAspectRatio = scaleX/scaleY\n    props.vertices = vertices.map(vertex => {\n      return {\n        x: scaleX * (vertex.x - offsetX),\n        y: scaleY * (vertex.y - offsetY)\n      }\n    })\n\n    return props\n  }\n}\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Accordion, Button, Card, ListGroup, Modal, Row, Col, Form } from 'react-bootstrap'\nimport Select from 'react-select'\nimport { SortableContainer, SortableElement } from 'react-sortable-hoc'\nimport { FaTrash, FaEye, FaEyeSlash, FaCopy } from 'react-icons/fa';\nimport { getAllLayersInfo, getCurrentLayer, getNumLayers } from '../layers/selectors'\nimport { setCurrentLayer, addLayer, copyLayer, updateLayers, removeLayer, moveLayer, toggleVisible, setNewLayerType } from '../layers/layersSlice'\nimport { registeredShapes, getShapeSelectOptions, getShape } from '../../models/shapes'\nimport ReactGA from 'react-ga'\nimport ThetaRhoImporter from '../importer/ThetaRhoImporter'\nimport GCodeImporter from '../importer/GCodeImporter'\nimport './Playlist.scss'\n\nconst mapStateToProps = (state, ownProps) => {\n  const layer = getCurrentLayer(state)\n  const shape = getShape(layer)\n\n  return {\n    layers: getAllLayersInfo(state),\n    numLayers: getNumLayers(state),\n    currentLayer: layer,\n    shape: shape,\n    newLayerType: state.layers.newLayerType,\n    newLayerName: state.layers.newLayerName,\n    newLayerNameOverride: state.layers.newLayerNameOverride,\n    copyLayerName: state.layers.copyLayerName,\n    selectOptions: getShapeSelectOptions()\n  }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    onLayerSelected: (event) => {\n      const id = event.target.closest('.list-group-item').id\n      dispatch(setCurrentLayer(id))\n    },\n    onLayerAdded: (type) => {\n      const attrs = registeredShapes[type].getInitialState()\n      dispatch(addLayer(attrs))\n    },\n    onLayerImport: (importProps) => {\n      const attrs = {\n        ...registeredShapes[\"file_import\"].getInitialState(importProps),\n        name: importProps.fileName\n      }\n      dispatch(addLayer(attrs))\n    },\n    onLayerCopied: (id) => {\n      dispatch(copyLayer(id))\n    },\n    onLayerRemoved: (event) => {\n      dispatch(removeLayer(event.target.closest('button').dataset.id))\n    },\n    onChangeNewType: (selected) => {\n      dispatch(setNewLayerType(selected.value))\n    },\n    onChangeNewName: (event) => {\n      dispatch(updateLayers({ newLayerName: event.target.value, newLayerNameOverride: true }))\n    },\n    onChangeCopyName: (event) => {\n      dispatch(updateLayers({ copyLayerName: event.target.value }))\n    },\n    onLayerMoved: ({oldIndex, newIndex}) => {\n      dispatch(moveLayer({oldIndex: oldIndex, newIndex: newIndex}))\n    },\n    onToggleLayerVisible: (event) => {\n      const id = event.target.closest('.list-group-item').id\n      dispatch(toggleVisible({id: id}))\n    }\n  }\n}\n\nconst customStyles = {\n  control: base => ({\n    ...base,\n    height: 55,\n    minHeight: 55\n  })\n}\n\nconst SortableItem = SortableElement(({id, name, active, effect, canRemove, visible, onCopyLayer, onLayerRemoved, onLayerSelected, onToggleLayerVisible}) => {\n  const activeClass = active ? 'active' : ''\n  const dragClass = canRemove ? 'cursor-move' : ''\n  const nameClass = effect ? 'no-select font-italic': 'no-select'\n\n  return <ListGroup.Item className={[activeClass, dragClass, 'd-flex align-items-center'].join(' ')} key={id} id={id} onClick={onLayerSelected}>\n    <Button className=\"layer-button\" variant=\"link\" data-id={id} onClick={onToggleLayerVisible}>\n      {visible && <FaEye />}\n      {!visible && <FaEyeSlash />}\n    </Button>\n    <div className={nameClass}>{effect && '\\u2937'} {name}</div>\n    <Button className=\"ml-auto layer-button\" variant=\"link\" data-id={id} onClick={onCopyLayer}>\n      <FaCopy />\n    </Button>\n    {canRemove && <Button className=\"layer-button\" variant=\"link\" data-id={id} onClick={onLayerRemoved}>\n      <FaTrash />\n    </Button>}\n  </ListGroup.Item>\n})\n\nconst SortableList = SortableContainer(({layers, currentLayer, numLayers, onCopyLayer, onLayerSelected, onLayerRemoved, onToggleLayerVisible}) => {\n  return (\n    <ListGroup variant=\"flush\" style={{maxHeight: \"200px\"}} className=\"border overflow-auto\" id=\"playlist-group\">\n      {layers.map((layer, index) => {\n        return (\n          <SortableItem\n            key={layer.id}\n            id={layer.id}\n            name={layer.name}\n            index={index}\n            active={currentLayer.id === layer.id}\n            visible={layer.visible}\n            effect={layer.effect}\n            canRemove={numLayers > 1}\n            onCopyLayer={onCopyLayer}\n            onLayerSelected={onLayerSelected}\n            onLayerRemoved={onLayerRemoved}\n            onToggleLayerVisible={onToggleLayerVisible}\n            />\n        )\n      })}\n    </ListGroup>\n  )\n})\n\nclass Playlist extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      showNewLayer: false,\n      showImportLayer: false,\n      showCopyLayer: false\n    }\n  }\n\n  scrollToBottom() {\n    // we're not supposed to directly access DOM with React, with instead use a ref. That said, I can't figure\n    // out how to get the nested ref in an elegant way.\n    const el = document.getElementById('playlist-group')\n    el.scrollTop = el.scrollHeight\n  }\n\n  toggleNewModal() {\n    this.setState({showNewLayer: !this.state.showNewLayer})\n  }\n\n  toggleImportModal() {\n    this.setState({showImportLayer: !this.state.showImportLayer})\n  }\n\n  onFileSelected(event) {\n    let file = event.target.files[0]\n    let reader = new FileReader()\n\n    reader.onload = (event) => {\n      this.startTime = performance.now()\n      var text = reader.result\n\n      let importer\n      if (file.name.toLowerCase().endsWith('.thr')) {\n        importer = new ThetaRhoImporter(file.name, text)\n      } else if (file.name.toLowerCase().endsWith('.gcode') || file.name.toLowerCase().endsWith('.nc')) {\n        importer = new GCodeImporter(file.name, text)\n      }\n\n      importer.import(this.onFileImported.bind(this))\n      this.toggleImportModal.bind(this)();\n    }\n\n    reader.readAsText(file)\n  }\n\n  onFileImported(importer, importerProps) {\n    this.props.onLayerImport(importerProps)\n\n    this.endTime = performance.now()\n    ReactGA.timing({\n      category: 'PatternImport',\n      variable: 'read' + importer.label,\n      value: this.endTime - this.startTime // in milliseconds\n    })\n  }\n\n  toggleCopyModal() {\n    this.setState({showCopyLayer: !this.state.showCopyLayer})\n  }\n\n  handleNameFocus(event) {\n    event.target.select()\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.numLayers > prevProps.numLayers) {\n      // new layer added; make sure we scroll down to it\n      this.scrollToBottom()\n    }\n  }\n\n  render() {\n    const selectedShape = getShape({type: this.props.newLayerType})\n    const selectedOption = { value: selectedShape.id, label: selectedShape.name }\n    const namedInputRef = React.createRef()\n\n    return (\n      <div>\n        <Modal show={this.state.showNewLayer} onHide={this.toggleNewModal.bind(this)}>\n          <Modal.Header closeButton>\n            <Modal.Title>Create new layer</Modal.Title>\n          </Modal.Header>\n\n          <Modal.Body>\n            <Row className=\"align-items-center\">\n              <Col sm={5}>\n                Type\n              </Col>\n              <Col sm={7}>\n                <Select\n                  value={selectedOption}\n                  onChange={this.props.onChangeNewType}\n                  styles={customStyles}\n                  maxMenuHeight={305}\n                  options={this.props.selectOptions} />\n              </Col>\n            </Row>\n            <Row className=\"align-items-center mt-2\">\n              <Col sm={5}>\n                Name\n              </Col>\n              <Col sm={7}>\n                <Form.Control\n                  value={this.props.newLayerName}\n                  onFocus={this.handleNameFocus}\n                  onChange={this.props.onChangeNewName}\n                />\n              </Col>\n            </Row>\n          </Modal.Body>\n\n          <Modal.Footer>\n            <Button id=\"new-layer-close\" variant=\"link\" onClick={this.toggleNewModal.bind(this)}>Cancel</Button>\n            <Button id=\"new-layer-add\" variant=\"primary\" onClick={() => { this.props.onLayerAdded(this.props.newLayerType || this.props.currentLayer.type); this.toggleNewModal()}}>Create</Button>\n          </Modal.Footer>\n        </Modal>\n\n        <Modal size=\"lg\" show={this.state.showImportLayer} onHide={this.toggleImportModal.bind(this)}>\n          <Modal.Header closeButton>\n            <Modal.Title>Import new layer</Modal.Title>\n          </Modal.Header>\n\n          <Modal.Body>\n            <Accordion className=\"mb-4\">\n              <Card className=\"active mt-2\">\n                <Card.Header as={Form.Label} htmlFor=\"fileUpload\" style={{ cursor: \"pointer\" }}>\n                  <h3>Import</h3>\n                  Imports a pattern file as a new layer. Supported formats are .thr, .gcode, and .nc.\n                  <Form.Control\n                      id=\"fileUpload\"\n                      type=\"file\"\n                      accept=\".thr,.gcode,.nc\"\n                      onChange={this.onFileSelected.bind(this)}\n                      style={{ display: \"none\" }} />\n                </Card.Header>\n              </Card>\n            </Accordion>\n            <div className=\"mt-2\">\n              <h3>Where to get .thr files</h3>\n              Sisyphus machines use theta rho (.thr) files. There is a large community sharing them.\n              <div className=\"row mt-2\">\n                <div className=\"col-6\">\n                  <ul className=\"list-unstyled\">\n                    <li><a href=\"https://reddit.com/u/markyland\">Markyland on Reddit</a></li>\n                    <li><a href=\"https://github.com/Dithermaster/sisyphus/\">Dithermaster's github</a></li>\n                    <li><a href=\"https://github.com/SlightlyLoony/JSisyphus\">JSisyphus by Slightly Loony</a></li>\n                  </ul>\n                </div>\n                <div className=\"col-6\">\n                  <ul className=\"list-unstyled\">\n                    <li><a href=\"https://reddit.com/r/SisyphusIndustries\">Sisyphus on Reddit</a></li>\n                    <li><a href=\"https://sisyphus-industries.com/community/community-tracks\">Sisyphus Community</a></li>\n                    <li><a href=\"http://thejuggler.net/sisyphus/\">The Juggler</a></li>\n                  </ul>\n                </div>\n              </div>\n\n              <h3 className=\"mt-3\">About copyrights</h3>\n              <p>Be careful and respectful. Understand that the original author put their labor, intensity, and ideas into this art. The creators have a right to own it (and they have a copyright, even if it doesn't say so). If you don't have permisson (a license) to use their art, then you shouldn't be. If you do have permission to use their art, then you should be thankful, and I'm sure they would appreciate you sending them a note of thanks. A picture of your table creating their shared art would probably make them smile.</p>\n              <p>Someone posting the .thr file to a forum or subreddit probably wants it to be shared, and drawing it on your home table is probably OK. Just be careful if you want to use them for something significant without explicit permission.</p>\n              <p>P.S. I am not a lawyer.</p>\n            </div>\n          </Modal.Body>\n\n          <Modal.Footer>\n            <Button id=\"new-layer-close\" variant=\"primary\" onClick={this.toggleImportModal.bind(this)}>Done</Button>\n          </Modal.Footer>\n        </Modal>\n\n        <Modal show={this.state.showCopyLayer}\n          onHide={this.toggleCopyModal.bind(this)}\n          onEntered={() => namedInputRef.current.focus()}\n        >\n          <Modal.Header closeButton>\n            <Modal.Title>Copy {this.props.currentLayer.name}</Modal.Title>\n          </Modal.Header>\n\n          <Modal.Body>\n            <Row className=\"align-items-center\">\n              <Col sm={5}>\n                Name\n              </Col>\n              <Col sm={7}>\n                <Form.Control\n                  ref={namedInputRef}\n                  value={this.props.copyLayerName}\n                  onFocus={this.handleNameFocus}\n                  onChange={this.props.onChangeCopyName}\n                />\n              </Col>\n            </Row>\n          </Modal.Body>\n\n          <Modal.Footer>\n            <Button id=\"copy-layer-close\" variant=\"link\" onClick={this.toggleCopyModal.bind(this)}>Cancel</Button>\n            <Button id=\"copy-layer-copy\" variant=\"primary\" onClick={() => { this.props.onLayerCopied(this.props.currentLayer.id); this.toggleCopyModal(); }}>Copy</Button>\n          </Modal.Footer>\n        </Modal>\n\n        <div className=\"p-3\">\n          <h2 className=\"panel\">Layers ({this.props.numLayers})</h2>\n          <SortableList\n            pressDelay={150}\n            layers={this.props.layers}\n            currentLayer={this.props.currentLayer}\n            numLayers={this.props.numLayers}\n            onLayerSelected={this.props.onLayerSelected}\n            onCopyLayer={this.toggleCopyModal.bind(this)}\n            onLayerRemoved={this.props.onLayerRemoved.bind(this)}\n            onSortEnd={this.props.onLayerMoved}\n            onToggleLayerVisible={this.props.onToggleLayerVisible}\n          />\n          <Button className=\"mt-2 mr-1\" variant=\"outline-primary\" size=\"sm\" onClick={this.toggleNewModal.bind(this)}>New</Button>\n          <Button className=\"mt-2\" variant=\"outline-primary\" size=\"sm\" onClick={this.toggleImportModal.bind(this)}>Import</Button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Playlist)\n","import { createSlice } from '@reduxjs/toolkit'\n\nconst appSlice = createSlice({\n  name: 'app',\n  initialState: {\n    sandifyVersion: '0.2.6', // Also change the version in package.json.\n    input: 'shape',\n  },\n  reducers: {\n    chooseInput(state, action) {\n      state.input = action.payload\n    },\n  }\n})\n\nexport const {\n  chooseInput\n} = appSlice.actions\n\nexport default appSlice.reducer\n","import React, { Component } from 'react'\nimport ReactGA from 'react-ga'\nimport { Tab, Tabs } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport MachineSettings from '../machine/MachineSettings'\nimport Footer from './Footer'\nimport Layer from '../layers/Layer'\nimport Playlist from '../layers/Playlist'\nimport { chooseInput } from '../app/appSlice'\nimport { getCurrentLayer } from '../layers/selectors'\n\nconst mapStateToProps = (state, ownProps) => {\n  const layer = getCurrentLayer(state)\n\n  return {\n    layer: layer\n  }\n}\n\nclass InputTabs extends Component {\n  handleSelect(key) {\n    ReactGA.event({\n      category: 'InputTabs',\n      action: 'handleSelect: ' + key,\n    })\n    this.props.dispatch(chooseInput(key))\n  }\n\n  render() {\n    return (\n       <Tabs defaultActiveKey=\"shape\" onSelect={this.handleSelect.bind(this)} id=\"input-tabs\">\n         <Tab eventKey=\"shape\" title=\"Draw\" className=\"full-page-tab\">\n           <div className=\"d-flex flex-column h-100\">\n             <Playlist />\n             <Layer key={this.props.layer.id} id={this.props.layer.id} />\n            </div>\n         </Tab>\n\n         <Tab eventKey=\"machine\" title=\"Machine\" className=\"full-page-tab\">\n           <MachineSettings />\n         </Tab>\n\n         <Tab eventKey=\"about\" title=\"About\" className=\"full-page-tab\">\n           <Footer />\n         </Tab>\n       </Tabs>\n    )\n  }\n}\n\nexport default connect(mapStateToProps, null)(InputTabs)\n","import { createSlice } from \"@reduxjs/toolkit\"\n\nconst previewSlice = createSlice({\n  name: 'preview',\n  initialState: {\n    canvasWidth: 600,\n    canvasHeight: 600,\n    sliderValue: 0.0\n  },\n  reducers: {\n    updatePreview(state, action) {\n      Object.assign(state, action.payload)\n    },\n    setPreviewSize(state, action) {\n      state.canvasHeight = action.payload.height\n      state.canvasWidth = action.payload.width\n    },\n  }\n})\n\nexport const {\n  updatePreview,\n  setPreviewSize,\n} = previewSlice.actions\n\nexport default previewSlice.reducer\n","import LRUCache from 'lru-cache'\nimport { createSelector } from 'reselect'\nimport Victor from 'victor'\nimport Color from 'color'\nimport { transformShapes, transformShape, polishVertices, getMachineInstance } from './computer'\nimport { getShape } from '../../models/shapes'\nimport { makeGetLayer, makeGetLayerIndex, getNumVisibleLayers,\n  getVisibleNonEffectIds, makeGetEffects, getCachedSelector } from '../layers/selectors'\nimport { rotate, offset } from '../../common/geometry'\nimport { log } from '../../common/util'\n\nconst cache = new LRUCache({\n  length: (n, key) => { return n.length },\n  max: 500000\n})\n\nconst getCacheKey = (state) => {\n  return JSON.stringify(state)\n}\n\nconst getState = state => state\nconst getMachine = state => state.machine\nconst getPreview = state => state.preview\n\n// by returning null for shapes which don't use machine settings, this selector will ensure\n// transformed vertices are not redrawn when machine settings change\nconst makeGetLayerMachine = layerId => {\n  return createSelector(\n    [\n      getCachedSelector(makeGetLayer, layerId),\n      getMachine\n    ],\n    (layer, machine) => {\n      log(\"makeGetLayerMachine \" + layerId)\n      return layer.usesMachine ? machine : null\n    }\n  )\n}\n\n// creates a selector that returns shape vertices for a given layer\nconst makeGetLayerVertices = layerId => {\n  return createSelector(\n    [\n      getCachedSelector(makeGetLayer, layerId),\n      getCachedSelector(makeGetLayerMachine, layerId)\n    ],\n    (layer, machine) => {\n      const state = {\n        shape: layer,\n        machine: machine\n      }\n      log('makeGetLayerVertices ' + layerId)\n      const metashape = getShape(layer)\n      if (layer.shouldCache) {\n        const key = getCacheKey(state)\n        let vertices = cache.get(key)\n\n        if (!vertices) {\n          vertices = metashape.getVertices(state)\n          cache.set(key, vertices)\n          log('caching shape...' + cache.length + ' ' + cache.itemCount)\n        }\n\n        return vertices\n      } else {\n        if (!state.shape.dragging && state.shape.effect) {\n          return []\n        } else {\n          return metashape.getVertices(state)\n        }\n      }\n    }\n  )\n}\n\n// creates a selector that returns transformed vertices for a given layer\nconst makeGetTransformedVertices = layerId => {\n  return createSelector(\n    [\n      getCachedSelector(makeGetLayerVertices, layerId),\n      getCachedSelector(makeGetLayer, layerId),\n      getCachedSelector(makeGetEffects, layerId)\n    ],\n    (vertices, layer, effects) => {\n      log('makeGetTransformedVertices ' + layerId)\n      return transformShapes(vertices, layer, effects)\n    }\n  )\n}\n\nexport const makeGetConnectorVertices = (startId, endId) => {\n  return createSelector(\n    [\n      getCachedSelector(makeGetLayer, startId),\n      getCachedSelector(makeGetComputedVertices, startId),\n      getCachedSelector(makeGetComputedVertices, endId),\n      getMachine\n    ],\n    (startLayer, startVertices, endVertices, machine) => {\n      log('makeGetConnectorVertices ' + startId + '-' + endId)\n      const start = startVertices[startVertices.length - 1]\n      const end = endVertices[0]\n\n      if (startLayer.connectionMethod === 'along perimeter') {\n        const machineInstance = getMachineInstance([], machine)\n        const startPerimeter = machineInstance.nearestPerimeterVertex(start)\n        const endPerimeter = machineInstance.nearestPerimeterVertex(end)\n        const perimeterConnection = machineInstance.tracePerimeter(startPerimeter, endPerimeter)\n\n        return [start, startPerimeter, perimeterConnection, endPerimeter, end].flat()\n      } else {\n        return [start, end]\n      }\n    }\n  )\n}\n\n// transform a given list of vertices as needed to be displayed in a preview layer\nconst previewTransform = (layer, vertices) => {\n  const konvaScale = layer.autosize ? 5 : 1 // our transformer is 5 times bigger than the actual starting shape\n  const konvaDeltaX = (konvaScale - 1)/2 * layer.startingWidth\n  const konvaDeltaY = (konvaScale - 1)/2 * layer.startingHeight\n\n  return vertices.map(vertex => {\n    // store original coordinates before transforming\n    let previewVertex = offset(rotate(offset(vertex, -layer.offsetX, -layer.offsetY), layer.rotation), konvaDeltaX, -konvaDeltaY)\n    previewVertex.origX = vertex.x\n    previewVertex.origY = vertex.y\n    return previewVertex\n  })\n}\n\n// creates a selector that returns computed (machine-bound) vertices for a given layer\nconst makeGetComputedVertices = layerId => {\n  return createSelector(\n    [\n      getCachedSelector(makeGetTransformedVertices, layerId),\n      getCachedSelector(makeGetLayerIndex, layerId),\n      getNumVisibleLayers,\n      getMachine\n    ],\n    (vertices, layerIndex, numLayers, machine) => {\n      log(\"makeGetComputedVertices \" + layerId)\n      return polishVertices(vertices, machine, {\n        start: layerIndex === 0,\n        end: layerIndex === numLayers - 1\n      })\n    }\n  )\n}\n\n// creates a selector that returns previewable vertices for a given layer\nexport const makeGetPreviewVertices = layerId => {\n  return createSelector(\n    [\n        getCachedSelector(makeGetTransformedVertices, layerId),\n        getCachedSelector(makeGetComputedVertices, layerId),\n        getCachedSelector(makeGetLayer, layerId)\n    ],\n    (transformedVertices, computedVertices, layer) => {\n      log(\"makeGetPreviewVertices \" + layerId)\n      const vertices = layer.dragging ? transformedVertices : computedVertices\n      return previewTransform(layer, vertices)\n    }\n  )\n}\n\n// returns a flattened array of all visible computed vertices and connectors (across layers)\nexport const getAllComputedVertices = createSelector(\n  [getState, getVisibleNonEffectIds],\n  (state, visibleLayerIds) => {\n    log(\"getAllComputedVertices\")\n    return visibleLayerIds.map((id, idx) => {\n      const connector = getConnectingVertices(state, id)\n      let vertices = getCachedSelector(makeGetComputedVertices, id)(state)\n      if (connector) vertices = [...vertices, ...connector]\n      return vertices\n    }).flat()\n  }\n)\n\n// returns an array of vertices connecting a given layer to the next (if it exists)\nexport const getConnectingVertices = (state, layerId) => {\n  const visibleLayerIds = getVisibleNonEffectIds(state)\n  const idx = getCachedSelector(makeGetLayerIndex, layerId)(state)\n  return idx < visibleLayerIds.length - 1 ?\n    getCachedSelector(makeGetConnectorVertices, layerId, visibleLayerIds[idx + 1])(state) :\n    null\n}\n\n// returns the starting offset for each layer, given previous layers\nexport const getVertexOffsets = createSelector(\n  [getState, getVisibleNonEffectIds],\n  (state, visibleLayerIds) => {\n    log('getVertexOffsets')\n    let offsets = {}\n    let offset = 0\n\n    visibleLayerIds.forEach((id) => {\n      const vertices = getCachedSelector(makeGetComputedVertices, id)(state)\n      const connector = getConnectingVertices(state, id) || []\n      offsets[id] = { start: offset, end: offset + vertices.length - 1}\n\n      if (connector.length > 0) {\n        offsets[id + '-connector'] = { start: offset + vertices.length, end: offset + vertices.length + connector.length - 1}\n        offset += vertices.length + connector.length\n      }\n    })\n\n    return offsets\n  }\n)\n\n// returns statistics across all layers\nexport const getVerticesStats = createSelector(\n  getAllComputedVertices,\n  (vertices) => {\n    let distance = 0.0\n    let previous = null\n\n    vertices.forEach((vertex) => {\n      if (previous) {\n        distance += Math.sqrt(Math.pow(vertex.x - previous.x, 2.0) +\n                              Math.pow(vertex.y - previous.y, 2.0))\n      }\n      previous = vertex\n    })\n\n    log(\"getVerticeStats\")\n    return {\n      numPoints: vertices.length,\n      distance: Math.floor(distance)\n    }\n  }\n)\n\n// given a set of vertices and a slider value, returns the indices of the\n// start and end vertices representing a preview slider moving through them.\nexport const getSliderBounds = createSelector(\n  [\n    getAllComputedVertices,\n    getPreview\n  ],\n  (vertices, preview) => {\n    const slideSize = 2.0\n    const beginFraction = preview.sliderValue / 100.0\n    const endFraction = (slideSize + preview.sliderValue) / 100.0\n    let start = Math.round(vertices.length * beginFraction)\n    let end = Math.round(vertices.length * endFraction)\n\n    if (end >= vertices.length) {\n      end = vertices.length - 1\n    }\n\n    if (start > 0 && end - start <= 1) {\n      if (start < 1) {\n        end = Math.min(vertices.length, 1)\n      } else {\n        start = end - 1\n      }\n    }\n\n    return { start: start, end: end }\n})\n\n// returns a hash of { index => color } that specifies the gradient color of the\n// line drawn at each index.\nexport const getSliderColors = createSelector(\n  [\n    getSliderBounds,\n    getVertexOffsets\n  ],\n  (bounds, offsets) => {\n    log(\"getSliderColors\")\n    const colors = {}\n    const { start, end } = bounds\n\n    if (end !== start) {\n      let startColor = Color('yellow')\n      const colorStep = 3.0 / 8 / (end - start)\n\n      for(let i=end; i>=start; i--) {\n        colors[i] = startColor.darken(colorStep * (end-i)).hex()\n      }\n    }\n\n    return colors\n  }\n)\n\n// used by the preview window; reverses rotation and offsets because they are\n// re-added by Konva transformer.\nexport const makeGetPreviewTrackVertices = layerId => {\n  return createSelector(\n    getCachedSelector(makeGetLayer, layerId),\n    (layer) => {\n      log(\"makeGetPreviewTrackVertices for layer \" + layerId)\n      const numLoops = layer.numLoops\n      const konvaScale = layer.autosize ? 5 : 1 // our transformer is 5 times bigger than the actual starting shape\n      const konvaDeltaX = (konvaScale - 1)/2 * layer.startingWidth\n      const konvaDeltaY = (konvaScale - 1)/2 * layer.startingHeight\n      let trackVertices = []\n\n      for (var i=0; i<numLoops; i++) {\n        if (layer.trackEnabled) {\n          trackVertices.push(transformShape(layer, new Victor(0.0, 0.0), i, i))\n        }\n      }\n\n      return trackVertices.map(vertex => {\n        return offset(rotate(offset(vertex, -layer.offsetX, -layer.offsetY), layer.rotation), konvaDeltaX, -konvaDeltaY)\n      })\n    }\n  )\n}\n","import Victor from 'victor'\n\n// translates shape coordinates into pixel coordinates with a centered origin\nexport default class PreviewHelper {\n  constructor(props) {\n    this.props = props\n    this.width = this.props.layer.startingWidth || 0\n    this.height = this.props.layer.startingHeight || 0\n  }\n\n  toPixels(vertex) {\n    // y for pixels starts at the top, and goes down\n    if (vertex) {\n      return new Victor(vertex.x + this.width/2, -vertex.y + this.height/2)\n    } else {\n      return new Victor(0, 0)\n    }\n  }\n\n  moveTo(context, vertex) {\n    const px = this.toPixels(vertex)\n    context.moveTo(px.x, px.y)\n  }\n\n  lineTo(context, vertex) {\n    const px = this.toPixels(vertex)\n    context.lineTo(px.x, px.y)\n  }\n\n  dot(context, vertex, radius=4, color='yellow') {\n    const px = this.toPixels(vertex)\n    context.arc(px.x, px.y, radius, 0, 2 * Math.PI, true)\n    context.fillStyle = context.strokeStyle\n    context.fill()\n    context.lineWidth = 1\n    context.strokeStyle = color\n    context.stroke()\n  }\n\n  drawSliderEndPoint(context) {\n    const { end } = this.props.bounds\n\n    // Draw a slider path end point if sliding\n    if (this.props.sliderValue !== 0) {\n      const offsets = this.props.offsets[this.props.offsetId]\n\n      if (end >= offsets.start && end <= offsets.end) {\n        const sliderEnd = this.props.vertices[end - offsets.start]\n\n        if (sliderEnd) {\n          context.beginPath()\n\n          this.moveTo(context, sliderEnd)\n          context.strokeStyle = 'yellow'\n          this.dot(context, sliderEnd)\n          context.stroke()\n\n          this.markOriginalCoordinates(context, sliderEnd)\n        }\n      }\n    }\n  }\n\n  markOriginalCoordinates(context, vertex) {\n    if (this.props.markCoordinates && !this.props.currentLayer.dragging) {\n      const signX = vertex.x < 0 ? 1 : -1\n      const signY = vertex.y < 0 ? -1 : 1\n      const x = (vertex.origX || vertex.x).toFixed(2)\n      const y = (vertex.origY || vertex.y).toFixed(2)\n\n      context.fillStyle = 'white'\n      context.font = '10px Arial'\n      context.fillText('' + x + ', ' + y, vertex.x + 15 * signX, -vertex.y + 5 * signY)\n    }\n  }\n}\n","import React from 'react'\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux'\nimport { Shape, Transformer } from 'react-konva'\nimport { makeGetPreviewTrackVertices, makeGetPreviewVertices, getSliderColors,\n  getVertexOffsets, getAllComputedVertices, getSliderBounds } from '../machine/selectors'\nimport { updateLayer } from '../layers/layersSlice'\nimport { getCurrentLayer, makeGetLayerIndex, makeGetLayer, getNumVisibleLayers, getCachedSelector } from '../layers/selectors'\nimport { roundP } from '../../common/util'\nimport PreviewHelper from './PreviewHelper'\n\n// Renders the shapes in the preview window and allows the user to interact with the shape.\nconst PreviewLayer = (ownProps) => {\n  const mapStateToProps = (state) => {\n    // if a layer matching this shape's id does not exist, we have a zombie\n    // child. It has to do with a child (preview shape) subscribing to the store\n    // before its parent (preview window), and trying to render first after a\n    // layer is removed. This is a tangled, but well-known problem with React-Redux\n    // hooks, and the solution for now is to render the current layer instead.\n    // https://react-redux.js.org/api/hooks#stale-props-and-zombie-children\n    // It's quite likely there is a more elegant/proper way around this.\n    const layer = getCachedSelector(makeGetLayer, ownProps.id)(state) || getCurrentLayer(state)\n    const index = getCachedSelector(makeGetLayerIndex, layer.id)(state)\n    const numLayers = getNumVisibleLayers(state)\n\n    return {\n      layer: layer,\n      start: index === 0,\n      end: index === numLayers - 1,\n      currentLayer: getCurrentLayer(state),\n      trackVertices: getCachedSelector(makeGetPreviewTrackVertices, layer.id)(state),\n      vertices: getCachedSelector(makeGetPreviewVertices, layer.id)(state),\n      allVertices: getAllComputedVertices(state),\n      selected: state.layers.selected,\n      sliderValue: state.preview.sliderValue,\n      showTrack: true,\n      colors: getSliderColors(state),\n      offsets: getVertexOffsets(state),\n      offsetId: layer.id,\n      bounds: getSliderBounds(state),\n      markCoordinates: false // debug feature: set to true to see coordinates while drawing\n    }\n  }\n\n  const props = useSelector(mapStateToProps, shallowEqual)\n  const dispatch = useDispatch()\n  const startingWidth = props.layer.startingWidth\n  const startingHeight = props.layer.startingHeight\n  const selectedColor = 'yellow'\n  const unselectedColor = 'rgba(195, 214, 230, 0.65)'\n  const backgroundSelectedColor = '#6E6E00'\n  const backgroundUnselectedColor = 'rgba(195, 214, 230, 0.4)'\n\n  // our transformer is 5 times bigger than the actual starting shape, so we need\n  // to account for it when drawing the preview; if you change this value, be sure\n  // to change it in machine/selectors#getPreviewVertices,getPreviewTrackVertices\n  const konvaScale = props.layer.autosize ? 5 : 1\n  const konvaSizeX = startingWidth * konvaScale\n  const konvaSizeY = startingHeight * konvaScale\n  const isSelected = props.selected === ownProps.id\n  const isSliding = props.sliderValue !== 0\n  const helper = new PreviewHelper(props)\n\n  // draws a colored path when user is using slider\n  function drawLayerVertices(context, bounds) {\n    const { end } = bounds\n    let oldColor = null\n    let currentColor = isSelected ? selectedColor : unselectedColor\n\n    context.beginPath()\n    context.lineWidth = 1\n    context.strokeStyle = currentColor\n    helper.moveTo(context, props.vertices[0])\n    context.stroke()\n\n    context.beginPath()\n    for (let i=1; i<props.vertices.length; i++) {\n      if (isSliding) {\n        let absoluteI = i + props.offsets[props.layer.id].start\n        let pathColor = absoluteI <= end ? backgroundSelectedColor : backgroundUnselectedColor\n\n        currentColor = props.colors[absoluteI] || pathColor\n        if (currentColor !== oldColor) {\n          context.stroke()\n          context.strokeStyle = currentColor\n          oldColor = currentColor\n          context.beginPath()\n        }\n      }\n\n      helper.moveTo(context, props.vertices[i-1])\n      helper.lineTo(context, props.vertices[i])\n    }\n    context.stroke()\n  }\n\n  function drawStartAndEndPoints(context) {\n    const start = props.vertices[0]\n    const end = props.vertices[props.vertices.length - 1]\n\n    context.beginPath()\n    context.strokeStyle = 'green'\n    helper.dot(context, start, props.start ? 5 : 3)\n    helper.markOriginalCoordinates(context, start)\n\n    if (end) {\n      context.beginPath()\n      context.strokeStyle = 'red'\n      helper.dot(context, end, props.end ? 5 : 3)\n      helper.markOriginalCoordinates(context, end)\n    }\n  }\n\n  // draws the line representing the track the path follows\n  function drawTrackVertices(context) {\n    context.beginPath()\n    context.lineWidth = 4.0\n    context.strokeStyle = 'green'\n    helper.moveTo(context, props.trackVertices[0])\n    for (let i=0; i<props.trackVertices.length; i++) {\n      helper.lineTo(context, props.trackVertices[i])\n    }\n    context.stroke()\n  }\n\n  // used by Konva to draw our custom shape\n  function sceneFunc(context, shape) {\n    if (props.vertices && props.vertices.length > 0) {\n      if (props.trackVertices && props.trackVertices.length > 0) {\n        drawTrackVertices(context)\n      }\n\n      drawLayerVertices(context, props.bounds)\n\n      if (props.start || props.end || isSelected) {\n        drawStartAndEndPoints(context)\n      }\n      helper.drawSliderEndPoint(context)\n    }\n\n    context.fillStrokeShape(shape)\n  }\n\n  // used by Konva to mark boundaries of shape\n  function hitFunc(context) {\n    context.fillStrokeShape(this)\n  }\n\n  function onChange(attrs) {\n    attrs.id = props.layer.id\n    dispatch(updateLayer(attrs))\n  }\n\n  function onSelect() {\n    // deselection is currently disabled\n    // dispatch(setSelectedLayer(props.selected == null ? props.currentLayer.id : null))\n  }\n\n  const shapeRef = React.createRef()\n  const trRef = React.createRef()\n\n  React.useEffect(() => {\n    if (props.layer.visible && isSelected && props.layer.canChangeSize) {\n      // we need to attach transformer manually\n      trRef.current.nodes([shapeRef.current])\n      trRef.current.getLayer().batchDraw()\n    }\n  }, [isSelected, props.layer, props.currentLayer.canMove, shapeRef, trRef])\n\n  return (\n    <React.Fragment>\n      {props.layer.visible && <Shape\n        draggable={props.currentLayer.canMove && props.layer.id === props.currentLayer.id}\n        width={konvaSizeX}\n        height={konvaSizeY}\n        offsetY={konvaSizeY/2}\n        offsetX={konvaSizeX/2}\n        x={props.layer.offsetX || 0}\n        y={-props.layer.offsetY || 0}\n        onClick={onSelect}\n        onTap={onSelect}\n        ref={shapeRef}\n        {...props}\n        strokeWidth={1}\n        rotation={props.layer.rotation || 0}\n        sceneFunc={sceneFunc}\n        hitFunc={hitFunc}\n        onDragStart={e => {\n          onChange({dragging: true})\n        }}\n        onDragEnd={e => {\n          onChange({\n            dragging: false,\n            offsetX: roundP(e.target.x(), 0),\n            offsetY: roundP(-e.target.y(), 0)\n          })\n        }}\n        onTransformStart={e => {\n          onChange({dragging: true})\n        }}\n        onTransformEnd={e => {\n          const node = shapeRef.current\n          const scaleX = node.scaleX()\n          const scaleY = node.scaleY()\n\n          // we will reset it back\n          node.scaleX(1)\n          node.scaleY(1)\n\n          onChange({\n            dragging: false,\n            startingWidth: roundP(Math.max(5, props.layer.startingWidth * scaleX), 0),\n            startingHeight: roundP(Math.max(5, props.layer.startingHeight * scaleY), 0),\n            rotation: roundP(node.rotation(), 0)\n          })\n        }}\n      />}\n      {props.layer.visible && isSelected && props.layer.canChangeSize && (\n        <Transformer\n          ref={trRef}\n          centeredScaling={true}\n          resizeEnabled={!props.layer.trackEnabled}\n          rotateEnabled={props.layer.canRotate}\n          rotationSnaps={[0, 90, 180, 270]}\n          enabledAnchors={!props.layer.canChangeHeight ? ['top-left', 'top-right', 'bottom-left', 'bottom-right'] : null }\n        />\n      )}\n    </React.Fragment>\n  )\n}\n\nexport default PreviewLayer\n","import React from 'react'\nimport { useSelector, shallowEqual } from 'react-redux'\nimport { Shape } from 'react-konva'\nimport { makeGetConnectorVertices, getSliderBounds, getSliderColors, getVertexOffsets } from '../machine/selectors'\nimport { getCurrentLayer, getCachedSelector, makeGetLayer } from '../layers/selectors'\nimport PreviewHelper from './PreviewHelper'\n\n// Renders a connector between two layers.\nconst PreviewConnector = (ownProps) => {\n  const mapStateToProps = (state) => {\n    // if a layer matching this shape's id does not exist, we have a zombie\n    // child. It has to do with a child (preview shape) subscribing to the store\n    // before its parent (preview window), and trying to render first after a\n    // layer is removed. This is a tangled, but well-known problem with React-Redux\n    // hooks, and the solution for now is to render the current layer instead.\n    // https://react-redux.js.org/api/hooks#stale-props-and-zombie-children\n    // It's quite likely there is a more elegant/proper way around this.\n    const startLayer = getCachedSelector(makeGetLayer, ownProps.startId)(state) || getCurrentLayer(state)\n    const endLayer = getCachedSelector(makeGetLayer, ownProps.endId)(state) || getCurrentLayer(state)\n    const vertices = startLayer === endLayer ?\n      [] :\n      getCachedSelector(makeGetConnectorVertices, startLayer.id, endLayer.id)(state)\n\n    return {\n      layer: startLayer,\n      endLayer: endLayer,\n      vertices: vertices,\n      sliderValue: state.preview.sliderValue,\n      selected: state.layers.selected,\n      colors: getSliderColors(state),\n      offsetId: startLayer.id + '-connector',\n      offsets: getVertexOffsets(state),\n      bounds: getSliderBounds(state)\n    }\n  }\n\n  const props = useSelector(mapStateToProps, shallowEqual)\n  const helper = new PreviewHelper(props)\n  const selectedColor = 'yellow'\n  const unselectedColor = 'rgba(195, 214, 230, 0.65)'\n  const backgroundSelectedColor = '#6E6E00'\n  const backgroundUnselectedColor = 'rgba(195, 214, 230, 0.4)'\n  const isSliding = props.sliderValue !== 0\n  const isSelected = props.selected === ownProps.endId\n\n  // used by Konva to draw shape\n  function sceneFunc(context, shape) {\n    drawConnector(context)\n    helper.drawSliderEndPoint(context)\n    context.fillStrokeShape(shape)\n  }\n\n  // used by Konva to mark boundaries of shape\n  function hitFunc(context) {\n    context.fillStrokeShape(this)\n  }\n\n  function drawConnector(context) {\n    const { end } = props.bounds\n    let oldColor = null\n    let currentColor = isSelected ? selectedColor : unselectedColor\n\n    context.beginPath()\n    context.lineWidth = 1\n    context.strokeStyle = currentColor\n    helper.moveTo(context, props.vertices[0])\n    context.stroke()\n\n    context.beginPath()\n    for (let i=1; i<props.vertices.length; i++) {\n      if (isSliding) {\n        let absoluteI = props.offsets[props.endLayer.id].start - props.vertices.length + i\n        let pathColor = (absoluteI <= end ? backgroundSelectedColor : backgroundUnselectedColor)\n\n        currentColor = props.colors[absoluteI] || pathColor\n        if (currentColor !== oldColor) {\n          context.stroke()\n          context.strokeStyle = currentColor\n          oldColor = currentColor\n          context.beginPath()\n        }\n      }\n\n      helper.moveTo(context, props.vertices[i-1])\n      helper.lineTo(context, props.vertices[i])\n    }\n    context.stroke()\n  }\n\n  return (\n    <React.Fragment>\n      {!props.layer.dragging && !props.endLayer.dragging && <Shape\n        offsetX={props.layer.startingWidth/2}\n        offsetY={props.layer.startingHeight/2}\n        sceneFunc={sceneFunc}\n        hitFunc={hitFunc}\n      >\n      </Shape>}\n    </React.Fragment>\n  )\n}\n\nexport default PreviewConnector\n","import React, { Component } from 'react'\nimport { connect, ReactReduxContext, Provider } from 'react-redux'\nimport { Stage, Layer, Circle, Rect } from 'react-konva'\nimport throttle from 'lodash/throttle'\nimport { setPreviewSize, updatePreview } from './previewSlice'\nimport { updateLayer } from '../layers/layersSlice'\nimport { getCurrentLayer, getKonvaLayerIds, getVisibleNonEffectIds, isDragging } from '../layers/selectors'\nimport { roundP } from '../../common/util'\nimport PreviewLayer from './PreviewLayer'\nimport PreviewConnector from './PreviewConnector'\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    layers: state.layers,\n    currentLayer: getCurrentLayer(state),\n    konvaIds: getKonvaLayerIds(state),\n    layerIds: getVisibleNonEffectIds(state),\n    use_rect: state.machine.rectangular,\n    dragging: isDragging(state),\n    minX: state.machine.minX,\n    maxX: state.machine.maxX,\n    minY: state.machine.minY,\n    maxY: state.machine.maxY,\n    maxRadius: state.machine.maxRadius,\n    canvasWidth: state.preview.canvasWidth,\n    canvasHeight: state.preview.canvasHeight\n  }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    onResize: (size) => {\n      dispatch(setPreviewSize(size))\n    },\n    onChange: (attrs) => {\n      dispatch(updatePreview(attrs))\n    },\n    onLayerChange: (attrs) => {\n      dispatch(updateLayer(attrs))\n    }\n  }\n}\n\n// Contains the preview window, and any parameters for the machine.\nclass PreviewWindow extends Component {\n  componentDidMount() {\n    const wrapper = document.getElementById('preview-wrapper')\n\n    this.throttledResize = throttle(this.resize, 200, {trailing: true}).bind(this)\n    window.addEventListener('resize', () => { this.throttledResize(wrapper) }, false)\n    setTimeout(() => {\n      this.visible = true\n      this.resize(wrapper)\n    }, 250)\n  }\n\n  resize(wrapper) {\n    const width = parseInt(getComputedStyle(wrapper).getPropertyValue('width'))\n    const height = parseInt(getComputedStyle(wrapper).getPropertyValue('height'))\n\n    if (this.props.canvasWidth !== width || this.props.canvasHeight !== height) {\n      this.props.onResize({width: width, height: height})\n    }\n  }\n\n  render() {\n    const {minX, minY, maxX, maxY} = this.props\n    const radius = this.props.maxRadius\n    const scale = this.relativeScale(this.props)\n    const reduceScale = 0.9\n    const width = this.props.use_rect ? maxX - minX : radius * 2\n    const height = this.props.use_rect ? maxY - minY : radius * 2\n    const visibilityClass = `preview-wrapper ${this.visible ? 'd-flex align-items-center' : 'd-none'}`\n\n    // define Konva clip functions that will let us clip vertices not bound by\n    // machine limits when dragging, and produce a visually seamless experience.\n    const clipCircle = ctx => {\n     ctx.arc(0, 0, radius, 0, Math.PI * 2, false)\n    }\n    const clipRect = ctx => {\n     ctx.rect(-width/2, -height/2, width, height)\n    }\n    const clipFunc = this.props.dragging ? (this.props.use_rect ? clipRect : clipCircle) : null\n\n    return (\n      // the consumer wrapper is needed to pass the store down to our shape\n      // which is not our usual React Component\n      <ReactReduxContext.Consumer>\n        {({store}) => (\n          <Stage className={visibilityClass}\n            scaleX={scale * reduceScale}\n            scaleY={scale * reduceScale}\n            height={height * scale}\n            width={width * scale}\n            offsetX={-width/2*(1/reduceScale)}\n            offsetY={-height/2*(1/reduceScale)}\n            onWheel={e => {\n              e.evt.preventDefault()\n              if (Math.abs(e.evt.deltaY) > 0) {\n                this.props.onLayerChange({\n                  startingWidth: this.scaleByWheel(this.props.currentLayer.startingWidth, e.evt.deltaY),\n                  startingHeight: this.scaleByWheel(this.props.currentLayer.startingHeight, e.evt.deltaY),\n                  id: this.props.currentLayer.id\n                })\n              }\n            }}\n            >\n            <Provider store={store}>\n              <Layer clipFunc={clipFunc}>\n                {!this.props.use_rect && <Circle x={0} y={0} radius={radius}\n                  fill=\"transparent\"\n                  stroke=\"gray\"\n                />}\n                {this.props.use_rect && <Rect x={0} y={0} width={width} height={height}\n                  fill=\"transparent\"\n                  stroke=\"gray\"\n                  offsetX={width/2}\n                  offsetY={height/2}\n                />}\n                {this.props.konvaIds.map((id, i) => {\n                  const idx = this.props.layerIds.findIndex(layerId => layerId === id)\n                  const nextId = idx !== -1 && idx < this.props.layerIds.length - 1 ? this.props.layerIds[idx + 1] : null\n                  return (\n                    [\n                      nextId && <PreviewConnector startId={id} endId={nextId} key={'c-' + i} />,\n                      <PreviewLayer id={id} key={i} index={i} />\n                    ].filter(e => e !== null)\n                  )\n                }).flat()}\n              </Layer>\n            </Provider>\n          </Stage>\n        )}\n      </ReactReduxContext.Consumer>\n    )\n  }\n\n  relativeScale(props) {\n    let width, height\n\n    if (props.use_rect) {\n      width = props.maxX - props.minX\n      height = props.maxY - props.minY\n    } else {\n      width = height = props.maxRadius * 2.0\n    }\n\n    return Math.min(props.canvasWidth / width, props.canvasHeight / height)\n  }\n\n  scaleByWheel(size, deltaY) {\n    const sign = Math.sign(deltaY)\n    const scale = 1 + Math.log(Math.abs(deltaY))/30 * sign\n    let newSize = Math.max(roundP(size * scale, 0), 1)\n\n    if (newSize === size) {\n      // If the log scaled value isn't big enough to move the scale.\n      newSize = Math.max(sign+size, 1)\n    }\n\n    return newSize\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(PreviewWindow)\n","export const [GCODE, THETARHO, SVG, SCARA] = ['gcode', 'thetarho', 'svg', 'scara']\nexport const exportTypes = {\n  'gcode': 'GCode',\n  'thetarho': 'Theta Rho',\n  'svg': 'SVG',\n  'scara': 'SCARA GCode (experimental)'\n}\n\nconst exporterOptions = {\n  fileName: {\n    title: 'File name',\n    type: 'string'\n  },\n  fileType: {\n    title: 'Export as',\n    type: 'dropdown',\n    choices: exportTypes\n  },\n  polarRhoMax: {\n    title: 'Maximum rho value (0-1)',\n    min: 0,\n    max: 1\n  },\n  unitsPerCircle: {\n    title: 'Units per circle',\n    type: 'number',\n  },\n  post: {\n    title: 'Program end code',\n    type: 'textarea',\n    isVisible: (state) => { return state.fileType !== SVG },\n  },\n  pre: {\n    title: 'Program start code',\n    type: 'textarea',\n    isVisible: (state) => { return state.fileType !== SVG },\n  },\n  reverse: {\n    title: 'Reverse path in the code',\n  },\n}\n\nexport class Exporter {\n  getOptions() {\n    return exporterOptions\n  }\n}\n","export default class Exporter {\n  constructor(props) {\n    this.props = props\n    this.lines = []\n    this.indentLevel = 0\n  }\n\n  export() {\n    this.pre = this.props.pre\n    this.post = this.props.post\n    let vertices = this.props.vertices\n\n    if (this.props.reverse) {\n      vertices = vertices.reverse()\n    }\n    this.computeOutputVertices(vertices)\n    this.header()\n    this.startComments()\n    this.props.comments.forEach(comment => this.line(comment))\n    this.line()\n    this.keyValueLine('File name', \"'\" + this.props.fileName + \"'\")\n    this.keyValueLine('File type', this.props.fileType)\n    this.line()\n    this.endComments()\n\n    if (this.pre !== '') {\n      this.startComments()\n      this.line('BEGIN PRE')\n      this.endComments()\n      this.line(this.pre, this.pre !== '')\n      this.startComments()\n      this.line('END PRE')\n      this.endComments()\n    }\n\n    this.line()\n    this.exportCode(this.vertices)\n    this.line()\n\n    if (this.post !== '') {\n      this.startComments()\n      this.line('BEGIN POST')\n      this.endComments()\n      this.line(this.post, this.post !== '')\n      this.startComments()\n      this.line('END POST')\n      this.endComments()\n    }\n    this.footer()\n    this.line()\n\n    return this.lines\n  }\n\n  header() {\n    // default does nothing\n  }\n\n  footer() {\n    // default does nothing\n  }\n\n  computeOutputVertices(vertices) {\n    // default does nothing\n    this.vertices = vertices\n  }\n\n  line(content='', add=true) {\n    if (add) {\n      let padding = ''\n      if (this.commenting) {\n        padding = this.commentChar + (content.length > 0 ? ' ' : '')\n        for (let i=0; i<this.indentLevel; i++) {\n          padding += '  '\n        }\n      }\n      this.lines.push(padding + content)\n    }\n  }\n\n  keyValueLine(key, value, add=true) {\n    this.line(key + ': ' + value, add)\n  }\n\n  optionLine(metamodel, instance, option, add=true) {\n    this.line(metamodel.getOptions()[option].title + ': ' + instance[option], add)\n  }\n\n  optionLines(metamodel, instance, options, add=true) {\n    options.forEach(option => {\n      const metaOption = metamodel.getOptions()[option]\n      const visible = metaOption.isVisible === undefined ? true : metaOption.isVisible(instance)\n\n      if (visible) {\n        this.optionLine(metamodel, instance, option, add)\n      }\n    })\n  }\n\n  indent() {\n    this.indentLevel++\n  }\n\n  dedent() {\n    this.indentLevel--\n  }\n\n  startComments() {\n    this.commenting = true\n  }\n\n  endComments() {\n    this.commenting = false\n  }\n}\n","import { getShape } from '../../models/shapes'\nimport Machine from '../../models/Machine'\nimport Transform from '../../models/Transform'\nimport Exporter from './Exporter'\n\nexport default class CommentExporter extends Exporter {\n  constructor(props) {\n    super(props)\n    this.indentLevel = 0\n    this.startComments()\n    this.commentChar = ''\n  }\n\n  export() {\n    const state = this.props\n    const machine = new Machine()\n    const transform = new Transform()\n    let instance = state.machine\n\n    this.line('Created by Sandify')\n    this.line('https://sandify.org')\n    this.keyValueLine('Version', state.app.sandifyVersion)\n    this.line()\n\n    this.keyValueLine('Machine type', state.machine.rectangular ? 'Rectangular' : 'Polar')\n    this.indent()\n    this.optionLines(machine, instance, ['minX', 'maxX', 'minY', 'maxY'], state.machine.rectangular)\n    this.optionLines(machine, instance,  ['maxRadius', 'polarStartPoint', 'polarEndPoint'], !state.machine.rectangular)\n    this.dedent()\n\n    this.keyValueLine('Content type', state.app.input)\n\n    switch (state.app.input) {\n      case 'shape': // shapes\n        const layers = state.layers\n        layers.forEach(layer => {\n          const shape = getShape(layer)\n          const options = shape.getOptions()\n\n          this.line('Layer:')\n          this.indent()\n          this.keyValueLine('Shape', shape.name)\n          this.optionLines(shape, layer, Object.keys(options))\n          this.keyValueLine('Visible', layer.visible)\n          this.optionLines(transform, layer, ['startingWidth', 'startingHeight', 'offsetX', 'offsetY', 'rotation', 'reverse'])\n          this.optionLines(transform, layer, ['numLoops', 'transformMethod'], layer.repeatEnabled)\n\n          this.optionLine(transform, layer, 'growEnabled', layer.repeatEnabled)\n          this.indent()\n          this.optionLine(transform, layer, 'growValue', layer.repeatEnabled && layer.growEnabled)\n          this.optionLine(transform, layer, 'growMethod', layer.repeatEnabled && layer.growEnabled)\n          this.indent()\n          this.optionLine(transform, layer, 'growMath', layer.repeatEnabled && layer.growEnabled && layer.growMethod === 'function')\n          this.dedent()\n          this.dedent()\n\n          this.optionLine(transform, layer, 'spinEnabled', layer.repeatEnabled)\n          this.indent()\n          this.optionLines(transform, layer, ['spinValue', 'spinMethod'], layer.repeatEnabled && layer.spinEnabled)\n          this.indent()\n          this.optionLine(transform, layer, 'spinMath', layer.repeatEnabled && layer.spinEnabled && layer.spinMethod === 'function')\n          this.optionLine(transform, layer, 'spinSwitchbacks', layer.repeatEnabled && layer.spinEnabled && layer.spinMethod === 'constant')\n          this.dedent()\n          this.dedent()\n\n          this.optionLine(transform, layer, 'trackEnabled', layer.repeatEnabled)\n          this.indent()\n          this.optionLines(transform, layer, ['trackValue', 'trackLength', 'trackNumLoops'], layer.repeatEnabled && layer.trackEnabled)\n          this.optionLine(transform, layer, 'trackGrowEnabled', layer.repeatEnabled && layer.trackEnabled)\n          this.indent()\n          this.optionLine(transform, layer, 'trackGrow', layer.repeatEnabled && layer.trackGrowEnabled)\n          this.dedent()\n          this.dedent()\n\n          if (!layer.effect) {\n            this.line('Fine tuning:')\n            this.indent()\n            this.optionLines(transform, layer, ['connectionMethod', 'drawPortionPct', 'backtrackPct', 'rotateStartingPct'])\n            this.dedent()\n          }\n          this.dedent()\n        })\n        break\n\n      default:\n        break\n    }\n\n    this.dedent()\n    this.keyValueLine('Reverse export path', state.exporter.reverse)\n    return this.lines\n  }\n}\n","import { createSelector } from 'reselect'\nimport { getAllLayersInfo } from '../../features/layers/selectors'\nimport CommentExporter from './CommentExporter'\nimport { log } from '../../common/util'\n\nconst getApp = state => state.app\nconst getExporter = state => state.exporter\nconst getMachine = state => state.machine\n\nexport const getComments = createSelector(\n  [\n      getApp,\n      getAllLayersInfo,\n      getExporter,\n      getMachine,\n  ],\n  (app, layers, exporter, machine) => {\n    log(\"getComments\")\n    const state = {\n      app: app,\n      layers: layers,\n      exporter: exporter,\n      machine: machine\n    }\n\n    return new CommentExporter(state).export()\n  }\n)\n","import Exporter from './Exporter'\n\nexport default class GCodeExporter extends Exporter {\n  constructor(props) {\n    super(props)\n    this.fileExtension = '.gcode'\n    this.label = 'Gcode'\n    this.commentChar = ';'\n    this.offsetX = this.props.offsetX\n    this.offsetY = this.props.offsetY\n  }\n\n  exportCode(vertices) {\n    vertices.map(this.gcode).forEach(line => this.line(line))\n  }\n\n  // computes vertices compatible with the gcode format, and replaces\n  // placeholder variables in pre/post blocks.\n  computeOutputVertices(vertices) {\n    // Collect some statistics about these vertices.\n    let minx = 1e9\n    let miny = 1e9\n    let maxx = -1e9\n    let maxy = -1e9\n    this.vertices = vertices.map(vertex => {\n      const x = vertex.x + this.offsetX\n      const y = vertex.y + this.offsetY\n      minx = Math.min(x, minx)\n      miny = Math.min(y, miny)\n      maxx = Math.max(x, maxx)\n      maxy = Math.max(y, maxy)\n\n      return {\n        ...vertex,\n        x: x,\n        y: y,\n      }\n    })\n    let startx = this.vertices[0].x\n    let starty = this.vertices[0].y\n    let endx = this.vertices[this.vertices.length-1].x\n    let endy = this.vertices[this.vertices.length-1].y\n\n    // Replace pre/post placeholder variables\n    this.pre  =  this.pre.replace(/{startx}/gi, startx.toFixed(3))\n    this.pre  =  this.pre.replace(/{starty}/gi, starty.toFixed(3))\n    this.pre  =  this.pre.replace(/{endx}/gi,   endx.toFixed(3))\n    this.pre  =  this.pre.replace(/{endy}/gi,   endy.toFixed(3))\n    this.pre  =  this.pre.replace(/{minx}/gi,   minx.toFixed(3))\n    this.pre  =  this.pre.replace(/{miny}/gi,   miny.toFixed(3))\n    this.pre  =  this.pre.replace(/{maxx}/gi,   maxx.toFixed(3))\n    this.pre  =  this.pre.replace(/{maxy}/gi,   maxy.toFixed(3))\n    this.post = this.post.replace(/{startx}/gi, startx.toFixed(3))\n    this.post = this.post.replace(/{starty}/gi, starty.toFixed(3))\n    this.post = this.post.replace(/{endx}/gi,   endx.toFixed(3))\n    this.post = this.post.replace(/{endy}/gi,   endy.toFixed(3))\n    this.post = this.post.replace(/{minx}/gi,   minx.toFixed(3))\n    this.post = this.post.replace(/{miny}/gi,   miny.toFixed(3))\n    this.post = this.post.replace(/{maxx}/gi,   maxx.toFixed(3))\n    this.post = this.post.replace(/{maxy}/gi,   maxy.toFixed(3))\n  }\n\n  gcode(vertex) {\n    let command = 'G01' +\n      ' X' + vertex.x.toFixed(3) +\n      ' Y' + vertex.y.toFixed(3)\n    return command\n  }\n}\n","import GCodeExporter from './GCodeExporter'\nimport { subsample, toThetaRho, toScaraGcode } from '../../common/geometry'\n\nexport default class ScaraGCodeExporter extends GCodeExporter {\n  constructor(props) {\n    super(props)\n    this.offsetX = 0\n    this.offsetY = 0\n  }\n\n  computeOutputVertices(vertices) {\n    //  downsample larger lines into smaller ones, then convert to theta-rho\n    vertices = toScaraGcode(\n      toThetaRho(\n        subsample(vertices, 2.0),\n        this.props.maxRadius,\n        parseFloat(this.props.polarRhoMax),\n      ),\n      parseFloat(this.props.unitsPerCircle)\n    )\n    return super.computeOutputVertices(vertices)\n  }\n}\n","import Exporter from './Exporter'\nimport { path } from 'd3'\n\nconst svgTrim = (svgString) => {\n  // Based on the svg trim method from msurguy (MIT):\n  //    https://github.com/msurguy/svg-file-downloader/blob/7d3409f60ca58fef90003f24bae2a85fdf324eb3/svg-file-downloader.js#L9\n  svgString = svgString.replace(/([+]?\\d*\\.\\d{3,}([eE][+]?\\d+)?)/g, function (x) {\n    return (+x).toFixed(2)\n  })\n  return svgString\n}\n\nexport default class SvgExporter extends Exporter {\n  constructor(props) {\n    super(props)\n    this.fileExtension = '.svg'\n    this.label = 'SVG'\n    this.indentLevel = 2\n  }\n\n  exportCode(vertices) {\n    var centeredVertices = vertices.map( (vertex) => {\n      return {\n        ...vertex,\n        x: vertex.x + this.props.width / 2,\n        y: this.props.height - (vertex.y + this.props.height / 2),\n      }\n    })\n\n    let svg = path()\n    if (centeredVertices.length > 0) {\n      const firstPoint = centeredVertices[0]\n      svg.moveTo(firstPoint.x, firstPoint.y)\n    }\n    centeredVertices.forEach(vertex => svg.lineTo(vertex.x, vertex.y))\n    this.line(\"    <desc>pwidth:\" + this.props.width + \";pheight:\" + this.props.height + \";</desc>\")\n    this.line(\"    <path\")\n    this.line(\"       stroke=\\\"#000000\\\"\")\n    this.line(\"       stroke-width=\\\"0.4mm\\\"\")\n    this.line(\"       fill=\\\"none\\\"\")\n    this.line(\"       d=\\\"\" + svgTrim(svg.toString()) + \"\\\"/>\")\n  }\n\n  header() {\n    this.line(\"<?xml version=\\\"1.0\\\" standalone=\\\"no\\\"?>\")\n    this.line(\"<!DOCTYPE svg PUBLIC \\\"-//W3C//DTD SVG 1.1//EN\\\" \\\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\\\">\")\n    this.line(\"<svg width=\\\"\" + this.props.width + \"\\\"\" +\n                  \" height=\\\"\" + this.props.height + \"\\\"\" +\n                  \" title=\\\"polygons\\\"\" +\n                  \" version=\\\"1.1\\\"\" +\n                  \" viewBox=\\\"0 0 \" + this.props.width + \" \" + this.props.height + \"\\\"\" +\n                  \" xmlns=\\\"http://www.w3.org/2000/svg\\\"\" +\n                  \" class=\\\"svg-paper\\\">\")\n\n    this.line(\"  <g>\")\n  }\n\n  footer() {\n    this.line(\"  </g>\")\n    this.line(\"</svg>\")\n  }\n\n  line(content='', add=true) {\n    if (add) {\n      let padding = ''\n      if (this.commenting) {\n        padding = ''\n        for (let i=0; i<this.indentLevel; i++) {\n          padding += '  '\n        }\n        if (content) {\n          this.lines.push(padding + \"<!-- \" + content + \" -->\")\n        } else {\n          this.lines.push(\"\")\n        }\n      } else {\n        this.lines.push(content)\n      }\n    }\n  }\n}\n","import Exporter from './Exporter'\nimport { subsample, toThetaRho } from '../../common/geometry'\n\nfunction thetarho(vertex) {\n  return '' + vertex.x.toFixed(5) + ' ' + vertex.y.toFixed(5)\n}\n\nexport default class ThetaRhoExporter extends Exporter {\n  constructor(props) {\n    super(props)\n    this.fileExtension = '.thr'\n    this.label = 'ThetaRho'\n    this.commentChar = '#'\n  }\n\n  // computes vertices compatible with the theta rho format, and replaces\n  // placeholder variables in pre/post blocks.\n  computeOutputVertices(vertices) {\n    // First, downsample larger lines into smaller ones.\n    const maxLength = 2.0\n    const subsampledVertices = subsample(vertices, maxLength)\n\n    // Convert to theta, rho\n    this.vertices = toThetaRho(subsampledVertices, this.props.maxRadius, parseFloat(this.props.polarRhoMax))\n\n    let starttheta = this.vertices[0].x\n    let startrho   = this.vertices[0].y\n    let endtheta   = this.vertices[this.vertices.length-1].x\n    let endrho     = this.vertices[this.vertices.length-1].y\n    let mintheta = 1e9\n    let minrho   = 1e9\n    let maxtheta = -1e9\n    let maxrho   = -1e9\n\n    this.vertices.forEach( thetarho => {\n      minrho = Math.min(thetarho.y, minrho)\n      maxrho = Math.max(thetarho.y, maxrho)\n      mintheta = Math.min(thetarho.x, mintheta)\n      maxtheta = Math.max(thetarho.x, maxtheta)\n    })\n\n    // Replace pre/post placeholder variables\n    this.pre  =  this.pre.replace(/{starttheta}/gi, starttheta.toFixed(3))\n    this.pre  =  this.pre.replace(/{startrho}/gi,   startrho.toFixed(3))\n    this.pre  =  this.pre.replace(/{endtheta}/gi,   endtheta.toFixed(3))\n    this.pre  =  this.pre.replace(/{endrho}/gi,     endrho.toFixed(3))\n    this.pre  =  this.pre.replace(/{mintheta}/gi,   mintheta.toFixed(3))\n    this.pre  =  this.pre.replace(/{minrho}/gi,     minrho.toFixed(3))\n    this.pre  =  this.pre.replace(/{maxtheta}/gi,   maxtheta.toFixed(3))\n    this.pre  =  this.pre.replace(/{maxrho}/gi,     maxrho.toFixed(3))\n    this.post = this.post.replace(/{starttheta}/gi, starttheta.toFixed(3))\n    this.post = this.post.replace(/{startrho}/gi,   startrho.toFixed(3))\n    this.post = this.post.replace(/{endtheta}/gi,   endtheta.toFixed(3))\n    this.post = this.post.replace(/{endrho}/gi,     endrho.toFixed(3))\n    this.post = this.post.replace(/{mintheta}/gi,   mintheta.toFixed(3))\n    this.post = this.post.replace(/{minrho}/gi,     minrho.toFixed(3))\n    this.post = this.post.replace(/{maxtheta}/gi,   maxtheta.toFixed(3))\n    this.post = this.post.replace(/{maxrho}/gi,     maxrho.toFixed(3))\n  }\n\n  exportCode(vertices) {\n    vertices.map(thetarho).forEach(line => this.line(line))\n  }\n}\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Button, Modal, Col, Row } from 'react-bootstrap'\nimport DropdownOption from '../../components/DropdownOption'\nimport InputOption from '../../components/InputOption'\nimport CheckboxOption from '../../components/CheckboxOption'\nimport { updateExporter } from './exporterSlice'\nimport { getComments } from './selectors'\nimport { getAllComputedVertices } from '../machine/selectors'\nimport ReactGA from 'react-ga'\nimport GCodeExporter from './GCodeExporter'\nimport ScaraGCodeExporter from './ScaraGCodeExporter'\nimport SvgExporter from './SvgExporter'\nimport ThetaRhoExporter from './ThetaRhoExporter'\nimport { Exporter, GCODE, THETARHO, SVG, SCARA } from '../../models/Exporter'\n\nconst exporters = {\n  [GCODE]: GCodeExporter,\n  [THETARHO]: ThetaRhoExporter,\n  [SVG]: SvgExporter,\n  [SCARA]: ScaraGCodeExporter\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    reverse: state.exporter.reverse,\n    show: state.exporter.show,\n    vertices: getAllComputedVertices(state),\n    comments: getComments(state),\n    input: state.app.input,\n    layer: state.layers.current,\n    offsetX: (state.machine.rectangular ? (state.machine.minX + state.machine.maxX) / 2.0 : state.machine.maxRadius),\n    offsetY: (state.machine.rectangular ? (state.machine.minY + state.machine.maxY) / 2.0 : state.machine.maxRadius),\n    width:   (state.machine.rectangular ? (state.machine.maxX - state.machine.minX) : (2.0 * state.machine.maxRadius)),\n    height:  (state.machine.rectangular ? (state.machine.maxY - state.machine.minY) : (2.0 * state.machine.maxRadius)),\n    maxRadius: (state.machine.rectangular ?\n      Math.sqrt(Math.pow(state.machine.maxX - state.machine.minX, 2.0) +\n                Math.pow(state.machine.maxY - state.machine.minY, 2.0)) :\n      state.machine.maxRadius),\n    fileName: state.exporter.fileName,\n    fileType: state.exporter.fileType,\n    isGCode: state.exporter.fileType === GCODE || state.exporter.fileType === SCARA,\n    polarRhoMax: state.exporter.polarRhoMax,\n    unitsPerCircle: state.exporter.unitsPerCircle,\n    pre: (state.exporter.fileType !== SVG ? state.exporter.pre : ''),\n    post: (state.exporter.fileType !== SVG ? state.exporter.post : ''),\n    options: new Exporter().getOptions()\n  }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    open: () => {\n      dispatch(updateExporter({show: true}))\n    },\n    close: () => {\n      dispatch(updateExporter({show: false}))\n    },\n    onChange: (attrs) => {\n      dispatch(updateExporter(attrs))\n    },\n  }\n}\n\nclass Downloader extends Component {\n  // Record this event to google analytics.\n  gaRecord(fileType) {\n    let savedCode = 'Saved: ' + this.props.input\n    if (this.props.input === 'shape' || this.props.input === 'Shape') {\n      savedCode = savedCode + ': ' + this.props.layer\n    }\n    ReactGA.event({\n      category: fileType,\n      action: savedCode,\n    })\n  }\n\n  download() {\n    let exporter = new exporters[this.props.fileType](this.props)\n    let startTime = performance.now()\n    let fileName = this.props.fileName\n\n    exporter.export()\n\n    if (!fileName.includes('.')) {\n      fileName += exporter.fileExtension\n    }\n\n    this.gaRecord(exporter.label)\n    this.downloadFile(fileName, exporter.lines.join(\"\\n\"))\n    this.props.close()\n\n    let endTime = performance.now()\n    ReactGA.timing({\n      category: exporter.label,\n      variable: 'Save Code',\n      value: endTime - startTime, // in milliseconds\n    })\n  }\n\n  // Helper function to take a string and make the user download a text file with that text as the\n  // content. I don't really understand this, but I took it from here, and it seems to work:\n  // https://stackoverflow.com/a/18197511\n  downloadFile(fileName, text) {\n    let link = document.createElement('a')\n    link.download = fileName\n\n    let fileType = 'text/plain;charset=utf-8'\n    if (this.props.fileType === SVG) {\n      fileType = 'image/svg+xml;charset=utf-8'\n    }\n    let blob = new Blob([text],{type: fileType})\n\n    // Windows Edge fix\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n      window.navigator.msSaveOrOpenBlob(blob, fileName)\n    } else {\n      link.href = URL.createObjectURL(blob)\n      if (document.createEvent) {\n        var event = document.createEvent('MouseEvents')\n        event.initEvent('click', true, true)\n        link.dispatchEvent(event)\n      } else {\n        link.click()\n      }\n      URL.revokeObjectURL(link.href)\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Button className=\"ml-2 mr-3\" variant=\"primary\" onClick={this.props.open}>Export</Button>\n        <Modal size=\"lg\" show={this.props.show} onHide={this.props.close}>\n          <Modal.Header closeButton>\n            <Modal.Title>Export to a file</Modal.Title>\n          </Modal.Header>\n\n          <Modal.Body>\n            <DropdownOption\n              onChange={this.props.onChange}\n              options={this.props.options}\n              optionKey=\"fileType\"\n              key=\"fileType\"\n              index={0}\n              model={this.props} />\n\n            {this.props.fileType === SCARA &&\n              <Row>\n                <Col sm={5}>\n                </Col>\n                <Col sm={7} className=\"mb-2\">\n                  <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/jeffeb3/sandify/wiki/Scara-GCode\">Read more</a> about SCARA GCode.\n                </Col>\n              </Row>\n            }\n\n            <InputOption\n              onChange={this.props.onChange}\n              options={this.props.options}\n              key=\"fileName\"\n              optionKey=\"fileName\"\n              index={1}\n              model={this.props} />\n\n            {(this.props.fileType === THETARHO || this.props.fileType === SCARA ) && <InputOption\n              onChange={this.props.onChange}\n              options={this.props.options}\n              key=\"polarRhoMax\"\n              optionKey=\"polarRhoMax\"\n              index={2}\n              model={this.props} />}\n\n            {this.props.fileType === SCARA && <InputOption\n              onChange={this.props.onChange}\n              options={this.props.options}\n              key=\"unitsPerCircle\"\n              optionKey=\"unitsPerCircle\"\n              index={2}\n              model={this.props} />}\n\n            <InputOption\n              onChange={this.props.onChange}\n              options={this.props.options}\n              key=\"pre\"\n              optionKey=\"pre\"\n              index={3}\n              model={this.props} />\n\n            <InputOption\n              onChange={this.props.onChange}\n              options={this.props.options}\n              key=\"post\"\n              optionKey=\"post\"\n              index={4}\n              model={this.props} />\n\n            <Row>\n              <Col sm={5}>\n              </Col>\n              <Col sm={7}>\n                See <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/jeffeb3/sandify/wiki#export-variables\"> the wiki </a> for details on available program export variables.\n              </Col>\n            </Row>\n\n            <div className=\"mt-2\">\n              <CheckboxOption\n                onChange={this.props.onChange}\n                options={this.props.options}\n                optionKey=\"reverse\"\n                key=\"reverse\"\n                index={5}\n                model={this.props} />\n            </div>\n          </Modal.Body>\n\n          <Modal.Footer>\n            <Button id=\"code-close\" variant=\"link\" onClick={this.props.close}>Close</Button>\n            <Button id=\"code-download\" variant=\"primary\" onClick={this.download.bind(this)}>Download</Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    )\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Downloader)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Slider from 'rc-slider'\nimport 'rc-slider/assets/index.css'\nimport PreviewWindow from './PreviewWindow'\nimport Downloader from '../exporter/Downloader'\nimport { getCurrentLayer } from '../layers/selectors'\nimport { updateLayer } from '../layers/layersSlice'\nimport { updatePreview } from './previewSlice'\nimport { getVerticesStats } from '../machine/selectors'\nimport './MachinePreview.scss'\n\nconst mapStateToProps = (state, ownProps) => {\n  const current = getCurrentLayer(state)\n\n  return {\n    currentLayer: current,\n    currentLayerSelected: state.layers.selected === current.id,\n    sliderValue: state.preview.sliderValue,\n    verticesStats: getVerticesStats(state),\n  }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    onSlider: (value) => {\n      dispatch(updatePreview({sliderValue: value}))\n    },\n    onLayerChange: (attrs) => {\n      dispatch(updateLayer(attrs))\n    },\n    onKeyDown: (event, currentLayer) => {\n      let attrs = { id: currentLayer.id }\n\n      if (currentLayer.canMove) {\n        if (['ArrowDown', 'ArrowUp', 'ArrowLeft', 'ArrowRight'].includes(event.key)) {\n          const delta = !!event.shiftKey ? 1 : 5\n\n          if (event.key === 'ArrowDown') {\n            attrs.offsetY = currentLayer.offsetY - delta\n          } else if (event.key === 'ArrowUp') {\n            attrs.offsetY = currentLayer.offsetY + delta\n          } else if (event.key === 'ArrowLeft') {\n            attrs.offsetX = currentLayer.offsetX - delta\n          } else if (event.key === 'ArrowRight') {\n            attrs.offsetX = currentLayer.offsetX + delta\n          }\n\n          dispatch(updateLayer(attrs))\n        }\n      }\n    }\n  }\n}\n\nclass MachinePreview extends Component {\n  componentDidMount() {\n    // ensures that arrow keys always work\n    this.el.focus()\n  }\n\n  render() {\n    return (\n      <div className=\"machine-preview d-flex flex-grow-1 flex-column\" id=\"machine-preview\" ref={(el) => { this.el = el }} tabIndex={0} onKeyDown={e => {\n        if (this.props.currentLayerSelected) {\n          this.props.onKeyDown(e, this.props.currentLayer)\n        }\n      }}>\n        <div className=\"flex-grow-1 d-flex flex-column\">\n          <div id=\"preview-wrapper\" className=\"preview-wrapper d-flex flex-column align-items-center\">\n            <PreviewWindow />\n          </div>\n\n          <div className=\"mt-auto pt-2 bg-white d-flex align-items-center\">\n            <div className=\"flex-grow-1\">\n              <div className=\"mx-2\">\n                Points: {this.props.verticesStats.numPoints}, Distance: {this.props.verticesStats.distance}\n              </div>\n\n              <div className=\"p-3\">\n                  <Slider\n                    value={this.props.sliderValue}\n                    step={1}\n                    min={0.0}\n                    max={100.0}\n                    onChange={this.props.onSlider}\n                  />\n              </div>\n            </div>\n            <Downloader />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MachinePreview)\n","import { configureStore } from \"@reduxjs/toolkit\"\nimport { combineReducers } from 'redux'\nimport appReducer from './appSlice'\nimport machineReducer from '../machine/machineSlice'\nimport exporterReducer from '../exporter/exporterSlice'\nimport previewReducer from '../preview/previewSlice'\nimport { registeredShapes } from '../../models/shapes'\nimport { loadState, saveState } from '../../common/localStorage'\nimport layersReducer, { setCurrentLayer, addLayer } from '../layers/layersSlice'\n\n//const customizedMiddleware = getDefaultMiddleware({\n//  immutableCheck: {\n//    ignoredPaths: ['importer.vertices']\n//  },\n//  serializableCheck: {\n//    ignoredPaths: ['importer.vertices']\n//  }\n//})\n\nconst store = configureStore({\n  reducer: combineReducers({\n    app: appReducer,\n    layers: layersReducer,\n    exporter: exporterReducer,\n    machine: machineReducer,\n    preview: previewReducer\n  })\n})\n\n// set to true when running locally if you want to preserve your shape\n// settings across page loads; don't forget to toggle false when done testing!\nconst persistState = false\n\n// if you want to save a multiple temporary states, use these keys. The first time\n// you save a new state, change persistSaveKey. Make a change, then change\n// persistInitKey to the same value. It's like doing a \"save as\"\nconst persistInitKey = 'state'\nconst persistSaveKey = 'state'\n\n// never persist state when running within a jest spec\nif (process.env.JEST_WORKER_ID === undefined && persistState) {\n  // override default values with saved ones\n  const persistedState = loadState(persistInitKey)\n\n  if (persistedState) {\n    persistedState.layers.allIds.forEach((id) => {\n      let layer = persistedState.layers.byId[id]\n\n      if (layer.startingWidth === undefined) layer.startingWidth = layer.startingSize\n      if (layer.startingHeight === undefined) layer.startingHeight = layer.startingWidth\n      if (layer.autosize === undefined) layer.autosize = true\n\n      store.dispatch(addLayer(layer))\n    })\n    store.dispatch(setCurrentLayer(persistedState.layers.current))\n  }\n} else {\n  const storedShape = localStorage.getItem('currentShape')\n  const currentShape = storedShape && registeredShapes[storedShape] ? storedShape : 'polygon'\n  const layer = registeredShapes[currentShape].getInitialState()\n\n  store.dispatch(addLayer(layer))\n\n  const state = store.getState()\n  store.dispatch(setCurrentLayer(state.layers.byId[state.layers.allIds[0]].id))\n}\n\nif (persistState) {\n  store.subscribe(() => {\n    const state = store.getState()\n\n    saveState({ layers: state.layers }, persistSaveKey)\n  })\n}\n\nexport default store\n","import React, { Component } from 'react'\nimport { Col, Row } from 'react-bootstrap'\nimport { Provider } from 'react-redux'\nimport Header from './Header'\nimport InputTabs from './InputTabs'\nimport MachinePreview from '../preview/MachinePreview'\nimport store from './store'\nimport './App.scss'\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <div className=\"App\">\n          <Header />\n\n          <main>\n            <Row className=\"no-gutters\">\n              <Col className=\"full-page d-flex flex-column\">\n                <MachinePreview />\n              </Col>\n\n              <div id=\"sidebar\">\n                <InputTabs />\n              </div>\n            </Row>\n          </main>\n        </div>\n      </Provider>\n    )\n  }\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './features/app/reactGA'\nimport App from './features/app/App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}