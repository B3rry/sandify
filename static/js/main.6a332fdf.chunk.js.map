{"version":3,"sources":["App/logo.svg","reducers/App.js","reducers/File.js","reducers/GCode.js","reducers/Machine.js","reducers/Shapes.js","reducers/Transform.js","reducers/Wiper.js","App/Header.js","App/Documentation.js","Geometry.js","inputs/Vicious1Vertices.js","inputs/Fonts.js","inputs/Transforms.js","inputs/Wiper.js","inputs/ThetaRho.js","inputs/InputTabs.js","machine/MachineSettings.js","machine/LimitEnforcer.js","inputs/Computer.js","machine/MachinePreview.js","machine/GCode.js","App/App.js","index.js"],"names":["module","exports","__webpack_require__","p","defaultState","sandifyVersion","input","reverse","canvas_width","canvas_height","machineSlider","machineRectExpanded","machinePolarExpanded","showGCode","name","comments","vertices","zoom","aspectRatio","filename","pre","localStorage","getItem","post","rectangular","undefined","min_x","parseFloat","max_x","min_y","max_y","max_radius","rectOrigin","polarEndpoints","shapes","currentShape","polygonSides","starPoints","starRatio","circleLobes","reuleauxSides","inputText","startingSize","epicycloidA","epicycloidB","hypocycloidA","hypocycloidB","roseN","roseD","xformOffsetX","xformOffsetY","numLoops","growEnabled","growValue","spinEnabled","spinValue","spinSwitchbacks","trackEnabled","trackGrowEnabled","trackValue","trackLength","trackGrow","angleDeg","size","Header","react_default","a","createElement","className","src","logo","alt","Component","Documentation","href","Vertex","x","y","f","arguments","length","Vicious1Vertices","billsey"," ","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","0","1","2","3","4","5","6","7","8","9","$",".","curve","Object","toConsumableArray","Array","keys","map","index","angle","Math","PI","cos","sin","billseyConverter","newVertices","prevPoint","forEach","vertex","push","width","abs","height","concat","cv","Font2","ch","upper","toUpperCase","hasOwnProperty","disableEnter","event","key","shiftKey","preventDefault","Shape","activeClassName","this","props","active","options_render","options","option","react_bootstrap_es","controlId","title","componentClass","ControlLabel","sm","type","step","value","onChange","onKeyDown","options_list_render","collapsible","expanded","horizontal","target","rel","link","onClick","clicked","ShapeList","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","addShape","state","points","i","onPolygonSizeChange","star_points","star_scale","onStarPointsChange","onStarRatioChange","circle_points","onCircleLobesChange","heart_points","pow","corners","coverageAngle","halfCoverageAngle","c","startAngle","corn","onReuleauxSidesChange","b","onepicycloidAChange","onepicycloidBChange","onhypocycloidAChange","onhypocycloidBChange","n","parseInt","d","thetaClose","resolution","theta","r","onRoseNChange","onRoseDChange","chi","letter","vi","widthOffset","point","onInputTextChange","self","shape_render","shape","Transforms_Shape","setShape","onSizeChange","x_offset","onOffsetXChange","y_offset","onOffsetYChange","connect","ownProps","transform","dispatch","min","max","offset","RotationTransform","header","activeCallback","switchbacks","onSwitchbacksChange","ScaleTransform","TrackTransform","activeGrowClassName","activeGrow","onChangeLength","activeGrowCallback","onChangeGrow","Transforms","Transforms_ShapeList","loops","changeLoops","Transforms_ScaleTransform","Transforms_RotationTransform","Transforms_TrackTransform","Wiper","changeAngle","changeSize","wiper","ThetaRho","aspectRatioActive","htmlFor","style","cursor","id","accept","setVertices","display","join","setZoom","toggleAspectRatio","file","parseThrFile","rv","reader","FileReader","onload","lines","result","split","has_vertex","ii","line","trim","indexOf","pointStrings","console","log","thetaRhos","previous","max_angle","next","deltaAngle","rhoStep","rho","emergency_break","convertToXY","readAsText","files","InputTabs","defaultActiveKey","onSelect","handleSelect","bind","eventKey","src_inputs_Transforms","inputs_Wiper","src_inputs_ThetaRho","RectSettings","smOffset","onMinXChange","onMaxXChange","onMinYChange","onMaxYChange","origin","onOriginChange","app","machine","setItem","setMachineRectOrigin","PolarSettings","endpointsActiveClass","endpoints","onMaxRadiusChange","toggleEndpoints","MachineSettings","MachineSettings_RectSettings","MachineSettings_PolarSettings","pointLocation","size_x","size_y","location","intersection","line_start","line_end","side_start","side_end","clone","subtract","side","lineCrossSidePerp","diff","t","u","add","multiply","Victor","clipLine","quadrant_start","quadrant_end","nearestVertex","boundPoint","sides","intersections","s","int_point","fromObject","Error","lengthSq","temp","midpoint","good","bad","dx","dy","fixed","distance","traceCircle","start","end","endAngle","tracePoints","onSegment","clipLineCircle","rad_start","magnitude","rad_end","nearestVertexCircle","direction","normalize","distanceToLine","dt","sqrt","point1","point2","on","getIntersections","other_point","scale","scale_perc","data","fraction_index","transformed_vertex","offset_x","offset_y","loop_period","spin_amount","angle_deg","rotate","loop_index","radius","track","outOfBounds","nearEnough","polishVertices","outPoint","first","last","vFirst","vLast","objectSpread","nextCorner","unshift","cleanVertices","pt","cleanerVertices","enforceRectLimits","enforcePolarLimits","outputVertices","startLocation","cosa","sina","orig_delta_w","orig_delta_h","delta_w","delta_h","endLocation","nextWidthPoint","nextHeightPoint","corner","getVertices","createSelector","wiperState","findShape","num_loops","j","fraction","transformShapes","x_scale","y_scale","thetaRho","getVerticesStats","numPoints","floor","getTrackVertices","trackVertices","PreviewWindow","canvas","ReactDOM","findDOMNode","context","getContext","bigBox","document","getElementById","resize","window","addEventListener","paint","clearRect","machine_x","machine_y","use_rect","scale_x","scale_y","min_scale","mmToPixelsScale","in_mm","mmToPixels","moveTo","lineTo","arc","fillStyle","strokeStyle","fill","sliderValue","begin_fraction","end_fraction","begin_vertex","round","end_vertex","slice","save","beginPath","lineWidth","moveTo_mm","lineTo_mm","stroke","drawing_vertices","slice_vertices","dot_mm","showTrack","restore","getComputedStyle","getPropertyValue","onResize","_this$props","MachinePreview","MachinePreview_PreviewWindow","verticesStats","rc_slider_es","onSlider","src_machine_MachineSettings","setMachineSlider","setShowGCode","download","text","pom","setAttribute","encodeURIComponent","createEvent","initEvent","dispatchEvent","click","gcode","command","toFixed","speed","thetarho","getComments","shapeName","find","GCodeGenerator","content","settings","xOffset","yOffset","includes","close","subsampledVertices","delta","deltaSegment","trVertices","previousTheta","previousRawTheta","rawTheta","atan2","deltaTheta","reverseActiveClass","bsStyle","bsSize","open","show","onHide","closeButton","Title","Body","setFilename","setPre","setPost","toggleReverse","Footer","generateGCode","generateThetaRho","store","createStore","combineReducers","action","comment","newValue","App","react_redux_es","src_App_Header","src_inputs_InputTabs","src_machine_MachinePreview","machine_GCode","src_App_Documentation","render","src_App_App"],"mappings":"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B,cACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,aAAe,eACtBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,YAAc,cACrBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,aACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,cACvBA,EAAO,cAAgB,cACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,cACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,aAAe,eACtBA,EAAO,aAAe,eACtBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,cACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,cACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,cACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,aAAe,eACtBA,EAAO,cAAgB,eACvBA,EAAO,aAAe,eACtBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,cACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,gBACvBA,EAAO,cAAgB,gBACvBA,EAAO,cAAgB,gBACvBA,EAAO,aAAe,gBACtBA,EAAO,cAAgB,kBACvBA,EAAO,eAAiB,gBACxBA,EAAO,eAAiB,gBACxBA,EAAO,eAAiB,gBACxBA,EAAO,eAAiB,gBACxBA,EAAO,cAAgB,eACvBA,EAAO,eAAiB,eACxBA,EAAO,cAAgB,eACvBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,cACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,cAAgB,cACvBA,EAAO,aAAe,eACtBA,EAAO,cAAgB,eACvBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,cAAgB,eACvBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,cACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,cAAgB,eACvBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,cACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,cACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,cACxBA,EAAO,cAAgB,eACvBA,EAAO,eAAiB,aACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,cACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,cACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,cACvBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,gBAAkB,cACzBA,EAAO,gBAAkB,eACzBA,EAAO,gBAAkB,eACzBA,EAAO,gBAAkB,eACzBA,EAAO,gBAAkB,eACzBA,GAAQ,iBAAmB,eAC3BA,GAAQ,gBAAkB,eAC1BA,GAAQ,gBAAkB,eAC1BA,GAAQ,gBAAkB,eAC1BA,GAAQ,gBAAkB,cAC1BA,GAAQ,gBAAkB,eAC1BA,GAAQ,eAAiB,cACzBA,GAAQ,eAAiB,eACzBA,GAAQ,eAAiB,eACzBA,GAAQ,eAAiB,eACzBA,GAAQ,eAAiB,eACzBA,GAAQ,eAAiB,eACzBA,GAAQ,eAAiB,eACzBA,GAAQ,eAAiB,eACzBA,GAAQ,eAAiB,eACzBA,GAAQ,cAAgB,eACxBA,GAAQ,eAAiB,cACzBA,GAAQ,eAAiB,eACzBA,GAAQ,eAAiB,eACzBA,GAAQ,eAAiB,eACzBA,GAAQ,eAAiB,eACzBA,GAAQ,eAAiB,eACzBA,GAAQ,eAAiB,cACzBA,GAAQ,eAAiB,eACzBA,GAAQ,eAAiB,eACzBA,GAAQ,eAAiB,eACzBA,GAAQ,eAAiB,eACzBA,GAAQ,eAAiB,eACzBA,GAAQ,eAAiB,eACzBA,GAAQ,eAAiB,eACzBA,GAAQ,eAAiB,eACzBA,GAAQ,cAAgB,eACxBA,GAAQ,eAAiB,eACzBA,GAAQ,eAAiB,cACzBA,GAAQ,eAAiB,eACzBA,GAAQ,eAAiB,aACzBA,GAAQ,eAAiB,eACzBA,GAAQ,eAAiB,cACzBA,GAAQ,eAAiB,cACzBA,GAAQ,eAAiB,cACzBA,GAAQ,eAAiB,cACzBA,GAAQ,eAAiB,eACzBA,GAAQ,cAAgB,eACxBA,GAAQ,eAAiB,eACzBA,GAAQ,eAAiB,eACzBA,GAAQ,cAAgB,eACxBA,GAAQ,eAAiB,eACzBA,GAAQ,eAAiB,eACzBA,GAAQ,eAAiB,eACzBA,GAAQ,eAAiB,eACzBA,GAAQ,eAAiB,cACzBA,GAAQ,eAAiB,eACzBA,GAAQ,eAAiB,eACzBA,GAAQ,eAAiB,cACzBA,GAAQ,eAAiB,eACzBA,GAAQ,eAAiB,eACzBA,GAAQ,eAAiB,eACzBA,GAAQ,eAAiB,eACzBA,GAAQ,eAAiB,eACzBA,GAAQ,eAAiB,eACzBA,GAAQ,eAAiB,eACzBA,GAAQ,eAAiB,eACzBA,GAAQ,eAAiB,eACzBA,GAAQ,eAAiB,cACzBA,GAAQ,eAAiB,eACzBA,GAAQ,eAAiB,eACzBA,GAAQ,cAAgB,eACxBA,GAAQ,eAAiB,cACzBA,GAAQ,eAAiB,eACzBA,GAAQ,eAAiB,gBACzBA,GAAQ,cAAgB,iBACxBA,GAAQ,aAAe,gBACvBA,GAAQ,cAAgB,gBACxBA,GAAQ,cAAgB,gBACxBA,GAAQ,cAAgB,eACxBA,GAAQ,cAAgB,eACxBA,GAAQ,cAAgB,eACxBA,GAAQ,cAAgB,eACxBA,GAAQ,cAAgB,eACxBA,GAAQ,cAAgB,eACxBA,GAAQ,cAAgB,eACxBA,GAAQ,cAAgB,eACxBA,GAAQ,cAAgB,eACxBA,GAAQ,cAAgB,eACxBA,GAAQ,cAAgB,eACxBA,GAAQ,cAAgB,eACxBA,GAAQ,aAAe,eACvBA,GAAQ,cAAgB,eACxBA,GAAQ,cAAgB,eACxBA,GAAQ,cAAgB,cACxBA,GAAQ,cAAgB,eACxBA,GAAQ,cAAgB,eACxBA,GAAQ,cAAgB,eACxBA,GAAQ,cAAgB,eACxBA,GAAQ,cAAgB,eACxBA,GAAQ,cAAgB,eACxBA,GAAQ,cAAgB,eACxBA,GAAQ,cAAgB,eACxBA,GAAQ,cAAgB,eACxBA,GAAQ,cAAgB,eACxBA,GAAQ,cAAgB,eACxBA,GAAQ,cAAgB,eACxBA,GAAQ,aAAe,eACvBA,GAAQ,cAAgB,eACxBA,GAAQ,aAAe,cACvBA,GAAQ,cAAgB,eACxBA,GAAQ,cAAgB,eACxBA,GAAQ,aAAe,cACvBA,GAAQ,cAAgB,eACxBA,GAAQ,cAAgB,eACxBA,GAAQ,cAAgB,eACxBA,GAAQ,cAAgB,eACxBA,GAAQ,cAAgB,eACxBA,GAAQ,cAAgB,eACxBA,GAAQ,cAAgB,eACxBA,GAAQ,cAAgB,eACxBA,GAAQ,cAAgB,eACxBA,GAAQ,cAAgB,eACxBA,GAAQ,cAAgB,eACxBA,GAAQ,cAAgB,eACxBA,GAAQ,cAAgB,iBC5ZxBO,EAAU,CACZC,IAAK,CAAE,CAAC,GAAG,EAAE,IACbC,EAAK,CAAE,CAAC,EAAE,EAAE,GAAI,CAAC,IAAI,EAAE,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,EAAE,IAAI,GAAI,CAAC,EAAE,IAAI,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,GAAG,EAAE,GAAI,CAAC,GAAG,EAAE,IACnFC,EAAK,CAAE,CAAC,EAAE,EAAE,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,IAAI,EAAE,GAAI,CAAC,EAAE,KAAK,GAAI,CAAC,IAAI,IAAI,GAAI,CAAC,EAAE,IAAI,GAAI,CAAC,IAAI,IAAI,GAAI,CAAC,EAAE,KAAK,GAAI,CAAC,IAAI,EAAE,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,GAAG,EAAE,GAAI,CAAC,GAAG,EAAE,IACrIC,EAAK,CAAE,CAAC,KAAK,EAAE,GAAI,CAAC,IAAI,EAAE,GAAI,CAAC,EAAE,IAAI,GAAI,CAAC,IAAI,EAAE,GAAI,CAAC,EAAE,KAAK,GAAI,CAAC,IAAI,EAAE,GAAI,CAAC,EAAE,IAAI,GAAI,CAAC,IAAI,EAAE,GAAI,CAAC,EAAE,KAAK,GAAI,CAAC,IAAI,EAAE,GAAI,CAAC,KAAK,EAAE,GAAI,CAAC,GAAG,EAAE,IAC1IC,EAAK,CAAE,CAAC,EAAE,EAAE,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,IAAI,EAAE,GAAI,CAAC,EAAE,IAAI,GAAI,CAAC,IAAI,EAAE,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,GAAG,EAAE,GAAI,CAAC,GAAG,EAAE,IACnFC,EAAK,CAAE,CAAC,EAAE,EAAE,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,EAAE,IAAI,GAAI,CAAC,IAAI,IAAI,GAAI,CAAC,EAAE,IAAI,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,GAAG,EAAE,GAAI,CAAC,GAAG,EAAE,IACzHC,EAAK,CAAE,CAAC,EAAE,EAAE,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,EAAE,IAAI,GAAI,CAAC,IAAI,IAAI,GAAI,CAAC,EAAE,IAAI,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,GAAG,EAAE,GAAI,CAAC,GAAG,EAAE,IACvGC,EAAK,CAAE,CAAC,KAAK,EAAE,GAAI,CAAC,IAAI,EAAE,GAAI,CAAC,EAAE,IAAI,GAAI,CAAC,IAAI,EAAE,GAAI,CAAC,EAAE,KAAK,GAAI,CAAC,IAAI,EAAE,GAAI,CAAC,EAAE,IAAI,GAAI,CAAC,IAAI,EAAE,GAAI,CAAC,EAAE,KAAK,GAAI,CAAC,KAAK,KAAK,GAAI,CAAC,EAAE,KAAK,GAAI,CAAC,IAAI,EAAE,GAAI,CAAC,KAAK,EAAE,GAAI,CAAC,GAAG,EAAE,IACrKC,EAAK,CAAE,CAAC,EAAE,EAAE,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,EAAE,IAAI,GAAI,CAAC,EAAE,IAAI,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,EAAE,IAAI,GAAI,CAAC,EAAE,IAAI,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,GAAG,EAAE,GAAI,CAAC,GAAG,EAAE,IAChHC,EAAK,CAAE,CAAC,KAAK,EAAE,GAAI,CAAC,IAAI,EAAE,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,IAAI,EAAE,GAAI,CAAC,IAAI,EAAE,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,IAAI,EAAE,GAAI,CAAC,KAAK,EAAE,GAAI,CAAC,GAAG,EAAE,IACrHC,EAAK,CAAE,CAAC,KAAK,EAAE,GAAI,CAAC,IAAI,EAAE,GAAI,CAAC,EAAE,KAAK,GAAI,CAAC,IAAI,EAAE,GAAI,CAAC,EAAE,KAAK,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,EAAE,KAAK,GAAI,CAAC,IAAI,EAAE,GAAI,CAAC,KAAK,EAAE,GAAI,CAAC,GAAG,EAAE,IACnHC,EAAK,CAAE,CAAC,EAAE,EAAE,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,EAAE,KAAK,GAAI,CAAC,IAAI,IAAI,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,IAAI,IAAI,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,IAAI,IAAI,GAAI,CAAC,EAAE,KAAK,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,GAAG,EAAE,GAAI,CAAC,GAAG,EAAE,IACnIC,EAAK,CAAE,CAAC,EAAE,EAAE,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,GAAG,EAAE,GAAI,CAAC,GAAG,EAAE,IACpEC,EAAK,CAAE,CAAC,EAAE,EAAE,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,IAAI,EAAE,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,IAAI,EAAE,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,GAAG,EAAE,GAAI,CAAC,GAAG,EAAE,IAC5GC,EAAK,CAAE,CAAC,EAAE,EAAE,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,GAAG,EAAE,GAAI,CAAC,GAAG,EAAE,IACtFC,EAAK,CAAE,CAAC,KAAK,EAAE,GAAI,CAAC,IAAK,EAAG,GAAI,CAAC,EAAG,IAAK,GAAI,CAAC,IAAK,EAAG,GAAI,CAAC,EAAK,IAAK,GAAI,CAAC,IAAK,EAAG,GAAI,CAAC,KAAM,EAAG,GAAI,CAAC,GAAI,EAAG,IAC5GC,EAAK,CAAE,CAAC,EAAE,EAAE,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,IAAI,EAAE,GAAI,CAAC,EAAE,KAAK,GAAI,CAAC,IAAI,IAAI,GAAI,CAAC,EAAE,IAAI,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,GAAG,EAAE,GAAI,CAAC,GAAG,EAAE,IACjGC,EAAK,CAAE,CAAC,KAAK,EAAE,GAAI,CAAC,IAAK,EAAG,GAAI,CAAC,EAAG,IAAK,GAAI,CAAC,IAAK,EAAG,GAAI,CAAC,EAAK,IAAK,GAAI,CAAC,IAAK,EAAG,GAAI,CAAC,MAAM,GAAI,GAAI,CAAC,MAAM,EAAE,GAAI,CAAC,EAAE,GAAI,GAAI,CAAC,MAAM,EAAE,GAAI,CAAC,MAAM,GAAI,GAAI,CAAC,IAAI,EAAE,GAAI,CAAC,KAAM,EAAG,GAAI,CAAC,GAAI,EAAG,IAC1LC,EAAK,CAAE,CAAC,EAAE,EAAE,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,IAAI,EAAE,GAAI,CAAC,EAAE,KAAK,GAAI,CAAC,IAAI,IAAI,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,IAAI,IAAI,GAAI,CAAC,EAAE,IAAI,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,GAAG,EAAE,GAAI,CAAC,GAAG,EAAE,IACvHC,EAAK,CAAE,CAAC,KAAK,EAAE,GAAI,CAAC,IAAI,EAAE,GAAI,CAAC,EAAE,KAAK,GAAI,CAAC,IAAI,EAAE,GAAI,CAAC,EAAE,KAAK,GAAI,CAAC,IAAI,IAAI,GAAI,CAAC,EAAE,KAAK,GAAI,CAAC,IAAI,EAAE,GAAI,CAAC,EAAE,KAAK,GAAI,CAAC,IAAI,EAAE,GAAI,CAAC,EAAE,KAAK,GAAI,CAAC,IAAI,IAAI,GAAI,CAAC,EAAE,KAAK,GAAI,CAAC,IAAI,EAAE,GAAI,CAAC,KAAK,EAAE,GAAI,CAAC,GAAG,EAAE,IAC9LC,EAAK,CAAE,CAAC,KAAK,EAAE,GAAI,CAAC,IAAI,EAAE,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,IAAI,EAAE,GAAI,CAAC,IAAI,EAAE,GAAI,CAAC,KAAK,EAAE,GAAI,CAAC,GAAG,EAAE,IACxFC,EAAK,CAAE,CAAC,KAAK,EAAE,GAAI,CAAC,IAAI,EAAE,GAAI,CAAC,EAAE,IAAI,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,EAAE,IAAI,GAAI,CAAC,IAAI,EAAE,GAAI,CAAC,EAAE,IAAI,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,EAAE,IAAI,GAAI,CAAC,IAAI,EAAE,GAAI,CAAC,KAAK,EAAE,GAAI,CAAC,GAAG,EAAE,IACpIC,EAAK,CAAE,CAAC,KAAK,EAAE,GAAI,CAAC,IAAI,EAAE,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,IAAI,EAAE,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,IAAI,EAAE,GAAI,CAAC,KAAK,EAAE,GAAI,CAAC,GAAG,EAAE,IACxFC,EAAK,CAAE,CAAC,MAAM,EAAE,GAAI,CAAC,KAAK,EAAE,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,KAAK,EAAE,GAAI,CAAC,IAAI,EAAE,GAAI,CAAC,KAAK,EAAE,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,KAAK,EAAE,GAAI,CAAC,IAAI,EAAE,GAAI,CAAC,KAAK,EAAE,GAAI,CAAC,MAAM,EAAE,GAAI,CAAC,GAAG,EAAE,IAC3IC,EAAK,CAAE,CAAC,EAAE,EAAE,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,IAAI,IAAI,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,IAAI,IAAI,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,GAAG,EAAE,GAAI,CAAC,GAAG,EAAE,IAC9FC,EAAK,CAAE,CAAC,KAAK,EAAE,GAAI,CAAC,IAAI,IAAI,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,IAAI,IAAI,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,IAAI,IAAI,GAAI,CAAC,KAAK,EAAE,GAAI,CAAC,GAAG,EAAE,IAC9FC,EAAK,CAAE,CAAC,EAAE,EAAE,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,GAAG,EAAE,GAAI,CAAC,GAAG,EAAE,IACtFC,EAAK,CAAE,CAAC,KAAK,EAAE,GAAI,CAAC,IAAI,EAAE,GAAI,CAAC,EAAE,IAAI,GAAI,CAAC,IAAI,EAAE,GAAI,CAAC,EAAE,IAAI,GAAI,CAAC,IAAI,EAAE,GAAI,CAAC,KAAK,EAAE,GAAI,CAAC,GAAG,EAAE,IAC5FC,EAAK,CAAE,CAAC,GAAG,EAAE,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,IAAI,EAAE,GAAI,CAAC,IAAI,EAAE,GAAI,CAAC,IAAI,EAAE,GAAI,CAAC,IAAI,EAAE,GAAI,CAAC,IAAI,EAAE,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,GAAG,EAAE,GAAI,CAAC,GAAG,EAAE,IAC5HC,EAAK,CAAE,CAAC,GAAG,EAAE,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,EAAE,KAAK,GAAI,CAAC,IAAI,EAAE,GAAI,CAAC,EAAE,KAAK,GAAI,CAAC,IAAI,EAAE,GAAI,CAAC,EAAE,KAAK,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,GAAG,EAAE,GAAI,CAAC,GAAG,EAAE,IAC/HC,EAAK,CAAE,CAAC,KAAK,EAAE,GAAI,CAAC,IAAI,EAAE,GAAI,CAAC,EAAE,KAAK,GAAI,CAAC,IAAI,EAAE,GAAI,CAAC,EAAE,KAAK,GAAI,CAAC,IAAI,IAAI,GAAI,CAAC,EAAE,KAAK,GAAI,CAAC,IAAI,EAAE,GAAI,CAAC,EAAE,KAAK,GAAI,CAAC,IAAI,EAAE,GAAI,CAAC,EAAE,KAAK,GAAI,CAAC,IAAI,IAAI,GAAI,CAAC,EAAE,KAAK,GAAI,CAAC,IAAI,EAAE,GAAI,CAAC,KAAK,EAAE,GAAI,CAAC,GAAG,EAAE,IAC9LC,EAAK,CAAE,CAAC,KAAK,EAAE,GAAI,CAAC,IAAI,EAAE,GAAI,CAAC,IAAI,EAAE,GAAI,CAAC,EAAE,IAAI,GAAI,CAAC,EAAE,IAAI,GAAI,CAAC,IAAI,IAAI,GAAI,CAAC,KAAK,EAAE,GAAI,CAAC,GAAG,EAAE,IAC9FC,EAAK,CAAE,CAAC,KAAK,EAAE,GAAI,CAAC,IAAI,EAAE,GAAI,CAAC,EAAE,KAAK,GAAI,CAAC,IAAI,EAAE,GAAI,CAAC,EAAE,KAAK,GAAI,CAAC,IAAI,IAAI,GAAG,CAAC,EAAE,IAAI,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,EAAE,IAAI,GAAI,CAAC,IAAI,IAAI,GAAI,CAAC,EAAE,KAAK,GAAI,CAAC,IAAI,EAAE,GAAI,CAAC,KAAK,EAAE,GAAI,CAAC,GAAG,EAAE,IACpLC,EAAK,CAAE,CAAC,KAAK,EAAE,GAAI,CAAC,IAAI,EAAE,GAAI,CAAC,EAAE,KAAK,GAAI,CAAC,KAAK,EAAE,GAAI,CAAC,EAAE,KAAK,GAAI,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,KAAK,GAAI,CAAC,IAAI,IAAI,GAAI,CAAC,EAAE,KAAK,GAAI,CAAC,IAAI,EAAE,GAAI,CAAC,KAAK,EAAE,GAAI,CAAC,GAAG,EAAE,IAC9IC,EAAK,CAAE,CAAC,KAAK,EAAE,GAAI,CAAC,IAAI,EAAE,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,IAAI,EAAE,GAAI,CAAC,KAAK,EAAE,GAAI,CAAC,GAAG,EAAE,IACtFC,EAAK,CAAE,CAAC,KAAK,EAAE,GAAI,CAAC,IAAI,EAAE,GAAI,CAAC,EAAE,KAAK,GAAI,CAAC,EAAE,KAAK,GAAI,CAAC,IAAI,EAAE,GAAI,CAAC,EAAE,KAAK,GAAI,CAAC,EAAE,KAAK,GAAI,CAAC,IAAI,EAAE,GAAI,CAAC,KAAK,EAAE,GAAI,CAAC,GAAG,EAAE,IACtHC,EAAK,CAAE,CAAC,KAAK,EAAE,GAAI,CAAC,IAAI,EAAE,GAAI,CAAC,EAAE,KAAK,GAAI,CAAC,IAAI,EAAE,GAAI,CAAC,EAAE,KAAK,GAAI,CAAC,IAAI,IAAI,GAAI,CAAC,EAAE,KAAK,GAAI,CAAC,IAAI,EAAE,GAAI,CAAC,KAAK,EAAE,GAAI,CAAC,GAAG,EAAE,IACvHC,EAAK,CAAE,CAAC,KAAK,EAAE,GAAI,CAAC,IAAI,GAAI,GAAI,CAAC,EAAE,EAAK,GAAI,CAAC,IAAI,GAAI,GAAI,CAAC,EAAE,EAAK,GAAI,CAAC,IAAI,IAAI,GAAI,CAAC,EAAE,EAAK,GAAI,CAAC,IAAI,IAAI,GAAI,CAAC,EAAE,EAAK,GAAI,CAAC,IAAI,IAAI,GAAI,CAAC,IAAK,EAAG,GAAI,CAAC,IAAK,EAAG,GAAI,CAAC,KAAK,EAAE,GAAI,CAAC,GAAG,EAAE,IAChLC,IAAK,CAAE,CAAC,KAAK,EAAE,GAAI,CAAC,IAAI,GAAI,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,IAAI,IAAI,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,IAAI,GAAI,GAAI,CAAC,KAAK,EAAE,GAAI,CAAC,GAAG,EAAE,KAK1FC,EAAQC,OAAAC,EAAA,EAAAD,CAAIE,MAAM,IAAIC,QAAQC,IAAI,SAACC,GACvC,IAAIC,GAASD,EAAM,GAAKE,KAAKC,GAAG,EAAI,GACpC,OAAOxD,EAAOuD,KAAKE,IAAIH,GAAQC,KAAKG,IAAIJ,MAGpCK,EAAmB,SAACtH,GACxB,IAAIuH,EAAc,GACdC,EAAY7D,EAAO,EAAE,GA2DzB,OA1DA3D,EAASyH,QAAS,SAACC,GACjB,OAAQA,EAAO,IACf,KAAK,EACL,QACEH,EAAYI,KAAKhE,EAAO+D,EAAO,GAAK,EAAKA,EAAO,GAAK,IACrD,MACF,KAAK,EACH,GAAIA,EAAO,GAAKF,EAAU,GAAI,CAC5B,IAAII,EAAQV,KAAKW,IAAIH,EAAO,GAAKF,EAAU,IAAM,EAC7CM,EAASZ,KAAKW,IAAIH,EAAO,GAAKF,EAAU,IAAM,EAClDD,EAAcA,EAAYQ,OAAOrB,EAAMK,IAAK,SAAAiB,GAAE,OAAIrE,EAAOqE,EAAGpE,EAAIgE,EAAQJ,EAAU,GAAK,EAAKQ,EAAGnE,EAAIiE,EAASJ,EAAO,GAAK,KAAMnI,eACzH,CACL,IAAIqI,EAAQV,KAAKW,IAAIH,EAAO,GAAKF,EAAU,IAAM,EAC7CM,EAASZ,KAAKW,IAAIH,EAAO,GAAKF,EAAU,IAAM,EAClDD,EAAcA,EAAYQ,OAAOrB,EAAMK,IAAK,SAAAiB,GAAE,OAAIrE,EAAOqE,EAAGpE,EAAIgE,EAAQF,EAAO,GAAK,EAAKM,EAAGnE,EAAIiE,EAASN,EAAU,GAAK,MAE1HD,EAAYI,KAAKhE,EAAO+D,EAAO,GAAK,EAAKA,EAAO,GAAK,IACrD,MACF,KAAK,EACH,GAAIA,EAAO,GAAKF,EAAU,GAAI,CAC5B,IAAII,EAAQV,KAAKW,IAAIH,EAAO,GAAKF,EAAU,IAAM,EAC7CM,GAAUZ,KAAKW,IAAIH,EAAO,GAAKF,EAAU,IAAM,EACnDD,EAAcA,EAAYQ,OAAOrB,EAAMK,IAAK,SAAAiB,GAAE,OAAIrE,EAAOqE,EAAGpE,EAAIgE,EAAQF,EAAO,GAAK,EAAKM,EAAGnE,EAAIiE,EAASN,EAAU,GAAK,UACnH,CACL,IAAII,EAAQV,KAAKW,IAAIH,EAAO,GAAKF,EAAU,IAAM,EAC7CM,GAAUZ,KAAKW,IAAIH,EAAO,GAAKF,EAAU,IAAM,EACnDD,EAAcA,EAAYQ,OAAOrB,EAAMK,IAAK,SAAAiB,GAAE,OAAIrE,EAAOqE,EAAGpE,EAAIgE,EAAQJ,EAAU,GAAK,EAAKQ,EAAGnE,EAAIiE,EAASJ,EAAO,GAAK,KAAMnI,WAEhIgI,EAAYI,KAAKhE,EAAO+D,EAAO,GAAK,EAAKA,EAAO,GAAK,IACrD,MACF,KAAK,EACH,GAAIA,EAAO,GAAKF,EAAU,GAAI,CAC5B,IAAII,GAASV,KAAKW,IAAIH,EAAO,GAAKF,EAAU,IAAM,EAC9CM,GAAUZ,KAAKW,IAAIH,EAAO,GAAKF,EAAU,IAAM,EACnDD,EAAcA,EAAYQ,OAAOrB,EAAMK,IAAK,SAAAiB,GAAE,OAAIrE,EAAOqE,EAAGpE,EAAIgE,EAAQJ,EAAU,GAAK,EAAKQ,EAAGnE,EAAIiE,EAASJ,EAAO,GAAK,KAAMnI,eACzH,CACL,IAAIqI,GAASV,KAAKW,IAAIH,EAAO,GAAKF,EAAU,IAAM,EAC9CM,GAAUZ,KAAKW,IAAIH,EAAO,GAAKF,EAAU,IAAM,EACnDD,EAAcA,EAAYQ,OAAOrB,EAAMK,IAAK,SAAAiB,GAAE,OAAIrE,EAAOqE,EAAGpE,EAAIgE,EAAQF,EAAO,GAAK,EAAKM,EAAGnE,EAAIiE,EAASN,EAAU,GAAK,MAE1HD,EAAYI,KAAKhE,EAAO+D,EAAO,GAAK,EAAKA,EAAO,GAAK,IACrD,MACF,KAAK,EACH,GAAIA,EAAO,GAAKF,EAAU,GAAI,CAC5B,IAAII,GAASV,KAAKW,IAAIH,EAAO,GAAKF,EAAU,IAAM,EAC9CM,EAASZ,KAAKW,IAAIH,EAAO,GAAKF,EAAU,IAAM,EAClDD,EAAcA,EAAYQ,OAAOrB,EAAMK,IAAK,SAAAiB,GAAE,OAAIrE,EAAOqE,EAAGpE,EAAIgE,EAAQF,EAAO,GAAK,EAAKM,EAAGnE,EAAIiE,EAASN,EAAU,GAAK,UACnH,CACL,IAAII,GAASV,KAAKW,IAAIH,EAAO,GAAKF,EAAU,IAAM,EAC9CM,EAASZ,KAAKW,IAAIH,EAAO,GAAKF,EAAU,IAAM,EAClDD,EAAcA,EAAYQ,OAAOrB,EAAMK,IAAK,SAAAiB,GAAE,OAAIrE,EAAOqE,EAAGpE,EAAIgE,EAAQJ,EAAU,GAAK,EAAKQ,EAAGnE,EAAIiE,EAASJ,EAAO,GAAK,KAAMnI,WAEhIgI,EAAYI,KAAKhE,EAAO+D,EAAO,GAAK,EAAKA,EAAO,GAAK,IAGvDF,EAAYE,IAGP,CACL9G,MArHgB,IAsHhBZ,SAAUuH,IAIDU,EAAQ,SAACC,GACpB,IAAIC,EAAQD,EAAGE,cACf,OAAIlE,EAAQmE,eAAeF,GAClBb,EAAiBpD,EAAQiE,IAEzBb,EAAiBpD,EAAQ,OCgF9BoE,EAAe,SAACC,GACF,UAAdA,EAAMC,MAAsC,IAAnBD,EAAME,UACjCF,EAAMG,kBAIJC,mLAIF,IAAIC,EAAkB,GAClBC,KAAKC,MAAMC,SACbH,EAAkB,UAGpB,IAAII,EAAiBH,KAAKC,MAAMG,QAAQlC,IAAK,SAACmC,GAC5C,OAAOjG,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAWC,UAAU,eAAeZ,IAAKU,EAAOG,OAC9CpG,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAKG,eAAgBC,IAAcC,GAAI,GACpCN,EAAOG,OAEVpG,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAKK,GAAI,GACPvG,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CACEM,KAAMP,EAAOO,KAAOP,EAAOO,KAAO,SAClCC,KAAMR,EAAOQ,KAAOR,EAAOQ,KAAO,EAClCC,MAAOT,EAAOS,QACdC,SAAU,SAACrB,GACTW,EAAOU,SAASrB,IAElBsB,UAAWvB,QAKtBwB,OAAsBrJ,EAc1B,OAZIoI,KAAKC,MAAMG,QAAQjF,QAAU,IAC/B8F,EACE7G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAO/F,UAAU,gBAAgB2G,aAAW,EAACC,SAAUnB,KAAKC,MAAMC,QAChE9F,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAMc,YAAU,GACdhH,EAAAC,EAAAC,cAAA,gBAAOF,EAAAC,EAAAC,cAAA,KAAG+G,OAAO,SAASC,IAAI,sBAAsBzG,KAAMmF,KAAKC,MAAMsB,MAAOvB,KAAKC,MAAMsB,MAAvF,cACCpB,MAOT/F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAe/F,UAAWwF,EAAiByB,QAASxB,KAAKC,MAAMwB,SAAUzB,KAAKC,MAAMhJ,MAC/EgK,UA5COtG,aAgId+G,cACJ,SAAAA,EAAYzB,GAAO,IAAA0B,EAAA,OAAA7D,OAAA8D,EAAA,EAAA9D,CAAAkC,KAAA0B,IACjBC,EAAA7D,OAAA+D,EAAA,EAAA/D,CAAAkC,KAAAlC,OAAAgE,EAAA,EAAAhE,CAAA4D,GAAAK,KAAA/B,KAAMC,KAEDA,MAAM+B,SAAS,CAChB/K,KAAM,UACNE,SAAU,SAAC8K,GAET,IADA,IAAIC,EAAS,GACJC,EAAE,EAAGA,EAAEF,EAAM5J,OAAOE,aAAc4J,IAAK,CAC9C,IAAI/D,EAAkB,EAAVC,KAAKC,GAAW2D,EAAM5J,OAAOE,cAAgB,GAAM4J,GAC/DD,EAAOpD,KAAKhE,EAAOuD,KAAKE,IAAIH,GAAQC,KAAKG,IAAIJ,KAE/C,OAAO8D,GAET9B,QAAS,CACP,CACEI,MAAO,kBACPM,MAAO,WAAQ,OAAOa,EAAK1B,MAAM1H,cACjCwI,SAAUY,EAAK1B,MAAMmC,wBAI7BT,EAAK1B,MAAM+B,SAAS,CAChB/K,KAAM,OACNE,SAAU,SAAC8K,GAET,IADA,IAAII,EAAc,GACTF,EAAE,EAAGA,EAA4B,EAA1BF,EAAM5J,OAAOG,WAAgB2J,IAAK,CAChD,IAAI/D,EAAkB,EAAVC,KAAKC,IAAY,EAAM2D,EAAM5J,OAAOG,YAAc2J,EAC1DG,EAAa,EACbH,EAAI,IAAM,IACZG,GAAcL,EAAM5J,OAAOI,WAE7B4J,EAAYvD,KAAKhE,EAAOwH,EAAajE,KAAKE,IAAIH,GAAQkE,EAAajE,KAAKG,IAAIJ,KAE9E,OAAOiE,GAETjC,QAAS,CACP,CACEI,MAAO,mBACPM,MAAO,WAAQ,OAAOa,EAAK1B,MAAMzH,YACjCuI,SAAUY,EAAK1B,MAAMsC,oBAEvB,CACE/B,MAAO,iBACPM,MAAO,WAAQ,OAAOa,EAAK1B,MAAMxH,WACjCsI,SAAUY,EAAK1B,MAAMuC,kBACrB3B,KAAM,QAIdc,EAAK1B,MAAM+B,SAAS,CAChB/K,KAAM,SACNE,SAAU,SAAC8K,GAET,IADA,IAAIQ,EAAgB,GACXN,EAAE,EAAGA,EAAE,IAAKA,IAAK,CACxB,IAAI/D,EAAkB,EAAVC,KAAKC,GAAW,IAAQ6D,EACpCM,EAAc3D,KAAKhE,EAAOuD,KAAKE,IAAIH,GAAQC,KAAKG,IAAIyD,EAAM5J,OAAOK,YAAc0F,GAAO6D,EAAM5J,OAAOK,cAErG,OAAO+J,GAETrC,QAAS,CACP,CACEI,MAAO,kBACPM,MAAO,WAAQ,OAAOa,EAAK1B,MAAMvH,aACjCqI,SAAUY,EAAK1B,MAAMyC,wBAI7Bf,EAAK1B,MAAM+B,SAAS,CAChB/K,KAAM,QACNE,SAAU,SAAC8K,GAET,IADA,IAAIU,EAAe,GACVR,EAAE,EAAGA,EAAE,IAAKA,IAAK,CACxB,IAAI/D,EAAkB,EAAVC,KAAKC,GAAW,IAAQ6D,EAEpCQ,EAAa7D,KAAKhE,EAAO,EAAMuD,KAAKuE,IAAIvE,KAAKG,IAAIJ,GAAQ,GAChC,MAAYC,KAAKE,IAAIH,IACpB,EAAI,GAAOC,KAAKE,IAAI,EAAMH,IAC3B,KAAYC,KAAKE,IAAI,EAAMH,IAC1B,EAAI,GAAOC,KAAKE,IAAI,EAAMH,KAEtD,OAAOuE,GAETvC,QAAS,KAGbuB,EAAK1B,MAAM+B,SAAS,CAChB/K,KAAM,WACNE,SAAU,SAAC8K,GAST,IARA,IAAIC,EAAS,GAETW,EAAU,GAEVzE,EAAQC,KAAKC,GAAG,EAEhBwE,EAAgBzE,KAAKC,GAAG2D,EAAM5J,OAAOM,cACrCoK,EAAoB,GAAMD,EACrBE,EAAE,EAAGA,EAAEf,EAAM5J,OAAOM,cAAeqK,IAAK,CAC/C,IAAIC,EAAa7E,EAAQC,KAAKC,GAAKyE,EACnCF,EAAQ/D,KAAM,CAAChE,EAAOuD,KAAKE,IAAIH,GAAQC,KAAKG,IAAIJ,IAAS6E,IACzD7E,GAAS,EAAMC,KAAKC,GAAK2D,EAAM5J,OAAOM,cAGxC,IADA,IAAIwC,EAAS,GAAMkD,KAAKE,IAAIF,KAAKC,GAAG,EAAI2D,EAAM5J,OAAOM,eAC5CuK,EAAK,EAAGA,EAAOL,EAAQ1H,OAAQ+H,IACtC,IAAK,IAAIf,EAAE,EAAGA,EAAE,IAAKA,IAAK,CACxB,IAAI/D,EAAQ0E,GAAkBX,EAAI,KAASU,EAAQK,GAAM,GACzDhB,EAAOpD,KAAKhE,EAAOK,EAAS0H,EAAQK,GAAM,GAAGnI,EAAIsD,KAAKE,IAAIH,GACvCjD,EAAS0H,EAAQK,GAAM,GAAGlI,EAAIqD,KAAKG,IAAIJ,KAG9D,OAAO8D,GAET9B,QAAS,CACP,CACEI,MAAO,kBACPM,MAAO,WAAQ,OAAOa,EAAK1B,MAAMtH,eACjCoI,SAAUY,EAAK1B,MAAMkD,sBACrBtC,KAAM,MAIdc,EAAK1B,MAAM+B,SAAW,CAClB/K,KAAM,SACNsK,KAAM,+CACNpK,SAAU,SAAC8K,GAKT,IAJA,IAAIC,EAAS,GACT7H,EAAIvC,WAAWmK,EAAM5J,OAAOS,aAC5BsK,EAAItL,WAAWmK,EAAM5J,OAAOU,aAEvBoJ,EAAE,EAAGA,EAAE,IAAKA,IAAK,CACxB,IAAI/D,EAAkB,EAAVC,KAAKC,GAAW,IAAQ6D,EACpCD,EAAOpD,KAAKhE,EAAO,IAAOT,EAAI+I,GAAK/E,KAAKE,IAAIH,GAAS,GAAMgF,EAAI/E,KAAKE,KAAMlE,EAAI+I,GAAKA,EAAKhF,GACrE,IAAO/D,EAAI+I,GAAK/E,KAAKG,IAAIJ,GAAS,GAAMgF,EAAI/E,KAAKG,KAAMnE,EAAI+I,GAAKA,EAAKhF,KAE1F,OAAO8D,GAET9B,QAAS,CACP,CACEI,MAAO,sBACPM,MAAO,WAAQ,OAAOa,EAAK1B,MAAMnH,aACjCiI,SAAUY,EAAK1B,MAAMoD,oBACrBxC,KAAM,IAER,CACEL,MAAO,sBACPM,MAAO,WAAQ,OAAOa,EAAK1B,MAAMlH,aACjCgI,SAAUY,EAAK1B,MAAMqD,oBACrBzC,KAAM,OAIZc,EAAK1B,MAAM+B,SAAW,CAClB/K,KAAM,MACNsK,KAAM,gDACNpK,SAAU,SAAC8K,GAKT,IAJA,IAAIC,EAAS,GACT7H,EAAIvC,WAAWmK,EAAM5J,OAAOW,cAC5BoK,EAAItL,WAAWmK,EAAM5J,OAAOY,cAEvBkJ,EAAE,EAAGA,EAAE,IAAKA,IAAK,CACxB,IAAI/D,EAAkB,EAAVC,KAAKC,GAAW,IAAQ6D,EACpCD,EAAOpD,KAAKhE,EAAO,GAAOT,EAAI+I,GAAK/E,KAAKE,IAAIH,GAASgF,EAAI/E,KAAKE,KAAMlE,EAAI+I,GAAKA,EAAKhF,GAC5D,GAAO/D,EAAI+I,GAAK/E,KAAKG,IAAIJ,GAASgF,EAAI/E,KAAKG,KAAMnE,EAAI+I,GAAKA,EAAKhF,KAEvF,OAAO8D,GAET9B,QAAS,CACP,CACEI,MAAO,sBACPM,MAAO,WAAQ,OAAOa,EAAK1B,MAAMjH,cACjC+H,SAAUY,EAAK1B,MAAMsD,qBACrB1C,KAAM,IAER,CACEL,MAAO,sBACPM,MAAO,WAAQ,OAAOa,EAAK1B,MAAMhH,cACjC8H,SAAUY,EAAK1B,MAAMuD,qBACrB3C,KAAM,OAIdc,EAAK1B,MAAM+B,SAAS,CAChB/K,KAAM,OACNsK,KAAM,yCACNpK,SAAU,SAAC8K,GAST,IARA,IAAIC,EAAS,GAETuB,EAAIC,SAASzB,EAAM5J,OAAOa,OAC1ByK,EAAID,SAASzB,EAAM5J,OAAOc,OAE1ByK,EAAaD,GADRF,EAAIE,EAAI,IAAM,EAAK,EAAI,GACP,GAAKF,EAC1BI,EAAa,GAAKJ,EAEbtB,EAAE,EAAGA,EAAEyB,EAAW,EAAGzB,IAAK,CACjC,IAAI2B,EAAkB,EAAVzF,KAAKC,GAAYuF,EAAc1B,EACvC4B,EAAI,EAAU1F,KAAKG,IAAKiF,EAAIE,EAAKG,GACrC5B,EAAOpD,KAAKhE,EAAOiJ,EAAI1F,KAAKE,IAAIuF,GAAQC,EAAI1F,KAAKG,IAAIsF,KAEvD,OAAO5B,GAET9B,QAAS,CACP,CACEI,MAAO,YACPM,MAAO,WAAQ,OAAOa,EAAK1B,MAAM/G,OACjC6H,SAAUY,EAAK1B,MAAM+D,cACrBnD,KAAM,GAER,CACEL,MAAO,cACPM,MAAO,WAAQ,OAAOa,EAAK1B,MAAM9G,OACjC4H,SAAUY,EAAK1B,MAAMgE,cACrBpD,KAAM,MAIhBc,EAAK1B,MAAM+B,SAAS,CAChB/K,KAAM,OACNE,SAAU,SAAC8K,GACT,IAAIC,EAAS,GAEbA,EAAOpD,KAAKhE,EAAO,GADH,MAGhB,IADA,IAAIC,EAAI,EACCmJ,EAAM,EAAGA,EAAMjC,EAAM5J,OAAOO,UAAUuC,OAAQ+I,IAAO,CAC5D,IAAIC,EAAS/E,EAAM6C,EAAM5J,OAAOO,UAAUsL,IACtC,EAAIC,EAAOhN,SAASgE,QACtB+G,EAAOpD,KAAKhE,EAAOC,EAAIoJ,EAAOhN,SAAS,GAAG4D,GAN9B,MAQd,IAAK,IAAIqJ,EAAK,EAAGA,EAAKD,EAAOhN,SAASgE,OAAQiJ,IAC5ClC,EAAOpD,KAAKhE,EAAOqJ,EAAOhN,SAASiN,GAAIrJ,EAAIA,EAAGoJ,EAAOhN,SAASiN,GAAIpJ,IAEhE,EAAImJ,EAAOhN,SAASgE,QACtB+G,EAAOpD,KAAKhE,EAAOC,EAAIoJ,EAAOhN,SAASgN,EAAOhN,SAASgE,OAAO,GAAGJ,GAZrD,MAcVmJ,IAAQjC,EAAM5J,OAAOO,UAAUuC,OAAO,GACxC+G,EAAOpD,KAAKhE,EAAOC,EAAIoJ,EAAOpM,OAflB,MAiBdgD,GAAKoJ,EAAOpM,MAEd,IAAIsM,EAActJ,EAAI,EACtB,OAAOmH,EAAOhE,IAAK,SAACoG,GAClB,OAAOxJ,EAAOwJ,EAAMvJ,EAAIsJ,EAAaC,EAAMtJ,MAG/CoF,QAAS,CACP,CACEI,MAAO,OACPI,KAAM,WACNE,MAAO,WAAQ,OAAOa,EAAK1B,MAAMrH,WACjCmI,SAAUY,EAAK1B,MAAMsE,sBAI7B5C,EAAK1B,MAAM+B,SAAS,CAChB/K,KAAM,gBACNE,SAAU,SAAC8K,GACT,OAAO7G,KAETgF,QAAS,KAhQIuB,wEAsQjB,IAAI6C,EAAOxE,KAEPyE,EAAezE,KAAKC,MAAM5H,OAAO6F,IAAK,SAACwG,GACzC,OAAOtK,EAAAC,EAAAC,cAACqK,EAAD,CACEhF,IAAK+E,EAAMzN,KACXA,KAAMyN,EAAMzN,KACZsK,KAAMmD,EAAMnD,MAAQ,GACpBrB,OAAQwE,EAAMzN,OAASuN,EAAKvE,MAAM3H,aAClC8H,QAASsE,EAAMtE,QACfqB,QAAU,WAAQ+C,EAAKvE,MAAM2E,SAASF,EAAMzN,WAIvD,OACEmD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAACgG,EAAA,EAAD,KACGmE,GAEHrK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAO/F,UAAU,gBAAgB2G,aAAW,EAACC,UAAQ,GACnD/G,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAMc,YAAU,GACdhH,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAWC,UAAU,cACnBnG,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAKG,eAAgBC,IAAcC,GAAI,GAAvC,iBAGAvG,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAKK,GAAI,GACPvG,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAaM,KAAK,SAASE,MAAOd,KAAKC,MAAMpH,aAAckI,SAAUf,KAAKC,MAAM4E,aAAc7D,UAAWvB,MAG7GrF,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAWC,UAAU,gBACnBnG,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAKG,eAAgBC,IAAcC,GAAI,GAAvC,UAGAvG,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAKG,eAAgBC,IAAcC,GAAI,GAAvC,KAGAvG,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAKK,GAAI,GACPvG,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAaM,KAAK,SAASE,MAAOd,KAAKC,MAAM6E,SAAU/D,SAAUf,KAAKC,MAAM8E,gBAAiB/D,UAAWvB,KAE1GrF,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAKG,eAAgBC,IAAcC,GAAI,GAAvC,KAGAvG,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAKK,GAAI,GACPvG,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAaM,KAAK,SAASE,MAAOd,KAAKC,MAAM+E,SAAUjE,SAAUf,KAAKC,MAAMgF,gBAAiBjE,UAAWvB,iBAlTlG9E,aA6TxB+G,EAAYwD,YA3YW,SAACjD,EAAOkD,GAC7B,MAAO,CACL9M,OAAQ4J,EAAM5J,OAAOA,OACrBE,aAAc0J,EAAM5J,OAAOE,aAC3BC,WAAcyJ,EAAM5J,OAAOG,WAC3BC,UAAcwJ,EAAM5J,OAAOI,UAC3BC,YAAcuJ,EAAM5J,OAAOK,YAC3BC,cAAesJ,EAAM5J,OAAOM,cAC5BG,YAAamJ,EAAM5J,OAAOS,YAC1BC,YAAakJ,EAAM5J,OAAOU,YAC1BC,aAAciJ,EAAM5J,OAAOW,aAC3BC,aAAcgJ,EAAM5J,OAAOY,aAC3BC,MAAO+I,EAAM5J,OAAOa,MACpBC,MAAO8I,EAAM5J,OAAOc,MACpBP,UAAcqJ,EAAM5J,OAAOO,UAC3BN,aAAc2J,EAAM5J,OAAOC,aAC3BO,aAAcoJ,EAAM5J,OAAOQ,aAC3BiM,SAAU7C,EAAMmD,UAAUhM,aAC1B4L,SAAU/C,EAAMmD,UAAU/L,eAIJ,SAACgM,EAAUF,GACnC,MAAO,CACLnD,SAAU,SAAC0C,GACTW,EAhRkB,SAAEX,GACxB,MAAO,CACL9D,KAAM,YACN8D,MAAOA,GA6QI1C,CAAS0C,KAEpBE,SAAU,SAAC3N,GACToO,EA5QG,CACLzE,KAAM,YACNE,MA0QoB7J,KAEpBmL,oBAAqB,SAAC1C,GACpB2F,EAxQG,CACLzE,KAAM,0BACNE,MAsQgCpB,EAAM2B,OAAOP,SAE7CyB,mBAAoB,SAAC7C,GACnB2F,EApQG,CACLzE,KAAM,wBACNE,MAkQ8BpB,EAAM2B,OAAOP,SAE3C0B,kBAAmB,SAAC9C,GAhQS,IAAEoB,EAiQ7BuE,GAjQ6BvE,EAiQFpB,EAAM2B,OAAOP,MAhQrC,CACLF,KAAM,uBACNE,MAAOzC,KAAKiH,IAAIjH,KAAKkH,IAAIzE,EAAO,GAAM,OAgQtC4B,oBAAqB,SAAChD,GACpB2F,EA5PG,CACLzE,KAAM,yBACNE,MA0P+BpB,EAAM2B,OAAOP,SAE5CqC,sBAAuB,SAACzD,GACtB2F,EAxPG,CACLzE,KAAM,2BACNE,MAsPiCpB,EAAM2B,OAAOP,SAE9CuC,oBAAqB,SAAC3D,GACpB2F,EApPG,CACLzE,KAAM,yBACNE,MAkP+BpB,EAAM2B,OAAOP,SAE5CwC,oBAAqB,SAAC5D,GACpB2F,EAhPG,CACLzE,KAAM,yBACNE,MA8O+BpB,EAAM2B,OAAOP,SAE5CyC,qBAAsB,SAAC7D,GACrB2F,EA5OG,CACLzE,KAAM,0BACNE,MA0OgCpB,EAAM2B,OAAOP,SAE7C0C,qBAAsB,SAAC9D,GACrB2F,EAxOG,CACLzE,KAAM,0BACNE,MAsOgCpB,EAAM2B,OAAOP,SAE7CkD,cAAe,SAACtE,GACd2F,EApOG,CACLzE,KAAM,mBACNE,MAkOyBpB,EAAM2B,OAAOP,SAEtCmD,cAAe,SAACvE,GACd2F,EAhOG,CACLzE,KAAM,mBACNE,MA8NyBpB,EAAM2B,OAAOP,SAEtCyD,kBAAmB,SAAC7E,GAClB2F,EA5NG,CACLzE,KAAM,uBACNE,MA0N6BpB,EAAM2B,OAAOP,SAE1C+D,aAAc,SAACnF,GACb2F,EAxNG,CACLzE,KAAM,iBACNE,MAsNwBpB,EAAM2B,OAAOP,SAErCiE,gBAAiB,SAACrF,GApNS,IAAE8F,EAqN3BH,GArN2BG,EAqNF9F,EAAM2B,OAAOP,MApNnC,CACLF,KAAM,qBACNE,MAAOhJ,WAAW0N,OAoNlBP,gBAAiB,SAACvF,GAhNS,IAAE8F,EAiN3BH,GAjN2BG,EAiNF9F,EAAM2B,OAAOP,MAhNnC,CACLF,KAAM,qBACNE,MAAOhJ,WAAW0N,SAghBVN,CAA2CxD,GAGvD,IAsBM+D,mLAGF,IAAI1F,EAAkB,GAKtB,OAJIC,KAAKC,MAAMC,SACbH,EAAkB,UAIlB3F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAeoF,OAAO,OAAOnL,UAAWwF,EAAiByB,QAASxB,KAAKC,MAAM0F,gBAA7E,oDACAvL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAO/F,UAAU,gBAAgB2G,aAAW,EAACC,SAAUnB,KAAKC,MAAMC,QAChE9F,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAMc,YAAU,GACdhH,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAWC,UAAU,eACnBnG,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAKG,eAAgBC,IAAcC,GAAI,GAAvC,+BAGAvG,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAKK,GAAI,GACPvG,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAaM,KAAK,SAASC,KAAK,MAAMC,MAAOd,KAAKC,MAAMa,MAAOC,SAAUf,KAAKC,MAAMc,SAAUC,UAAWvB,MAG7GrF,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAWC,UAAU,sBACnBnG,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAKG,eAAgBC,IAAcC,GAAI,GAAvC,eAGAvG,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAKK,GAAI,GACPvG,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAaM,KAAK,SAASC,KAAK,IAAIC,MAAOd,KAAKC,MAAM2F,YAAa7E,SAAUf,KAAKC,MAAM4F,oBAAqB7E,UAAWvB,iBA3B1G9E,aAqChC8K,EAAoBP,YA3DA,SAACjD,EAAOkD,GAC1B,MAAO,CACLjF,OAAQ+B,EAAMmD,UAAU3L,YACxBqH,MAAOmB,EAAMmD,UAAU1L,UACvBkM,YAAa3D,EAAMmD,UAAUzL,kBAIV,SAAC0L,EAAUF,GAChC,MAAO,CACLQ,eAAgB,WACdN,EAlhBG,CACLzE,KAAM,iBAmhBNG,SAAU,SAACrB,GA/gBQ,IAAEoB,EAghBnBuE,GAhhBmBvE,EAghBFpB,EAAM2B,OAAOP,MA/gB3B,CACLF,KAAM,WACNE,MAAOhJ,WAAWgJ,OA+gBlB+E,oBAAqB,SAACnG,GA3gBQ,IAAEoB,EA4gB9BuE,GA5gB8BvE,EA4gBFpB,EAAM2B,OAAOP,MA3gBtC,CACLF,KAAM,uBACNE,MAAO4C,SAAS5C,SAmjBAoE,CAAqCO,GAGzD,IAkBMK,mLAGF,IAAI/F,EAAkB,GAKtB,OAJIC,KAAKC,MAAMC,SACbH,EAAkB,UAIlB3F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAeoF,OAAO,OAAOnL,UAAWwF,EAAiByB,QAASxB,KAAKC,MAAM0F,gBAA7E,+DACAvL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAO/F,UAAU,gBAAgB2G,aAAW,EAACC,SAAUnB,KAAKC,MAAMC,QAChE9F,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAMc,YAAU,GACdhH,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAWC,UAAU,cACnBnG,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAKG,eAAgBC,IAAcC,GAAI,GAAvC,aAGAvG,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAKK,GAAI,GACPvG,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAaM,KAAK,SAASE,MAAOd,KAAKC,MAAMa,MAAOC,SAAUf,KAAKC,MAAMc,SAAUC,UAAWvB,iBAnBnF9E,aA6B7BmL,EAAiBZ,YA/CE,SAACjD,EAAOkD,GACzB,MAAO,CACLjF,OAAQ+B,EAAMmD,UAAU7L,YACxBuH,MAAOmB,EAAMmD,UAAU5L,YAIL,SAAC6L,EAAUF,GAC/B,MAAO,CACLQ,eAAgB,WACdN,EA3jBG,CACLzE,KAAM,iBA4jBNG,SAAU,SAACrB,GACT2F,EAxjBG,CACLzE,KAAM,WACNE,MAsjBmBpB,EAAM2B,OAAOP,WAkCnBoE,CAAmCY,GAEpD,IA8BMC,mLAGF,IAAIhG,EAAkB,GAClBC,KAAKC,MAAMC,SACbH,EAAkB,UAGpB,IAAIiG,EAAsB,GAK1B,OAJIhG,KAAKC,MAAMgG,aACbD,EAAsB,UAItB5L,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAeoF,OAAO,QAAQnL,UAAWwF,EAAiByB,QAASxB,KAAKC,MAAM0F,gBAA9E,kDACAvL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAO/F,UAAU,gBAAgB2G,aAAW,EAACC,SAAUnB,KAAKC,MAAMC,QAChE9F,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAMc,YAAU,GACdhH,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAWC,UAAU,cACnBnG,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAKG,eAAgBC,IAAcC,GAAI,GAAvC,cAGAvG,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAKK,GAAI,GACPvG,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAaM,KAAK,SAASE,MAAOd,KAAKC,MAAMa,MAAOC,SAAUf,KAAKC,MAAMc,SAAUC,UAAWvB,MAGlGrF,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAWC,UAAU,gBACnBnG,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAKG,eAAgBC,IAAcC,GAAI,GAAvC,gBAGAvG,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAKK,GAAI,GACPvG,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAaM,KAAK,SAASE,MAAOd,KAAKC,MAAM9E,OAAQ0F,KAAK,OAAOE,SAAUf,KAAKC,MAAMiG,eAAgBlF,UAAWvB,MAGrHrF,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAeoF,OAAO,OAAOnL,UAAWyL,EAAqBxE,QAASxB,KAAKC,MAAMkG,oBAAjF,yDACA/L,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAO/F,UAAU,gBAAgB2G,aAAW,EAACC,SAAUnB,KAAKC,MAAMgG,YAC9D7L,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAWC,UAAU,cACnBnG,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAKG,eAAgBC,IAAcC,GAAI,GAAvC,mBAGAvG,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAKK,GAAI,GACPvG,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAaM,KAAK,SAASE,MAAOd,KAAKC,MAAMjG,UAAW+G,SAAUf,KAAKC,MAAMmG,aAAcpF,UAAWvB,mBA3CjG9E,aAuD7BoL,EAAiBb,YArFE,SAACjD,EAAOkD,GACzB,MAAO,CACLjF,OAAQ+B,EAAMmD,UAAUxL,aACxBqM,WAAYhE,EAAMmD,UAAUvL,iBAC5BiH,MAAOmB,EAAMmD,UAAUtL,WACvBqB,OAAQ8G,EAAMmD,UAAUrL,YACxBC,UAAWiI,EAAMmD,UAAUpL,YAIT,SAACqL,EAAUF,GAC/B,MAAO,CACLQ,eAAgB,WACdN,EAlmBG,CACLzE,KAAM,kBAmmBNuF,mBAAoB,WAClBd,EA/lBG,CACLzE,KAAM,uBAgmBNG,SAAU,SAACrB,GACT2F,EA5lBG,CACLzE,KAAM,YACNE,MA0lBoBpB,EAAM2B,OAAOP,SAEjCoF,eAAgB,SAACxG,GACf2F,EAxlBG,CACLzE,KAAM,mBACNE,MAslB0BpB,EAAM2B,OAAOP,SAEvCsF,aAAc,SAAC1G,GACb2F,EAplBG,CACLzE,KAAM,iBACNE,MAklBwBpB,EAAM2B,OAAOP,WA4DxBoE,CAAmCa,GAEpD,IAcMM,mLAGF,OACEjM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAO/F,UAAU,gBACfH,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAACgM,EAAD,OAEFlM,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAO/F,UAAU,oBACfH,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAO/F,UAAU,iBACfH,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAMc,YAAU,GACdhH,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAWC,UAAU,cACnBnG,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAKG,eAAgBC,IAAcC,GAAI,GAAvC,mBAGAvG,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAKK,GAAI,GACPvG,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAaM,KAAK,SAASE,MAAOd,KAAKC,MAAMsG,MAAOxF,SAAUf,KAAKC,MAAMuG,YAAaxF,UAAWvB,QAKzGrF,EAAAC,EAAAC,cAACgG,EAAA,EAAD,KACElG,EAAAC,EAAAC,cAACmM,EAAD,MAEArM,EAAAC,EAAAC,cAACoM,EAAD,MAEAtM,EAAAC,EAAAC,cAACqM,EAAD,gBA5BahM,aAuCV0L,EAHfA,EAAanB,YAlDW,SAACjD,EAAOkD,GAC9B,MAAO,CACLoB,MAAOtE,EAAMmD,UAAU9L,WAIA,SAAC+L,EAAUF,GACpC,MAAO,CACLqB,YAAa,SAAC9G,GACZ2F,EA7tBG,CACLzE,KAAM,YACNE,MA2tBoBpB,EAAM2B,OAAOP,WAyCxBoE,CAA6CmB,GCl2BpDO,mLAIF,OACExM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAO/F,UAAU,eACfH,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAO/F,UAAU,eACfH,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAMc,YAAU,GACdhH,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAWC,UAAU,SACnBnG,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAKG,eAAgBC,IAAcC,GAAI,GAAvC,eAGAvG,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAKK,GAAI,GACPvG,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAaM,KAAK,SAAS0E,IAAI,IAAIC,IAAI,MAAM1E,KAAK,MAAMC,MAAOd,KAAKC,MAAM7B,MAAO2C,SAAUf,KAAKC,MAAM4G,gBAG1GzM,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAWC,UAAU,QACnBnG,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAKG,eAAgBC,IAAcC,GAAI,GAAvC,cAGAvG,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAKK,GAAI,GACPvG,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAaM,KAAK,SAASC,KAAK,MAAMC,MAAOd,KAAKC,MAAM/F,KAAM6G,SAAUf,KAAKC,MAAM6G,0BAvBjFnM,aAoCLiM,EAFfA,EAAQ1B,YApDW,SAACjD,EAAOkD,GACzB,MAAO,CACL/G,MAAO6D,EAAM8E,MAAM9M,SACnBC,KAAM+H,EAAM8E,MAAM7M,OAIA,SAACmL,EAAUF,GAC/B,MAAO,CACL0B,YAAa,SAACnH,GACZ2F,EAxBG,CACLzE,KAAM,sBACNE,MAsB4BhJ,WAAW4H,EAAM2B,OAAOP,UAEpDgG,WAAY,SAACpH,GACX2F,EApBG,CACLzE,KAAM,iBACNE,MAkBwBhJ,WAAW4H,EAAM2B,OAAOP,YAuC5CoE,CAAmC0B,GC0FrCnH,UAAe,SAACC,GACF,UAAdA,EAAMC,MAAsC,IAAnBD,EAAME,UACjCF,EAAMG,mBAIJmH,mLAGF,IAAIC,EAAoB,GAKxB,OAJIjH,KAAKC,MAAM5I,cACb4P,EAAoB,UAIpB7M,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAO/F,UAAU,aACfH,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAc/F,UAAU,YAAY2M,QAAQ,aAAaC,MAAO,CAAEC,OAAQ,YACxEhN,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAeoF,OAAO,gBAAgBnL,UAAU,IAAhD,+DACAH,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CACI+G,GAAG,aACHzG,KAAK,OACL0G,OAAO,OACPvG,SAAUf,KAAKC,MAAMsH,YACrBJ,MAAO,CAAEK,QAAS,WAGxBpN,EAAAC,EAAAC,cAACgG,EAAA,EAAD,eAAcN,KAAKC,MAAMhJ,KAAzB,IAA+BmD,EAAAC,EAAAC,cAAA,WAA/B,cAAiD0F,KAAKC,MAAM/I,SAASuQ,KAAK,MAA1E,IAAkFrN,EAAAC,EAAAC,cAAA,WAAlF,sBAA2G0F,KAAKC,MAAM9I,SAASgE,QAC/Hf,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAMc,YAAU,GACdhH,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAWC,UAAU,YACnBnG,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAKG,eAAgBC,IAAcC,GAAI,GAAvC,QAGAvG,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAKK,GAAI,GACPvG,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAaM,KAAK,SAASE,MAAOd,KAAKC,MAAM7I,KAAM2J,SAAUf,KAAKC,MAAMyH,QAAS1G,UAAWvB,OAIlGrF,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAeoF,OAAO,oBAAoBnL,UAAW0M,EAAmBzF,QAASxB,KAAKC,MAAM0H,mBAA5F,gCACAvN,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,oCACAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGO,KAAK,kCAAR,yBACRT,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGO,KAAK,6CAAR,2BACRT,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGO,KAAK,8CAAR,iCACRT,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGO,KAAK,2CAAR,wBACRT,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGO,KAAK,8DAAR,wBACRT,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGO,KAAK,mCAAR,mBAGVT,EAAAC,EAAAC,cAAA,oCACAF,EAAAC,EAAAC,cAAA,6NACAF,EAAAC,EAAAC,cAAA,8FACAF,EAAAC,EAAAC,cAAA,8OACAF,EAAAC,EAAAC,cAAA,oPACAF,EAAAC,EAAAC,cAAA,yCAlDaK,aA0DRqM,EAFfA,EAAW9B,YAtLM,SAACjD,EAAOkD,GACvB,MAAO,CACLlO,KAAMgL,EAAM2F,KAAK3Q,KACjBC,SAAU+K,EAAM2F,KAAK1Q,SACrBC,SAAU8K,EAAM2F,KAAKzQ,SACrBC,KAAM6K,EAAM2F,KAAKxQ,KACjBC,YAAa4K,EAAM2F,KAAKvQ,cAKR,SAACgO,EAAUF,GAE7B,IAkDI0C,EAAe,SAACD,GAClB,IAAIE,EAAK,CACTA,SAAc,GACdA,SAAc,IAEVC,EAAS,IAAIC,WAEjBD,EAAOE,OAAS,SAACvI,GAIf,IAHA,IACIwI,EADOH,EAAOI,OACDC,MAAM,MACnBC,GAAa,EACRC,EAAK,EAAGA,EAAKJ,EAAM/M,OAAQmN,IAAM,CACxC,IAAIC,EAAOL,EAAMI,GAAIE,OACrB,GAAoB,IAAhBD,EAAKpN,SAIiB,IAAtBoN,EAAKE,QAAQ,MAAeJ,GAC9BP,EAAG5Q,SAAS4H,KAAKoJ,EAAMI,IAGC,IAAtBC,EAAKE,QAAQ,MAAY,CAC3BJ,GAAa,EAEb,IAAIK,EAAeH,EAAKH,MAAM,OAC9B,GAA4B,IAAxBM,EAAavN,OAAc,CAE7BwN,QAAQC,IAAIF,GACZ,SAEFZ,EAAG3Q,SAAS2H,KAAK,CAAChH,WAAW4Q,EAAa,IAAK5Q,WAAW4Q,EAAa,OAI3ErD,EArHG,CACLzE,KAAM,mBACNE,MAmH0BgH,EAAG5Q,WAC3BmO,EApIG,CACLzE,KAAM,oBACNzJ,SA6CgB,SAAC0R,GAIjB,IAHA,IAAI1R,EAAW,GACX2R,OAAWlR,EACXmR,EAAY1K,KAAKC,GAAK,GACjBgK,EAAK,EAAGA,EAAKO,EAAU1N,OAAQmN,IAAM,CAC5C,IAAIU,EAAOH,EAAUP,GACrB,GAAIQ,EACF,GAAIzK,KAAKW,IAAIgK,EAAK,GAAKF,EAAS,IAAMC,EAEpC5R,EAAS2H,KAAK,CACA/D,EAAG+N,EAAS,GAAKzK,KAAKG,IAAIsK,EAAS,IACnC9N,EAAG8N,EAAS,GAAKzK,KAAKE,IAAIuK,EAAS,IACnC7N,EAAG,UAEZ,CAEL,IAAIgO,EAAaD,EAAK,GAAKF,EAAS,GAChCI,EAAUH,EAAY1K,KAAKW,IAAIiK,IAAeD,EAAK,GAAKF,EAAS,IACjEK,EAAML,EAAS,GACnB,GAAIG,EAAa,EAEf,IADA,IAAIG,EAAkB,EACbhL,EAAQ0K,EAAS,GAAI1K,EAAQ4K,EAAK,KACzC7R,EAAS2H,KAAK,CACA/D,EAAGoO,EAAM9K,KAAKG,IAAIJ,GAClBpD,EAAGmO,EAAM9K,KAAKE,IAAIH,GAClBnD,EAAG,QAEbmO,IAAoB,MANqBhL,GAAS2K,EAAWI,GAAOD,QAW1E,IAAK,IAAI9K,EAAQ0K,EAAS,GAAI1K,EAAQ4K,EAAK,KACzC7R,EAAS2H,KAAK,CACA/D,EAAGoO,EAAM9K,KAAKG,IAAIJ,GAClBpD,EAAGmO,EAAM9K,KAAKE,IAAIH,GAClBnD,EAAG,QAEbmO,IAAoB,MANqBhL,GAAS2K,EAAWI,GAAOD,IAahFJ,EAAWE,EAEb,OAAO7R,EAsCoBkS,CAAYvB,EAAG3Q,aAG1C4Q,EAAOuB,WAAW1B,IAGpB,MAAO,CACLL,YAAa,SAAC7H,GACZ,IAAIkI,EAAOlI,EAAM2B,OAAOkI,MAAM,GAC9BZ,QAAQC,IAAIhB,GACZvC,EAvIG,CACLzE,KAAM,gBACNE,MAqIuB8G,EAAK3Q,OAC1B4Q,EAAaD,IAEfF,QAAS,SAAChI,GACR2F,EA7HG,CACLzE,KAAM,gBACNE,MA2HuBhJ,WAAW4H,EAAM2B,OAAOP,UAE/C6G,kBAAmB,SAACjI,GAzHa,IAAEoB,EA0HjCuE,EAzHG,CACLzE,KAAM,2BACNE,MAAOA,OA0LAoE,CAA+B8B,GCrNpCwC,uLAEU7J,GACZK,KAAKC,MAAMoF,SATN,CACLzE,KAAM,eACNE,MAOgCnB,qCAIhC,OACGvF,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAMmJ,iBAAkB,EAAGC,SAAU1J,KAAK2J,aAAaC,KAAK5J,MAAOqH,GAAG,aACpEjN,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAKuJ,SAAU,EAAGrJ,MAAM,UACtBpG,EAAAC,EAAAC,cAACwP,EAAD,OAEF1P,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAKuJ,SAAU,EAAGrJ,MAAM,SACtBpG,EAAAC,EAAAC,cAACyP,EAAD,OAEF3P,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAKuJ,SAAU,EAAGrJ,MAAM,QACtBpG,EAAAC,EAAAC,cAAC0P,EAAD,eAhBarP,aAwBT6O,EAFfA,EAAYtE,cAAUsE,GCiFhBS,kMAEF,IAAIlK,EAAkB,GAKtB,OAJIC,KAAKC,MAAMC,SACbH,EAAkB,UAIlB3F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAeoF,OAAO,sBAAsBnL,UAAWwF,EAAiByB,QAASxB,KAAKC,MAAM0F,gBAA5F,uCACAvL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAO/F,UAAU,gBAAgB2G,aAAW,EAACC,SAAUnB,KAAKC,MAAMkB,UAChE/G,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAMc,YAAU,GACdhH,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAW/F,UAAU,iBAAiBgG,UAAU,SAC9CnG,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAK/F,UAAU,iBAAiBkG,eAAgBC,IAAcC,GAAI,GAAlE,cAGAvG,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAKK,GAAI,EAAGuJ,SAAU,GACpB9P,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAaM,KAAK,SAASE,MAAOd,KAAKC,MAAMpI,MAAOkJ,SAAUf,KAAKC,MAAMkK,iBAG7E/P,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAW/F,UAAU,iBAAiBgG,UAAU,SAC9CnG,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAK/F,UAAU,iBAAiBkG,eAAgBC,IAAcC,GAAI,GAAlE,cAGAvG,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAKK,GAAI,EAAGuJ,SAAU,GACpB9P,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAaM,KAAK,SAASE,MAAOd,KAAKC,MAAMlI,MAAOgJ,SAAUf,KAAKC,MAAMmK,iBAG7EhQ,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAW/F,UAAU,iBAAiBgG,UAAU,SAC9CnG,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAK/F,UAAU,iBAAiBkG,eAAgBC,IAAcC,GAAI,GAAlE,cAGAvG,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAKK,GAAI,EAAGuJ,SAAU,GACpB9P,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAaM,KAAK,SAASE,MAAOd,KAAKC,MAAMjI,MAAO+I,SAAUf,KAAKC,MAAMoK,iBAG7EjQ,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAW/F,UAAU,iBAAiBgG,UAAU,SAC9CnG,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAK/F,UAAU,iBAAiBkG,eAAgBC,IAAcC,GAAI,GAAlE,cAGAvG,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAKK,GAAI,EAAGuJ,SAAU,GACpB9P,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAaM,KAAK,SAASE,MAAOd,KAAKC,MAAMhI,MAAO8I,SAAUf,KAAKC,MAAMqK,iBAG7ElQ,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAW/F,UAAU,iBAAiBgG,UAAU,SAC9CnG,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAK/F,UAAU,iBAAiBkG,eAAgBC,IAAcC,GAAI,GAAlE,gBAGAvG,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAKG,eAAgBC,IAAcC,GAAI,EAAGuJ,SAAU,GAClD9P,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAmB+G,GAAG,aAAazG,KAAK,WAAW3J,KAAK,SAAS6J,MAAOd,KAAKC,MAAMsK,OAAQxJ,SAAUf,KAAKC,MAAMuK,gBAC9GpQ,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAcQ,MAAO,GAArB,cACA1G,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAcQ,MAAO,GAArB,cACA1G,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAcQ,MAAO,GAArB,eACA1G,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAcQ,MAAO,GAArB,6BAtDOnG,cAkE3BsP,EAAe/E,YArGa,SAACjD,EAAOkD,GAClC,MAAO,CACLhE,SAAUc,EAAMwI,IAAI3T,oBACpBoJ,OAAU+B,EAAMyI,QAAQ/S,YACxBE,MAAUoK,EAAMyI,QAAQ7S,MACxBE,MAAUkK,EAAMyI,QAAQ3S,MACxBC,MAAUiK,EAAMyI,QAAQ1S,MACxBC,MAAUgK,EAAMyI,QAAQzS,MACxBsS,OAAUtI,EAAMyI,QAAQvS,aAIG,SAACkN,EAAUF,GACxC,MAAO,CACLQ,eAAgB,SAACjG,GACf2F,GAlFJ7N,aAAamT,QAAQ,sBAAuB,GACrC,CACL/J,KAAM,mCAkFNuJ,aAAc,SAACzK,GA1DW,IAAEoB,EA2D1BuE,GA3D0BvE,EA2DFhJ,WAAW4H,EAAM2B,OAAOP,OAzDpDtJ,aAAamT,QAAQ,gBAAiB7J,GAC/B,CACLF,KAAM,YACNE,MAAOA,MAwDPsJ,aAAc,SAAC1K,GApDW,IAAEoB,EAqD1BuE,GArD0BvE,EAqDFhJ,WAAW4H,EAAM2B,OAAOP,OApDpDtJ,aAAamT,QAAQ,gBAAiB7J,GAC/B,CACLF,KAAM,YACNE,MAAOA,MAmDPuJ,aAAc,SAAC3K,GA/CW,IAAEoB,EAgD1BuE,GAhD0BvE,EAgDFhJ,WAAW4H,EAAM2B,OAAOP,OA/CpDtJ,aAAamT,QAAQ,gBAAiB7J,GAC/B,CACLF,KAAM,YACNE,MAAOA,MA8CPwJ,aAAc,SAAC5K,GA1CW,IAAEoB,EA2C1BuE,GA3C0BvE,EA2CFhJ,WAAW4H,EAAM2B,OAAOP,OA1CpDtJ,aAAamT,QAAQ,gBAAiB7J,GAC/B,CACLF,KAAM,YACNE,MAAOA,MAyCP0J,eAAgB,SAAC1J,GACfuE,EA9E8B,SAACvE,GACnC,MAAO,CACLF,KAAM,0BACNE,MAAOA,GA2EI8J,CAAqB9J,OAuErBoE,CAAqD+E,GAEpE,IAuBMY,mLAEF,IAAI9K,EAAkB,GAClBC,KAAKC,MAAMC,SACbH,EAAkB,UAGpB,IAAM+K,EAAwB9K,KAAKC,MAAM8K,UAAY,SAAW,KAEhE,OACE3Q,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAeoF,OAAO,gBAAgBnL,UAAWwF,EAAiByB,QAASxB,KAAKC,MAAM0F,gBAAtF,qCACAvL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAO/F,UAAU,gBAAgB2G,aAAW,EAACC,SAAUnB,KAAKC,MAAMkB,UAChE/G,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAMc,YAAU,GACdhH,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAW/F,UAAU,iBAAiBgG,UAAU,cAC9CnG,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAK/F,UAAU,iBAAiBkG,eAAgBC,IAAcC,GAAI,GAAlE,mBAGAvG,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAKK,GAAI,EAAGuJ,SAAU,GACpB9P,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAaM,KAAK,SAASE,MAAOd,KAAKC,MAAM/H,WAAY6I,SAAUf,KAAKC,MAAM+K,uBAIpF5Q,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAeoF,OAAO,kBAAkBnL,UAAWuQ,EAAsBtJ,QAASxB,KAAKC,MAAMgL,iBAA7F,4EAxBgBtQ,aAgC5BkQ,EAAgB3F,YAvDa,SAACjD,EAAOkD,GACnC,MAAO,CACLhE,SAAYc,EAAMwI,IAAI1T,qBACtBmJ,QAAa+B,EAAMyI,QAAQ/S,YAC3BO,WAAY+J,EAAMyI,QAAQxS,WAC1B6S,UAAY9I,EAAMyI,QAAQtS,iBAIE,SAACiN,EAAUF,GACzC,MAAO,CACLQ,eAAgB,SAACjG,GACf2F,GA/KJ7N,aAAamT,QAAQ,sBAAuB,GACrC,CACL/J,KAAM,oCA+KNoK,kBAAmB,SAACtL,GA7HQ,IAAEoB,EA8H5BuE,GA9H4BvE,EA8HFhJ,WAAW4H,EAAM2B,OAAOP,OA7HtDtJ,aAAamT,QAAQ,iBAAkB7J,GAChC,CACLF,KAAM,iBACNE,MAAOA,MA4HPmK,gBAAiB,WACf5F,EA9KG,CACLzE,KAAM,gCAkNMsE,CAAuD2F,OAmBxDK,mLAdX,OACE9Q,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAO/F,UAAU,iBACfH,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAACgG,EAAA,EAAD,KACElG,EAAAC,EAAAC,cAAC6Q,EAAD,MACA/Q,EAAAC,EAAAC,cAAC8Q,EAAD,gBATkBzQ,iDCnO9B,SAAS0Q,GAAc/G,EAAOgH,EAAQC,GACpC,IAAIC,EAAW,EAaf,OAZIlH,EAAMvJ,GAAKuQ,EACbE,GAAY,EACHlH,EAAMvJ,EAAIuQ,IACnBE,GAAY,GAGVlH,EAAMtJ,GAAKuQ,EACbC,GAAY,EACHlH,EAAMtJ,EAAIuQ,IACnBC,GAAY,GAGPA,EAIT,SAASC,GAAaC,EAAYC,EAAUC,EAAYC,GAEtD,IAAItD,EAAOoD,EAASG,QAAQC,SAASL,GACjCM,EAAOH,EAASC,QAAQC,SAASH,GACjCK,EAAoB1D,EAAKxN,EAAIiR,EAAKhR,EAAIuN,EAAKvN,EAAIgR,EAAKjR,EAGxD,GAA0B,IAAtBkR,EACF,OAAO,KAGT,IAAIC,EAAON,EAAWE,QAAQC,SAASL,GACnCS,GAAKD,EAAKnR,EAAIiR,EAAKhR,EAAIkR,EAAKlR,EAAIgR,EAAKjR,GAAKkR,EAC9C,GAAIE,EAAI,GAAKA,GAAK,EAChB,OAAO,KAGT,IAAIC,GAAKF,EAAKnR,EAAIwN,EAAKvN,EAAIkR,EAAKlR,EAAIuN,EAAKxN,GAAKkR,EAC9C,OAAIG,EAAI,GAAKA,GAAK,EACT,KAGUV,EAAWI,QAAQO,IAAI9D,EAAKuD,QAAQQ,SAASC,KAAOJ,EAAGA,KAQ5E,SAASK,GAASd,EAAYC,EAAUL,EAAQC,GAE9C,IAAIkB,EAAiBpB,GAAcK,EAAYJ,EAAQC,GACnDmB,EAAerB,GAAcM,EAAUL,EAAQC,GAEnD,GAAuB,IAAnBkB,GAA8C,IAAjBC,EAE/B,MAAO,CAAChB,EAAYC,GAGtB,GAAIc,IAAmBC,EAErB,MAAO,CAACC,GAAcjB,EAAYJ,EAAQC,GAASoB,GAAchB,EAAUL,EAAQC,IAGrF,GAAIkB,EAAiBC,EAEnB,MAAO,CAACC,GAAcjB,EAAYJ,EAAQC,GAASoB,GAAchB,EAAUL,EAAQC,IAGrF,GAAuB,IAAnBkB,EAA0B,CAG5B,IAAIlE,EAAO,CAACmD,GAGZ,OAFAnD,EAAKzJ,KAAK8N,GAAWlB,EAAYC,EAAUL,EAAQC,IACnDhD,EAAKzJ,KAAK6N,GAAchB,EAAUL,EAAQC,IACnChD,EAGT,GAAqB,IAAjBmE,EAEF,MAAO,CAACE,GAAWjB,EAAUD,EAAYJ,EAAQC,GAASI,GAoB5D,IAbA,IAAMkB,EAAQ,CAEZ,CAACN,MAAQjB,GAASC,GAASgB,MAAQjB,EAAQC,IAE3C,CAACgB,KAAOjB,GAASC,GAASgB,KAAOjB,EAAQC,IAEzC,CAACgB,MAAQjB,GAASC,GAASgB,KAAOjB,GAASC,IAE3C,CAACgB,MAAQjB,EAAQC,GAASgB,KAAOjB,EAAQC,KAIvCuB,EAAgB,GACXC,EAAE,EAAGA,EAAEF,EAAM1R,OAAQ4R,IAAK,CACjC,IAAIC,EAAYvB,GAAac,KAAOU,WAAWvB,GAClBa,KAAOU,WAAWtB,GAClBkB,EAAME,GAAG,GACTF,EAAME,GAAG,IAClCC,GACFF,EAAchO,KAAKhE,EAAOkS,EAAUjS,EAAGiS,EAAUhS,IAIrD,GAA6B,IAAzB8R,EAAc3R,OAAc,CAC9B,GAA6B,IAAzB2R,EAAc3R,OAIhB,MADAwN,QAAQC,IAAIkE,GACNI,MAAM,2BAKd,GAAIX,KAAOU,WAAWH,EAAc,IAAIf,SAASQ,KAAOU,WAAWvB,IAAayB,WAC5EZ,KAAOU,WAAWH,EAAc,IAAIf,SAASQ,KAAOU,WAAWvB,IAAayB,WAAY,CAC1F,IAAIC,EAAON,EAAc,GACzBA,EAAc,GAAKA,EAAc,GACjCA,EAAc,GAAKM,EAErB,SAAAlO,OAAW4N,EAAX,CAA0BH,GAAchB,EAAUL,EAAQC,KAS5D,IAAI8B,EAAWd,KAAOU,WAAWvB,GAAYW,IAAIE,KAAOU,WAAWtB,IAAWW,SAASC,KAAO,GAAK,KAEnG,SAAArN,OAAApB,OAAAC,EAAA,EAAAD,CAAW0O,GAASd,EAAY2B,EAAU/B,EAAQC,IAAlDzN,OAAAC,EAAA,EAAAD,CACW0O,GAASa,EAAY1B,EAAUL,EAAQC,KAKpD,SAASoB,GAAc9N,EAAQyM,EAAQC,GACrC,OAAOzQ,EAAOuD,KAAKiH,IAAIgG,EAAQjN,KAAKkH,KAAK+F,EAAQzM,EAAO9D,IAC1CsD,KAAKiH,IAAIiG,EAAQlN,KAAKkH,KAAKgG,EAAQ1M,EAAO7D,KAM1D,SAAS4R,GAAWU,EAAMC,EAAKjC,EAAQC,GACrC,IAAIiC,EAAKF,EAAKvS,EAAIwS,EAAIxS,EAClB0S,EAAKH,EAAKtS,EAAIuS,EAAIvS,EAElB0S,EAAQ5S,EAAOyS,EAAIxS,EAAGwS,EAAIvS,GAC1B2S,EAAW,EACf,OAAIJ,EAAIxS,GAAKuQ,GAAUiC,EAAIxS,EAAIuQ,GACzBiC,EAAIxS,GAAKuQ,EAEXoC,EAAM3S,GAAKuQ,EAGXoC,EAAM3S,EAAIuQ,EAEZqC,GAAYD,EAAM3S,EAAIuS,EAAKvS,GAAKyS,EAChCE,EAAM1S,EAAIsS,EAAKtS,EAAI2S,EAAWF,EAEvBb,GAAWU,EAAMI,EAAOpC,EAAQC,MAErCgC,EAAIvS,GAAKuQ,GAAUgC,EAAIvS,EAAIuQ,KACzBgC,EAAIvS,GAAKuQ,EAEXmC,EAAM1S,GAAKuQ,EAGXmC,EAAM1S,EAAIuQ,EAEZoC,GAAYD,EAAM1S,EAAIsS,EAAKtS,GAAKyS,EAChCC,EAAM3S,EAAIuS,EAAKvS,EAAI4S,EAAWH,GAEzBE,GAIT,SAASE,GAAYC,EAAOC,EAAK5T,GAC/B,IAAM+I,EAAa4K,EAAMzP,QACnB2P,EAAWD,EAAI1P,QACjByF,EAAsB,EAARxF,KAAKC,GAAU,IAC7B2K,GAAe8E,EAAW9K,EAAc,EAAM5E,KAAKC,KAAO,EAAMD,KAAKC,IACrE2K,EAAa5K,KAAKC,KACpB2K,GAAc,EAAM5K,KAAKC,IAEvB2K,EAAa,IACfpF,IAAe,GAIjB,IADA,IAAImK,EAAc,GACTnN,EAAO,EAAGA,EAAQoI,EAAWpF,EAAchD,IAClDmN,EAAYlP,KAAKyN,KAAOrS,EAAOmE,KAAKE,IAAIsF,EAAahD,EAAOoC,GACpC/I,EAAOmE,KAAKG,IAAIqF,EAAahD,EAAOoC,KAE9D,OAAO+K,EAGT,SAASC,GAAUJ,EAAOC,EAAKxJ,GAC7B,OAAIuJ,EAAMF,SAASrJ,GAASwJ,EAAIH,SAASrJ,GAASuJ,EAAMF,SAASG,GAAO,KA8C1E,SAASI,GAAexC,EAAYC,EAAUzR,GAoB5C,IAAM2T,EAAQtB,KAAOU,WAAWvB,GAC1BoC,EAAMvB,KAAOU,WAAWtB,GAGxBwC,EAAYN,EAAMO,YAClBC,EAAUP,EAAIM,YAGpB,GAAID,GAAajU,GAAQmU,GAAWnU,EAElC,MAAO,CAACwR,EAAYC,GAItB,GAAIkC,EAAMF,SAASG,GAAO,KACvB,MAAO,CAACQ,GAAoBT,EAAO3T,IAGtC,IAAI4S,EA7EN,SAA0Be,EAAOC,EAAK5T,GACpC,IAAIqU,EAAYT,EAAIhC,QAAQC,SAAS8B,GAAO/B,QAAQ0C,YAEhDrC,GAAmB,EAAfoC,EAAUxT,EAAW8S,EAAM9S,GAAmB,EAAfwT,EAAUvT,EAAW6S,EAAM7S,EAG9DyT,EAFIF,EAAUzC,QAAQQ,SAASC,KAAOJ,EAAEA,IAAIE,IAAIwB,GAE7BO,YAEvB,GAAIK,GAAkBvU,EAEpB,MAAO,CACLuR,cAAc,EACdvJ,OAAQ,IAIZ,IAAIwM,EAAKrQ,KAAKsQ,KAAKzU,EAAKA,EAAOuU,EAAeA,GAE1CG,EAASL,EAAUzC,QAAQQ,SAASC,KAAOJ,EAAIuC,EAAGvC,EAAIuC,IAAKrC,IAAIwB,GAC/DgB,EAASN,EAAUzC,QAAQQ,SAASC,KAAOJ,EAAIuC,EAAGvC,EAAIuC,IAAKrC,IAAIwB,GAEnE,MAAO,CACLpC,cAAc,EACdvJ,OAAQ,CACN,CACEoC,MAAOsK,EACPE,GAAIb,GAAUJ,EAAOC,EAAKc,IAE5B,CACEtK,MAAOuK,EACPC,GAAIb,GAAUJ,EAAOC,EAAKe,MA+CZE,CAAiBlB,EAAOC,EAAK5T,GAEjD,IAAM4S,EAAcrB,aAGlB,OAAOmC,GAAYC,EAAOC,EAAK5T,GAIjC,IAAK4S,EAAc5K,OAAO,GAAG4M,KAAQhC,EAAc5K,OAAO,GAAG4M,GAC3D,OAAOlB,GAAYC,EAAOC,EAAK5T,GAIjC,GAAIiU,EAAYjU,EAAO,MAAUmU,EAAUnU,EAAO,KAAQ,CACxD,IAAIoK,EAAQwI,EAAc5K,OAAO,GAAGoC,MAChC0K,EAAclC,EAAc5K,OAAO,GAAGoC,MAE1C,SAAApF,OAAApB,OAAAC,EAAA,EAAAD,CACK8P,GAAYC,EAAOvJ,EAAOpK,IAD/B,CAEEoK,GAFFxG,OAAAC,EAAA,EAAAD,CAGK8P,GAAYoB,EAAalB,EAAK5T,KAKrC,GAAIiU,GAAajU,EAAM,CACrB,IAAI0U,EAAU9B,EAAc5K,OAAO,GAAG4M,IAAMzQ,KAAKW,IAAI8N,EAAc5K,OAAO,GAAGoC,MAAQuJ,GAAS,KAAUf,EAAc5K,OAAO,GAAGoC,MAAQwI,EAAc5K,OAAO,GAAGoC,MAChK,OACEuJ,GADF3O,OAAApB,OAAAC,EAAA,EAAAD,CAEK8P,GAAYgB,EAAQd,EAAK5T,IAF9B,CAGE4T,IAIF,OADAc,EAAS9B,EAAc5K,OAAO,GAAG4M,GAAKhC,EAAc5K,OAAO,GAAGoC,MAAQwI,EAAc5K,OAAO,GAAGoC,MAC9F,GAAApF,OAAApB,OAAAC,EAAA,EAAAD,CACK8P,GAAYC,EAAOe,EAAQ1U,IADhC,CAEE0U,EACAd,IAON,SAASQ,GAAoBzP,EAAQ3E,GACnC,IAAMoK,EAAQiI,KAAOU,WAAWpO,GAChC,GAAKyF,EAAMnJ,SAAWjB,EAAM,CAC1B,IAAI+U,EAAQ/U,EAAOoK,EAAMnJ,SACzB,OAAOmJ,EAAMgI,SAASC,KAAO0C,EAAOA,IAEpC,OAAO3K,EAMJ,aCzVP,SAAS2K,GAAOpQ,EAAQqQ,GACtB,IAAID,EAAQC,EAAa,IACzB,MAAO,CACLnU,EAAG8D,EAAO9D,EAAIkU,EACdjU,EAAG6D,EAAO7D,EAAIiU,EACdhU,EAAG4D,EAAO5D,GAyBP,IAAMmK,GAAY,SAAC+J,EAAMtQ,EAAQuQ,GACtC,IAAIC,EAAqBxQ,EAMzB,GALIsQ,EAAK5V,cAEP8V,EAAqBJ,GAAMI,EAAoB,IAASF,EAAK3V,UAAY4V,IAE3EC,EA3BF,SAAiBxQ,EAAQyQ,EAAUC,GACjC,MAAO,CACLxU,EAAG8D,EAAO9D,EAAIuU,EACdtU,EAAG6D,EAAO7D,EAAIuU,EACdtU,EAAG4D,EAAO5D,GAuBSuK,CAAO6J,EAAoBF,EAAK/V,aAAc+V,EAAK9V,cACpE8V,EAAK1V,YACT,CACE,IAAI+V,EAAcL,EAAK7V,UAAYoK,SAASyL,EAAKxV,iBAAmB,GAEhE4U,EADQa,EAAeI,EACF,EAAI,EAAI,GAAO,EACpCC,EAAclB,GAAaa,EAAiBI,GAAeL,EAAKzV,UAEhE6U,EAAY,IACdkB,GAAeD,EAAcL,EAAKzV,WAEpC2V,EAvDJ,SAAiBxQ,EAAQ6Q,GACvB,IAAItR,EAAQC,KAAKC,GAAK,IAAQoR,EAC9B,OAAO5U,EACE+D,EAAO9D,EAAIsD,KAAKE,IAAIH,GAASS,EAAO7D,EAAIqD,KAAKG,IAAIJ,GACjDS,EAAO9D,EAAIsD,KAAKG,IAAIJ,GAASS,EAAO7D,EAAIqD,KAAKE,IAAIH,GACjDS,EAAO5D,GAkDO0U,CAAON,EAAoBI,GAKlD,OAHIN,EAAKvV,eACPyV,EAjCJ,SAAgBxQ,EAAQsQ,EAAMS,GAC5B,IAAIxR,EAAQ+Q,EAAKpV,YAAc6V,EAAa,GAAK,EAAMvR,KAAKC,GACxDuR,EAAS,EAIb,OAHIV,EAAKtV,mBACPgW,EAAS,EAAMD,EAAa,GAAOT,EAAKnV,UAAY,KAE/C,CACLe,EAAG8D,EAAO9D,EAAI8U,EAASV,EAAKrV,WAAauE,KAAKE,IAAIH,GAClDpD,EAAG6D,EAAO7D,EAAI6U,EAASV,EAAKrV,WAAauE,KAAKG,IAAIJ,GAClDnD,EAAG4D,EAAO5D,GAwBW6U,CAAMT,EAAoBF,EAAMC,IAEhDC,GAGHU,GAAc,SAACzL,EAAOvF,EAAOE,GACjC,OAAIqF,EAAMvJ,GAAKgE,EAAM,IAGjBuF,EAAMtJ,GAAKiE,EAAO,IAGlBqF,EAAMvJ,EAAIgE,EAAM,GAGhBuF,EAAMtJ,EAAIiE,EAAO,KAkBvB,SAAS2N,GAAWU,EAAMC,EAAKjC,EAAQC,GACrC,IAAIiC,EAAKF,EAAKvS,EAAIwS,EAAIxS,EAClB0S,EAAKH,EAAKtS,EAAIuS,EAAIvS,EAElB0S,EAAQnB,KAAOgB,EAAIxS,EAAGwS,EAAIvS,GAC1B2S,EAAW,EACf,OAAIJ,EAAIxS,GAAKuQ,GAAUiC,EAAIxS,EAAIuQ,GACzBiC,EAAIxS,GAAKuQ,EAEXoC,EAAM3S,GAAKuQ,EAGXoC,EAAM3S,EAAIuQ,EAEZqC,GAAYD,EAAM3S,EAAIuS,EAAKvS,GAAKyS,EAChCE,EAAM1S,EAAIsS,EAAKtS,EAAI2S,EAAWF,EAEvBb,GAAWU,EAAMI,EAAOpC,EAAQC,MAErCgC,EAAIvS,GAAKuQ,GAAUgC,EAAIvS,EAAIuQ,KACzBgC,EAAIvS,GAAKuQ,EAEXmC,EAAM1S,GAAKuQ,EAGXmC,EAAM1S,EAAIuQ,EAEZoC,GAAYD,EAAM1S,EAAIsS,EAAKtS,GAAKyS,EAChCC,EAAM3S,EAAIuS,EAAKvS,EAAI4S,EAAWH,GAEzBE,GAGT,SAASsC,GAAWlC,EAAKxJ,GACvB,OAAIA,EAAMwH,QAAQC,SAAS+B,GAAK3S,SAAW,IAOtC,IAAM8U,GAAiB,SAAChO,EAAO9K,GACpC,IAAIuT,EAAUzI,EAAMyI,QACpB,GAAIvT,EAASgE,OAAS,EAAG,CACvB,GAAIuP,EAAQ/S,aAA6C,IAA9B+S,EAAQvS,WAAWgD,OAAc,CAS1D,IAAIqS,GAAM9C,EAAQ3S,MAAQ2S,EAAQ7S,OAAS,EACvC4V,GAAM/C,EAAQzS,MAAQyS,EAAQ1S,OAAS,EAEvC6K,EAAU,CACZ,CAAC9H,GAAIyS,EAAIxS,GAAIyS,GACb,CAAC1S,GAAIyS,EAAIxS,EAAIyS,GACb,CAAC1S,EAAIyS,EAAIxS,EAAIyS,GACb,CAAC1S,EAAIyS,EAAIxS,GAAIyS,IAEf9E,QAAQC,IAAI/F,GAEZ,IAQIqN,EARAC,EAAQhZ,EAAS,GACjBiZ,EAAOjZ,EAASA,EAASgE,OAAO,GAGhCjD,EAAamG,KAAKsQ,KAAKtQ,KAAKuE,IAAI,EAAI4K,EAAG,GAAOnP,KAAKuE,IAAI,EAAI6K,EAAI,IAAQ,EAEvE4C,EAAS9D,KAAOU,WAAWkD,GAC3BG,EAAQ/D,KAAOU,WAAWmD,GAE1B1R,EAAc,GAClB,GAAI2R,EAAOjC,aAAekC,EAAMlC,YAAa,CAE3C,IAAIa,EAAQ/W,EAAaoY,EAAMlC,YAC/B8B,EAAWI,EAAMhE,SAASC,KAAO0C,EAAMA,IACvCvQ,EAAYI,KAAZhB,OAAAyS,EAAA,EAAAzS,CAAA,GAAsBsS,EAAtB,CAA4BrV,EAAGmV,EAASnV,EAAGC,EAAGkV,EAASlV,SAClD,CACL,IAAIiU,EAAQ/W,EAAamY,EAAOjC,YAChC8B,EAAWG,EAAO/D,SAASC,KAAO0C,EAAMA,IACxCvQ,EAAYI,KAAZhB,OAAAyS,EAAA,EAAAzS,CAAA,GAAsBqS,EAAtB,CAA6BpV,EAAGmV,EAASnV,EAAGC,EAAGkV,EAASlV,KAE1D2N,QAAQC,IAAIsH,GACZvH,QAAQC,IAAI4E,GAEZ,IAAIgD,EAAa,EAoBjB,IAnBIN,EAASnV,GAAKyS,EAEhBgD,EAAa,EACJN,EAASnV,IAAMyS,EAExBgD,EAAa,EACJN,EAASlV,GAAKyS,EAEvB+C,EAAa,EACJN,EAASlV,IAAMyS,EAExB+C,EAAa,GAEb7H,QAAQC,IAAI,SACZ4H,EAAa,GAKRA,IAAe9F,EAAQvS,WAAW,IACvCwQ,QAAQC,IAAI,eAAiB4H,GAC7B9R,EAAYI,KAAZhB,OAAAyS,EAAA,EAAAzS,CAAA,GAAsBqS,EAAtB,CAA6BpV,EAAG8H,EAAQ2N,GAAYzV,EAAGC,EAAG6H,EAAQ2N,GAAYxV,MAC9EwV,GAAc,GACG,IACfA,EAAa,GAGjB7H,QAAQC,IAAI,eAAiB4H,GAC7B9R,EAAYI,KAAZhB,OAAAyS,EAAA,EAAAzS,CAAA,GAAsBqS,EAAtB,CAA6BpV,EAAG8H,EAAQ2N,GAAYzV,EAAGC,EAAG6H,EAAQ2N,GAAYxV,KAE9E2N,QAAQC,IAAIlK,GAGVvH,EAFEkZ,EAAOjC,aAAekC,EAAMlC,YAEnBjX,EAAS+H,OAAOR,GAEhBA,EAAYhI,UAAUwI,OAAO/H,GAG5C,GAAIuT,EAAQtS,iBAAmBsS,EAAQ/S,YAAa,CAElD,IAAIwY,EAAQhZ,EAAS,GACjBiZ,EAAOjZ,EAASA,EAASgE,OAAO,GAKhCjD,EAAawS,EAAQxS,WACrBmY,EAAS9D,KAAOU,WAAWkD,GAC3BG,EAAQ/D,KAAOU,WAAWmD,GAC9B,GAAIC,EAAOjC,aAAekC,EAAMlC,YAAa,CAE3C,IAAIa,EAAQ/W,EAAaoY,EAAMlC,YAC3B8B,EAAWI,EAAMhE,SAASC,KAAO0C,EAAMA,IAC3C9X,EAASsZ,QAAQ3V,EAAO,EAAK,EAAKqV,EAAMlV,IACxC9D,EAAS2H,KAAKhE,EAAOoV,EAASnV,EAAGmV,EAASlV,EAAGoV,EAAKnV,QAC7C,CACL,IAAIgU,EAAQ/W,EAAamY,EAAOjC,YAC5B8B,EAAWG,EAAO/D,SAASC,KAAO0C,EAAMA,IAC5C9X,EAAS2H,KAAKhE,EAAO,EAAK,EAAKqV,EAAMlV,IACrC9D,EAASsZ,QAAQ3V,EAAOoV,EAASnV,EAAGmV,EAASlV,EAAGoV,EAAKnV,MAkB3D,OAdIgH,EAAMwI,IAAI/T,SACZS,EAAST,UAGTS,EADEuT,EAAQ/S,YD4GmB,SAASR,EAAUmU,EAAQC,GAC1D,IAAImF,EAAgB,GAChB5H,EAAW,KAEXwC,EAAS,IACXA,IAAW,GAETC,EAAS,IACXA,IAAW,GAEb,IAAK,IAAIvC,EAAK,EAAGA,EAAK7R,EAASgE,OAAQ6N,IAAQ,CAC7C,IAAInK,EAAS1H,EAAS6R,GACtB,GAAIF,EAEF,IADA,IAAIP,EAAOiE,GAAS1D,EAAUjK,EAAQyM,EAAQC,GACrCoF,EAAG,EAAGA,EAAGpI,EAAKpN,OAAQwV,IACzBpI,EAAKoI,KAAQ7H,GACf4H,EAAc5R,KAAKyJ,EAAKoI,SAI5BD,EAAc5R,KAAK6N,GAAc9N,EAAQyM,EAAQC,IAEnDzC,EAAWjK,EAKbiK,EAAW,KAEX,IADA,IAAI8H,EAAkB,GACbzO,EAAE,EAAGA,EAAEuO,EAAcvV,OAAQgH,IAAK,CACzC,GAAI2G,EAAU,CACZ,IAAI+E,EAAQtB,KAAOU,WAAWyD,EAAcvO,IACxC2L,EAAMvB,KAAOU,WAAWnE,GACxB+E,EAAMF,SAASG,GAAO,MACxB8C,EAAgB9R,KAAK6N,GAAc+D,EAAcvO,GAAImJ,EAAQC,SAG/DqF,EAAgB9R,KAAK6N,GAAc+D,EAAcvO,GAAImJ,EAAQC,IAE/DzC,EAAW4H,EAAcvO,GAG3B,OAAOyO,ECrJMC,CAAkB1Z,GACCuT,EAAQ3S,MAAQ2S,EAAQ7S,OAAO,GAC/B6S,EAAQzS,MAAQyS,EAAQ1S,OAAO,GDsJ/B,SAASb,EAAU+C,GAKnD,IAHA,IAAIwW,EAAgB,GAChB5H,EAAW,KAENE,EAAK,EAAGA,EAAK7R,EAASgE,OAAQ6N,IAAQ,CAC7C,IAAInK,EAAS1H,EAAS6R,GACtB,GAAIF,EAEF,IADA,IAAIP,EAAO2F,GAAepF,EAAUjK,EAAQ3E,GACnCyW,EAAG,EAAGA,EAAGpI,EAAKpN,OAAQwV,IACzBpI,EAAKoI,KAAQ7H,GACf4H,EAAc5R,KAAKyJ,EAAKoI,SAI5BD,EAAc5R,KAAKwP,GAAoBzP,EAAQ3E,IAEjD4O,EAAWjK,EAKbiK,EAAW,KAEX,IADA,IAAI8H,EAAkB,GACbzO,EAAE,EAAGA,EAAEuO,EAAcvV,OAAQgH,IAAK,CACzC,GAAI2G,EAAU,CACZ,IAAI+E,EAAQtB,KAAOU,WAAWyD,EAAcvO,IACxC2L,EAAMvB,KAAOU,WAAWnE,GACxB+E,EAAMF,SAASG,GAAO,MACxB8C,EAAgB9R,KAAKwP,GAAoBoC,EAAcvO,GAAIjI,SAG7D0W,EAAgB9R,KAAKwP,GAAoBoC,EAAcvO,GAAIjI,IAE7D4O,EAAW4H,EAAcvO,GAE3B,OAAOyO,ECvLME,CAAmB3Z,EACAuT,EAAQxS,aAOpC6O,GAAQ,SAAC9E,GAEb,IAAI8O,EAAiB,GAKjB3S,GAAS,IAAS6D,EAAM8E,MAAM9M,SAAW,KAAQ,IACjDmE,EAAQ,IACVA,GAAS,KAEXA,EAAiBA,ET5QJ,IAAQC,KAAKC,GS+Q1B,IAAIW,EAAS,EACTF,EAAQ,EACR2L,EAAUzI,EAAMyI,QAChBA,EAAQ/S,aACVsH,EAASyL,EAAQzS,MAAQyS,EAAQ1S,MACjC+G,EAAQ2L,EAAQ3S,MAAQ2S,EAAQ7S,OAGhCkH,EADAE,EAA8B,EAArByL,EAAQxS,WAInB,IAAI8Y,EAAgBzE,MAAQxN,EAAM,EAAKE,EAAO,GAC1CgS,EAAO5S,KAAKE,IAAIH,GAChB8S,EAAO7S,KAAKG,IAAIJ,GAEhBC,KAAKW,IAAIiS,GAAQ,QACnBA,EAAO,OAEL5S,KAAKW,IAAIkS,GAAQ,QACnBA,EAAO,OAET,IAAIC,EAAe5E,KAAOtK,EAAM8E,MAAM7M,KAAO+W,EAAM,GAC/CG,EAAe7E,KAAO,GAAMtK,EAAM8E,MAAM7M,KAAOgX,GAEnD,GAAI9S,EAAQC,KAAKC,GAAG,GAAOF,EAAQ,IAAOC,KAAKC,GAAI,CAEjD,IAAI8O,EAAO+D,EAAarF,QACxBqF,EAAeC,EAAatF,QAC5BsF,EAAehE,EAEbhP,EAAQC,KAAKC,GAAG,IAClB0S,EAAgBzE,MAAQxN,EAAM,GAAME,EAAO,GAC3CkS,EAAeA,EAAarF,QAAQQ,SAASC,MAAQ,GAAM,IAC3D6E,EAAeA,EAAatF,QAAQQ,SAASC,MAAQ,GAAM,KAE7D,IAAI8E,EAAUF,EACVG,EAAUF,EACVG,EAAcP,EAAclF,QAAQQ,SAASC,MAAQ,GAAM,IAC/DwE,EAAejS,KAAKkS,GAKpB,IAJA,IAAIQ,EAAiBR,EACjBS,EAAkBT,EAElB5H,EAAkB,EACfA,EAAkB,KAAM,CAK7B,GAJAA,GAAmB,EAGnBoI,EAAiBA,EAAe1F,QAAQO,IAAIgF,GACxCtB,GAAYyB,EAAgBzS,EAAOE,GAAS,CAC9C,IAAIyS,EAAS9E,GAAW4E,EAAe1F,QAAQC,SAASsF,GAAUG,EAAgBzS,EAAM,EAAKE,EAAO,GAEpG,GADA8R,EAAejS,KAAK4S,GAChB1B,GAAWuB,EAAaG,GAC1B,MAEFF,EAAiB5E,GAAW6E,EAAiBD,EAAgBzS,EAAM,EAAKE,EAAO,GAC/EoS,EAAUD,EAGZ,GADAL,EAAejS,KAAK0S,GAChBxB,GAAWuB,EAAaC,GAC1B,MAUF,GANAC,EAAkBA,EAAgB3F,QAAQO,IAAIiF,GAC1CvB,GAAY0B,EAAiB1S,EAAOE,KACtCwS,EAAkB7E,GAAW4E,EAAgBC,EAAiB1S,EAAM,EAAKE,EAAO,GAChFqS,EAAUH,GAEZJ,EAAejS,KAAK2S,GAChBzB,GAAWuB,EAAaE,GAC1B,MAMF,GAFAA,EAAkBA,EAAgB3F,QAAQO,IAAIiF,GAC9CP,EAAejS,KAAK2S,GAChBzB,GAAWuB,EAAaE,GAC1B,MAEF,GAAI1B,GAAY0B,EAAiB1S,EAAOE,GAAS,CAC/C,IAAIyS,EAAS9E,GAAW6E,EAAgB3F,QAAQC,SAASuF,GAAUG,EAAiB1S,EAAM,EAAKE,EAAO,GAEtG,GADA8R,EAAejS,KAAK4S,GAChB1B,GAAWuB,EAAaG,GAC1B,MAEFD,EAAkB7E,GAAW4E,EAAgBC,EAAiB1S,EAAM,EAAKE,EAAO,GAChFqS,EAAUH,EAGZ,GADAJ,EAAejS,KAAK2S,GAChBzB,GAAWuB,EAAaE,GAC1B,MAMF,GAFAD,EAAiBA,EAAe1F,QAAQO,IAAIgF,GAC5CN,EAAejS,KAAK0S,GAChBxB,GAAWuB,EAAaC,GAC1B,MAEEzB,GAAYyB,EAAgBzS,EAAOE,KACrCuS,EAAiB5E,GAAW6E,EAAiBD,EAAgBzS,EAAM,EAAKE,EAAO,GAC/EoS,EAAUD,GAKd,OAAOnB,GAAehO,EAAO8O,IAqDlBY,GAAcC,aACzB,CARa,SAAA3P,GAAK,OAAIA,EAAMwI,KACZ,SAAAxI,GAAK,OAAIA,EAAM5J,QACZ,SAAA4J,GAAK,OAAIA,EAAMmD,WACpB,SAAAnD,GAAK,OAAIA,EAAM2F,MACd,SAAA3F,GAAK,OAAIA,EAAM8E,OACb,SAAA9E,GAAK,OAAIA,EAAMyI,UAWhC,SAACD,EAAKpS,EAAQ+M,EAAWwC,EAAMiK,EAAYnH,GACzC,IAAIzI,EAAQ,CACVwI,IAAKA,EACLpS,OAAQA,EACR+M,UAAWA,EACXwC,KAAMA,EACNb,MAAO8K,EACPnH,QAASA,GAGX,OAAwB,IAApBzI,EAAMwI,IAAIhU,MA/CM,SAACwL,GACvB,IAAMyC,EAtUU,SAACrM,EAAQpB,GACzB,IAAK,IAAIkL,EAAE,EAAGA,EAAE9J,EAAO8C,OAAQgH,IAC7B,GAAIlL,IAASoB,EAAO8J,GAAGlL,KACrB,OAAOoB,EAAO8J,GAGlB,OAAO,KAgUO2P,CAAU7P,EAAM5J,OAAOA,OAAQ4J,EAAM5J,OAAOC,cACtD7B,EAAQ,GACRiO,IACFjO,EAAQiO,EAAMvN,SAAS8K,GAAO/D,IAAK,SAACW,GAClC,OAAOoQ,GAAMpQ,EAAQ,IAAQoD,EAAM5J,OAAOQ,iBAM9C,IAFA,IAAIkZ,EAAY9P,EAAMmD,UAAU9L,SAC5ByX,EAAiB,GACZ5O,EAAE,EAAGA,EAAE4P,EAAW5P,IACzB,IAAK,IAAI6P,EAAE,EAAGA,EAAEvb,EAAM0E,OAAQ6W,IAAK,CACjC,IAAIC,EAAWD,EAAEvb,EAAM0E,OACvB4V,EAAejS,KAAKsG,GAAUnD,EAAMmD,UAAW3O,EAAMub,GAAI7P,EAAE8P,IAI/D,OAAOhC,GAAehO,EAAO8O,GA8BlBmB,CAAgBjQ,GACM,IAApBA,EAAMwI,IAAIhU,MACZsQ,GAAM9E,GACgB,IAApBA,EAAMwI,IAAIhU,MAzER,SAACwL,GAChB,IAAIyI,EAAUzI,EAAMyI,QAChByH,GAAWzH,EAAQ3S,MAAQ2S,EAAQ7S,OAAO,EAAM,IAAOoK,EAAM2F,KAAKxQ,KAClEgb,GAAW1H,EAAQzS,MAAQyS,EAAQ1S,OAAO,EAAM,IAAOiK,EAAM2F,KAAKxQ,KACjEsT,EAAQ/S,cACXwa,EAAUC,EAAU1H,EAAQxS,YAE9Bia,GAAW,IAAOlQ,EAAM2F,KAAKxQ,KAC7Bgb,GAAW,IAAOnQ,EAAM2F,KAAKxQ,KACzB6K,EAAM2F,KAAKvQ,cACb8a,EAAUC,EAAU/T,KAAKiH,IAAI6M,EAAQC,IAGvC,IAAI1T,EAAcuD,EAAM2F,KAAKzQ,SAAS+G,IAAK,SAACW,GAC1C,OAAOf,OAAAyS,EAAA,EAAAzS,CAAA,GAAIe,EAAX,CACE9D,EAAG8D,EAAO9D,EAAIoX,EACdnX,EAAG6D,EAAO7D,EAAIoX,MAGlB,OAAOnC,GAAehO,EAAOvD,GAuDlB2T,CAASpQ,QADX,IAMEqQ,GAAmBV,aAC9B,CACID,IAEJ,SAACxa,GACC,IAAIwW,EAAW,EACX7E,EAAW,KAQf,OAPA3R,EAASyH,QAAS,SAACC,GACbiK,IACF6E,GAAYtP,KAAKsQ,KAAKtQ,KAAKuE,IAAI/D,EAAO9D,EAAI+N,EAAS/N,EAAG,GAChCsD,KAAKuE,IAAI/D,EAAO7D,EAAI8N,EAAS9N,EAAG,KAExD8N,EAAWjK,IAEN,CACL0T,UAAWpb,EAASgE,OACpBwS,SAAUtP,KAAKmU,MAAM7E,MCzcrB8E,GAAmBb,aACvB,CAHmB,SAAA3P,GAAK,OAAIA,EAAMmD,YAIlC,SAAC+J,GAGC,IAFA,IAAI4C,EAAY5C,EAAK7V,SACjBoZ,EAAgB,GACXvQ,EAAE,EAAGA,EAAE4P,EAAW5P,IACrBgN,EAAKvV,cACP8Y,EAAc5T,KAAKsG,GAAU+J,EAAM,CAACpU,EAAG,EAAKC,EAAG,GAAMmH,IAGzD,OAAOuQ,IA8BLC,+LAEgB,IAAAhR,EAAA3B,KACd4S,EAASC,IAASC,YAAY9S,MAC9B+S,EAAUH,EAAOI,WAAW,MAC5BC,EAASC,SAASC,eAAe,aACrCnT,KAAKoT,OAAOR,EAAQK,GACpBI,OAAOC,iBAAiB,SAAU,WAAQ3R,EAAKyR,OAAOR,EAAQK,KAAW,GACzEjT,KAAKuT,MAAMR,gDAIX,IAAIH,EAASC,IAASC,YAAY9S,MAC9B+S,EAAUH,EAAOI,WAAW,MAChCD,EAAQS,UAAU,EAAG,EAAGxT,KAAKC,MAAMtJ,aAAcqJ,KAAKC,MAAMrJ,eAC5D,IAAIqc,EAASC,SAASC,eAAe,aACrCnT,KAAKoT,OAAOR,EAAQK,GACpBjT,KAAKuT,MAAMR,6CAMX,IAAIU,EAAY,EACZC,EAAY,EACZ1T,KAAKC,MAAM0T,UACbF,EAAYzT,KAAKC,MAAMlI,MAAQiI,KAAKC,MAAMpI,MAC1C6b,EAAY1T,KAAKC,MAAMhI,MAAQ+H,KAAKC,MAAMjI,OAG1C0b,EADAD,EAAoC,EAAxBzT,KAAKC,MAAM/H,WAIzB,IAAI0b,EAAU5T,KAAKC,MAAMtJ,aAAe8c,EACpCI,EAAU7T,KAAKC,MAAMrJ,cAAgB8c,EAEzC,MAAoC,IAA7BrV,KAAKiH,IAAIsO,EAASC,sCAGhBhV,GACT,IAAIiV,EAAY9T,KAAK+T,kBAEjBhZ,EAAI8D,EAAO9D,EAAI+Y,EAAY9T,KAAKC,MAAMtJ,aAAa,EAEnDqE,GAAK6D,EAAO7D,EAAI8Y,EAAY9T,KAAKC,MAAMrJ,cAAc,EAEzD,OAAOkE,EAAOC,EAAGC,qCAGT+X,EAASlU,GACjB,IAAImV,EAAQhU,KAAKiU,WAAWpV,GAC5BkU,EAAQmB,OAAOF,EAAMjZ,EAAGiZ,EAAMhZ,qCAGtB+X,EAASlU,GACjB,IAAImV,EAAQhU,KAAKiU,WAAWpV,GAC5BkU,EAAQoB,OAAOH,EAAMjZ,EAAGiZ,EAAMhZ,kCAGzB+X,EAASlU,GACd,IAAImV,EAAQhU,KAAKiU,WAAWpV,GAC5BkU,EAAQqB,IAAIJ,EAAMjZ,EAAGiZ,EAAMhZ,EAAGqD,KAAKkH,IAAI,EAA8B,IAAzBvF,KAAK+T,mBAA0B,EAAG,EAAI1V,KAAKC,IAAI,GAC3FyU,EAAQsB,UAAYtB,EAAQuB,YAC5BvB,EAAQwB,8CAGKpd,EAAUqd,GAEvB,GAAoB,IAAhBA,EACF,OAAOrd,EAMT,IAAMsd,EAAiBD,EAAc,IAC/BE,GATa,GASgBF,GAAe,IAE5CG,EAAetW,KAAKuW,MAAMzd,EAASgE,OAASsZ,GAC5CI,EAAaxW,KAAKuW,MAAMzd,EAASgE,OAASuZ,GAEhD,OAAOvd,EAAS2d,MAAMH,EAAcE,iCAGhC9B,GAOJ,GANAA,EAAQgC,OAGRhC,EAAQiC,YACRjC,EAAQkC,UAAY,IACpBlC,EAAQuB,YAAc,OAClBtU,KAAKC,MAAM0T,SACb3T,KAAKkV,UAAUnC,EAASjY,GAAQkF,KAAKC,MAAMpI,MAAQmI,KAAKC,MAAMlI,OAAO,GAAMiI,KAAKC,MAAMjI,MAAQgI,KAAKC,MAAMhI,OAAO,IAChH+H,KAAKmV,UAAUpC,EAASjY,GAAQkF,KAAKC,MAAMlI,MAAQiI,KAAKC,MAAMpI,OAAO,GAAMmI,KAAKC,MAAMjI,MAAQgI,KAAKC,MAAMhI,OAAO,IAChH+H,KAAKmV,UAAUpC,EAASjY,GAAQkF,KAAKC,MAAMlI,MAAQiI,KAAKC,MAAMpI,OAAO,GAAMmI,KAAKC,MAAMhI,MAAQ+H,KAAKC,MAAMjI,OAAO,IAChHgI,KAAKmV,UAAUpC,EAASjY,GAAQkF,KAAKC,MAAMpI,MAAQmI,KAAKC,MAAMlI,OAAO,GAAMiI,KAAKC,MAAMhI,MAAQ+H,KAAKC,MAAMjI,OAAO,IAChHgI,KAAKmV,UAAUpC,EAASjY,GAAQkF,KAAKC,MAAMpI,MAAQmI,KAAKC,MAAMlI,OAAO,GAAMiI,KAAKC,MAAMjI,MAAQgI,KAAKC,MAAMhI,OAAO,QAC3G,CACL+H,KAAKkV,UAAUnC,EAASjY,EAAOkF,KAAKC,MAAM/H,WAAY,IAEtD,IADA,IACSiK,EAAE,EAAGA,GADG,IACaA,IAAK,CACjC,IAAI/D,EAAkB,EAAVC,KAAKC,GAFF,IAE0B6D,EACzCnC,KAAKmV,UAAUpC,EAASjY,EAAOkF,KAAKC,MAAM/H,WAAamG,KAAKE,IAAIH,GACjC4B,KAAKC,MAAM/H,WAAamG,KAAKG,IAAIJ,MAGpE2U,EAAQqC,SAER,IAAIC,EAAmBrV,KAAKC,MAAM9I,SAIlC,IAFAke,EAAmBrV,KAAKsV,eAAeD,EAAkBrV,KAAKC,MAAMuU,eAE5Ca,EAAiBla,OAAS,EAAG,CAenD,GAZA4X,EAAQiC,YACRjC,EAAQkC,UAAY,EACpBlC,EAAQuB,YAAc,QACtBtU,KAAKuV,OAAOxC,EAAS/S,KAAKC,MAAM9I,SAAS,IACzC4b,EAAQqC,SACRrC,EAAQiC,YACRjC,EAAQkC,UAAY,EACpBlC,EAAQuB,YAAc,MACtBtU,KAAKuV,OAAOxC,EAAS/S,KAAKC,MAAM9I,SAAS6I,KAAKC,MAAM9I,SAASgE,OAAO,IACpE4X,EAAQqC,SAGuB,IAA3BpV,KAAKC,MAAMuU,YAAmB,CAChCzB,EAAQiC,YACRjC,EAAQkC,UAAYjV,KAAK+T,kBACzBhB,EAAQuB,YAAc,OACtBtU,KAAKkV,UAAUnC,EAAS/S,KAAKC,MAAM9I,SAAS,IAC5C,IAAK,IAAIgL,EAAE,EAAGA,EAAEnC,KAAKC,MAAM9I,SAASgE,OAAQgH,IAC1CnC,KAAKmV,UAAUpC,EAAS/S,KAAKC,MAAM9I,SAASgL,IAE9C4Q,EAAQqC,SAIVrC,EAAQiC,YACRjC,EAAQkC,UAAYjV,KAAK+T,kBACzBhB,EAAQuB,YAAc,SACtBtU,KAAKkV,UAAUnC,EAASsC,EAAiB,IACzC,IAAK,IAAIlT,EAAE,EAAGA,EAAEkT,EAAiBla,OAAQgH,IACvCnC,KAAKmV,UAAUpC,EAASsC,EAAiBlT,IAE3C4Q,EAAQqC,SAGV,GAAIpV,KAAKC,MAAMyS,eAAiB1S,KAAKC,MAAMyS,cAAcvX,OAAS,GAAK6E,KAAKC,MAAMuV,UAAW,CAE3FzC,EAAQiC,YACRjC,EAAQkC,UAAYjV,KAAK+T,kBACzBhB,EAAQuB,YAAc,QACtBtU,KAAKkV,UAAUnC,EAAS/S,KAAKC,MAAMyS,cAAc,IACjD,IAAK,IAAIvQ,EAAE,EAAGA,EAAEnC,KAAKC,MAAMyS,cAAcvX,OAAQgH,IAC/CnC,KAAKmV,UAAUpC,EAAS/S,KAAKC,MAAMyS,cAAcvQ,IAEnD4Q,EAAQqC,SAGVrC,EAAQ0C,yCAGH7C,EAAQK,GACb,IAAI/Y,EAAOwJ,SAASgS,iBAAiBzC,GAAQ0C,iBAAiB,SAAS,IACvE/C,EAAO7T,MAAQ7E,EACf0Y,EAAO3T,OAAS/E,EACZ8F,KAAKC,MAAMtJ,eAAiBuD,GAC9B8F,KAAKC,MAAM2V,SAAS1b,GAEtB,IAAI6Y,EAAUH,EAAOI,WAAW,MAChChT,KAAKuT,MAAMR,oCAGJ,IAAA8C,EAC+B7V,KAAKC,MAApCtJ,EADAkf,EACAlf,aAAcC,EADdif,EACcjf,cACrB,OACIwD,EAAAC,EAAAC,cAAA,UAAQC,UAAU,SAChBwE,MAAOpI,EACPsI,OAAQrI,WApLU+D,aAyL5BgY,GAAgBzN,YAnNQ,SAACjD,EAAOkD,GAC9B,MAAO,CACLwO,SAAU1R,EAAMyI,QAAQ/S,YACxBE,MAAOoK,EAAMyI,QAAQ7S,MACrBE,MAAOkK,EAAMyI,QAAQ3S,MACrBC,MAAOiK,EAAMyI,QAAQ1S,MACrBC,MAAOgK,EAAMyI,QAAQzS,MACrBC,WAAY+J,EAAMyI,QAAQxS,WAC1BvB,aAAcsL,EAAMwI,IAAI9T,aACxBC,cAAeqL,EAAMwI,IAAI7T,cACzBO,SAAUwa,GAAY1P,GACtBuS,YAAavS,EAAMwI,IAAI5T,cACvB2e,UAA+B,IAApBvT,EAAMwI,IAAIhU,MACrBic,cAAeD,GAAiBxQ,KAIT,SAACoD,EAAUF,GACpC,MAAO,CACLyQ,SAAU,SAAC1b,GACTmL,EAjDG,CACLzE,KAAM,mBACNE,MA+CiC5G,OA+LrBgL,CAA6CyN,IAE7D,IAeMmD,oLAEF,OACE1b,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAEbH,EAAAC,EAAAC,cAACgG,EAAA,EAAD,KACIlG,EAAAC,EAAAC,cAACyb,GAAD,MADJ,WAEa/V,KAAKC,MAAM+V,cAAczD,UAFtC,eAE6DvS,KAAKC,MAAM+V,cAAcrI,SAClFvT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAC2b,EAAA,EAAD,CACEnV,MAAOd,KAAKC,MAAMuU,YAClB3T,KAAM,EACNyE,IAAK,EACLC,IAAK,IACLxE,SAAUf,KAAKC,MAAMiW,YAG3B9b,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAW8M,GAAG,aACzBjN,EAAAC,EAAAC,cAAC6b,EAAD,gBAlBaxb,aA2Bdmb,GAFfA,GAAiB5Q,YAxCW,SAACjD,EAAOkD,GAClC,MAAO,CACLqP,YAAavS,EAAMwI,IAAI5T,cACvBmf,cAAe1D,GAAiBrQ,KAIL,SAACoD,EAAUF,GACxC,MAAO,CACL+Q,SAAU,SAACpV,GACTuE,EAtP0B,SAAEvE,GAChC,MAAO,CACLF,KAAM,qBACNE,MAAOA,GAmPIsV,CAAiBtV,OA8BfoE,CAAqD4Q,ICzPzDO,WAAe,SAAEvH,GAC5B,MAAO,CACLlO,KAAM,iBACNE,MAAOgO,KAWX,SAASwH,GAAShf,EAAUif,GAC1B,IAAIC,EAAMtD,SAAS5Y,cAAc,KAIjC,GAHAkc,EAAIC,aAAa,OAAQ,iCAAmCC,mBAAmBH,IAC/EC,EAAIC,aAAa,WAAYnf,GAEzB4b,SAASyD,YAAa,CACxB,IAAIjX,EAAQwT,SAASyD,YAAY,eACjCjX,EAAMkX,UAAU,SAAS,GAAM,GAC/BJ,EAAIK,cAAcnX,QAGlB8W,EAAIM,QAIR,SAASC,GAAMlY,GACb,IAAImY,EAAU,QACLnY,EAAO9D,EAAEkc,QAAQ,GACxB,KAAOpY,EAAO7D,EAAEic,QAAQ,GAI1B,OAHIpY,EAAOqY,MAAQ,IACjBF,GAAW,KAAOnY,EAAO5D,GAEpB+b,EAAU,KAGnB,SAASG,GAAStY,GAChB,OAAYA,EAAO9D,EAAEkc,QAAQ,GAAK,IAAMpY,EAAO7D,EAAEic,QAAQ,GAAK,KAGhE,IAAMG,GAAc,SAACnV,GAEnB,IAAI/K,EAAW,GAef,OAdAA,EAAS4H,KAAK,sBACd5H,EAAS4H,KAAK,IACd5H,EAAS4H,KAAK,yBACd5H,EAAS4H,KAAK,IACd5H,EAAS4H,KAAK,sBAAwBmD,EAAMwI,IAAIjU,gBAChDU,EAAS4H,KAAK,IACd5H,EAAS4H,KAAK,oBAAsBmD,EAAMyI,QAAQ/S,YAAc,cAAgB,UAC5EsK,EAAMyI,QAAQ/S,YAChBT,EAAS4H,KAAK,aAAemD,EAAMyI,QAAQ7S,MAAQ,UAAYoK,EAAMyI,QAAQ3S,MAAQ,UAAYkK,EAAMyI,QAAQ1S,MAAQ,UAAYiK,EAAMyI,QAAQzS,QAEjJf,EAAS4H,KAAK,mBAAqBmD,EAAMyI,QAAQxS,YACjDhB,EAAS4H,KAAK,wBAA0BmD,EAAMyI,QAAQtS,iBAGhD6J,EAAMwI,IAAIhU,OAChB,KAAK,EACH,IAAI4gB,EAAYpV,EAAM5J,OAAOA,OAAOif,KAAK,SAAA5S,GAAK,OAAIA,EAAMzN,OAASgL,EAAM5J,OAAOC,eAAcrB,KAO5F,OALAC,EAAS4H,KAAK,0BACd5H,EAAS4H,KAAK,sBAAwBmD,EAAM5J,OAAOQ,cACnD3B,EAAS4H,KAAK,kBAAoBmD,EAAMmD,UAAUhM,aAAe,OAAS6I,EAAMmD,UAAU/L,cAC1FnC,EAAS4H,KAAK,uBAAyBuY,GAE/BpV,EAAM5J,OAAOC,cACnB,IAAK,UACHpB,EAAS4H,KAAK,wBAA0BmD,EAAM5J,OAAOE,cACrD,MACF,IAAK,OACHrB,EAAS4H,KAAK,sBAAwBmD,EAAM5J,OAAOG,YACnDtB,EAAS4H,KAAK,qBAAuBmD,EAAM5J,OAAOI,WAClD,MACF,IAAK,SACHvB,EAAS4H,KAAK,uBAAyBmD,EAAM5J,OAAOK,aACpD,MACF,IAAK,QACH,MACF,IAAK,WACHxB,EAAS4H,KAAK,yBAA2BmD,EAAM5J,OAAOM,eACtD,MACF,IAAK,OACHzB,EAAS4H,KAAK,qBAAuBmD,EAAM5J,OAAOO,WAClD,MACF,IAAK,WACH,MACF,IAAK,aACH1B,EAAS4H,KAAK,YAAcmD,EAAM5J,OAAOS,aACzC5B,EAAS4H,KAAK,YAAcmD,EAAM5J,OAAOU,aACzC,MACF,IAAK,cACH7B,EAAS4H,KAAK,YAAcmD,EAAM5J,OAAOW,cACzC9B,EAAS4H,KAAK,YAAcmD,EAAM5J,OAAOY,cACzC,MACF,IAAK,OACH/B,EAAS4H,KAAK,YAAcmD,EAAM5J,OAAOa,OACzChC,EAAS4H,KAAK,YAAcmD,EAAM5J,OAAOc,OAM7CjC,EAAS4H,KAAK,wBAA0BmD,EAAMmD,UAAU9L,UACxDpC,EAAS4H,KAAK,aAAemD,EAAMmD,UAAU3L,aACzCwI,EAAMmD,UAAU3L,cAClBvC,EAAS4H,KAAK,qBAAuBmD,EAAMmD,UAAU1L,WACrDxC,EAAS4H,KAAK,2BAA6BmD,EAAMmD,UAAUzL,kBAE7DzC,EAAS4H,KAAK,aAAemD,EAAMmD,UAAU7L,aACzC0I,EAAMmD,UAAU7L,aAClBrC,EAAS4H,KAAK,qBAAuBmD,EAAMmD,UAAU5L,WAEvDtC,EAAS4H,KAAK,cAAgBmD,EAAMmD,UAAUxL,cAC1CqI,EAAMmD,UAAUxL,eAClB1C,EAAS4H,KAAK,qBAAuBmD,EAAMmD,UAAUtL,YACrD5C,EAAS4H,KAAK,uBAAyBmD,EAAMmD,UAAUrL,aACvD7C,EAAS4H,KAAK,qBAAuBmD,EAAMmD,UAAUvL,kBACjDoI,EAAMmD,UAAUvL,kBAClB3C,EAAS4H,KAAK,+BAAiCmD,EAAMmD,UAAUpL,YAGnE,MACF,KAAK,EACH9C,EAAS4H,KAAK,yBACd5H,EAAS4H,KAAK,oBAAsBmD,EAAM8E,MAAM9M,UAChD/C,EAAS4H,KAAK,mBAAsBmD,EAAM8E,MAAM7M,MAChD,MACF,KAAK,EACHhD,EAAS4H,KAAK,4BACd5H,EAAS4H,KAAK,mBAAqBmD,EAAM2F,KAAK3Q,MAC9CC,EAAS4H,KAAK,aAAgBmD,EAAM2F,KAAKxQ,MACzCF,EAAS4H,KAAK,qBAAuBmD,EAAM2F,KAAKvQ,aAChD,MACF,QACEH,EAAS4H,KAAK,2BAMlB,OAHA5H,EAAS4H,KAAK,oBAAsBmD,EAAMwI,IAAI/T,SAC9CQ,EAAS4H,KAAK,IAEP5H,GA8CHqgB,2LAEY,IAAA5V,EAAA3B,KACVwX,EAAU,KAAOxX,KAAKC,MAAMwX,SAAShQ,KAAK,QAC9C+P,GAAW,KACXA,GAAW,gBAAkBxX,KAAKC,MAAM3I,SAAW,QACnDkgB,GAAW,gBACXA,GAAWxX,KAAKC,MAAM1I,IACtBigB,GAAW,cAEX7O,QAAQC,IAAI,aAAe5I,KAAKC,MAAMyX,QAAU,OAAS1X,KAAKC,MAAM0X,SAWpEH,GAVuBxX,KAAKC,MAAM9I,SAAS+G,IAAK,SAACW,GAC/C,OAAOf,OAAAyS,EAAA,EAAAzS,CAAA,GACFe,EADL,CAEE9D,EAAG8D,EAAO9D,EAAI4G,EAAK1B,MAAMyX,QACzB1c,EAAG6D,EAAO7D,EAAI2G,EAAK1B,MAAM0X,YAIAzZ,IAAI6Y,IAEhBtP,KAAK,IAEtB+P,GAAW,KACXA,GAAW,iBACXA,GAAWxX,KAAKC,MAAMvI,KACtB8f,GAAW,eACX,IAAIlgB,EAAW0I,KAAKC,MAAM3I,SACrBA,EAASsgB,SAAS,OACrBtgB,GAAY,UAEdgf,GAAShf,EAAUkgB,GACnBxX,KAAKC,MAAM4X,mDAIX,IAAIL,EAAU,KAAOxX,KAAKC,MAAMwX,SAAShQ,KAAK,QAC9C+P,GAAW,KACXA,GAAW,gBAAkBxX,KAAKC,MAAM3I,SAAW,QACnDkgB,GAAW,gBACXA,GAAWxX,KAAKC,MAAM1I,IACtBigB,GAAW,cACXA,GAAW,KAGX,IAGIxO,EAFA8O,EAAqB,GACrBhP,OAAWlR,EAEf,IAAKoR,EAAO,EAAGA,EAAOhJ,KAAKC,MAAM9I,SAASgE,OAAQ6N,IAAQ,CACxD,QAAiBpR,IAAbkR,EAQF,IAPA,IAAI+E,EAAQtB,KAAOU,WAAWjN,KAAKC,MAAM9I,SAAS2R,IAC9CgF,EAAMvB,KAAOU,WAAWjN,KAAKC,MAAM9I,SAAS6R,IAE5C+O,EAAQjK,EAAIhC,QAAQC,SAAS8B,GAC7BmK,EAAelK,EAAIhC,QAAQC,SAAS8B,GAAOW,YAAYlC,SAASC,KAVxD,MAaH1L,EAAO,EAAGA,EAAQkX,EAAM3J,YAbrB,EAagDvN,IAC1DiX,EAAmBhZ,KAAKhE,EAAO+S,EAAM9S,EAAI8F,EAAOmX,EAAajd,EAC9B8S,EAAM7S,EAAI6F,EAAOmX,EAAahd,EAC9BgF,KAAKC,MAAM9I,SAAS6R,GAAM/N,IAI7D6N,EAAWE,OAGIpR,IAAbkR,GACFgP,EAAmBhZ,KAAKkB,KAAKC,MAAM9I,SAAS6I,KAAKC,MAAM9I,SAASgE,OAAS,IAI3E,IAAI8c,EAAa,GACbC,EAAgB,EAChBC,EAAmB,EACvB,IAAKnP,EAAO,EAAGA,EAAO8O,EAAmB3c,SAAU6N,EAAM,CAEvD,IAAIG,EAAMoD,KAAOU,WAAW6K,EAAmB9O,IAAOoF,YAAcpO,KAAKC,MAAM/H,WAG3EkgB,EAAW/Z,KAAKga,MAAMP,EAAmB9O,GAAMjO,EACzB+c,EAAmB9O,GAAMhO,GAK/Csd,GAHJF,GAAYA,EAAW,EAAM/Z,KAAKC,KAAO,EAAMD,KAAKC,KAGxB6Z,EAExBG,GAAcja,KAAKC,KACrBga,GAAc,EAAMja,KAAKC,IAEvBga,EAAaja,KAAKC,KACpBga,GAAc,EAAMja,KAAKC,IAE3B,IAAIwF,EAAQoU,EAAgBI,EAC5BH,EAAmBC,EACnBF,EAAgBpU,EAEhBmU,EAAWnZ,KAAKhE,EAAOgJ,EAAOqF,EAAK2O,EAAmB9O,GAAM/N,IAK9Duc,GAFYS,EAAW/Z,IAAIiZ,IAEV1P,KAAK,IAEtB+P,GAAW,KACXA,GAAW,iBACXA,GAAWxX,KAAKC,MAAMvI,KACtB8f,GAAW,eAEX,IAAIlgB,EAAW0I,KAAKC,MAAM3I,SACrBA,EAASsgB,SAAS,OACrBtgB,GAAY,QAEdgf,GAAShf,EAAUkgB,GAEnBxX,KAAKC,MAAM4X,yCAIX,IAAMU,EAAsBvY,KAAKC,MAAMvJ,QAAU,SAAW,KAC5D,OACE0D,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAQ/F,UAAU,eAAeie,QAAQ,UAAUC,OAAO,QAAQjX,QAASxB,KAAKC,MAAMyY,MAAtF,eACAte,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAOqY,KAAM3Y,KAAKC,MAAM0Y,KAAMC,OAAQ5Y,KAAKC,MAAM4X,OAC/Czd,EAAAC,EAAAC,cAACgG,EAAA,EAAMnG,OAAP,CAAc0e,aAAW,GACvBze,EAAAC,EAAAC,cAACgG,EAAA,EAAMwY,MAAP,yBAEF1e,EAAAC,EAAAC,cAACgG,EAAA,EAAMyY,KAAP,KACE3e,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAWC,UAAU,mBACnBnG,EAAAC,EAAAC,cAACgG,EAAA,EAAD,uBACAlG,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAaM,KAAK,OAAOE,MAAOd,KAAKC,MAAM3I,SAAUyJ,SAAUf,KAAKC,MAAM+Y,eAE5E5e,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAWC,UAAU,WACnBnG,EAAAC,EAAAC,cAACgG,EAAA,EAAD,2BACAlG,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAaG,eAAe,WAAWK,MAAOd,KAAKC,MAAM1I,IAAKwJ,SAAUf,KAAKC,MAAMgZ,UAErF7e,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAWC,UAAU,YACnBnG,EAAAC,EAAAC,cAACgG,EAAA,EAAD,yBACAlG,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAaG,eAAe,WAAWK,MAAOd,KAAKC,MAAMvI,KAAMqJ,SAAUf,KAAKC,MAAMiZ,WAEtF9e,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAeoF,OAAO,eAAenL,UAAWge,EAAoB/W,QAASxB,KAAKC,MAAMkZ,eAAxF,sDAEF/e,EAAAC,EAAAC,cAACgG,EAAA,EAAM8Y,OAAP,KACEhf,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAQ+G,GAAG,aAAamR,QAAQ,UAAUhX,QAASxB,KAAKC,MAAM4X,OAA9D,SACAzd,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAQ+G,GAAG,iBAAiBmR,QAAQ,UAAUhX,QAASxB,KAAKqZ,cAAczP,KAAK5J,OAA/E,kBACA5F,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAQ+G,GAAG,oBAAoBmR,QAAQ,UAAUhX,QAASxB,KAAKsZ,iBAAiB1P,KAAK5J,OAArF,gCAnJiBrF,aA4Jd4c,GAFfA,GAAiBrS,YArME,SAACjD,EAAOkD,GACzB,MAAO,CACLzO,QAASuL,EAAMwI,IAAI/T,QACnBiiB,KAAM1W,EAAMwI,IAAIzT,UAChBG,SAAUwa,GAAY1P,GAEtBwV,SAAUL,GAAYnV,GACtByV,SAAUzV,EAAMyI,QAAQ7S,MAAQoK,EAAMyI,QAAQ3S,OAAS,EACvD4f,SAAU1V,EAAMyI,QAAQ1S,MAAQiK,EAAMyI,QAAQzS,OAAS,EACvDC,WAAY+J,EAAMyI,QAAQxS,WAE1BZ,SAAU2K,EAAM8U,MAAMzf,SACtBC,IAAK0K,EAAM8U,MAAMxf,IACjBG,KAAMuK,EAAM8U,MAAMrf,OAIA,SAAC2N,EAAUF,GAC/B,MAAO,CACLuT,KAAM,WACJrT,EAASgR,IAAa,KAExBwB,MAAO,WACLxS,EAASgR,IAAa,KAExB8C,cAAe,WACb9T,EAlLG,CACLzE,KAAM,oBAmLNoY,YAAa,SAACtZ,GACZ2F,EA5MG,CACLzE,KAAM,qBACNE,MA0M4BpB,EAAM2B,OAAOP,SAEzCmY,OAAQ,SAACvZ,GAxMc,IAAE6W,EAyMvBlR,GAzMuBkR,EAyMF7W,EAAM2B,OAAOP,MAxMtCtJ,aAAamT,QAAQ,YAAa4L,GAC3B,CACL3V,KAAM,gBACNE,MAAOyV,MAuMP2C,QAAS,SAACxZ,GAnMc,IAAE6W,EAoMxBlR,GApMwBkR,EAoMF7W,EAAM2B,OAAOP,MAnMvCtJ,aAAamT,QAAQ,aAAc4L,GAC5B,CACL3V,KAAM,iBACNE,MAAOyV,QAkWMrR,CAAmCqS,ICvX9CgC,GACJC,YACEC,YACE,CACEhP,IrBVO,WAA2C,IAA9BxI,EAA8B/G,UAAAC,OAAA,QAAAvD,IAAAsD,UAAA,GAAAA,UAAA,GAAtB3E,EAAcmjB,EAAQxe,UAAAC,OAAA,EAAAD,UAAA,QAAAtD,EACxD,OAAQ8hB,EAAO9Y,MAGb,IAAK,eACH,OAAO9C,OAAAyS,EAAA,EAAAzS,CAAA,GAAImE,EAAX,CACExL,MAAOijB,EAAO5Y,QAElB,IAAK,iBACH,OAAOhD,OAAAyS,EAAA,EAAAzS,CAAA,GAAImE,EAAX,CACEvL,SAAUuL,EAAMvL,UAEpB,IAAK,mBACH,OAAOoH,OAAAyS,EAAA,EAAAzS,CAAA,GAAImE,EAAX,CACEtL,aAAc+iB,EAAO5Y,MACrBlK,cAAe8iB,EAAO5Y,QAE1B,IAAK,qBACH,OAAOhD,OAAAyS,EAAA,EAAAzS,CAAA,GAAImE,EAAX,CACEpL,cAAe6iB,EAAO5Y,QAE1B,IAAK,+BACH,OAAOhD,OAAAyS,EAAA,EAAAzS,CAAA,GAAImE,EAAX,CACEnL,qBAAsBmL,EAAMnL,oBAC5BC,sBAAsB,IAE1B,IAAK,gCACH,OAAO+G,OAAAyS,EAAA,EAAAzS,CAAA,GAAImE,EAAX,CACElL,sBAAuBkL,EAAMlL,qBAC7BD,qBAAqB,IAEzB,IAAK,iBACH,OAAOgH,OAAAyS,EAAA,EAAAzS,CAAA,GAAImE,EAAX,CACEjL,UAAW0iB,EAAO5Y,QAItB,IAAK,eAEL,QACE,OAAOmB,IqB7BL2F,KpBfO,WAA4C,IAA9B3F,EAA8B/G,UAAAC,OAAA,QAAAvD,IAAAsD,UAAA,GAAAA,UAAA,GAAtB3E,EAAcmjB,EAAQxe,UAAAC,OAAA,EAAAD,UAAA,QAAAtD,EACzD,OAAQ8hB,EAAO9Y,MAGb,IAAK,oBACH,OAAO9C,OAAAyS,EAAA,EAAAzS,CAAA,GAAImE,EAAX,CACE9K,SAAWuiB,EAAOviB,WAEtB,IAAK,gBACH,OAAO2G,OAAAyS,EAAA,EAAAzS,CAAA,GAAImE,EAAX,CACEhL,KAAMyiB,EAAO5Y,QAEjB,IAAK,mBACH,OAAOhD,OAAAyS,EAAA,EAAAzS,CAAA,GAAImE,EAAX,CACE0X,QAASD,EAAO5Y,QAEpB,IAAK,gBACH,OAAOhD,OAAAyS,EAAA,EAAAzS,CAAA,GAAImE,EAAX,CACE7K,KAAMsiB,EAAO5Y,QAEjB,IAAK,2BACH,OAAOhD,OAAAyS,EAAA,EAAAzS,CAAA,GAAImE,EAAX,CACE5K,aAAc4K,EAAM5K,cAGxB,IAAK,eAEL,QACE,OAAO4K,IoBZL8U,MnBlBO,WAA6C,IAA9B9U,EAA8B/G,UAAAC,OAAA,QAAAvD,IAAAsD,UAAA,GAAAA,UAAA,GAAtB3E,EAAcmjB,EAAQxe,UAAAC,OAAA,EAAAD,UAAA,QAAAtD,EAC1D,OAAQ8hB,EAAO9Y,MAGb,IAAK,qBACH,OAAO9C,OAAAyS,EAAA,EAAAzS,CAAA,GAAImE,EAAX,CACE3K,SAAUoiB,EAAO5Y,QAErB,IAAK,gBACH,OAAOhD,OAAAyS,EAAA,EAAAzS,CAAA,GAAImE,EAAX,CACE1K,IAAKmiB,EAAO5Y,QAEhB,IAAK,iBACH,OAAOhD,OAAAyS,EAAA,EAAAzS,CAAA,GAAImE,EAAX,CACEvK,KAAMgiB,EAAO5Y,QAGjB,IAAK,eAEL,QACE,OAAOmB,ImBDLyI,QlBbO,WAA+C,IAA9BzI,EAA8B/G,UAAAC,OAAA,QAAAvD,IAAAsD,UAAA,GAAAA,UAAA,GAAtB3E,EAAcmjB,EAAQxe,UAAAC,OAAA,EAAAD,UAAA,QAAAtD,EAC5D,OAAQ8hB,EAAO9Y,MAEb,IAAK,+BACH,OAAO9C,OAAAyS,EAAA,EAAAzS,CAAA,GAAImE,EAAX,CACEtK,aAAa,IAEjB,IAAK,gCACH,OAAOmG,OAAAyS,EAAA,EAAAzS,CAAA,GAAImE,EAAX,CACEtK,aAAa,IAGjB,IAAK,YACH,OAAOmG,OAAAyS,EAAA,EAAAzS,CAAA,GAAImE,EAAX,CACEpK,MAAO6hB,EAAO5Y,QAElB,IAAK,YACH,OAAOhD,OAAAyS,EAAA,EAAAzS,CAAA,GAAImE,EAAX,CACElK,MAAO2hB,EAAO5Y,QAElB,IAAK,YACH,OAAOhD,OAAAyS,EAAA,EAAAzS,CAAA,GAAImE,EAAX,CACEjK,MAAO0hB,EAAO5Y,QAElB,IAAK,YACH,OAAOhD,OAAAyS,EAAA,EAAAzS,CAAA,GAAImE,EAAX,CACEhK,MAAOyhB,EAAO5Y,QAElB,IAAK,iBACH,OAAOhD,OAAAyS,EAAA,EAAAzS,CAAA,GAAImE,EAAX,CACE/J,WAAYwhB,EAAO5Y,QAEvB,IAAK,0BAEH,IADA,IAAI8Y,EAAW,GACNzX,EAAI,EAAGA,EAAIuX,EAAO5Y,MAAM3F,OAASgH,IACxC,IAAKF,EAAM9J,WAAWyf,SAAS8B,EAAO5Y,MAAMqB,IAAK,CAC/CyX,EAAS9a,KAAK4a,EAAO5Y,MAAMqB,IAC3B,MAGJ,OAAOrE,OAAAyS,EAAA,EAAAzS,CAAA,GAAImE,EAAX,CACE9J,WAAYyhB,IAEhB,IAAK,2BACH,OAAO9b,OAAAyS,EAAA,EAAAzS,CAAA,GAAImE,EAAX,CACE7J,gBAAiB6J,EAAM7J,iBAE3B,IAAK,eAEL,QACE,OAAO6J,IkBpCL5J,OjBPO,WAA8C,IAA9B4J,EAA8B/G,UAAAC,OAAA,QAAAvD,IAAAsD,UAAA,GAAAA,UAAA,GAAtB3E,EAAcmjB,EAAQxe,UAAAC,OAAA,EAAAD,UAAA,QAAAtD,EAC3D,OAAQ8hB,EAAO9Y,MAGb,IAAK,YACH,OAAO9C,OAAAyS,EAAA,EAAAzS,CAAA,GAAImE,EAAX,CACI5J,OAAM,GAAA6G,OAAApB,OAAAC,EAAA,EAAAD,CAAMmE,EAAM5J,QAAZ,CACJqhB,EAAOhV,UAIf,IAAK,YACH,OAAO5G,OAAAyS,EAAA,EAAAzS,CAAA,GAAImE,EAAX,CACE3J,aAAcohB,EAAO5Y,QAGzB,IAAK,0BACH,OAAOhD,OAAAyS,EAAA,EAAAzS,CAAA,GAAImE,EAAX,CACE1J,aAAcmhB,EAAO5Y,QAGzB,IAAK,wBACH,OAAOhD,OAAAyS,EAAA,EAAAzS,CAAA,GAAImE,EAAX,CACEzJ,WAAYkhB,EAAO5Y,QAGvB,IAAK,uBACH,OAAOhD,OAAAyS,EAAA,EAAAzS,CAAA,GAAImE,EAAX,CACExJ,UAAWihB,EAAO5Y,QAGtB,IAAK,yBACH,OAAOhD,OAAAyS,EAAA,EAAAzS,CAAA,GAAImE,EAAX,CACEvJ,YAAaghB,EAAO5Y,QAGxB,IAAK,2BACH,OAAOhD,OAAAyS,EAAA,EAAAzS,CAAA,GAAImE,EAAX,CACEtJ,cAAe+gB,EAAO5Y,QAG1B,IAAK,yBACH,OAAOhD,OAAAyS,EAAA,EAAAzS,CAAA,GAAImE,EAAX,CACEnJ,YAAa4gB,EAAO5Y,QAGxB,IAAK,yBACH,OAAOhD,OAAAyS,EAAA,EAAAzS,CAAA,GAAImE,EAAX,CACElJ,YAAa2gB,EAAO5Y,QAGxB,IAAK,0BACH,OAAOhD,OAAAyS,EAAA,EAAAzS,CAAA,GAAImE,EAAX,CACEjJ,aAAc0gB,EAAO5Y,QAGzB,IAAK,0BACH,OAAOhD,OAAAyS,EAAA,EAAAzS,CAAA,GAAImE,EAAX,CACEhJ,aAAcygB,EAAO5Y,QAGzB,IAAK,mBACH,OAAOhD,OAAAyS,EAAA,EAAAzS,CAAA,GAAImE,EAAX,CACE/I,MAAOwgB,EAAO5Y,QAGlB,IAAK,mBACH,OAAOhD,OAAAyS,EAAA,EAAAzS,CAAA,GAAImE,EAAX,CACE9I,MAAOugB,EAAO5Y,QAGlB,IAAK,uBACH,OAAOhD,OAAAyS,EAAA,EAAAzS,CAAA,GAAImE,EAAX,CACErJ,UAAW8gB,EAAO5Y,QAGtB,IAAK,iBACH,OAAOhD,OAAAyS,EAAA,EAAAzS,CAAA,GAAImE,EAAX,CACEpJ,aAAc6gB,EAAO5Y,QAGzB,IAAK,eAEL,QACE,OAAOmB,IiB5ELmD,UhBXO,WAAiD,IAA9BnD,EAA8B/G,UAAAC,OAAA,QAAAvD,IAAAsD,UAAA,GAAAA,UAAA,GAAtB3E,EAAcmjB,EAAQxe,UAAAC,OAAA,EAAAD,UAAA,QAAAtD,EAC9D,OAAQ8hB,EAAO9Y,MAEb,IAAK,qBACH,OAAO9C,OAAAyS,EAAA,EAAAzS,CAAA,GAAImE,EAAX,CACE7I,aAAcsgB,EAAO5Y,QAGzB,IAAK,qBACH,OAAOhD,OAAAyS,EAAA,EAAAzS,CAAA,GAAImE,EAAX,CACE5I,aAAcqgB,EAAO5Y,QAGzB,IAAK,YACH,OAAOhD,OAAAyS,EAAA,EAAAzS,CAAA,GAAImE,EAAX,CACE3I,SAAUogB,EAAO5Y,QAGrB,IAAK,cACH,OAAOhD,OAAAyS,EAAA,EAAAzS,CAAA,GAAImE,EAAX,CACExI,aAAcwI,EAAMxI,cAGxB,IAAK,cACH,OAAOqE,OAAAyS,EAAA,EAAAzS,CAAA,GAAImE,EAAX,CACE1I,aAAc0I,EAAM1I,cAGxB,IAAK,eACH,OAAOuE,OAAAyS,EAAA,EAAAzS,CAAA,GAAImE,EAAX,CACErI,cAAeqI,EAAMrI,eAGzB,IAAK,oBACH,OAAOkE,OAAAyS,EAAA,EAAAzS,CAAA,GAAImE,EAAX,CACEpI,kBAAmBoI,EAAMpI,mBAG7B,IAAK,WACH,OAAOiE,OAAAyS,EAAA,EAAAzS,CAAA,GAAImE,EAAX,CACEvI,UAAWggB,EAAO5Y,QAGtB,IAAK,uBACH,OAAOhD,OAAAyS,EAAA,EAAAzS,CAAA,GAAImE,EAAX,CACEtI,gBAAkB+f,EAAO5Y,OAAS,EAAG4Y,EAAO5Y,MAAQ,IAGxD,IAAK,WACH,OAAOhD,OAAAyS,EAAA,EAAAzS,CAAA,GAAImE,EAAX,CACEzI,UAAWkgB,EAAO5Y,QAGtB,IAAK,YACH,OAAOhD,OAAAyS,EAAA,EAAAzS,CAAA,GAAImE,EAAX,CACEnI,WAAY4f,EAAO5Y,QAGvB,IAAK,mBACH,OAAOhD,OAAAyS,EAAA,EAAAzS,CAAA,GAAImE,EAAX,CACElI,YAAa2f,EAAO5Y,QAGxB,IAAK,iBACH,OAAOhD,OAAAyS,EAAA,EAAAzS,CAAA,GAAImE,EAAX,CACEjI,UAAW0f,EAAO5Y,QAItB,IAAK,eAEL,QACE,OAAOmB,IgB5DL8E,MfvBO,WAA6C,IAA9B9E,EAA8B/G,UAAAC,OAAA,QAAAvD,IAAAsD,UAAA,GAAAA,UAAA,GAAtB3E,EAAcmjB,EAAQxe,UAAAC,OAAA,EAAAD,UAAA,QAAAtD,EAC1D,OAAQ8hB,EAAO9Y,MAGb,IAAK,sBACH,OAAO9C,OAAAyS,EAAA,EAAAzS,CAAA,GAAImE,EAAX,CACEhI,SAAUyf,EAAO5Y,QAErB,IAAK,iBACH,OAAOhD,OAAAyS,EAAA,EAAAzS,CAAA,GAAImE,EAAX,CACE/H,KAAMwf,EAAO5Y,QAGjB,IAAK,eAEL,QACE,OAAOmB,Oe6CE4X,oLA/BX,OACEzf,EAAAC,EAAAC,cAACwf,EAAA,EAAD,CAAUP,MAAOA,IACfnf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAEbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAACyf,EAAD,OAGF3f,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAC0f,EAAD,OAGF5f,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAC2f,GAAD,OAGF7f,EAAAC,EAAAC,cAAA,OAAK+M,GAAG,UACNjN,EAAAC,EAAAC,cAAC4f,GAAD,QAGJ9f,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAC6f,EAAD,gBA1BMxf,oBCzBlBkY,IAASuH,OACPhgB,EAAAC,EAAAC,cAAC+f,GAAD,MACAnH,SAASC,eAAe","file":"static/js/main.6a332fdf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.a6ab37e6.svg\";","\nconst defaultState = {\n  sandifyVersion: \"0.1.5\",\n  input: 0,\n  reverse: false,\n  canvas_width: 600,\n  canvas_height: 600,\n  machineSlider: 0.0,\n  machineRectExpanded: false,\n  machinePolarExpanded: false,\n  showGCode: false,\n}\n\nexport default function app(state = defaultState, action) {\n  switch (action.type) {\n\n    // Vertex actions\n    case 'CHOOSE_INPUT':\n      return {...state,\n        input: action.value,\n      };\n    case 'TOGGLE_REVERSE':\n      return {...state,\n        reverse: !state.reverse,\n      };\n    case 'SET_MACHINE_SIZE':\n      return {...state,\n        canvas_width: action.value,\n        canvas_height: action.value,\n      };\n    case 'SET_MACHINE_SLIDER':\n      return {...state,\n        machineSlider: action.value,\n      };\n    case 'TOGGLE_MACHINE_RECT_EXPANDED':\n      return {...state,\n        machineRectExpanded: !state.machineRectExpanded,\n        machinePolarExpanded: false,\n      };\n    case 'TOGGLE_MACHINE_POLAR_EXPANDED':\n      return {...state,\n        machinePolarExpanded: !state.machinePolarExpanded,\n        machineRectExpanded: false,\n      };\n    case 'SET_SHOW_GCODE':\n      return {...state,\n        showGCode: action.value,\n      };\n\n\n    case '@@redux/INIT':\n      return state;\n    default:\n      return state;\n  }\n}\n\n\n\n","\nconst defaultState = {\n  name: \"\",\n  comments: [],\n  vertices: [],\n  zoom: 100,\n  aspectRatio: false,\n}\n\nexport default function file(state = defaultState, action) {\n  switch (action.type) {\n\n    // File actions\n    case 'SET_FILE_VERTICES':\n      return {...state,\n        vertices : action.vertices,\n      };\n    case 'SET_FILE_NAME':\n      return {...state,\n        name: action.value,\n      };\n    case 'SET_FILE_COMMENT':\n      return {...state,\n        comment: action.value,\n      };\n    case 'SET_FILE_ZOOM':\n      return {...state,\n        zoom: action.value,\n      };\n    case 'TOGGLE_FILE_ASPECT_RATIO':\n      return {...state,\n        aspectRatio: !state.aspectRatio,\n      };\n\n    case '@@redux/INIT':\n      return state;\n    default:\n      return state;\n  }\n}\n\n\n\n","\nconst defaultState = {\n  filename: \"sandify\",\n  pre: localStorage.getItem('gcode_pre') ? localStorage.getItem('gcode_pre') : '',\n  post: localStorage.getItem('gcode_post') ? localStorage.getItem('gcode_post') : '',\n}\n\nexport default function gcode(state = defaultState, action) {\n  switch (action.type) {\n\n    // GCode Settings\n    case 'SET_GCODE_FILENAME':\n      return {...state,\n        filename: action.value,\n      };\n    case 'SET_GCODE_PRE':\n      return {...state,\n        pre: action.value,\n      };\n    case 'SET_GCODE_POST':\n      return {...state,\n        post: action.value,\n      };\n\n    case '@@redux/INIT':\n      return state;\n    default:\n      return state;\n  }\n}\n\n\n\n","\nconst defaultState = {\n  // Machine settings\n  rectangular: undefined !== localStorage.getItem('machine_rect_active') ? localStorage.getItem('machine_rect_active') < 2 : true,\n  min_x: parseFloat(localStorage.getItem('machine_min_x') ? localStorage.getItem('machine_min_x') : 0),\n  max_x: parseFloat(localStorage.getItem('machine_max_x') ? localStorage.getItem('machine_max_x') : 500),\n  min_y: parseFloat(localStorage.getItem('machine_min_y') ? localStorage.getItem('machine_min_y') : 0),\n  max_y: parseFloat(localStorage.getItem('machine_max_y') ? localStorage.getItem('machine_max_y') : 500),\n  max_radius: localStorage.getItem('machine_radius') ? localStorage.getItem('machine_radius') : 250,\n  rectOrigin: [],\n  polarEndpoints: false,\n}\n\nexport default function machine(state = defaultState, action) {\n  switch (action.type) {\n    // Machine Settings\n    case 'TOGGLE_MACHINE_RECT_EXPANDED':\n      return {...state,\n        rectangular: true,\n      };\n    case 'TOGGLE_MACHINE_POLAR_EXPANDED':\n      return {...state,\n        rectangular: false,\n      };\n\n    case 'SET_MIN_X':\n      return {...state,\n        min_x: action.value,\n      };\n    case 'SET_MAX_X':\n      return {...state,\n        max_x: action.value,\n      };\n    case 'SET_MIN_Y':\n      return {...state,\n        min_y: action.value,\n      };\n    case 'SET_MAX_Y':\n      return {...state,\n        max_y: action.value,\n      };\n    case 'SET_MAX_RADIUS':\n      return {...state,\n        max_radius: action.value,\n      };\n    case 'SET_MACHINE_RECT_ORIGIN':\n      let newValue = [];\n      for (let i = 0; i < action.value.length ; i++) {\n        if (!state.rectOrigin.includes(action.value[i])) {\n          newValue.push(action.value[i]);\n          break;\n        }\n      }\n      return {...state,\n        rectOrigin: newValue,\n      };\n    case 'TOGGLE_MACHINE_ENDPOINTS':\n      return {...state,\n        polarEndpoints: !state.polarEndpoints,\n      };\n    case '@@redux/INIT':\n      return state;\n    default:\n      return state;\n  }\n}\n\n\n\n","\nconst defaultState = {\n  // Transform settings\n  shapes: [],\n  currentShape: \"Polygon\",\n  polygonSides: 4,\n  starPoints: 5,\n  starRatio: 0.5,\n  circleLobes: 1,\n  reuleauxSides: 3,\n  inputText: \"Sandify\",\n  startingSize: 10.0,\n  epicycloidA: 1.0,\n  epicycloidB: .25,\n  hypocycloidA: 1.0,\n  hypocycloidB: .25,\n  roseN: 3,\n  roseD: 2\n}\n\nexport default function shapes(state = defaultState, action) {\n  switch (action.type) {\n\n    // shape actions\n    case 'ADD_SHAPE':\n      return {...state,\n          shapes: [...state.shapes,\n            action.shape\n          ],\n      };\n\n    case 'SET_SHAPE':\n      return {...state,\n        currentShape: action.value,\n      };\n\n    case 'SET_SHAPE_POLYGON_SIDES':\n      return {...state,\n        polygonSides: action.value,\n      };\n\n    case 'SET_SHAPE_STAR_POINTS':\n      return {...state,\n        starPoints: action.value,\n      };\n\n    case 'SET_SHAPE_STAR_RATIO':\n      return {...state,\n        starRatio: action.value,\n      };\n\n    case 'SET_SHAPE_CIRCLE_LOBES':\n      return {...state,\n        circleLobes: action.value,\n      };\n\n    case 'SET_SHAPE_REULEAUX_SIDES':\n      return {...state,\n        reuleauxSides: action.value,\n      };\n\n    case 'SET_SHAPE_EPICYCLOID_A':\n      return {...state,\n        epicycloidA: action.value,\n      };\n\n    case 'SET_SHAPE_EPICYCLOID_B':\n      return {...state,\n        epicycloidB: action.value,\n      };\n\n    case 'SET_SHAPE_HYPOCYCLOID_A':\n      return {...state,\n        hypocycloidA: action.value,\n      };\n\n    case 'SET_SHAPE_HYPOCYCLOID_B':\n      return {...state,\n        hypocycloidB: action.value,\n      };\n\n    case 'SET_SHAPE_ROSE_N':\n      return {...state,\n        roseN: action.value,\n      };\n\n    case 'SET_SHAPE_ROSE_D':\n      return {...state,\n        roseD: action.value,\n      };\n\n    case 'SET_SHAPE_INPUT_TEXT':\n      return {...state,\n        inputText: action.value,\n      };\n\n    case 'SET_SHAPE_SIZE':\n      return {...state,\n        startingSize: action.value,\n      };\n\n    case '@@redux/INIT':\n      return state;\n    default:\n      return state;\n  }\n}\n","\nconst defaultState = {\n  xformOffsetX: 0.0,\n  xformOffsetY: 0.0,\n  numLoops: 10,\n  growEnabled: true,\n  growValue: 100,\n  spinEnabled: false,\n  spinValue: 2,\n  spinSwitchbacks: 0,\n  trackEnabled: false,\n  trackGrowEnabled: false,\n  trackValue: 10,\n  trackLength: 0.2,\n  trackGrow: 50.0,\n}\n\nexport default function transform(state = defaultState, action) {\n  switch (action.type) {\n\n    case 'SET_SHAPE_OFFSET_X':\n      return {...state,\n        xformOffsetX: action.value,\n      };\n\n    case 'SET_SHAPE_OFFSET_Y':\n      return {...state,\n        xformOffsetY: action.value,\n      };\n\n    case 'SET_LOOPS':\n      return {...state,\n        numLoops: action.value,\n      };\n\n    case 'TOGGLE_SPIN':\n      return {...state,\n        spinEnabled: !state.spinEnabled,\n      };\n\n    case 'TOGGLE_GROW':\n      return {...state,\n        growEnabled: !state.growEnabled,\n      };\n\n    case 'TOGGLE_TRACK':\n      return {...state,\n        trackEnabled: !state.trackEnabled,\n      };\n\n    case 'TOGGLE_TRACK_GROW':\n      return {...state,\n        trackGrowEnabled: !state.trackGrowEnabled,\n      };\n\n    case 'SET_SPIN':\n      return {...state,\n        spinValue: action.value,\n      };\n\n    case 'SET_SPIN_SWITCHBACKS':\n      return {...state,\n        spinSwitchbacks: (action.value >= 0? action.value : 0),\n      };\n\n    case 'SET_GROW':\n      return {...state,\n        growValue: action.value,\n      };\n\n    case 'SET_TRACK':\n      return {...state,\n        trackValue: action.value,\n      };\n\n    case 'SET_TRACK_LENGTH':\n      return {...state,\n        trackLength: action.value,\n      };\n\n    case 'SET_TRACK_GROW':\n      return {...state,\n        trackGrow: action.value,\n      };\n\n\n    case '@@redux/INIT':\n      return state;\n    default:\n      return state;\n  }\n}\n\n\n\n","\nconst defaultState = {\n  angleDeg: 15,\n  size: 12,\n}\n\nexport default function wiper(state = defaultState, action) {\n  switch (action.type) {\n\n    // Wiper Settings\n    case 'SET_WIPER_ANGLE_DEG':\n      return {...state,\n        angleDeg: action.value,\n      };\n    case 'SET_WIPER_SIZE':\n      return {...state,\n        size: action.value,\n      };\n\n    case '@@redux/INIT':\n      return state;\n    default:\n      return state;\n  }\n}\n\n\n\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './Header.css';\n\nclass Header extends Component {\n  render() {\n    return (\n      <div className=\"header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <h2>sandify</h2>\n        <p>\n          web based user interface to create patterns that\n          could be useful for robots that draw in sand with ball bearings.\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default Header\n\n","import React, { Component } from 'react';\nimport './Documentation.css';\n\nclass Documentation extends Component {\n  render () {\n    return (\n      <div className=\"documentation\">\n        <div className=\"App-col-3\">\n          <h3 className=\"docTitle\">About</h3>\n          Sandify is working on a solution to turn your\n              cold, empty hearted, emotionless sand tables into\n              cold, empty hearted emotionless sand table robots with enchanting patterns.\n          <br/>\n          <br/>\n          Sandify is a labor of love, but if you'd like to support me financially,\n            I do have a <a href=\"https://github.com/sponsors/jeffeb3\">Donation system set up <b>with github matching donations</b></a>. Or just <a href=\"https://www.paypal.me/jeffeb3\">PayPal</a>.\n        </div>\n        <div className=\"App-col-3\">\n          <h3 className=\"docTitle\">Sand Machine</h3>\n          Anything that uses gcode can be used with sandify.\n              But the machine this was designed for is the ZenXY from V1Engineering.com:\n          <br/>\n          <a href=\"https://docs.v1engineering.com/zenxy/\">ZenXY on V1Engineering.com</a>\n          <br/>\n          <a href=\"https://www.thingiverse.com/thing:2477901\">ZenXY Thingiverse Page</a>\n          <br/>\n          ZenXY was inspired by the awesome Sisyphus Kinetic Art Table by <a href=\"https://sisyphus-industries.com/\">Sisyphus Industries</a>, which is also now supported.\n          <br/>\n          Sandify was created by users in the\n          <a href=\"https://forum.v1engineering.com/t/does-this-count-as-a-build/6037\"> V1Engineering.com Forum</a>\n        </div>\n        <div className=\"App-col-3\">\n          <h3 className=\"docTitle\">Github</h3>\n          Sandify is hosted on github.io\n          <br/>\n          <a href=\"https://github.com/jeffeb3/sandify\">Sandify Source Code</a>\n          <br/>\n          Please post any problems, feature requests or comments in the github issues:\n          <br/>\n          <a href=\"https://github.com/jeffeb3/sandify/issues\">Sandify Issue Tracker</a>\n          <br/>\n          Sandify is a community project. We want and need developers:\n          <br/>\n          <a href=\"https://github.com/jeffeb3/sandify/wiki#developer-info\">Help Sandify</a>\n        </div>\n        <div className=\"App-col-3\">\n          <h3 className=\"docTitle\">License</h3>\n          Sandify is licensed under the MIT license.\n          <br/>\n          Patterns that you create and gcode generated with sandify are not covered\n              under the sandify license (they are your work, and are your copyright).\n          <br/>\n          <a href=\"https://raw.githubusercontent.com/jeffeb3/sandify/master/LICENSE\">Sandify License</a>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default Documentation\n","\n// A simple struct that we can use everywhere we need vertices. I don't see a\n// problem letting this bloat a little.\n//\nexport const Vertex = (x, y, speed=0) => {\n  return {\n    x: x,\n    y: y,\n    f: speed\n  }\n}\n\n// convert degrees to radians\nexport const degToRad = (deg) => {\n  return deg / 180.0 * Math.PI;\n}\n\n// convert radians to degrees\nexport const radToDeg = (rad) => {\n  return rad * 180.0 / Math.PI;\n}\n\n","import { Vertex } from '../Geometry';\n\nlet Vicious1Vertices = () => {\n  return [\n    Vertex(-0.745613252629, 0.342139688058),\n    Vertex(-0.722681883112, 0.350763810109),\n    Vertex(-0.700286039815, 0.359363989838),\n    Vertex(-0.683380317501, 0.365945196632),\n    Vertex(-0.666520036737, 0.372640251609),\n    Vertex(-0.649705686141, 0.379449643388),\n    Vertex(-0.632937754332, 0.386372394731),\n    Vertex(-0.61621672993, 0.393408994259),\n    Vertex(-0.59954407879, 0.400558464732),\n    Vertex(-0.582920289531, 0.40782080615),\n    Vertex(-0.566345850773, 0.415195529896),\n    Vertex(-0.549821739752, 0.42268214735),\n    Vertex(-0.533348933706, 0.430280658513),\n    Vertex(-0.516927921255, 0.437990574764),\n    Vertex(-0.500559191017, 0.445811896105),\n    Vertex(-0.484244208848, 0.453743645298),\n    Vertex(-0.467982974749, 0.461785822342),\n    Vertex(-0.451776954575, 0.46993793862),\n    Vertex(-0.435626636946, 0.478199505511),\n    Vertex(-0.417042020391, 0.487809171708),\n    Vertex(-0.398529230801, 0.497557117029),\n    Vertex(-0.380089734033, 0.507441875618),\n    Vertex(-0.361724018706, 0.517463936093),\n    Vertex(-0.343433550675, 0.527621343979),\n    Vertex(-0.325218818561, 0.537915076515),\n    Vertex(-0.307080799601, 0.548343667842),\n    Vertex(-0.289020959651, 0.558906629343),\n    Vertex(-0.271040275948, 0.569603472399),\n    Vertex(-0.253139237112, 0.580433708391),\n    Vertex(-0.235319797618, 0.591396360082),\n    Vertex(-0.217581468846, 0.60249142747),\n    Vertex(-0.199926693892, 0.61371793332),\n    Vertex(-0.182355472755, 0.625075389011),\n    Vertex(-0.164869271291, 0.636562817306),\n    Vertex(-0.147469066739, 0.648180218206),\n    Vertex(-0.130155347716, 0.659926125854),\n    Vertex(-0.112929580079, 0.671800540249),\n    Vertex(-0.0957922524482, 0.683802484155),\n    Vertex(-0.0787448306786, 0.695931957571),\n    Vertex(-0.0617878033894, 0.708187006022),\n    Vertex(-0.0449226364371, 0.720568118127),\n    Vertex(-0.0281493298216, 0.733074316648),\n    Vertex(-0.0114698380183, 0.745704624347),\n    Vertex(0.00511535035415, 0.758458552606),\n    Vertex(0.021605258058, 0.771335124187),\n    Vertex(0.0379993964745, 0.78433433909),\n    Vertex(0.0542962997473, 0.79745424284),\n    Vertex(0.0689143087782, 0.809362371934),\n    Vertex(0.0834609794625, 0.821357963795),\n    Vertex(0.0979358231812, 0.833440041186),\n    Vertex(0.112337862697, 0.845608604107),\n    Vertex(0.12666660939, 0.857863652558),\n    Vertex(0.140921574643, 0.870203720682),\n    Vertex(0.155102758455, 0.882629297099),\n    Vertex(0.169209183589, 0.895138915952),\n    Vertex(0.181539967956, 0.906207597924),\n    Vertex(0.193955771996, 0.91718051061),\n    Vertex(0.206455618473, 0.928057165389),\n    Vertex(0.219038530147, 0.938837562262),\n    Vertex(0.22146207946, 0.940840899396),\n    Vertex(0.223916411758, 0.942806124262),\n    Vertex(0.226401527041, 0.944732748242),\n    Vertex(0.228916936691, 0.946620282717),\n    Vertex(0.230887047745, 0.948104706671),\n    Vertex(0.232926054052, 0.949493361338),\n    Vertex(0.235029069424, 0.950783803623),\n    Vertex(0.237191207672, 0.951972124576),\n    Vertex(0.239407582608, 0.953055881104),\n    Vertex(0.241672819425, 0.954032630111),\n    Vertex(0.243982520555, 0.954900417123),\n    Vertex(0.246330822571, 0.955656799046),\n    Vertex(0.248847209458, 0.956426373676),\n    Vertex(0.251395845187, 0.957082100124),\n    Vertex(0.253971354951, 0.957622512531),\n    Vertex(0.256568363942, 0.958047610898),\n    Vertex(0.259181985973, 0.958355440751),\n    Vertex(0.261806846237, 0.958546002088),\n    Vertex(0.264437081308, 0.958618806291),\n    Vertex(0.267068293617, 0.958573364741),\n    Vertex(0.269695108356, 0.958410166058),\n    Vertex(0.2723116621, 0.95812921024),\n    Vertex(0.274913068661, 0.957731474526),\n    Vertex(0.277493953231, 0.957217447535),\n    Vertex(0.280048941005, 0.956588595122),\n    Vertex(0.282573634412, 0.955845405908),\n    Vertex(0.285062170027, 0.954989834366),\n    Vertex(0.287510150281, 0.954023834973),\n    Vertex(0.289695253613, 0.953107674698),\n    Vertex(0.291880845564, 0.952108937844),\n    Vertex(0.301388879047, 0.947138218659),\n    Vertex(0.310845118937, 0.942069775711),\n    Vertex(0.320249076614, 0.936904097619),\n    Vertex(0.329599286221, 0.931642650239),\n    Vertex(0.363485000908, 0.912453612212),\n    Vertex(0.397329182996, 0.8931922586),\n    Vertex(0.431132321104, 0.873858589404),\n    Vertex(0.464893926612, 0.854453093243),\n    Vertex(0.498613999522, 0.834975281497),\n    Vertex(0.532292539832, 0.815425642786),\n    Vertex(0.565929058925, 0.795804177109),\n    Vertex(0.599524045418, 0.776110884466),\n    Vertex(0.614195802519, 0.767461354237),\n    Vertex(0.628780096852, 0.758665238364),\n    Vertex(0.643274973942, 0.749722536847),\n    Vertex(0.657679456551, 0.740634715542),\n    Vertex(0.663100193664, 0.737124966608),\n    Vertex(0.668459853424, 0.733522380099),\n    Vertex(0.673756481358, 0.729827933253),\n    Vertex(0.678988611609, 0.72604211469),\n    Vertex(0.681833350338, 0.72394251965),\n    Vertex(0.684601864533, 0.721743246372),\n    Vertex(0.687290245243, 0.719446737951),\n    Vertex(0.689896049373, 0.717056903336),\n    Vertex(0.692415367973, 0.714576674241),\n    Vertex(0.694845269331, 0.71200800514),\n    Vertex(0.697182821733, 0.709355293604),\n    Vertex(0.699425093466, 0.706621471345),\n    Vertex(0.70031242523, 0.705263599663),\n    Vertex(0.70110301047, 0.703846605105),\n    Vertex(0.701792940234, 0.702378794191),\n    Vertex(0.702378794191, 0.700866030346),\n    Vertex(0.702858129247, 0.699316131471),\n    Vertex(0.703228502307, 0.697736426848),\n    Vertex(0.703487470278, 0.696135222997),\n    Vertex(0.703634544541, 0.694519360583),\n    Vertex(0.703808492838, 0.692484263226),\n    Vertex(0.704005894839, 0.688243540547),\n    Vertex(0.704113390977, 0.683999886156),\n    Vertex(0.704130981255, 0.679754765908),\n    Vertex(0.704059154289, 0.675510622897),\n    Vertex(0.703896932843, 0.671268434362),\n    Vertex(0.703645294154, 0.667031132015),\n    Vertex(0.703303749604, 0.662799693094),\n    Vertex(0.702872787811, 0.658576560692),\n    Vertex(0.701225165173, 0.648144060414),\n    Vertex(0.699422161753, 0.637737456933),\n    Vertex(0.697463288931, 0.627358704724),\n    Vertex(0.695350012565, 0.617010735501),\n    Vertex(0.693864122754, 0.60962184181),\n    Vertex(0.691242194203, 0.596705692105),\n    Vertex(0.688638833167, 0.58378514483),\n    Vertex(0.686055016884, 0.570860688605),\n    Vertex(0.683489768115, 0.557932812049),\n    Vertex(0.679173798139, 0.53578860744),\n    Vertex(0.675031287842, 0.513610688133),\n    Vertex(0.671063214461, 0.491401008603),\n    Vertex(0.667269089377, 0.469161523326),\n    Vertex(0.663649889828, 0.446892232301),\n    Vertex(0.660205127196, 0.424595578622),\n    Vertex(0.65693480148, 0.402273028147),\n    Vertex(0.653839889918, 0.379925069493),\n    Vertex(0.65092039251, 0.357553168517),\n    Vertex(0.648176309256, 0.335159768314),\n    Vertex(0.645608128774, 0.312745357501),\n    Vertex(0.643215362447, 0.290311401936),\n    Vertex(0.641387928086, 0.272862824121),\n    Vertex(0.640313455316, 0.262524627274),\n    Vertex(0.639318138793, 0.252178123907),\n    Vertex(0.638402467138, 0.241824779876),\n    Vertex(0.637566440349, 0.231464595183),\n    Vertex(0.636809569807, 0.221098058444),\n    Vertex(0.636132344132, 0.210726146899),\n    Vertex(0.635534763324, 0.200349349165),\n    Vertex(0.635016338763, 0.189968153863),\n    Vertex(0.634136336281, 0.166283334136),\n    Vertex(0.633371647838, 0.14259411684),\n    Vertex(0.632722273436, 0.118901479213),\n    Vertex(0.632187724454, 0.0952059098725),\n    Vertex(0.631768489513, 0.0715078974381),\n    Vertex(0.631464568611, 0.0478084191472),\n    Vertex(0.63127547313, 0.0241079636186),\n    Vertex(0.631201691689, 0.000406530852484),\n    Vertex(0.631270098323, -0.0222394852774),\n    Vertex(0.631441114908, -0.0448845241697),\n    Vertex(0.631715230062, -0.0675285858243),\n    Vertex(0.632092443786, -0.0901711816225),\n    Vertex(0.63257226746, -0.112811822945),\n    Vertex(0.633154701085, -0.135450021174),\n    Vertex(0.63384023328, -0.158085776309),\n    Vertex(0.634628864044, -0.180717622493),\n    Vertex(0.635306089719, -0.195449968327),\n    Vertex(0.636126969325, -0.210174984878),\n    Vertex(0.637091014243, -0.22489120629),\n    Vertex(0.638198713093, -0.239597655326),\n    Vertex(0.639449577254, -0.254292377511),\n    Vertex(0.640843606728, -0.268974395606),\n    Vertex(0.642380801514, -0.283642243756),\n    Vertex(0.644060672993, -0.298293967485),\n    Vertex(0.64612020129, -0.31581290641),\n    Vertex(0.6482320118, -0.333325493289),\n    Vertex(0.65039757038, -0.350831239505),\n    Vertex(0.652615411173, -0.368331122296),\n    Vertex(0.654741880247, -0.384873800832),\n    Vertex(0.656970959272, -0.401402798041),\n    Vertex(0.659303625486, -0.417918113923),\n    Vertex(0.661739390269, -0.434418282622),\n    Vertex(0.664278253622, -0.450902815519),\n    Vertex(0.666919726926, -0.467371223995),\n    Vertex(0.66966381018, -0.483822530812),\n    Vertex(0.672510992004, -0.500256735972),\n    Vertex(0.675460295159, -0.516672862235),\n    Vertex(0.678512696885, -0.533069932364),\n    Vertex(0.681666731323, -0.54944794636),\n    Vertex(0.684923375712, -0.565805926984),\n    Vertex(0.688253801542, -0.582478578124),\n    Vertex(0.691624294115, -0.599143411363),\n    Vertex(0.695033876193, -0.615799938082),\n    Vertex(0.698483036394, -0.632448158282),\n    Vertex(0.700362264349, -0.641257466863),\n    Vertex(0.702110053844, -0.650093649478),\n    Vertex(0.703725916259, -0.658955240272),\n    Vertex(0.705209362975, -0.667839796151),\n    Vertex(0.705560191283, -0.670609776202),\n    Vertex(0.705811829972, -0.673129583421),\n    Vertex(0.705988709982, -0.675296119238),\n    Vertex(0.706054184903, -0.677469495719),\n    Vertex(0.706007766116, -0.679642872199),\n    Vertex(0.70584945362, -0.681811362492),\n    Vertex(0.705579736035, -0.683968614552),\n    Vertex(0.705199590599, -0.686109253572),\n    Vertex(0.704709505929, -0.688227904745),\n    Vertex(0.704111436502, -0.690317727409),\n    Vertex(0.702891355326, -0.694066410943),\n    Vertex(0.701505632372, -0.697756460219),\n    Vertex(0.699955733497, -0.701380545956),\n    Vertex(0.698245567651, -0.704932316108),\n    Vertex(0.696378555166, -0.708403464156),\n    Vertex(0.694358116374, -0.711788126674),\n    Vertex(0.692188648844, -0.715079462999),\n    Vertex(0.689874061527, -0.718270143849),\n    Vertex(0.688711148751, -0.719521985248),\n    Vertex(0.687505237521, -0.720732294048),\n    Vertex(0.686256816453, -0.721899115774),\n    Vertex(0.684968817262, -0.723021473187),\n    Vertex(0.683641728566, -0.724097900432),\n    Vertex(0.68227750484, -0.725126443034),\n    Vertex(0.68087761194, -0.726106612373),\n    Vertex(0.679444492961, -0.727036942593),\n    Vertex(0.669607619016, -0.733287843069),\n    Vertex(0.659707713245, -0.739438576688),\n    Vertex(0.649746730121, -0.745489632069),\n    Vertex(0.639724669646, -0.751439054737),\n    Vertex(0.626066307964, -0.75960143201),\n    Vertex(0.588245257356, -0.781929357292),\n    Vertex(0.550379253818, -0.804180569421),\n    Vertex(0.512467808729, -0.826354091159),\n    Vertex(0.474510922092, -0.848449922505),\n    Vertex(0.436509082523, -0.87046806346),\n    Vertex(0.398462290023, -0.892408514024),\n    Vertex(0.360370544593, -0.914271274197),\n    Vertex(0.322234334851, -0.936056343978),\n    Vertex(0.311636192795, -0.942000391839),\n    Vertex(0.303639945919, -0.946411153865),\n    Vertex(0.301535464691, -0.947610713051),\n    Vertex(0.299393848434, -0.94874333146),\n    Vertex(0.29721754024, -0.949807054616),\n    Vertex(0.295008494586, -0.9508013939),\n    Vertex(0.292769154566, -0.951725372076),\n    Vertex(0.290501474654, -0.952577523286),\n    Vertex(0.288207897946, -0.95335784753),\n    Vertex(0.285890867534, -0.954064878953),\n    Vertex(0.282197886545, -0.955003515693),\n    Vertex(0.278465327432, -0.955768692754),\n    Vertex(0.274700519477, -0.956358455661),\n    Vertex(0.270912257819, -0.956772315796),\n    Vertex(0.267109337597, -0.957008318683),\n    Vertex(0.263299088092, -0.957066464322),\n    Vertex(0.259490304444, -0.956946752712),\n    Vertex(0.255691781792, -0.956649183855),\n    Vertex(0.251910849416, -0.956174246369),\n    Vertex(0.248156302456, -0.95552340611),\n    Vertex(0.244436447432, -0.954697640316),\n    Vertex(0.240758613626, -0.953699392081),\n    Vertex(0.240319833932, -0.953534238922),\n    Vertex(0.238502171947, -0.952568728147),\n    Vertex(0.236709918141, -0.951555821348),\n    Vertex(0.234945026988, -0.950496007142),\n    Vertex(0.233208964345, -0.949390262768),\n    Vertex(0.23150270745, -0.948239076844),\n    Vertex(0.22982723354, -0.94704293799),\n    Vertex(0.228184008471, -0.945803312061),\n    Vertex(0.226574009482, -0.944520687677),\n    Vertex(0.224074235635, -0.942570121375),\n    Vertex(0.212583875626, -0.933021043911),\n    Vertex(0.201218113415, -0.923323914947),\n    Vertex(0.189977926239, -0.913481666195),\n    Vertex(0.178866245811, -0.903494297655),\n    Vertex(0.161323853183, -0.887790577622),\n    Vertex(0.143655885521, -0.872228557044),\n    Vertex(0.125862831443, -0.856809213159),\n    Vertex(0.107946156805, -0.841533523206),\n    Vertex(0.0899073274635, -0.82640295304),\n    Vertex(0.0717468320377, -0.811418479899),\n    Vertex(0.0534666250026, -0.796580103784),\n    Vertex(0.0350671949772, -0.781890267787),\n    Vertex(0.0165500078179, -0.767348483291),\n    Vertex(-0.00208395923779, -0.752956704771),\n    Vertex(-0.0208327517145, -0.738715420845),\n    Vertex(-0.0396958809936, -0.724625608751),\n    Vertex(-0.0586718812184, -0.710688245726),\n    Vertex(-0.0777597751514, -0.69690382039),\n    Vertex(-0.0969580969362, -0.683274287218),\n    Vertex(-0.116265380716, -0.66979964621),\n    Vertex(-0.135680649254, -0.656480874603),\n    Vertex(-0.155202436693, -0.643318949635),\n    Vertex(-0.174829765796, -0.630314359925),\n    Vertex(-0.194561170706, -0.617469059948),\n    Vertex(-0.214395674185, -0.604782561085),\n    Vertex(-0.234331321759, -0.592256329193),\n    Vertex(-0.254367624808, -0.579891341509),\n    Vertex(-0.274502628858, -0.567688086652),\n    Vertex(-0.29394086248, -0.556123456584),\n    Vertex(-0.313469979201, -0.54471371868),\n    Vertex(-0.333088513165, -0.533458384321),\n    Vertex(-0.352795975753, -0.522359407981),\n    Vertex(-0.372590901108, -0.511416789662),\n    Vertex(-0.392471334756, -0.500631017982),\n    Vertex(-0.412437276696, -0.490003070179),\n    Vertex(-0.432486283835, -0.47953392349),\n    Vertex(-0.452617867553, -0.469224066534),\n    Vertex(-0.472830073375, -0.459073499311),\n    Vertex(-0.493122412682, -0.449083687678),\n    Vertex(-0.513493419618, -0.439255120252),\n    Vertex(-0.533941628327, -0.429588285654),\n    Vertex(-0.554465572951, -0.420083183884),\n    Vertex(-0.575064276254, -0.410741769415),\n    Vertex(-0.595736272379, -0.401563065011),\n    Vertex(-0.61648009547, -0.392549025148),\n    Vertex(-0.637294768288, -0.383699161205),\n    Vertex(-0.658179313597, -0.37501493904),\n    Vertex(-0.679131776921, -0.366496358653),\n    Vertex(-0.698898362385, -0.3585812225),\n    Vertex(-0.718729934152, -0.350830262268),\n    Vertex(-0.738624537745, -0.34324250072),\n    Vertex(-0.758581195928, -0.33581989233),\n    Vertex(-0.778598442844, -0.32856194848),\n    Vertex(-0.798674812635, -0.32146915779),\n    Vertex(-0.818809328066, -0.314542497496),\n    Vertex(-0.83900003466, -0.307782456217),\n    Vertex(-0.849647527216, -0.304229708827),\n    Vertex(-0.859482935305, -0.301024369413),\n    Vertex(-0.86930319621, -0.297772122593),\n    Vertex(-0.879107821313, -0.294472968367),\n    Vertex(-0.888896810615, -0.291126906735),\n    Vertex(-0.898669186876, -0.287733937697),\n    Vertex(-0.908425927336, -0.284294061253),\n    Vertex(-0.918165566137, -0.28080825464),\n    Vertex(-0.927888591898, -0.277275540622),\n    Vertex(-0.931015263683, -0.276110673371),\n    Vertex(-0.934077437785, -0.27478553915),\n    Vertex(-0.937066807683, -0.273304046909),\n    Vertex(-0.939975066859, -0.271669128361),\n    Vertex(-0.942794886029, -0.269885669693),\n    Vertex(-0.945518447293, -0.267958557094),\n    Vertex(-0.948138909988, -0.265892676752),\n    Vertex(-0.950648456212, -0.263693892093),\n    Vertex(-0.953040245302, -0.261368066543),\n    Vertex(-0.955308902451, -0.258921063527),\n    Vertex(-0.957447586996, -0.256360212328),\n    Vertex(-0.959450435511, -0.25369186499),\n    Vertex(-0.961260768213, -0.251131991028),\n    Vertex(-0.962993410524, -0.248518368997),\n    Vertex(-0.96464591935, -0.245853930609),\n    Vertex(-0.966217317453, -0.24314063034),\n    Vertex(-0.972878657732, -0.231316055063),\n    Vertex(-0.972926053757, -0.0130031238537),\n    Vertex(-0.972925565138, 0.00628803550555),\n    Vertex(-0.97291628138, 0.0249869888634),\n    Vertex(-0.972898202484, 0.0430570898088),\n    Vertex(-0.972858135742, 0.0776097691758),\n    Vertex(-0.972741844464, 0.112162448543),\n    Vertex(-0.972548351414, 0.146714639291),\n    Vertex(-0.972277656592, 0.181266341421),\n    Vertex(-0.972203875151, 0.189501034277),\n    Vertex(-0.972085629398, 0.197735727134),\n    Vertex(-0.971922919333, 0.205968954135),\n    Vertex(-0.971715256338, 0.214201692516),\n    Vertex(-0.971568670694, 0.217132916776),\n    Vertex(-0.971310679961, 0.220056811754),\n    Vertex(-0.970942749994, 0.222968491261),\n    Vertex(-0.970464880795, 0.225864534966),\n    Vertex(-0.969878049601, 0.228740056681),\n    Vertex(-0.96918274503, 0.231591636074),\n    Vertex(-0.968380432939, 0.234414875576),\n    Vertex(-0.967472090565, 0.237205866236),\n    Vertex(-0.966500716365, 0.23992551855),\n    Vertex(-0.965406210223, 0.242597774839),\n    Vertex(-0.964191015235, 0.245217260296),\n    Vertex(-0.962857085875, 0.247778600114),\n    Vertex(-0.961408331095, 0.250276908105),\n    Vertex(-0.959846705368, 0.252705832225),\n    Vertex(-0.958176117646, 0.255061463523),\n    Vertex(-0.956399499642, 0.257337938573),\n    Vertex(-0.954520760305, 0.259531348425),\n    Vertex(-0.952544297207, 0.261636318272),\n    Vertex(-0.950473530677, 0.263649427781),\n    Vertex(-0.948313346904, 0.265565790766),\n    Vertex(-0.946067654839, 0.267381009657),\n    Vertex(-0.94374134067, 0.269092641359),\n    Vertex(-0.941339779204, 0.270695799685),\n    Vertex(-0.93886736801, 0.27218804154),\n    Vertex(-0.936329481894, 0.273565946593),\n    Vertex(-0.933731007046, 0.274826094512),\n    Vertex(-0.93107829551, 0.27596701944),\n    Vertex(-0.928375744855, 0.276985301047),\n    Vertex(-0.913861323012, 0.282438287001),\n    Vertex(-0.899294130338, 0.287750550737),\n    Vertex(-0.884676121307, 0.292920137779),\n    Vertex(-0.870008761776, 0.297948025366),\n    Vertex(-0.854391527272, 0.303278856616),\n    Vertex(-0.838793348902, 0.308665390412),\n    Vertex(-0.823214226666, 0.314107138133),\n    Vertex(-0.807654649182, 0.319603611161),\n    Vertex(-0.792114127832, 0.325155298116),\n    Vertex(-0.776593639853, 0.330761710377),\n    Vertex(-0.761093185246, 0.336423336564),\n    Vertex(-0.745613252629, 0.342139688058),\n  ];\n}\n\nexport default Vicious1Vertices;\n","import { Vertex } from '../Geometry';\n\nconst fontSpacing = 1.5;\n\n// Format for vertices: [x,y,b] where in a 0:7(8) by -1:7 grid defining x,y and b defines the line or curve. \n// Bulge directions could be represented by a 0:4 list starting at none, then NE and going clockwise.\n// 4  1\n// 3  2\nlet billsey = {\n  ' ': [ [8,-1,0] ],\n  'A': [ [0,0,0], [3.5,7,0], [7,0,0], [5,3.5,0], [2,3.5,0], [0,0,0], [0,-1,0], [8,-1,0] ],\n  'B': [ [0,0,0], [0,7,0], [3.5,7,0], [7,5.25,1], [3.5,3.5,2], [0,3.5,0], [3.5,3.5,0], [7,1.75,1], [3.5,0,2], [0,0,0], [0,-1,0], [8,-1,0] ],\n  'C': [ [3.5,-1,0], [3.5,0,0], [0,3.5,3], [3.5,7,4], [7,5.25,1], [3.5,7,1], [0,3.5,4], [3.5,0,3], [7,1.75,2], [3.5,0,2], [3.5,-1,0], [8,-1,0] ],\n  'D': [ [0,0,0], [0,7,0], [3.5,7,0], [7,3.5,1], [3.5,0,2], [0,0,0], [0,-1,0], [8,-1,0] ],\n  'E': [ [0,0,0], [0,7,0], [7,7,0], [0,7,0], [0,3.5,0], [3.5,3.5,0], [0,3.5,0], [0,0,0], [7,0,0], [0,0,0], [0,-1,0], [8,-1,0] ],\n  'F': [ [0,0,0], [0,7,0], [7,7,0], [0,7,0], [0,3.5,0], [3.5,3.5,0], [0,3.5,0], [0,0,0], [0,-1,0], [8,-1,0] ],\n  'G': [ [3.5,-1,0], [3.5,0,0], [0,3.5,3], [3.5,7,4], [7,5.25,1], [3.5,7,1], [0,3.5,4], [3.5,0,3], [7,1.75,2], [5.25,1.75,0], [7,1.75,0], [3.5,0,2], [3.5,-1,0], [8,-1,0] ],\n  'H': [ [0,0,0], [0,7,0], [0,3.5,0], [7,3.5,0], [7,7,0], [7,0,0], [7,3.5,0], [0,3.5,0], [0,0,0], [0,-1,0], [8,-1,0] ],\n  'I': [ [3.5,-1,0], [3.5,7,0], [0,7,0], [7,7,0], [3.5,7,0], [3.5,0,0], [0,0,0], [7,0,0], [3.5,0,0], [3.5,-1,0], [8,-1,0] ],\n  'J': [ [3.5,-1,0], [3.5,0,0], [0,1.75,3], [3.5,0,3], [7,1.75,2], [7,7,0], [7,1.75,0], [3.5,0,2], [3.5,-1,0], [8,-1,0] ],\n  'K': [ [0,0,0], [0,7,0], [0,1.75,0], [3.5,3.5,0], [7,7,0], [3.5,3.5,0], [7,0,0], [3.5,3.5,0], [0,1.75,0], [0,0,0], [0,-1,0], [8,-1,0] ],\n  'L': [ [0,0,0], [0,7,0], [0,0,0], [7,0,0], [0,0,0], [0,-1,0], [8,-1,0] ],\n  'M': [ [0,0,0], [0,7,0], [3.5,0,0], [7,7,0], [7,0,0], [7,7,0], [3.5,0,0], [0,7,0], [0,0,0], [0,-1,0], [8,-1,0] ],\n  'N': [ [0,0,0], [0,7,0], [7,0,0], [7,7,0], [7,0,0], [0,7,0], [0,0,0], [0,-1,0], [8,-1,0] ],\n  'O': [ [3.5,-1,0], [3.5, 0, 0], [0, 3.5, 3], [3.5, 7, 4], [7.0, 3.5, 1], [3.5, 0, 2], [3.5, -1, 0], [8, -1, 0] ],\n  'P': [ [0,0,0], [0,7,0], [3.5,7,0], [7,5.25,1], [3.5,3.5,2], [0,3.5,0], [0,0,0], [0,-1,0], [8,-1,0] ],\n  'Q': [ [3.5,-1,0], [3.5, 0, 0], [0, 3.5, 3], [3.5, 7, 4], [7.0, 3.5, 1], [3.5, 0, 2], [4.325,0.5,4], [6.075,0,0], [7,0.5,2], [6.075,0,2], [4.325,0.5,0], [3.5,0,4], [3.5, -1, 0], [8, -1, 0] ],\n  'R': [ [0,0,0], [0,7,0], [3.5,7,0], [7,5.25,1], [3.5,3.5,2], [7,0,0], [3.5,3.5,0], [0,3.5,0], [0,0,0], [0,-1,0], [8,-1,0] ],\n  'S': [ [3.5,-1,0], [3.5,0,0], [0,1.75,3], [3.5,0,3], [7,1.75,2], [3.5,3.5,1], [0,5.25,3], [3.5,7,4], [7,5.25,1], [3.5,7,1], [0,5.25,4], [3.5,3.5,3], [7,1.75,1], [3.5,0,2], [3.5,-1,0], [8,-1,0] ],\n  'T': [ [3.5,-1,0], [3.5,7,0], [0,7,0], [7,7,0], [3.5,7,0], [3.5,0,0], [3.5,-1,0], [8,-1,0] ],\n  'U': [ [3.5,-1,0], [3.5,0,0], [0,3.5,3], [0,7,0], [0,3.5,0], [3.5,0,3], [7,3.5,2], [7,7,0], [7,3.5,0], [3.5,0,2], [3.5,-1,0], [8,-1,0] ],\n  'V': [ [3.5,-1,0], [3.5,0,0], [0,7,0], [3.5,0,0], [7,7,0], [3.5,0,0], [3.5,-1,0], [8,-1,0] ],\n  'W': [ [1.75,-1,0], [1.75,0,0], [0,7,0], [1.75,0,0], [3.5,7,0], [5.25,0,0], [7,7,0], [5.25,0,0], [3.5,7,0], [1.75,0,0], [1.75,-1,0], [8,-1,0] ],\n  'X': [ [0,0,0], [7,7,0], [3.5,3.5,0], [0,7,0], [7,0,0], [3.5,3.5,0], [0,0,0], [0,-1,0], [8,-1,0] ],\n  'Y': [ [3.5,-1,0], [3.5,3.5,0], [0,7,0], [3.5,3.5,0], [7,7,0], [3.5,3.5,0], [3.5,-1,0], [8,-1,0] ],\n  'Z': [ [0,0,0], [7,0,0], [0,0,0], [7,7,0], [0,7,0], [7,7,0], [0,0,0], [0,-1,0], [8,-1,0] ],\n  '0': [ [3.5,-1,0], [3.5,0,0], [6,3.5,2], [3.5,7,1], [1,3.5,4], [3.5,0,3], [3.5,-1,0], [8,-1,0] ],\n  '1': [ [0,-1,0], [0,0,0], [0,0,0], [7,0,0], [3.5,0,0], [3.5,7,0], [1.5,6,2], [3.5,7,2], [3.5,0,0], [0,0,0], [0,-1,0], [8,-1,0] ],\n  '2': [ [1,-1,0], [1,0,0], [6,5.25,0], [3.5,7,1], [1,5.25,4], [3.5,7,4], [6,5.25,1], [1,0,0], [6,0,0], [1,0,0], [1,-1,0], [8,-1,0] ],\n  '3': [ [3.5,-1,0], [3.5,0,0], [1,1.75,3], [3.5,0,3], [6,1.75,2], [3.5,3.5,1], [6,5.25,2], [3.5,7,1], [1,5.25,4], [3.5,7,4], [6,5.25,1], [3.5,3.5,2], [6,1.75,1], [3.5,0,2], [3.5,-1,0], [8,-1,0] ],\n  '4': [ [3.5,-1,0], [3.5,0,0], [3.5,7,0], [1,3.5,0], [6,3.5,0], [3.5,3.5,0], [3.5,-1,0], [8,-1,0] ],\n  '5': [ [3.5,-1,0], [3.5,0,0], [1,1.75,3], [3.5,0,3], [6,1.75,2], [3.5,3.5,1],[1,3.5,0], [1,7,0], [6,7,0], [1,7,0], [1,3.5,0], [3.5,3.5,0], [6,1.75,1], [3.5,0,2], [3.5,-1,0], [8,-1,0] ],\n  '6': [ [3.5,-1,0], [3.5,0,0], [1,1.75,3], [5.25,7,4], [1,1.75,4], [3.5,0,3],[6,1.75,2], [3.5,3.5,1], [1,1.75,4], [3.5,0,3], [3.5,-1,0], [8,-1,0] ],\n  '7': [ [3.5,-1,0], [3.5,0,0], [6,7,0], [1,7,0], [6,7,0], [3.5,0,0], [3.5,-1,0], [8,-1,0] ],\n  '8': [ [3.5,-1,0], [3.5,0,0], [1,1.75,3], [6,5.25,0], [3.5,7,1], [1,5.25,4], [6,1.75,0], [3.5,0,2], [3.5,-1,0], [8,-1,0] ],\n  '9': [ [3.5,-1,0], [3.5,0,0], [6,5.25,2], [3.5,7,1], [1,5.25,4], [3.5,3.5,3], [6,5.25,2], [3.5,0,2], [3.5,-1,0], [8,-1,0] ],\n  '$': [ [3.5,-1,0], [3.5,0.5,0], [0,2.00,3], [3.5,0.5,3], [7,2.00,2], [3.5,3.5,1], [0,5.00,3], [3.5,6.5,4], [7,5.00,1], [3.5,6.5,1], [3.5, 7, 0], [3.5, 0, 0], [3.5,-1,0], [8,-1,0] ],\n  '.': [ [3.5,-1,0], [3.5,0.5,0], [3,1,3], [3.5,1.5,4], [4,1,1], [3.5,0.5,2], [3.5,-1,0], [8,-1,0] ],\n};\n\n// This is a clever way to create a range from 0..32, and then compute an x,y for each of those\n// points on the unit circle from zero to pi/2.\nconst curve = [...Array(32).keys()].map((index) => {\n  let angle = (index+1) * Math.PI/2.0/32.0;\n  return Vertex(Math.cos(angle), Math.sin(angle));\n});\n\nconst billseyConverter = (vertices) => {\n  let newVertices = [];\n  let prevPoint = Vertex(0,0);\n  vertices.forEach( (vertex) => {\n    switch (vertex[2]) {\n    case 0:\n    default:\n      newVertices.push(Vertex(vertex[0] / 8.0, vertex[1] / 4.0));\n      break;\n    case 1: // NE\n      if (vertex[1] < prevPoint[1]) { // clockwise\n        let width = Math.abs(vertex[0] - prevPoint[0]) / 8.0;\n        let height = Math.abs(vertex[1] - prevPoint[1]) / 4.0;\n        newVertices = newVertices.concat(curve.map( cv => Vertex(cv.x * width + prevPoint[0] / 8.0, cv.y * height + vertex[1] / 4.0)).reverse());\n      } else { // ccwise\n        let width = Math.abs(vertex[0] - prevPoint[0]) / 8.0;\n        let height = Math.abs(vertex[1] - prevPoint[1]) / 4.0;\n        newVertices = newVertices.concat(curve.map( cv => Vertex(cv.x * width + vertex[0] / 8.0, cv.y * height + prevPoint[1] / 4.0)));\n      }\n      newVertices.push(Vertex(vertex[0] / 8.0, vertex[1] / 4.0));\n      break;\n    case 2: // SE\n      if (vertex[1] < prevPoint[1]) { // clockwise\n        let width = Math.abs(vertex[0] - prevPoint[0]) / 8.0;\n        let height = -Math.abs(vertex[1] - prevPoint[1]) / 4.0;\n        newVertices = newVertices.concat(curve.map( cv => Vertex(cv.x * width + vertex[0] / 8.0, cv.y * height + prevPoint[1] / 4.0)));\n      } else { // ccwise\n        let width = Math.abs(vertex[0] - prevPoint[0]) / 8.0;\n        let height = -Math.abs(vertex[1] - prevPoint[1]) / 4.0;\n        newVertices = newVertices.concat(curve.map( cv => Vertex(cv.x * width + prevPoint[0] / 8.0, cv.y * height + vertex[1] / 4.0)).reverse());\n      }\n      newVertices.push(Vertex(vertex[0] / 8.0, vertex[1] / 4.0));\n      break;\n    case 3: // SW\n      if (vertex[1] > prevPoint[1]) { // clockwise\n        let width = -Math.abs(vertex[0] - prevPoint[0]) / 8.0;\n        let height = -Math.abs(vertex[1] - prevPoint[1]) / 4.0;\n        newVertices = newVertices.concat(curve.map( cv => Vertex(cv.x * width + prevPoint[0] / 8.0, cv.y * height + vertex[1] / 4.0)).reverse());\n      } else { // ccwise\n        let width = -Math.abs(vertex[0] - prevPoint[0]) / 8.0;\n        let height = -Math.abs(vertex[1] - prevPoint[1]) / 4.0;\n        newVertices = newVertices.concat(curve.map( cv => Vertex(cv.x * width + vertex[0] / 8.0, cv.y * height + prevPoint[1] / 4.0)));\n      }\n      newVertices.push(Vertex(vertex[0] / 8.0, vertex[1] / 4.0));\n      break;\n    case 4: // NW\n      if (vertex[1] > prevPoint[1]) { // clockwise\n        let width = -Math.abs(vertex[0] - prevPoint[0]) / 8.0;\n        let height = Math.abs(vertex[1] - prevPoint[1]) / 4.0;\n        newVertices = newVertices.concat(curve.map( cv => Vertex(cv.x * width + vertex[0] / 8.0, cv.y * height + prevPoint[1] / 4.0)));\n      } else { // ccwise\n        let width = -Math.abs(vertex[0] - prevPoint[0]) / 8.0;\n        let height = Math.abs(vertex[1] - prevPoint[1]) / 4.0;\n        newVertices = newVertices.concat(curve.map( cv => Vertex(cv.x * width + prevPoint[0] / 8.0, cv.y * height + vertex[1] / 4.0)).reverse());\n      }\n      newVertices.push(Vertex(vertex[0] / 8.0, vertex[1] / 4.0));\n      break;\n    }\n    prevPoint = vertex;\n  });\n\n  return {\n    max_x: fontSpacing,\n    vertices: newVertices,\n  };\n}\n\nexport const Font2 = (ch) => {\n  let upper = ch.toUpperCase();\n  if (billsey.hasOwnProperty(upper)) {\n    return billseyConverter(billsey[upper]);\n  } else {\n    return billseyConverter(billsey[' ']);\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  Col,\n  ControlLabel,\n  Form,\n  FormControl,\n  FormGroup,\n  ListGroup,\n  ListGroupItem,\n  Panel,\n} from 'react-bootstrap'\nimport './Transforms.css'\nimport Vicious1Vertices from './Vicious1Vertices';\nimport { Font2 } from './Fonts';\nimport { Vertex } from '../Geometry';\nimport { connect } from 'react-redux'\n\n// Transform actions\nexport const addShape = ( shape ) => {\n  return {\n    type: 'ADD_SHAPE',\n    shape: shape,\n  };\n}\nexport const setShape = ( shape ) => {\n  return {\n    type: 'SET_SHAPE',\n    value: shape,\n  };\n}\n\nexport const setShapePolygonSides = ( sides ) => {\n  return {\n    type: 'SET_SHAPE_POLYGON_SIDES',\n    value: sides,\n  };\n}\n\nexport const setShapeStarPoints = ( sides ) => {\n  return {\n    type: 'SET_SHAPE_STAR_POINTS',\n    value: sides,\n  };\n}\n\nexport const setShapeStarRatio = ( value ) => {\n  return {\n    type: 'SET_SHAPE_STAR_RATIO',\n    value: Math.min(Math.max(value, 0.0), 1.0),\n  };\n}\n\nexport const setShapeCircleLobes = ( sides ) => {\n  return {\n    type: 'SET_SHAPE_CIRCLE_LOBES',\n    value: sides,\n  };\n}\n\nexport const setShapeReuleauxSides = ( sides ) => {\n  return {\n    type: 'SET_SHAPE_REULEAUX_SIDES',\n    value: sides,\n  };\n}\n\nexport const setShapeepicycloidA = ( a ) => {\n  return {\n    type: 'SET_SHAPE_EPICYCLOID_A',\n    value: a,\n  };\n}\n\nexport const setShapeepicycloidB = ( b ) => {\n  return {\n    type: 'SET_SHAPE_EPICYCLOID_B',\n    value: b,\n  };\n}\n\nexport const setShapehypocycloidA = ( a ) => {\n  return {\n    type: 'SET_SHAPE_HYPOCYCLOID_A',\n    value: a,\n  };\n}\n\nexport const setShapehypocycloidB = ( b ) => {\n  return {\n    type: 'SET_SHAPE_HYPOCYCLOID_B',\n    value: b,\n  };\n}\n\nexport const setShapeRoseN = ( n ) => {\n  return {\n    type: 'SET_SHAPE_ROSE_N',\n    value: n,\n  };\n}\n\nexport const setShapeRoseD = ( d ) => {\n  return {\n    type: 'SET_SHAPE_ROSE_D',\n    value: d,\n  };\n}\n\nexport const setShapeInputText = ( text ) => {\n  return {\n    type: 'SET_SHAPE_INPUT_TEXT',\n    value: text,\n  };\n}\n\nexport const setShapeSize = ( size ) => {\n  return {\n    type: 'SET_SHAPE_SIZE',\n    value: size,\n  };\n}\n\nexport const setXFormOffsetX = ( offset ) => {\n  return {\n    type: 'SET_SHAPE_OFFSET_X',\n    value: parseFloat(offset),\n  };\n}\n\nexport const setXFormOffsetY = ( offset ) => {\n  return {\n    type: 'SET_SHAPE_OFFSET_Y',\n    value: parseFloat(offset),\n  };\n}\n\nexport const setLoops = ( loops ) => {\n  return {\n    type: 'SET_LOOPS',\n    value: loops,\n  };\n}\n\nexport const toggleSpin = ( ) => {\n  return {\n    type: 'TOGGLE_SPIN',\n  };\n}\n\nexport const setSpin = ( value ) => {\n  return {\n    type: 'SET_SPIN',\n    value: parseFloat(value),\n  };\n}\n\nexport const setSpinSwitchbacks = ( value ) => {\n  return {\n    type: 'SET_SPIN_SWITCHBACKS',\n    value: parseInt(value),\n  };\n}\n\nexport const toggleGrow = ( ) => {\n  return {\n    type: 'TOGGLE_GROW',\n  };\n}\n\nexport const setGrow = ( value ) => {\n  return {\n    type: 'SET_GROW',\n    value: value,\n  };\n}\n\nexport const toggleTrack = ( ) => {\n  return {\n    type: 'TOGGLE_TRACK',\n  };\n}\n\nexport const toggleTrackGrow = ( ) => {\n  return {\n    type: 'TOGGLE_TRACK_GROW',\n  };\n}\n\nexport const setTrack = ( value ) => {\n  return {\n    type: 'SET_TRACK',\n    value: value,\n  };\n}\n\nexport const setTrackLength = ( value ) => {\n  return {\n    type: 'SET_TRACK_LENGTH',\n    value: value,\n  };\n}\n\nexport const setTrackGrow = ( value ) => {\n  return {\n    type: 'SET_TRACK_GROW',\n    value: value,\n  };\n}\n\nconst disableEnter = (event) => {\n  if (event.key === 'Enter' && event.shiftKey === false) {\n    event.preventDefault();\n  }\n};\n\nclass Shape extends Component {\n\n  render() {\n\n    var activeClassName = \"\";\n    if (this.props.active) {\n      activeClassName = \"active\";\n    }\n\n    var options_render = this.props.options.map( (option) => {\n      return <FormGroup controlId=\"options-step\" key={option.title}>\n               <Col componentClass={ControlLabel} sm={4}>\n                 {option.title}\n               </Col>\n               <Col sm={8}>\n                 <FormControl\n                   type={option.type ? option.type : \"number\"}\n                   step={option.step ? option.step : 1}\n                   value={option.value()}\n                   onChange={(event) => {\n                     option.onChange(event)\n                   }}\n                   onKeyDown={disableEnter}/>\n               </Col>\n             </FormGroup>\n    });\n\n    var options_list_render = undefined;\n\n    if (this.props.options.length >= 1) {\n      options_list_render =\n        <div className=\"shape-options\">\n          <Panel className=\"options-panel\" collapsible expanded={this.props.active}>\n            <Form horizontal>\n              <p>See <a target=\"_blank\" rel=\"noopener noreferrer\" href={this.props.link}>{this.props.link}</a> for ideas</p>\n              {options_render}\n            </Form>\n          </Panel>\n        </div>\n    }\n\n    return (\n      <div className=\"shape\">\n        <ListGroupItem className={activeClassName} onClick={this.props.clicked}>{this.props.name}</ListGroupItem>\n            {options_list_render}\n      </div>\n    )\n  }\n}\n\nconst shapeListProps = (state, ownProps) => {\n  return {\n    shapes: state.shapes.shapes,\n    polygonSides: state.shapes.polygonSides,\n    starPoints:   state.shapes.starPoints,\n    starRatio:    state.shapes.starRatio,\n    circleLobes:  state.shapes.circleLobes,\n    reuleauxSides: state.shapes.reuleauxSides,\n    epicycloidA: state.shapes.epicycloidA,\n    epicycloidB: state.shapes.epicycloidB,\n    hypocycloidA: state.shapes.hypocycloidA,\n    hypocycloidB: state.shapes.hypocycloidB,\n    roseN: state.shapes.roseN,\n    roseD: state.shapes.roseD,\n    inputText:    state.shapes.inputText,\n    currentShape: state.shapes.currentShape,\n    startingSize: state.shapes.startingSize,\n    x_offset: state.transform.xformOffsetX,\n    y_offset: state.transform.xformOffsetY,\n  }\n}\n\nconst shapeListDispatch = (dispatch, ownProps) => {\n  return {\n    addShape: (shape) => {\n      dispatch(addShape(shape));\n    },\n    setShape: (name) => {\n      dispatch(setShape(name));\n    },\n    onPolygonSizeChange: (event) => {\n      dispatch(setShapePolygonSides(event.target.value));\n    },\n    onStarPointsChange: (event) => {\n      dispatch(setShapeStarPoints(event.target.value));\n    },\n    onStarRatioChange: (event) => {\n      dispatch(setShapeStarRatio(event.target.value));\n    },\n    onCircleLobesChange: (event) => {\n      dispatch(setShapeCircleLobes(event.target.value));\n    },\n    onReuleauxSidesChange: (event) => {\n      dispatch(setShapeReuleauxSides(event.target.value));\n    },\n    onepicycloidAChange: (event) => {\n      dispatch(setShapeepicycloidA(event.target.value));\n    },\n    onepicycloidBChange: (event) => {\n      dispatch(setShapeepicycloidB(event.target.value));\n    },\n    onhypocycloidAChange: (event) => {\n      dispatch(setShapehypocycloidA(event.target.value));\n    },\n    onhypocycloidBChange: (event) => {\n      dispatch(setShapehypocycloidB(event.target.value));\n    },\n    onRoseNChange: (event) => {\n      dispatch(setShapeRoseN(event.target.value));\n    },\n    onRoseDChange: (event) => {\n      dispatch(setShapeRoseD(event.target.value));\n    },\n    onInputTextChange: (event) => {\n      dispatch(setShapeInputText(event.target.value));\n    },\n    onSizeChange: (event) => {\n      dispatch(setShapeSize(event.target.value));\n    },\n    onOffsetXChange: (event) => {\n      dispatch(setXFormOffsetX(event.target.value));\n    },\n    onOffsetYChange: (event) => {\n      dispatch(setXFormOffsetY(event.target.value));\n    },\n  }\n}\n\nclass ShapeList extends Component {\n  constructor(props) {\n    super(props)\n\n    this.props.addShape({\n        name: \"Polygon\",\n        vertices: (state) => {\n          let points = [];\n          for (let i=0; i<state.shapes.polygonSides; i++) {\n            let angle = Math.PI * 2.0 / state.shapes.polygonSides * (0.5 + i);\n            points.push(Vertex(Math.cos(angle), Math.sin(angle)))\n          }\n          return points;\n        },\n        options: [\n          {\n            title: \"Number of Sides\",\n            value: () => { return this.props.polygonSides },\n            onChange: this.props.onPolygonSizeChange,\n          },\n        ],\n      });\n    this.props.addShape({\n        name: \"Star\",\n        vertices: (state) => {\n          let star_points = [];\n          for (let i=0; i<state.shapes.starPoints * 2; i++) {\n            let angle = Math.PI * 2.0 / (2.0 * state.shapes.starPoints) * i;\n            let star_scale = 1.0;\n            if (i % 2 === 0) {\n              star_scale *= state.shapes.starRatio;\n            }\n            star_points.push(Vertex(star_scale * Math.cos(angle), star_scale * Math.sin(angle)))\n          }\n          return star_points\n        },\n        options: [\n          {\n            title: \"Number of Points\",\n            value: () => { return this.props.starPoints },\n            onChange: this.props.onStarPointsChange,\n          },\n          {\n            title: \"Size of Points\",\n            value: () => { return this.props.starRatio },\n            onChange: this.props.onStarRatioChange,\n            step: 0.05,\n          },\n        ],\n      });\n    this.props.addShape({\n        name: \"Circle\",\n        vertices: (state) => {\n          let circle_points = []\n          for (let i=0; i<128; i++) {\n            let angle = Math.PI * 2.0 / 128.0 * i\n            circle_points.push(Vertex(Math.cos(angle), Math.sin(state.shapes.circleLobes * angle)/state.shapes.circleLobes))\n          }\n          return circle_points\n        },\n        options: [\n          {\n            title: \"Number of Lobes\",\n            value: () => { return this.props.circleLobes },\n            onChange: this.props.onCircleLobesChange,\n          },\n        ],\n      });\n    this.props.addShape({\n        name: \"Heart\",\n        vertices: (state) => {\n          let heart_points = []\n          for (let i=0; i<128; i++) {\n            let angle = Math.PI * 2.0 / 128.0 * i\n            // heart equation from: http://mathworld.wolfram.com/HeartCurve.html\n            heart_points.push(Vertex(1.0 * Math.pow(Math.sin(angle), 3),\n                                     13.0/16.0 * Math.cos(angle) +\n                                     -5.0/16.0 * Math.cos(2.0 * angle) +\n                                     -2.0/16.0 * Math.cos(3.0 * angle) +\n                                     -1.0/16.0 * Math.cos(4.0 * angle)))\n          }\n          return heart_points\n        },\n        options: [\n        ],\n      });\n    this.props.addShape({\n        name: \"Reuleaux\",\n        vertices: (state) => {\n          let points = []\n          // Construct an equalateral triangle\n          let corners = []\n          // Initial location at PI/2\n          let angle = Math.PI/2.0;\n          // How much of the circle in one side?\n          let coverageAngle = Math.PI/state.shapes.reuleauxSides;\n          let halfCoverageAngle = 0.5 * coverageAngle;\n          for (let c=0; c<state.shapes.reuleauxSides; c++) {\n            let startAngle = angle + Math.PI - halfCoverageAngle;\n            corners.push( [Vertex(Math.cos(angle), Math.sin(angle)), startAngle] );\n            angle += 2.0 * Math.PI / state.shapes.reuleauxSides;\n          }\n          let length = 0.5 / Math.cos(Math.PI/2.0/state.shapes.reuleauxSides);\n          for (let corn=0; corn < corners.length; corn++) {\n            for (let i=0; i<128; i++) {\n              let angle = coverageAngle  * (i / 128.0) + corners[corn][1];\n              points.push(Vertex(length * corners[corn][0].x + Math.cos(angle),\n                                 length * corners[corn][0].y + Math.sin(angle)));\n            }\n          }\n          return points;\n        },\n        options: [\n          {\n            title: \"Number of sides\",\n            value: () => { return this.props.reuleauxSides },\n            onChange: this.props.onReuleauxSidesChange,\n            step: 1,\n          },\n        ],\n      });\n    this.props.addShape(  {\n        name: \"Clover\",\n        link: \"http://mathworld.wolfram.com/Epicycloid.html\",\n        vertices: (state) => {\n          let points = []\n          let a = parseFloat(state.shapes.epicycloidA)\n          let b = parseFloat(state.shapes.epicycloidB)\n\n          for (let i=0; i<128; i++) {\n            let angle = Math.PI * 2.0 / 128.0 * i\n            points.push(Vertex(0.5 * (a + b) * Math.cos(angle) - 0.5 * b * Math.cos(((a + b) / b) * angle),\n                               0.5 * (a + b) * Math.sin(angle) - 0.5 * b * Math.sin(((a + b) / b) * angle)))\n          }\n          return points\n        },\n        options: [\n          {\n            title: \"Large circle radius\",\n            value: () => { return this.props.epicycloidA },\n            onChange: this.props.onepicycloidAChange,\n            step: 0.1,\n          },\n          {\n            title: \"Small circle radius\",\n            value: () => { return this.props.epicycloidB },\n            onChange: this.props.onepicycloidBChange,\n            step: 0.1,\n          },\n        ],\n      });\n      this.props.addShape(  {\n          name: \"Web\",\n          link: \"http://mathworld.wolfram.com/Hypocycloid.html\",\n          vertices: (state) => {\n            let points = []\n            let a = parseFloat(state.shapes.hypocycloidA)\n            let b = parseFloat(state.shapes.hypocycloidB)\n\n            for (let i=0; i<128; i++) {\n              let angle = Math.PI * 2.0 / 128.0 * i\n              points.push(Vertex(1.0 * (a - b) * Math.cos(angle) + b * Math.cos(((a - b) / b) * angle),\n                                    1.0 * (a - b) * Math.sin(angle) - b * Math.sin(((a - b) / b) * angle)))\n            }\n            return points\n          },\n          options: [\n            {\n              title: \"Large circle radius\",\n              value: () => { return this.props.hypocycloidA },\n              onChange: this.props.onhypocycloidAChange,\n              step: 0.1,\n            },\n            {\n              title: \"Small circle radius\",\n              value: () => { return this.props.hypocycloidB },\n              onChange: this.props.onhypocycloidBChange,\n              step: 0.1,\n            },\n          ],\n        });\n      this.props.addShape({\n          name: \"Rose\",\n          link: \"http://mathworld.wolfram.com/Rose.html\",\n          vertices: (state) => {\n            let points = []\n            let a = 2\n            let n = parseInt(state.shapes.roseN)\n            let d = parseInt(state.shapes.roseD)\n            let p = (n * d % 2 === 0) ? 2 : 1\n            let thetaClose = d * p * 32 * n;\n            let resolution = 64 * n;\n\n            for (let i=0; i<thetaClose+1; i++) {\n              let theta = Math.PI * 2.0 / (resolution) * i\n              let r = 0.5 * a * Math.sin((n / d) * theta)\n              points.push(Vertex(r * Math.cos(theta), r * Math.sin(theta)))\n            }\n            return points\n          },\n          options: [\n            {\n              title: \"Numerator\",\n              value: () => { return this.props.roseN },\n              onChange: this.props.onRoseNChange,\n              step: 1,\n            },\n            {\n              title: \"Denominator\",\n              value: () => { return this.props.roseD },\n              onChange: this.props.onRoseDChange,\n              step: 1,\n            },\n          ],\n        });\n    this.props.addShape({\n        name: \"Text\",\n        vertices: (state) => {\n          let points = [];\n          const under_y = -0.25;\n          points.push(Vertex(0.0, under_y))\n          let x = 0.0;\n          for (let chi = 0; chi < state.shapes.inputText.length; chi++) {\n            var letter = Font2(state.shapes.inputText[chi]);\n            if (0 < letter.vertices.length) {\n              points.push(Vertex(x + letter.vertices[0].x, under_y))\n            }\n            for (let vi = 0; vi < letter.vertices.length; vi++) {\n              points.push(Vertex(letter.vertices[vi].x + x, letter.vertices[vi].y));\n            }\n            if (0 < letter.vertices.length) {\n              points.push(Vertex(x + letter.vertices[letter.vertices.length-1].x, under_y))\n            }\n            if (chi !== state.shapes.inputText.length-1) {\n              points.push(Vertex(x + letter.max_x, under_y))\n            }\n            x += letter.max_x;\n          }\n          let widthOffset = x / 2.0;\n          return points.map( (point) => {\n            return Vertex(point.x - widthOffset, point.y);\n          });\n        },\n        options: [\n          {\n            title: \"Text\",\n            type: \"textarea\",\n            value: () => { return this.props.inputText },\n            onChange: this.props.onInputTextChange,\n          },\n        ],\n      });\n    this.props.addShape({\n        name: \"V1Engineering\",\n        vertices: (state) => {\n          return Vicious1Vertices()\n        },\n        options: [],\n      });\n  }\n\n  render() {\n\n    let self = this;\n\n    var shape_render = this.props.shapes.map( (shape) => {\n      return <Shape\n               key={shape.name}\n               name={shape.name}\n               link={shape.link || \"\"}\n               active={shape.name === self.props.currentShape}\n               options={shape.options}\n               clicked={ () => { self.props.setShape(shape.name); } }\n             />\n    });\n\n    return (\n      <div className=\"shapes\">\n        <ListGroup>\n          {shape_render}\n        </ListGroup>\n        <div className=\"shoptions\">\n          <Panel className=\"options-panel\" collapsible expanded>\n            <Form horizontal>\n              <FormGroup controlId=\"shape-size\">\n                <Col componentClass={ControlLabel} sm={4}>\n                  Starting Size\n                </Col>\n                <Col sm={8}>\n                  <FormControl type=\"number\" value={this.props.startingSize} onChange={this.props.onSizeChange} onKeyDown={disableEnter}/>\n                </Col>\n              </FormGroup>\n              <FormGroup controlId=\"shape-offset\">\n                <Col componentClass={ControlLabel} sm={4}>\n                  Offset\n                </Col>\n                <Col componentClass={ControlLabel} sm={1}>\n                  X\n                </Col>\n                <Col sm={3}>\n                  <FormControl type=\"number\" value={this.props.x_offset} onChange={this.props.onOffsetXChange} onKeyDown={disableEnter}/>\n                </Col>\n                <Col componentClass={ControlLabel} sm={1}>\n                  Y\n                </Col>\n                <Col sm={3}>\n                  <FormControl type=\"number\" value={this.props.y_offset} onChange={this.props.onOffsetYChange} onKeyDown={disableEnter}/>\n                </Col>\n              </FormGroup>\n            </Form>\n          </Panel>\n        </div>\n      </div>\n    )\n  }\n}\n\nShapeList = connect(shapeListProps, shapeListDispatch)(ShapeList) ;\n\n\nconst rotateProps = (state, ownProps) => {\n  return {\n    active: state.transform.spinEnabled,\n    value: state.transform.spinValue,\n    switchbacks: state.transform.spinSwitchbacks,\n  }\n}\n\nconst rotateDispatch = (dispatch, ownProps) => {\n  return {\n    activeCallback: () => {\n      dispatch(toggleSpin());\n    },\n    onChange: (event) => {\n      dispatch(setSpin(event.target.value));\n    },\n    onSwitchbacksChange: (event) => {\n      dispatch(setSpinSwitchbacks(event.target.value));\n    },\n  }\n}\n\nclass RotationTransform extends Component {\n\n  render() {\n    var activeClassName = \"\";\n    if (this.props.active) {\n      activeClassName = \"active\";\n    }\n\n    return (\n      <div className=\"rotate\">\n        <ListGroupItem header=\"Spin\" className={activeClassName} onClick={this.props.activeCallback}>Spins the input shape a little bit for each copy</ListGroupItem>\n        <div className=\"rotate-options\">\n          <Panel className=\"options-panel\" collapsible expanded={this.props.active}>\n            <Form horizontal>\n              <FormGroup controlId=\"rotate-step\">\n                <Col componentClass={ControlLabel} sm={4}>\n                  Spin Step (Can be Negative)\n                </Col>\n                <Col sm={8}>\n                  <FormControl type=\"number\" step=\"0.1\" value={this.props.value} onChange={this.props.onChange} onKeyDown={disableEnter}/>\n                </Col>\n              </FormGroup>\n              <FormGroup controlId=\"rotate-switchbacks\">\n                <Col componentClass={ControlLabel} sm={4}>\n                  Switchbacks\n                </Col>\n                <Col sm={8}>\n                  <FormControl type=\"number\" step=\"1\" value={this.props.switchbacks} onChange={this.props.onSwitchbacksChange} onKeyDown={disableEnter}/>\n                </Col>\n              </FormGroup>\n            </Form>\n          </Panel>\n        </div>\n      </div>\n    )\n  }\n}\nRotationTransform = connect(rotateProps, rotateDispatch)(RotationTransform) ;\n\n\nconst scaleProps = (state, ownProps) => {\n  return {\n    active: state.transform.growEnabled,\n    value: state.transform.growValue,\n  }\n}\n\nconst scaleDispatch = (dispatch, ownProps) => {\n  return {\n    activeCallback: () => {\n      dispatch(toggleGrow());\n    },\n    onChange: (event) => {\n      dispatch(setGrow(event.target.value));\n    },\n  }\n}\n\nclass ScaleTransform extends Component {\n\n  render() {\n    var activeClassName = \"\";\n    if (this.props.active) {\n      activeClassName = \"active\";\n    }\n\n    return (\n      <div className=\"scale\">\n        <ListGroupItem header=\"Grow\" className={activeClassName} onClick={this.props.activeCallback}>Grows or shrinks the input shape a little bit for each copy</ListGroupItem>\n        <div className=\"scale-options\">\n          <Panel className=\"options-panel\" collapsible expanded={this.props.active}>\n            <Form horizontal>\n              <FormGroup controlId=\"scale-step\">\n                <Col componentClass={ControlLabel} sm={4}>\n                  Grow Step\n                </Col>\n                <Col sm={8}>\n                  <FormControl type=\"number\" value={this.props.value} onChange={this.props.onChange} onKeyDown={disableEnter}/>\n                </Col>\n              </FormGroup>\n            </Form>\n          </Panel>\n        </div>\n      </div>\n    )\n  }\n}\nScaleTransform = connect(scaleProps, scaleDispatch)(ScaleTransform) ;\n\nconst trackProps = (state, ownProps) => {\n  return {\n    active: state.transform.trackEnabled,\n    activeGrow: state.transform.trackGrowEnabled,\n    value: state.transform.trackValue,\n    length: state.transform.trackLength,\n    trackGrow: state.transform.trackGrow,\n  }\n}\n\nconst trackDispatch = (dispatch, ownProps) => {\n  return {\n    activeCallback: () => {\n      dispatch(toggleTrack());\n    },\n    activeGrowCallback: () => {\n      dispatch(toggleTrackGrow());\n    },\n    onChange: (event) => {\n      dispatch(setTrack(event.target.value));\n    },\n    onChangeLength: (event) => {\n      dispatch(setTrackLength(event.target.value));\n    },\n    onChangeGrow: (event) => {\n      dispatch(setTrackGrow(event.target.value));\n    },\n  }\n}\n\nclass TrackTransform extends Component {\n\n  render() {\n    var activeClassName = \"\";\n    if (this.props.active) {\n      activeClassName = \"active\";\n    }\n\n    var activeGrowClassName = \"\";\n    if (this.props.activeGrow) {\n      activeGrowClassName = \"active\";\n    }\n\n    return (\n      <div className=\"track\">\n        <ListGroupItem header=\"Track\" className={activeClassName} onClick={this.props.activeCallback}>Moves the shape along a track (shown in green)</ListGroupItem>\n        <div className=\"track-options\">\n          <Panel className=\"options-panel\" collapsible expanded={this.props.active}>\n            <Form horizontal>\n              <FormGroup controlId=\"track-size\">\n                <Col componentClass={ControlLabel} sm={4}>\n                  Track Size\n                </Col>\n                <Col sm={8}>\n                  <FormControl type=\"number\" value={this.props.value} onChange={this.props.onChange} onKeyDown={disableEnter}/>\n                </Col>\n              </FormGroup>\n              <FormGroup controlId=\"track-length\">\n                <Col componentClass={ControlLabel} sm={4}>\n                  Track Length\n                </Col>\n                <Col sm={8}>\n                  <FormControl type=\"number\" value={this.props.length} step=\"0.05\" onChange={this.props.onChangeLength} onKeyDown={disableEnter}/>\n                </Col>\n              </FormGroup>\n              <ListGroupItem header=\"Grow\" className={activeGrowClassName} onClick={this.props.activeGrowCallback}>Grows or shrinks the track a little bit for each step</ListGroupItem>\n              <div className=\"scale-options\">\n                <Panel className=\"options-panel\" collapsible expanded={this.props.activeGrow}>\n                    <FormGroup controlId=\"scale-step\">\n                      <Col componentClass={ControlLabel} sm={4}>\n                        Track Grow Step\n                      </Col>\n                      <Col sm={8}>\n                        <FormControl type=\"number\" value={this.props.trackGrow} onChange={this.props.onChangeGrow} onKeyDown={disableEnter}/>\n                      </Col>\n                    </FormGroup>\n                </Panel>\n              </div>\n            </Form>\n          </Panel>\n        </div>\n      </div>\n    )\n  }\n}\nTrackTransform = connect(trackProps, trackDispatch)(TrackTransform) ;\n\nconst transformsProps = (state, ownProps) => {\n  return {\n    loops: state.transform.numLoops,\n  }\n}\n\nconst transformsDispatch = (dispatch, ownProps) => {\n  return {\n    changeLoops: (event) => {\n      dispatch(setLoops(event.target.value));\n    },\n  }\n}\n\nclass Transforms extends Component {\n  render() {\n\n    return (\n      <div className=\"transforms\">\n        <Panel className=\"shapes-panel\">\n          <h4>Input Shapes</h4>\n          <ShapeList />\n        </Panel>\n        <Panel className=\"transforms-panel\">\n          <h4>Modifiers</h4>\n          <Panel className=\"options-panel\">\n            <Form horizontal>\n              <FormGroup controlId=\"loop-count\">\n                <Col componentClass={ControlLabel} sm={4}>\n                  Number of Loops\n                </Col>\n                <Col sm={8}>\n                  <FormControl type=\"number\" value={this.props.loops} onChange={this.props.changeLoops} onKeyDown={disableEnter}/>\n                </Col>\n              </FormGroup>\n            </Form>\n          </Panel>\n          <ListGroup>\n            <ScaleTransform\n              />\n            <RotationTransform\n              />\n            <TrackTransform\n              />\n          </ListGroup>\n        </Panel>\n      </div>\n    );\n  }\n}\nTransforms = connect(transformsProps, transformsDispatch)(Transforms);\n\n\nexport default Transforms\n","import React, { Component } from 'react';\nimport {\n    Col,\n    ControlLabel,\n    Form,\n    FormControl,\n    FormGroup,\n    Panel,\n} from 'react-bootstrap'\nimport { connect } from 'react-redux'\n\n// Wipe actions\nexport const setWiperAngleDeg = ( value ) => {\n  return {\n    type: 'SET_WIPER_ANGLE_DEG',\n    value: value,\n  };\n}\n\nexport const setWiperSize = ( value ) => {\n  return {\n    type: 'SET_WIPER_SIZE',\n    value: value,\n  };\n}\n\n\nconst wiperProps = (state, ownProps) => {\n  return {\n    angle: state.wiper.angleDeg,\n    size: state.wiper.size,\n  }\n}\n\nconst wiperDispatch = (dispatch, ownProps) => {\n  return {\n    changeAngle: (event) => {\n      dispatch(setWiperAngleDeg(parseFloat(event.target.value)));\n    },\n    changeSize: (event) => {\n      dispatch(setWiperSize(parseFloat(event.target.value)));\n    },\n  }\n}\n\nclass Wiper extends Component {\n\n  render() {\n\n    return (\n      <div className=\"Wiper\">\n        <Panel className=\"Wiper-panel\">\n          <h4>Wipe Settings</h4>\n          <Panel className=\"Wiper-panel\">\n            <Form horizontal>\n              <FormGroup controlId=\"angle\">\n                <Col componentClass={ControlLabel} sm={4}>\n                  Wiper Angle\n                </Col>\n                <Col sm={8}>\n                  <FormControl type=\"number\" min=\"0\" max=\"180\" step=\"0.5\" value={this.props.angle} onChange={this.props.changeAngle}/>\n                </Col>\n              </FormGroup>\n              <FormGroup controlId=\"size\">\n                <Col componentClass={ControlLabel} sm={4}>\n                  Wiper Size\n                </Col>\n                <Col sm={8}>\n                  <FormControl type=\"number\" step=\"0.1\" value={this.props.size} onChange={this.props.changeSize}/>\n                </Col>\n              </FormGroup>\n            </Form>\n\n          </Panel>\n        </Panel>\n      </div>\n    );\n  }\n}\nWiper = connect(wiperProps, wiperDispatch)(Wiper);\n\nexport default Wiper\n\n","import React, { Component } from 'react';\nimport {\n    Col,\n    ControlLabel,\n    Form,\n    FormControl,\n    FormGroup,\n    ListGroupItem,\n    Panel,\n    Well,\n} from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport './ThetaRho.css'\n\nexport const setFileVertices = ( vertices ) => {\n  return {\n    type: 'SET_FILE_VERTICES',\n    vertices: vertices,\n  };\n}\n\nexport const setFileName = ( value ) => {\n  return {\n    type: 'SET_FILE_NAME',\n    value: value,\n  };\n}\n\nexport const setFileComment = ( value ) => {\n  return {\n    type: 'SET_FILE_COMMENT',\n    value: value,\n  };\n}\n\nexport const setFileZoom = ( value ) => {\n  return {\n    type: 'SET_FILE_ZOOM',\n    value: value,\n  };\n}\n\nexport const toggleFileAspectRatio = ( value ) => {\n  return {\n    type: 'TOGGLE_FILE_ASPECT_RATIO',\n    value: value,\n  };\n}\n\nconst thrProps = (state, ownProps) => {\n  return {\n    name: state.file.name,\n    comments: state.file.comments,\n    vertices: state.file.vertices,\n    zoom: state.file.zoom,\n    aspectRatio: state.file.aspectRatio,\n  }\n}\n\n\nconst thrDispatch = (dispatch, ownProps) => {\n\n  var convertToXY = (thetaRhos) => {\n    var vertices = []\n    var previous = undefined;\n    var max_angle = Math.PI / 64.0;\n    for (let ii = 0; ii < thetaRhos.length; ii++) {\n      var next = thetaRhos[ii];\n      if (previous) {\n        if (Math.abs(next[0] - previous[0]) < max_angle) {\n          // These sin, cos elements are inverted. I'm not sure why\n          vertices.push({\n                        x: previous[1] * Math.sin(previous[0]),\n                        y: previous[1] * Math.cos(previous[0]),\n                        f: 1000,\n          });\n        } else {\n          // We need to do some interpolating.\n          let deltaAngle = next[0] - previous[0];\n          let rhoStep = max_angle / Math.abs(deltaAngle) * (next[1] - previous[1]);\n          var rho = previous[1];\n          if (deltaAngle > 0.0) {\n            var emergency_break = 0;\n            for (let angle = previous[0]; angle < next[0]; angle += max_angle, rho += rhoStep) {\n              vertices.push({\n                            x: rho * Math.sin(angle),\n                            y: rho * Math.cos(angle),\n                            f: 1000,\n              });\n              if (emergency_break++ > 100000) {\n                break;\n              }\n            }\n          } else {\n            for (let angle = previous[0]; angle > next[0]; angle -= max_angle, rho += rhoStep) {\n              vertices.push({\n                            x: rho * Math.sin(angle),\n                            y: rho * Math.cos(angle),\n                            f: 1000,\n              });\n              if (emergency_break++ > 100000) {\n                break;\n              }\n            }\n          }\n        }\n      }\n      previous = next;\n    }\n    return vertices;\n  }\n\n  var parseThrFile = (file) => {\n    var rv = {};\n    rv.comments = [];\n    rv.vertices = [];\n\n    var reader = new FileReader();\n\n    reader.onload = (event) => {\n      var text = reader.result;\n      var lines = text.split('\\n');\n      var has_vertex = false;\n      for (let ii = 0; ii < lines.length; ii++) {\n        var line = lines[ii].trim();\n        if (line.length === 0) {\n          // blank lines\n          continue;\n        }\n        if (line.indexOf(\"#\") === 0 && !has_vertex) {\n          rv.comments.push(lines[ii]);\n        }\n\n        if (line.indexOf(\"#\") !== 0) {\n          has_vertex = true;\n          // This is a point, let's try to read it.\n          var pointStrings = line.split(/\\s+/);\n          if (pointStrings.length !== 2) {\n            // AAAH\n            console.log(pointStrings);\n            continue;\n          }\n          rv.vertices.push([parseFloat(pointStrings[0]), parseFloat(pointStrings[1])]);\n        }\n      }\n\n      dispatch(setFileComment(rv.comments));\n      dispatch(setFileVertices(convertToXY(rv.vertices)));\n    }\n\n    reader.readAsText(file);\n  }\n\n  return {\n    setVertices: (event: any) => {\n      var file = event.target.files[0];\n      console.log(file)\n      dispatch(setFileName(file.name));\n      parseThrFile(file);\n    },\n    setZoom: (event) => {\n      dispatch(setFileZoom(parseFloat(event.target.value)));\n    },\n    toggleAspectRatio: (event) => {\n      dispatch(toggleFileAspectRatio());\n    },\n  }\n}\n\nconst disableEnter = (event) => {\n  if (event.key === 'Enter' && event.shiftKey === false) {\n    event.preventDefault();\n  }\n};\n\nclass ThetaRho extends Component {\n\n  render() {\n    var aspectRatioActive = \"\";\n    if (this.props.aspectRatio) {\n      aspectRatioActive = \"active\";\n    }\n\n    return (\n      <div className=\"ThetaRho\">\n        <Panel className=\"thr-panel\">\n          <h4>Theta Rho Input</h4>\n          <ControlLabel className=\"thr-panel\" htmlFor=\"fileUpload\" style={{ cursor: \"pointer\" }}>\n            <ListGroupItem header=\"Click to Load\" className=\"\" >Import a sisyphus style theta rho (.thr) file into sandify.</ListGroupItem>\n            <FormControl\n                id=\"fileUpload\"\n                type=\"file\"\n                accept=\".thr\"\n                onChange={this.props.setVertices}\n                style={{ display: \"none\" }}\n            />\n          </ControlLabel>\n          <Well> Name: {this.props.name} <br/> Comments: { this.props.comments.join('\\n') } <br/> Number of points: {this.props.vertices.length }</Well>\n          <Form horizontal>\n            <FormGroup controlId=\"thr-zoom\">\n              <Col componentClass={ControlLabel} sm={2}>\n                Zoom\n              </Col>\n              <Col sm={8}>\n                <FormControl type=\"number\" value={this.props.zoom} onChange={this.props.setZoom} onKeyDown={disableEnter} />\n              </Col>\n            </FormGroup>\n          </Form>\n          <ListGroupItem header=\"Keep Aspect Ratio\" className={aspectRatioActive} onClick={this.props.toggleAspectRatio}>Keeps original aspect ratio.</ListGroupItem>\n          <br/>\n          <h5>Where to get thr files:\n          <ul>\n            <li><h5><a href=\"https://reddit.com/u/markyland\">Markyland on Reddit</a></h5></li>\n            <li><h5><a href=\"https://github.com/Dithermaster/sisyphus/\">Dithermaster's github</a></h5></li>\n            <li><h5><a href=\"https://github.com/SlightlyLoony/JSisyphus\">JSisyphus by Slightly Loony</a></h5></li>\n            <li><h5><a href=\"https://reddit.com/r/SisyphusIndustries\">Sisyphus on Reddit</a></h5></li>\n            <li><h5><a href=\"https://sisyphus-industries.com/community/community-tracks\">Sisyphus Community</a></h5></li>\n            <li><h5><a href=\"http://thejuggler.net/sisyphus/\">The Juggler</a></h5></li>\n          </ul>\n          </h5>\n          <h6>Note about Copyrights:</h6>\n          <h6>Be careful and respectful. Understand that the original author put their labor, intensity, and ideas into this art. The creators have a right to own it (and they have a copyright, even if it doesn't say so).</h6>\n          <h6>If you don't have permisson (a license) to use their art, then you shouldn't be.</h6>\n          <h6>If you do have permission to use their art, then you should be thankful, and I'm sure they would appreciate you sending them a note of thanks. A picture of your table creating their shared art would probably make them smile.</h6>\n          <h6>Someone posting the .thr file to a forum or subreddit probably wants it to be shared, and drawing it on your home table is probably OK. Just be careful if you want to use them for something significant without explicit permission.</h6>\n          <h6>I am not a lawyer.</h6>\n        </Panel>\n      </div>\n    );\n  }\n}\nThetaRho = connect(thrProps, thrDispatch)(ThetaRho);\n\nexport default ThetaRho\n\n","import React, { Component } from 'react';\nimport {\n    Tab,\n    Tabs,\n} from 'react-bootstrap'\nimport './InputTabs.css'\nimport Transforms from './Transforms.js'\nimport Wiper from './Wiper.js'\nimport ThetaRho from './ThetaRho.js'\nimport { connect } from 'react-redux'\n\nexport const chooseInput = ( input ) => {\n  return {\n    type: 'CHOOSE_INPUT',\n    value: input,\n  };\n}\n\nclass InputTabs extends Component {\n\n  handleSelect( key ) {\n    this.props.dispatch(chooseInput(key));\n  }\n\n  render() {\n    return (\n       <Tabs defaultActiveKey={0} onSelect={this.handleSelect.bind(this)} id=\"inputTabs\">\n         <Tab eventKey={0} title=\"Shapes\">\n           <Transforms/>\n         </Tab>\n         <Tab eventKey={2} title=\"Wiper\">\n           <Wiper/>\n         </Tab>\n         <Tab eventKey={3} title=\"Code\">\n           <ThetaRho/>\n         </Tab>\n       </Tabs>\n    );\n  }\n}\nInputTabs = connect()(InputTabs);\n\nexport default InputTabs;\n","import React, { Component } from 'react';\nimport {\n    Col,\n    ControlLabel,\n    Form,\n    FormControl,\n    FormGroup,\n    ListGroup,\n    ListGroupItem,\n    Panel,\n    ToggleButton,\n    ToggleButtonGroup,\n} from 'react-bootstrap'\nimport { connect } from 'react-redux'\n\nimport './MachineSettings.css';\n\n// Machine actions\nexport const toggleMachineRectExpanded = ( ) => {\n  localStorage.setItem('machine_rect_active', 1)\n  return {\n    type: 'TOGGLE_MACHINE_RECT_EXPANDED',\n  };\n}\n\nexport const toggleMachinePolarExpanded = ( ) => {\n  localStorage.setItem('machine_rect_active', 2)\n  return {\n    type: 'TOGGLE_MACHINE_POLAR_EXPANDED',\n  };\n}\n\nexport const toggleMachineEndpoints = ( ) => {\n  return {\n    type: 'TOGGLE_MACHINE_ENDPOINTS',\n  };\n}\n\nexport const setMachineRectOrigin = (value) => {\n  return {\n    type: 'SET_MACHINE_RECT_ORIGIN',\n    value: value,\n  };\n}\n\nexport const setMachineMinX = ( value ) => {\n  // This is definitely a side effect...\n  localStorage.setItem('machine_min_x', value)\n  return {\n    type: 'SET_MIN_X',\n    value: value,\n  };\n}\n\nexport const setMachineMaxX = ( value ) => {\n  localStorage.setItem('machine_max_x', value)\n  return {\n    type: 'SET_MAX_X',\n    value: value,\n  };\n}\n\nexport const setMachineMinY = ( value ) => {\n  localStorage.setItem('machine_min_y', value)\n  return {\n    type: 'SET_MIN_Y',\n    value: value,\n  };\n}\n\nexport const setMachineMaxY = ( value ) => {\n  localStorage.setItem('machine_max_y', value)\n  return {\n    type: 'SET_MAX_Y',\n    value: value,\n  };\n}\n\nexport const setMachineRadius = ( value ) => {\n  localStorage.setItem('machine_radius', value)\n  return {\n    type: 'SET_MAX_RADIUS',\n    value: value,\n  };\n}\n\nconst rectMapStateToProps = (state, ownProps) => {\n  return {\n    expanded: state.app.machineRectExpanded,\n    active:   state.machine.rectangular,\n    min_x:    state.machine.min_x,\n    max_x:    state.machine.max_x,\n    min_y:    state.machine.min_y,\n    max_y:    state.machine.max_y,\n    origin:   state.machine.rectOrigin,\n  }\n}\n\nconst rectMapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    activeCallback: (event) => {\n      dispatch(toggleMachineRectExpanded())\n    },\n    onMinXChange: (event) => {\n      dispatch(setMachineMinX(parseFloat(event.target.value)))\n    },\n    onMaxXChange: (event) => {\n      dispatch(setMachineMaxX(parseFloat(event.target.value)))\n    },\n    onMinYChange: (event) => {\n      dispatch(setMachineMinY(parseFloat(event.target.value)))\n    },\n    onMaxYChange: (event) => {\n      dispatch(setMachineMaxY(parseFloat(event.target.value)))\n    },\n    onOriginChange: (value) => {\n      dispatch(setMachineRectOrigin(value))\n    },\n  }\n}\n\nclass RectSettings extends Component {\n  render() {\n    var activeClassName = \"\";\n    if (this.props.active) {\n      activeClassName = \"active\";\n    }\n\n    return (\n      <div className=\"rect\">\n        <ListGroupItem header=\"Rectangular Machine\" className={activeClassName} onClick={this.props.activeCallback}>Rectangle Machines like the Zen XY.</ListGroupItem>\n        <div className=\"rect-options\">\n          <Panel className=\"options-panel\" collapsible expanded={this.props.expanded}>\n            <Form horizontal>\n              <FormGroup className=\"machineSmaller\" controlId=\"min_x\">\n                <Col className=\"machineSmaller\" componentClass={ControlLabel} sm={2}>\n                  Min X (mm)\n                </Col>\n                <Col sm={8} smOffset={1}>\n                  <FormControl type=\"number\" value={this.props.min_x} onChange={this.props.onMinXChange}/>\n                </Col>\n              </FormGroup>\n              <FormGroup className=\"machineSmaller\" controlId=\"max_x\">\n                <Col className=\"machineSmaller\" componentClass={ControlLabel} sm={2}>\n                  Max X (mm)\n                </Col>\n                <Col sm={8} smOffset={1}>\n                  <FormControl type=\"number\" value={this.props.max_x} onChange={this.props.onMaxXChange}/>\n                </Col>\n              </FormGroup>\n              <FormGroup className=\"machineSmaller\" controlId=\"min_y\">\n                <Col className=\"machineSmaller\" componentClass={ControlLabel} sm={2}>\n                  Min Y (mm)\n                </Col>\n                <Col sm={8} smOffset={1}>\n                  <FormControl type=\"number\" value={this.props.min_y} onChange={this.props.onMinYChange}/>\n                </Col>\n              </FormGroup>\n              <FormGroup className=\"machineSmaller\" controlId=\"max_y\">\n                <Col className=\"machineSmaller\" componentClass={ControlLabel} sm={2}>\n                  Max Y (mm)\n                </Col>\n                <Col sm={8} smOffset={1}>\n                  <FormControl type=\"number\" value={this.props.max_y} onChange={this.props.onMaxYChange}/>\n                </Col>\n              </FormGroup>\n              <FormGroup className=\"machineSmaller\" controlId=\"max_y\">\n                <Col className=\"machineSmaller\" componentClass={ControlLabel} sm={2}>\n                  Force Origin\n                </Col>\n                <Col componentClass={ControlLabel} sm={8} smOffset={1}>\n                  <ToggleButtonGroup id=\"origin-bar\" type=\"checkbox\" name=\"origin\" value={this.props.origin} onChange={this.props.onOriginChange}>\n                    <ToggleButton value={0} >Lower Left</ToggleButton>\n                    <ToggleButton value={1} >Upper Left</ToggleButton>\n                    <ToggleButton value={2} >Upper Right</ToggleButton>\n                    <ToggleButton value={3} >Lower Right</ToggleButton>\n                  </ToggleButtonGroup>\n                </Col>\n              </FormGroup>\n            </Form>\n          </Panel>\n        </div>\n      </div>\n    )\n  }\n}\n\nRectSettings = connect(rectMapStateToProps, rectMapDispatchToProps)(RectSettings)\n\nconst polarMapStateToProps = (state, ownProps) => {\n  return {\n    expanded:   state.app.machinePolarExpanded,\n    active:     !state.machine.rectangular,\n    max_radius: state.machine.max_radius,\n    endpoints:  state.machine.polarEndpoints,\n  }\n}\n\nconst polarMapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    activeCallback: (event) => {\n      dispatch(toggleMachinePolarExpanded())\n    },\n    onMaxRadiusChange: (event) => {\n      dispatch(setMachineRadius(parseFloat(event.target.value)))\n    },\n    toggleEndpoints: () => {\n      dispatch(toggleMachineEndpoints());\n    },\n  }\n}\n\nclass PolarSettings extends Component {\n  render() {\n    var activeClassName = \"\";\n    if (this.props.active) {\n      activeClassName = \"active\";\n    }\n\n    const endpointsActiveClass = (this.props.endpoints ? \"active\" : null);\n\n    return (\n      <div className=\"polar\">\n        <ListGroupItem header=\"Polar Machine\" className={activeClassName} onClick={this.props.activeCallback}>Polar Machines like the Sisyphus.</ListGroupItem>\n        <div className=\"polar-options\">\n          <Panel className=\"options-panel\" collapsible expanded={this.props.expanded}>\n            <Form horizontal>\n              <FormGroup className=\"machineSmaller\" controlId=\"max_radius\">\n                <Col className=\"machineSmaller\" componentClass={ControlLabel} sm={3}>\n                  Max Radius (mm)\n                </Col>\n                <Col sm={7} smOffset={1}>\n                  <FormControl type=\"number\" value={this.props.max_radius} onChange={this.props.onMaxRadiusChange}/>\n                </Col>\n              </FormGroup>\n            </Form>\n            <ListGroupItem header=\"Force Endpoints\" className={endpointsActiveClass} onClick={this.props.toggleEndpoints}>Forces the first and last points to be at the center and edge.</ListGroupItem>\n          </Panel>\n        </div>\n      </div>\n    )\n  }\n}\n\nPolarSettings = connect(polarMapStateToProps, polarMapDispatchToProps)(PolarSettings)\n\nclass MachineSettings extends Component {\n  render() {\n\n    return (\n      <div className=\"machine-form\">\n        <Panel className=\"machine-panel\">\n          <h4>Machine Settings</h4>\n          <ListGroup>\n            <RectSettings/>\n            <PolarSettings/>\n          </ListGroup>\n        </Panel>\n      </div>\n    )\n  }\n}\n\nexport default MachineSettings;\n\n","import { Vertex } from '../Geometry';\nimport Victor from 'victor';\n\n// Determines which of 8 neighbor areas the point is in:\n//   https://stackoverflow.com/questions/3746274/line-intersection-with-aabb-rectangle\n//\n//           |          |\n//   0b1001  |  0b0001  |  0b0101\n//           |          |\n// ------------------------------ y_max\n//           |          |\n//   0b1000  |  0b0000  |  0b0100\n//           |          |\n// ------------------------------ y_min\n//           |          |\n//   0b1010  |  0b0010  |  0b0110\n//           |          |\n//         x_min      x_max\n//\nfunction pointLocation(point, size_x, size_y) {\n  var location = 0b0;\n  if (point.x < -size_x) {\n    location += 0b1000;\n  } else if (point.x > size_x) {\n    location += 0b0100;\n  }\n\n  if (point.y < -size_y) {\n    location += 0b0001;\n  } else if (point.y > size_y) {\n    location += 0b0010;\n  }\n\n  return location;\n}\n\n// Determine intersection with one of the sides\nfunction intersection(line_start, line_end, side_start, side_end) {\n\n  var line = line_end.clone().subtract(line_start);\n  var side = side_end.clone().subtract(side_start);\n  var lineCrossSidePerp = line.x * side.y - line.y * side.x;\n\n  // if line Cross side === 0, it means the lines are parallel so have infinite intersection points\n  if (lineCrossSidePerp === 0) {\n    return null;\n  }\n\n  var diff = side_start.clone().subtract(line_start);\n  var t = (diff.x * side.y - diff.y * side.x) / lineCrossSidePerp;\n  if (t < 0 || t >= 1) {\n    return null;\n  }\n\n  var u = (diff.x * line.y - diff.y * line.x) / lineCrossSidePerp;\n  if (u < 0 || u >= 1) {\n    return null;\n  }\n\n  var intersection = line_start.clone().add(line.clone().multiply(Victor(t, t)));\n  return intersection;\n}\n\n// This method is the guts of logic for this limits enforcer. It will take a single line (defined by\n// start and end) and if the line goes out of bounds, returns the vertices around the outside edge\n// to follow around without messing up the shape of the vertices.\n//\nfunction clipLine(line_start, line_end, size_x, size_y) {\n\n  var quadrant_start = pointLocation(line_start, size_x, size_y);\n  var quadrant_end = pointLocation(line_end, size_x, size_y);\n\n  if (quadrant_start === 0b0000 && quadrant_end === 0b0000) {\n    // The line is inside the boundaries\n    return [line_start, line_end];\n  }\n\n  if (quadrant_start === quadrant_end) {\n    // We are in the same box, and we are out of bounds.\n    return [nearestVertex(line_start, size_x, size_y), nearestVertex(line_end, size_x, size_y)];\n  }\n\n  if (quadrant_start & quadrant_end) {\n    // These points are all on one side of the box.\n    return [nearestVertex(line_start, size_x, size_y), nearestVertex(line_end, size_x, size_y)];\n  }\n\n  if (quadrant_start === 0b000) {\n    // We are exiting the box. Return the start, the intersection with the boundary, and the closest\n    // boundary point to the exited point.\n    var line = [line_start];\n    line.push(boundPoint(line_start, line_end, size_x, size_y));\n    line.push(nearestVertex(line_end, size_x, size_y));\n    return line;\n  }\n\n  if (quadrant_end === 0b000) {\n    // We are re-entering the box.\n    return [boundPoint(line_end, line_start, size_x, size_y), line_end];\n  }\n\n  // We have reached a terrible place, where both points are oob, but it might intersect with the\n  // work area.\n\n  // First, define the boundaries as lines.\n  const sides = [\n    // left\n    [Victor(-size_x, -size_y), Victor(-size_x, size_y)],\n    // right\n    [Victor(size_x, -size_y), Victor(size_x, size_y)],\n    // bottom\n    [Victor(-size_x, -size_y), Victor(size_x, -size_y)],\n    // top\n    [Victor(-size_x, size_y), Victor(size_x, size_y)],\n  ]\n\n  // Count up the number of boundary lines intersect with our line segment.\n  var intersections = []\n  for (var s=0; s<sides.length; s++) {\n    var int_point = intersection(Victor.fromObject(line_start),\n                                 Victor.fromObject(line_end),\n                                 sides[s][0],\n                                 sides[s][1]);\n    if (int_point) {\n      intersections.push(Vertex(int_point.x, int_point.y));\n    }\n  }\n\n  if (intersections.length !== 0) {\n    if (intersections.length !== 2) {\n      // We should never get here. How would we have something other than 2 or 0 intersections with\n      // a box?\n      console.log(intersections);\n      throw Error(\"Software Geometry Error\");\n    }\n\n    // The intersections are tested in some normal order, but the line could be going through them\n    // in any direction. This check will flip the intersections if they are reversed somehow.\n    if (Victor.fromObject(intersections[0]).subtract(Victor.fromObject(line_start)).lengthSq() >\n        Victor.fromObject(intersections[1]).subtract(Victor.fromObject(line_start)).lengthSq()) {\n      var temp = intersections[0];\n      intersections[0] = intersections[1];\n      intersections[1] = temp;\n    }\n    return [...intersections, nearestVertex(line_end, size_x, size_y)];\n  }\n\n  // Damn. We got here because we have a start and end that are failing different boundary checks,\n  // and the line segment doesn't intersect the box. We have to crawl around the outside of the\n  // box until we reach the other point.\n  //\n  // Here, I'm going to split this line into two parts, and send each half line segment back\n  // through the clipLine algorithm. Eventually, that should result in only one of the other cases.\n  var midpoint = Victor.fromObject(line_start).add(Victor.fromObject(line_end)).multiply(Victor(0.5, 0.5));\n  // recurse, and find smaller segments until we don't end up in this place again.\n  return [...clipLine(line_start, midpoint, size_x, size_y),\n          ...clipLine(midpoint,   line_end, size_x, size_y)];\n}\n\n// Finds the nearest vertex that is in the bounds. This will change the shape. i.e. this doesn't\n// care about the line segment, only about the point.\nfunction nearestVertex(vertex, size_x, size_y) {\n  return Vertex(Math.min(size_x, Math.max(-size_x, vertex.x)),\n                Math.min(size_y, Math.max(-size_y, vertex.y)));\n}\n\n// Intersect the line with the boundary, and return the point exactly on the boundary.\n// This will keep the shape. i.e. It will follow the line segment, and return the point on that line\n// segment.\nfunction boundPoint(good, bad, size_x, size_y) {\n  var dx = good.x - bad.x;\n  var dy = good.y - bad.y;\n\n  var fixed = Vertex(bad.x, bad.y);\n  var distance = 0;\n  if (bad.x < -size_x || bad.x > size_x) {\n    if (bad.x < -size_x) {\n      // we are leaving the left\n      fixed.x = -size_x;\n    } else {\n      // we are leaving the right\n      fixed.x = size_x;\n    }\n    distance = (fixed.x - good.x) / dx;\n    fixed.y = good.y + distance * dy;\n    // We fixed x, but y might have the same problem, so we'll rerun this, with different points.\n    return boundPoint(good, fixed, size_x, size_y);\n  }\n  if (bad.y < -size_y || bad.y > size_y) {\n    if (bad.y < -size_y) {\n      // we are leaving the bottom\n      fixed.y = -size_y;\n    } else {\n      // we are leaving the top\n      fixed.y = size_y;\n    }\n    distance = (fixed.y - good.y) / dy;\n    fixed.x = good.x + distance * dx;\n  }\n  return fixed;\n}\n\n// Returns points along the circle from the start to the end, tracing a circle of radius size.\nfunction traceCircle(start, end, size) {\n  const startAngle = start.angle();\n  const endAngle = end.angle();\n  let resolution = (Math.PI*2.0) / 128.0; // 128 segments per circle. Enough?\n  let deltaAngle = ((endAngle - startAngle) + 2.0 * Math.PI) % (2.0 * Math.PI);\n  if (deltaAngle > Math.PI) {\n    deltaAngle -= 2.0 * Math.PI;\n  }\n  if (deltaAngle < 0.0) {\n    resolution *= -1.0;\n  }\n\n  var tracePoints = []\n  for (var step = 0; step < (deltaAngle/resolution) ; step++) {\n    tracePoints.push(Victor(size * Math.cos(resolution * step + startAngle),\n                            size * Math.sin(resolution * step + startAngle)));\n  }\n  return tracePoints;\n}\n\nfunction onSegment(start, end, point) {\n  if (start.distance(point) + end.distance(point) - start.distance(end) < 0.001) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction getIntersections(start, end, size) {\n  var direction = end.clone().subtract(start).clone().normalize();\n\n  var t = direction.x * -1.0 * start.x + direction.y * -1.0 * start.y;\n  var e = direction.clone().multiply(Victor(t,t)).add(start);\n\n  var distanceToLine = e.magnitude();\n\n  if (distanceToLine >= size)\n  {\n    return {\n      intersection: false,\n      points: [],\n    }\n  }\n\n  var dt = Math.sqrt(size*size - distanceToLine*distanceToLine);\n\n  var point1 = direction.clone().multiply(Victor(t - dt,t - dt)).add(start);\n  var point2 = direction.clone().multiply(Victor(t + dt,t + dt)).add(start);\n\n  return {\n    intersection: true,\n    points: [\n      {\n        point: point1,\n        on: onSegment(start, end, point1),\n      },\n      {\n        point: point2,\n        on: onSegment(start, end, point2),\n      }\n    ]}\n}\n\n// This method is the guts of logic for this limits enforcer. It will take a single line (defined by\n// start and end) and if the line goes out of bounds, returns the vertices around the outside edge\n// to follow around without messing up the shape of the vertices.\n//\nfunction clipLineCircle(line_start, line_end, size) {\n\n  // Cases:\n  // 1 - Entire line is inside\n  //     return start, end\n  // 2 - Entire line is outside\n  //     trace from start to end\n  // 3 - only start is inside\n  //     find the intersection\n  //     include start\n  //     include intersection\n  //     trace from intersection to closest to end point\n  // 4 - only end is inside\n  //     do reverse of 3\n  // 4 - Neither end is inside, but there is some line segment inside\n  //     find both intersections\n  //     trace from start to first intersction\n  //     trace from second intersection to end\n\n  // Helper objects\n  const start = Victor.fromObject(line_start);\n  const end = Victor.fromObject(line_end);\n\n  // I'll need these\n  const rad_start = start.magnitude();\n  const rad_end = end.magnitude();\n\n  // Check the easy case\n  if (rad_start <= size && rad_end <= size) {\n    // The whole segment is inside\n    return [line_start, line_end];\n  }\n\n  // Check for the odd case of coincident points\n  if (start.distance(end) < 0.00001) {\n     return [nearestVertexCircle(start, size)];\n  }\n\n  var intersections = getIntersections(start, end, size);\n\n  if ( !intersections.intersection )\n  {\n    // The whole line is outside, just trace.\n    return traceCircle(start, end, size);\n  }\n\n  // if neither point is on the segment, then it should just be a trace\n  if (!intersections.points[0].on && ! intersections.points[1].on) {\n    return traceCircle(start, end, size);\n  }\n\n  // If both points are outside, but there's an intersection\n  if (rad_start > size + 1.0e-9 && rad_end > size + 1.0e-9) {\n    let point = intersections.points[0].point;\n    let other_point = intersections.points[1].point;\n\n    return [\n      ...traceCircle(start, point, size),\n      point,\n      ...traceCircle(other_point, end, size)\n    ];\n  }\n\n  // If we're here, then one point is still in the circle.\n  if (rad_start <= size) {\n    var point1 = (intersections.points[0].on && Math.abs(intersections.points[0].point - start) > 0.0001) ? intersections.points[0].point : intersections.points[1].point;\n    return [\n      start,\n      ...traceCircle(point1, end, size),\n      end\n    ];\n  } else {\n    point1 = intersections.points[0].on ? intersections.points[0].point : intersections.points[1].point;\n    return [\n      ...traceCircle(start, point1, size),\n      point1,\n      end\n    ];\n  }\n}\n\n// Finds the nearest vertex that is in the bounds of the circle. This will change the shape. i.e. this doesn't\n// care about the line segment, only about the point.\nfunction nearestVertexCircle(vertex, size) {\n  const point = Victor.fromObject(vertex);\n  if ( point.length() > size) {\n    let scale = size / point.length();\n    return point.multiply(Victor(scale, scale));\n  } else {\n    return point;\n  }\n}\n\n// Manipulates the points to make them all in bounds, while doing the least amount of damage to the\n// desired shape.\nexport const enforceRectLimits = function(vertices, size_x, size_y) {\n  var cleanVertices = []\n  var previous = null;\n\n  if (size_x < 0) {\n    size_x *= -1.0;\n  }\n  if (size_y < 0) {\n    size_y *= -1.0;\n  }\n  for (var next=0; next<vertices.length; next++) {\n    var vertex = vertices[next];\n    if (previous) {\n      var line = clipLine(previous, vertex, size_x, size_y);\n      for (var pt=0; pt<line.length; pt++) {\n        if (line[pt] !== previous) {\n          cleanVertices.push(line[pt]);\n        }\n      }\n    } else {\n      cleanVertices.push(nearestVertex(vertex, size_x, size_y));\n    }\n    previous = vertex;\n  }\n\n  // Just for sanity, and cases that I haven't thought of, clean this list again, including removing\n  // duplicate points\n  previous = null;\n  var cleanerVertices = []\n  for (var i=0; i<cleanVertices.length; i++) {\n    if (previous) {\n      let start = Victor.fromObject(cleanVertices[i]);\n      let end = Victor.fromObject(previous);\n      if (start.distance(end) > 0.001) {\n        cleanerVertices.push(nearestVertex(cleanVertices[i], size_x, size_y));\n      }\n    } else {\n      cleanerVertices.push(nearestVertex(cleanVertices[i], size_x, size_y));\n    }\n    previous = cleanVertices[i];\n  }\n\n  return cleanerVertices;\n}\n\nexport const enforcePolarLimits = function(vertices, size) {\n\n  var cleanVertices = []\n  var previous = null;\n\n  for (var next=0; next<vertices.length; next++) {\n    var vertex = vertices[next];\n    if (previous) {\n      var line = clipLineCircle(previous, vertex, size);\n      for (var pt=0; pt<line.length; pt++) {\n        if (line[pt] !== previous) {\n          cleanVertices.push(line[pt]);\n        }\n      }\n    } else {\n      cleanVertices.push(nearestVertexCircle(vertex, size));\n    }\n    previous = vertex;\n  }\n\n  // Just for sanity, and cases that I haven't thought of, clean this list again, including removing\n  // duplicate points\n  previous = null;\n  var cleanerVertices = []\n  for (var i=0; i<cleanVertices.length; i++) {\n    if (previous) {\n      let start = Victor.fromObject(cleanVertices[i]);\n      let end = Victor.fromObject(previous);\n      if (start.distance(end) > 0.001) {\n        cleanerVertices.push(nearestVertexCircle(cleanVertices[i], size));\n      }\n    } else {\n      cleanerVertices.push(nearestVertexCircle(cleanVertices[i], size));\n    }\n    previous = cleanVertices[i];\n  }\n  return cleanerVertices;\n}\n\n\n","import {\n  degToRad,\n  Vertex,\n} from '../Geometry.js'\nimport {\n  enforceRectLimits,\n  enforcePolarLimits\n} from '../machine/LimitEnforcer';\nimport Victor from 'victor';\nimport { createSelector } from 'reselect'\n\n// Transform funtions\nfunction rotate (vertex, angle_deg) {\n  var angle = Math.PI / 180.0 * angle_deg;\n  return Vertex(\n           vertex.x * Math.cos(angle) - vertex.y * Math.sin(angle),\n           vertex.x * Math.sin(angle) + vertex.y * Math.cos(angle),\n           vertex.f);\n}\n\nfunction scale (vertex, scale_perc) {\n  var scale = scale_perc / 100.0;\n  return {\n    x: vertex.x * scale,\n    y: vertex.y * scale,\n    f: vertex.f,\n  }\n}\n\nfunction offset (vertex, offset_x, offset_y) {\n  return {\n    x: vertex.x + offset_x,\n    y: vertex.y + offset_y,\n    f: vertex.f,\n  }\n}\n\nfunction track (vertex, data, loop_index) {\n  let angle = data.trackLength * loop_index / 16 * 2.0 * Math.PI;\n  let radius = 1.0;\n  if (data.trackGrowEnabled) {\n    radius = 1.0 + loop_index / 10.0 * data.trackGrow / 100.0;\n  }\n  return {\n    x: vertex.x + radius * data.trackValue * Math.cos(angle),\n    y: vertex.y + radius * data.trackValue * Math.sin(angle),\n    f: vertex.f, // Why do I still have f in here?\n  };\n}\n\nexport const transform = (data, vertex, fraction_index) => {\n  var transformed_vertex = vertex\n  if (data.growEnabled)\n  {\n    transformed_vertex = scale(transformed_vertex, 100.0 + (data.growValue * fraction_index));\n  }\n  transformed_vertex = offset(transformed_vertex, data.xformOffsetX, data.xformOffsetY);\n  if (data.spinEnabled)\n  {\n    var loop_period = data.numLoops / (parseInt(data.spinSwitchbacks) + 1);\n    var stage = fraction_index/loop_period;\n    var direction = (stage % 2 < 1 ? 1.0 : -1.0);\n    var spin_amount = direction * (fraction_index % loop_period) * data.spinValue;\n    // Add in the amount it goes positive to the negatives, so they start at the same place.\n    if (direction < 0.0) {\n      spin_amount += loop_period * data.spinValue;\n    }\n    transformed_vertex = rotate(transformed_vertex, spin_amount);\n  }\n  if (data.trackEnabled) {\n    transformed_vertex = track(transformed_vertex, data, fraction_index);\n  }\n  return transformed_vertex;\n}\n\nconst outOfBounds = (point, width, height) => {\n  if (point.x < -width/2.0) {\n    return true;\n  }\n  if (point.y < -height/2.0) {\n    return true;\n  }\n  if (point.x > width/2.0) {\n    return true;\n  }\n  if (point.y > height/2.0) {\n    return true;\n  }\n  return false;\n}\n\nconst findShape = (shapes, name) => {\n  for (let i=0; i<shapes.length; i++) {\n    if (name === shapes[i].name) {\n      return shapes[i];\n    }\n  }\n  return null;\n}\n\n// Intersect the line with the boundary, and return the point exactly on the boundary.\n// This will keep the shape. i.e. It will follow the line segment, and return the point on that line\n// segment.\nfunction boundPoint(good, bad, size_x, size_y) {\n  var dx = good.x - bad.x;\n  var dy = good.y - bad.y;\n\n  var fixed = Victor(bad.x, bad.y);\n  var distance = 0;\n  if (bad.x < -size_x || bad.x > size_x) {\n    if (bad.x < -size_x) {\n      // we are leaving the left\n      fixed.x = -size_x;\n    } else {\n      // we are leaving the right\n      fixed.x = size_x;\n    }\n    distance = (fixed.x - good.x) / dx;\n    fixed.y = good.y + distance * dy;\n    // We fixed x, but y might have the same problem, so we'll rerun this, with different points.\n    return boundPoint(good, fixed, size_x, size_y);\n  }\n  if (bad.y < -size_y || bad.y > size_y) {\n    if (bad.y < -size_y) {\n      // we are leaving the bottom\n      fixed.y = -size_y;\n    } else {\n      // we are leaving the top\n      fixed.y = size_y;\n    }\n    distance = (fixed.y - good.y) / dy;\n    fixed.x = good.x + distance * dx;\n  }\n  return fixed;\n}\n\nfunction nearEnough(end, point) {\n  if (point.clone().subtract(end).length() < 0.01) {\n    return true;\n  }\n  return false;\n}\n\n// Vertex functions\nexport const polishVertices = (state, vertices) => {\n  let machine = state.machine;\n  if (vertices.length > 0) {\n    if (machine.rectangular && machine.rectOrigin.length === 1) {\n\n      // OK, let's assign corners indices:\n      //\n      // [1]   [2]\n      //\n      //\n      // [0]   [3]\n\n      let dx = (machine.max_x - machine.min_x) / 2.0;\n      let dy = (machine.max_y - machine.min_y) / 2.0;\n\n      let corners = [\n        {x: -dx, y: -dy},\n        {x: -dx, y:  dy},\n        {x:  dx, y:  dy},\n        {x:  dx, y: -dy}\n      ];\n      console.log(corners);\n\n      let first = vertices[0];\n      let last = vertices[vertices.length-1];\n\n      // Max radius\n      let max_radius = Math.sqrt(Math.pow(2.0*dx,2.0) + Math.pow(2.0*dy, 2.0)) / 2.0;\n\n      let vFirst = Victor.fromObject(first);\n      let vLast = Victor.fromObject(last);\n      let outPoint;\n      let newVertices = [];\n      if (vFirst.magnitude() <= vLast.magnitude()) {\n        // It's going outward\n        let scale = max_radius / vLast.magnitude();\n        outPoint = vLast.multiply(Victor(scale,scale));\n        newVertices.push({ ...last, x: outPoint.x, y: outPoint.y});\n      } else {\n        let scale = max_radius / vFirst.magnitude();\n        outPoint = vFirst.multiply(Victor(scale,scale));\n        newVertices.push({ ...first, x: outPoint.x, y: outPoint.y});\n      }\n      console.log(outPoint);\n      console.log(dx);\n\n      let nextCorner = 1;\n      if (outPoint.x >= dx) {\n        // right\n        nextCorner = 2;\n      } else if (outPoint.x <= -dx) {\n        // left\n        nextCorner = 0;\n      } else if (outPoint.y >= dy) {\n        // up\n        nextCorner = 1;\n      } else if (outPoint.y <= -dy) {\n        // down\n        nextCorner = 3;\n      } else {\n        console.log(\"Darn!\");\n        nextCorner = 3;\n      }\n      // console.log(\"nextCorner: \" + nextCorner);\n      // newVertices.push({ ...first, x: corners[nextCorner].x, y: corners[nextCorner].y});\n\n      while (nextCorner !== machine.rectOrigin[0]) {\n        console.log(\"nextCorner: \" + nextCorner);\n        newVertices.push({ ...first, x: corners[nextCorner].x, y: corners[nextCorner].y});\n        nextCorner -= 1;\n        if (nextCorner < 0) {\n          nextCorner = 3;\n        }\n      }\n      console.log(\"nextCorner: \" + nextCorner);\n      newVertices.push({ ...first, x: corners[nextCorner].x, y: corners[nextCorner].y});\n\n      console.log(newVertices);\n      if (vFirst.magnitude() <= vLast.magnitude()) {\n        // outward\n        vertices = vertices.concat(newVertices);\n      } else {\n        vertices = newVertices.reverse().concat(vertices);\n      }\n    }\n    if (machine.polarEndpoints && !machine.rectangular) {\n\n      let first = vertices[0];\n      let last = vertices[vertices.length-1];\n\n      // Always put 0.0 in there\n\n      // Max radius\n      let max_radius = machine.max_radius;\n      let vFirst = Victor.fromObject(first);\n      let vLast = Victor.fromObject(last);\n      if (vFirst.magnitude() <= vLast.magnitude()) {\n        // It's going outward\n        let scale = max_radius / vLast.magnitude();\n        let outPoint = vLast.multiply(Victor(scale,scale));\n        vertices.unshift(Vertex(0.0, 0.0, first.f));\n        vertices.push(Vertex(outPoint.x, outPoint.y, last.f));\n      } else {\n        let scale = max_radius / vFirst.magnitude();\n        let outPoint = vFirst.multiply(Victor(scale,scale));\n        vertices.push(Vertex(0.0, 0.0, first.f));\n        vertices.unshift(Vertex(outPoint.x, outPoint.y, last.f));\n      }\n    }\n  }\n  if (state.app.reverse) {\n    vertices.reverse();\n  }\n  if (machine.rectangular) {\n    vertices = enforceRectLimits(vertices,\n                                 (machine.max_x - machine.min_x)/2.0,\n                                 (machine.max_y - machine.min_y)/2.0\n                                 );\n  } else {\n    vertices = enforcePolarLimits(vertices,\n                                  machine.max_radius\n                                  );\n  }\n\n  return vertices;\n}\n\nconst wiper = (state) => {\n\n  var outputVertices = []\n\n  // Do the math\n\n  // Get the angle between 0,180\n  let angle = (180.0 - (state.wiper.angleDeg % 360)) % 180.0;\n  if (angle < 0.0) {\n    angle += 180.0;\n  }\n  angle = degToRad(angle);\n\n  // Start with the defaults for 0,45\n  let height = 1;\n  let width = 1;\n  let machine = state.machine;\n  if (machine.rectangular) {\n    height = machine.max_y - machine.min_y;\n    width = machine.max_x - machine.min_x;\n  } else {\n    height = machine.max_radius * 2.0;\n    width = height;\n  }\n\n  let startLocation = Victor(-width/2.0, height/2.0)\n  let cosa = Math.cos(angle);\n  let sina = Math.sin(angle);\n  // These can be zero, but infinity isn't great for out math, so let's just clip it.\n  if (Math.abs(cosa) < 1.0e-10) {\n    cosa = 1.0e-10;\n  }\n  if (Math.abs(sina) < 1.0e-10) {\n    sina = 1.0e-10;\n  }\n  let orig_delta_w = Victor(state.wiper.size / cosa, 0.0);\n  let orig_delta_h = Victor(0.0, -state.wiper.size / sina);\n\n  if (angle > Math.PI/4.0 && angle < 0.75 * Math.PI) {\n    // flip the logic of x,y\n    let temp = orig_delta_w.clone();\n    orig_delta_w = orig_delta_h.clone();\n    orig_delta_h = temp;\n  }\n  if (angle > Math.PI/2.0) {\n    startLocation = Victor(-width/2.0, -height/2.0)\n    orig_delta_w = orig_delta_w.clone().multiply(Victor(-1.0, -1.0));\n    orig_delta_h = orig_delta_h.clone().multiply(Victor(-1.0, -1.0));\n  }\n  let delta_w = orig_delta_w;\n  let delta_h = orig_delta_h;\n  let endLocation = startLocation.clone().multiply(Victor(-1.0, -1.0));\n  outputVertices.push(startLocation);\n  let nextWidthPoint = startLocation;\n  let nextHeightPoint = startLocation;\n\n  let emergency_break = 0;\n  while (emergency_break < 1000) {\n    emergency_break += 1;\n\n    // \"right\"\n    nextWidthPoint = nextWidthPoint.clone().add(delta_w);\n    if (outOfBounds(nextWidthPoint, width, height)) {\n      let corner = boundPoint(nextWidthPoint.clone().subtract(delta_w), nextWidthPoint, width/2.0, height/2.0);\n      outputVertices.push(corner);\n      if (nearEnough(endLocation, corner)) {\n        break;\n      }\n      nextWidthPoint = boundPoint(nextHeightPoint, nextWidthPoint, width/2.0, height/2.0);\n      delta_w = orig_delta_h;\n    }\n    outputVertices.push(nextWidthPoint);\n    if (nearEnough(endLocation, nextWidthPoint)) {\n      break;\n    }\n\n    // \"down-left\"\n    nextHeightPoint = nextHeightPoint.clone().add(delta_h);\n    if (outOfBounds(nextHeightPoint, width, height)) {\n      nextHeightPoint = boundPoint(nextWidthPoint, nextHeightPoint, width/2.0, height/2.0);\n      delta_h = orig_delta_w;\n    }\n    outputVertices.push(nextHeightPoint);\n    if (nearEnough(endLocation, nextHeightPoint)) {\n      break;\n    }\n\n    // \"down\"\n    nextHeightPoint = nextHeightPoint.clone().add(delta_h);\n    outputVertices.push(nextHeightPoint);\n    if (nearEnough(endLocation, nextHeightPoint)) {\n      break;\n    }\n    if (outOfBounds(nextHeightPoint, width, height)) {\n      let corner = boundPoint(nextHeightPoint.clone().subtract(delta_h), nextHeightPoint, width/2.0, height/2.0);\n      outputVertices.push(corner);\n      if (nearEnough(endLocation, corner)) {\n        break;\n      }\n      nextHeightPoint = boundPoint(nextWidthPoint, nextHeightPoint, width/2.0, height/2.0);\n      delta_h = orig_delta_w;\n    }\n    outputVertices.push(nextHeightPoint);\n    if (nearEnough(endLocation, nextHeightPoint)) {\n      break;\n    }\n\n    // \"up-right\"\n    nextWidthPoint = nextWidthPoint.clone().add(delta_w);\n    outputVertices.push(nextWidthPoint);\n    if (nearEnough(endLocation, nextWidthPoint)) {\n      break;\n    }\n    if (outOfBounds(nextWidthPoint, width, height)) {\n      nextWidthPoint = boundPoint(nextHeightPoint, nextWidthPoint, width/2.0, height/2.0);\n      delta_w = orig_delta_h;\n    }\n\n  }\n\n  return polishVertices(state, outputVertices);\n};\n\nconst thetaRho = (state) => {\n  let machine = state.machine;\n  var x_scale = (machine.max_x - machine.min_x)/2.0 * 0.01 * state.file.zoom;\n  var y_scale = (machine.max_y - machine.min_y)/2.0 * 0.01 * state.file.zoom;\n  if (!machine.rectangular) {\n    x_scale = y_scale = machine.max_radius;\n  }\n  x_scale *= 0.01 * state.file.zoom;\n  y_scale *= 0.01 * state.file.zoom;\n  if (state.file.aspectRatio) {\n    x_scale = y_scale = Math.min(x_scale,y_scale);\n  }\n\n  var newVertices = state.file.vertices.map( (vertex) => {\n    return {...vertex,\n      x: vertex.x * x_scale,\n      y: vertex.y * y_scale,\n    };\n  });\n  return polishVertices(state, newVertices);\n}\n\nconst transformShapes = (state) => {\n  const shape = findShape(state.shapes.shapes, state.shapes.currentShape);\n  var input = []\n  if (shape) {\n    input = shape.vertices(state).map( (vertex) => {\n      return scale(vertex, 100.0 * state.shapes.startingSize);\n    });\n  }\n\n  var num_loops = state.transform.numLoops;\n  var outputVertices = []\n  for (var i=0; i<num_loops; i++) {\n    for (var j=0; j<input.length; j++) {\n      let fraction = j/input.length;\n      outputVertices.push(transform(state.transform, input[j], i+fraction))\n    }\n  }\n\n  return polishVertices(state, outputVertices);\n};\n\nconst getApp = state => state.app;\nconst getShapes = state => state.shapes;\nconst getTransform = state => state.transform;\nconst getFile = state => state.file;\nconst getWiper = state => state.wiper;\nconst getMachine = state => state.machine;\n\nexport const getVertices = createSelector(\n  [\n      getApp,\n      getShapes,\n      getTransform,\n      getFile,\n      getWiper,\n      getMachine,\n  ],\n  (app, shapes, transform, file, wiperState, machine) => {\n    let state = {\n      app: app,\n      shapes: shapes,\n      transform: transform,\n      file: file,\n      wiper: wiperState,\n      machine: machine\n    };\n\n    if (state.app.input === 0) {\n      return transformShapes(state);\n    } else if (state.app.input === 2) {\n      return wiper(state);\n    } else if (state.app.input === 3) {\n      return thetaRho(state);\n    }\n  }\n);\n\nexport const getVerticesStats = createSelector(\n  [\n      getVertices\n  ],\n  (vertices) => {\n    let distance = 0.0;\n    let previous = null;\n    vertices.forEach( (vertex) => {\n      if (previous) {\n        distance += Math.sqrt(Math.pow(vertex.x - previous.x, 2.0) +\n                              Math.pow(vertex.y - previous.y, 2.0));\n      }\n      previous = vertex;\n    });\n    return {\n      numPoints: vertices.length,\n      distance: Math.floor(distance),\n    };\n  }\n);\n\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './MachinePreview.css';\nimport { Vertex } from '../Geometry';\nimport MachineSettings from './MachineSettings.js';\nimport { connect } from 'react-redux'\nimport { Panel } from 'react-bootstrap'\nimport Slider from 'rc-slider'\nimport 'rc-slider/assets/index.css'\nimport {\n  transform,\n  getVertices,\n  getVerticesStats,\n} from '../inputs/Computer.js';\nimport { createSelector } from 'reselect'\n\nexport const setMachinePreviewSize = ( value ) => {\n  return {\n    type: 'SET_MACHINE_SIZE',\n    value: value,\n  };\n}\n\nexport const setMachineSlider = ( value ) => {\n  return {\n    type: 'SET_MACHINE_SLIDER',\n    value: value,\n  };\n}\n\nconst getTransform = state => state.transform;\n\nconst getTrackVertices = createSelector(\n  [getTransform],\n  (data) => {\n    var num_loops = data.numLoops;\n    var trackVertices = []\n    for (var i=0; i<num_loops; i++) {\n      if (data.trackEnabled) {\n        trackVertices.push(transform(data, {x: 0.0, y: 0.0}, i))\n      }\n    }\n    return trackVertices;\n  }\n);\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    use_rect: state.machine.rectangular,\n    min_x: state.machine.min_x,\n    max_x: state.machine.max_x,\n    min_y: state.machine.min_y,\n    max_y: state.machine.max_y,\n    max_radius: state.machine.max_radius,\n    canvas_width: state.app.canvas_width,\n    canvas_height: state.app.canvas_height,\n    vertices: getVertices(state),\n    sliderValue: state.app.machineSlider,\n    showTrack: state.app.input === 0,\n    trackVertices: getTrackVertices(state),\n  }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    onResize: (size) => {\n      dispatch(setMachinePreviewSize(size))\n    },\n  }\n}\n\n// Contains the preview window, and any parameters for the machine.\nclass PreviewWindow extends Component {\n\n  componentDidMount() {\n    var canvas = ReactDOM.findDOMNode(this);\n    var context = canvas.getContext('2d');\n    var bigBox = document.getElementById(\"biggerBox\");\n    this.resize(canvas, bigBox);\n    window.addEventListener('resize', () => { this.resize(canvas, bigBox) }, false);\n    this.paint(context);\n  }\n\n  componentDidUpdate() {\n    var canvas = ReactDOM.findDOMNode(this);\n    var context = canvas.getContext('2d');\n    context.clearRect(0, 0, this.props.canvas_width, this.props.canvas_height);\n    var bigBox = document.getElementById(\"biggerBox\");\n    this.resize(canvas, bigBox);\n    this.paint(context);\n  }\n\n  // in mm means in units of mm, but 0,0 is the center, not the lower corner or something.\n  mmToPixelsScale() {\n\n    var machine_x = 1;\n    var machine_y = 1;\n    if (this.props.use_rect) {\n      machine_x = this.props.max_x - this.props.min_x;\n      machine_y = this.props.max_y - this.props.min_y;\n    } else {\n      machine_x = this.props.max_radius * 2.0;\n      machine_y = machine_x;\n    }\n\n    var scale_x = this.props.canvas_width / machine_x;\n    var scale_y = this.props.canvas_height / machine_y;\n    // Keep it square.\n    return Math.min(scale_x, scale_y) * 0.95;\n  }\n\n  mmToPixels(vertex) {\n    var min_scale = this.mmToPixelsScale()\n\n    var x = vertex.x * min_scale + this.props.canvas_width/2.0;\n    // Y for pixels starts at the top, and goes down.\n    var y = -vertex.y * min_scale + this.props.canvas_height/2.0;\n\n    return Vertex(x, y);\n  }\n\n  moveTo_mm(context, vertex) {\n    var in_mm = this.mmToPixels(vertex);\n    context.moveTo(in_mm.x, in_mm.y)\n  }\n\n  lineTo_mm(context, vertex) {\n    var in_mm = this.mmToPixels(vertex);\n    context.lineTo(in_mm.x, in_mm.y)\n  }\n\n  dot_mm(context, vertex) {\n    var in_mm = this.mmToPixels(vertex);\n    context.arc(in_mm.x, in_mm.y, Math.max(4.0, this.mmToPixelsScale() * 1.5), 0, 2 * Math.PI, true);\n    context.fillStyle = context.strokeStyle;\n    context.fill();\n  }\n\n  slice_vertices(vertices, sliderValue) {\n    const slide_size = 10.0;\n    if (sliderValue === 0) {\n      return vertices;\n    }\n\n    // Let's start by just assuming we want a slide_size sized window, as a percentage of the whole\n    // thing.\n    //\n    const begin_fraction = sliderValue / 100.0;\n    const end_fraction = (slide_size + sliderValue) / 100.0;\n\n    const begin_vertex = Math.round(vertices.length * begin_fraction);\n    const end_vertex = Math.round(vertices.length * end_fraction);\n\n    return vertices.slice(begin_vertex, end_vertex);\n  }\n\n  paint(context) {\n    context.save();\n\n    // Draw the bounds of the machine\n    context.beginPath();\n    context.lineWidth = \"1\";\n    context.strokeStyle = \"blue\";\n    if (this.props.use_rect) {\n      this.moveTo_mm(context, Vertex((this.props.min_x - this.props.max_x)/2.0, (this.props.min_y - this.props.max_y)/2.0))\n      this.lineTo_mm(context, Vertex((this.props.max_x - this.props.min_x)/2.0, (this.props.min_y - this.props.max_y)/2.0))\n      this.lineTo_mm(context, Vertex((this.props.max_x - this.props.min_x)/2.0, (this.props.max_y - this.props.min_y)/2.0))\n      this.lineTo_mm(context, Vertex((this.props.min_x - this.props.max_x)/2.0, (this.props.max_y - this.props.min_y)/2.0))\n      this.lineTo_mm(context, Vertex((this.props.min_x - this.props.max_x)/2.0, (this.props.min_y - this.props.max_y)/2.0))\n    } else {\n      this.moveTo_mm(context, Vertex(this.props.max_radius, 0.0));\n      let resolution = 128.0;\n      for (let i=0; i<=resolution ; i++) {\n        let angle = Math.PI * 2.0 / resolution * i\n        this.lineTo_mm(context, Vertex(this.props.max_radius * Math.cos(angle),\n                                       this.props.max_radius * Math.sin(angle)));\n      }\n    }\n    context.stroke();\n\n    var drawing_vertices = this.props.vertices;\n\n    drawing_vertices = this.slice_vertices(drawing_vertices, this.props.sliderValue);\n\n    if (drawing_vertices && drawing_vertices.length > 0) {\n\n      // Draw the start and end points\n      context.beginPath();\n      context.lineWidth = 1.0;\n      context.strokeStyle = \"green\";\n      this.dot_mm(context, this.props.vertices[0]);\n      context.stroke();\n      context.beginPath();\n      context.lineWidth = 1.0;\n      context.strokeStyle = \"red\";\n      this.dot_mm(context, this.props.vertices[this.props.vertices.length-1]);\n      context.stroke();\n\n      // Draw the background vertices\n      if (this.props.sliderValue !== 0) {\n        context.beginPath();\n        context.lineWidth = this.mmToPixelsScale();\n        context.strokeStyle = \"gray\";\n        this.moveTo_mm(context, this.props.vertices[0]);\n        for (let i=0; i<this.props.vertices.length; i++) {\n          this.lineTo_mm(context, this.props.vertices[i]);\n        }\n        context.stroke();\n      }\n\n      // Draw the specific vertices\n      context.beginPath();\n      context.lineWidth = this.mmToPixelsScale();\n      context.strokeStyle = \"yellow\";\n      this.moveTo_mm(context, drawing_vertices[0]);\n      for (let i=0; i<drawing_vertices.length; i++) {\n        this.lineTo_mm(context, drawing_vertices[i]);\n      }\n      context.stroke();\n    }\n    // Draw the trackVertices\n    if (this.props.trackVertices && this.props.trackVertices.length > 0 && this.props.showTrack) {\n      // Draw the track vertices\n      context.beginPath();\n      context.lineWidth = this.mmToPixelsScale();\n      context.strokeStyle = \"green\";\n      this.moveTo_mm(context, this.props.trackVertices[0]);\n      for (let i=0; i<this.props.trackVertices.length; i++) {\n        this.lineTo_mm(context, this.props.trackVertices[i]);\n      }\n      context.stroke();\n    }\n\n    context.restore();\n  }\n\n  resize(canvas, bigBox) {\n    var size = parseInt(getComputedStyle(bigBox).getPropertyValue('width'),10);\n    canvas.width = size;\n    canvas.height = size;\n    if (this.props.canvas_width !== size) {\n      this.props.onResize(size);\n    }\n    var context = canvas.getContext('2d');\n    this.paint(context)\n  }\n\n  render() {\n    const {canvas_width, canvas_height} = this.props;\n    return (\n        <canvas className=\"canvas\"\n          width={canvas_width}\n          height={canvas_height}\n        />\n    );\n  }\n}\nPreviewWindow = connect(mapStateToProps, mapDispatchToProps)(PreviewWindow);\n\nconst machineStateToProps = (state, ownProps) => {\n  return {\n    sliderValue: state.app.machineSlider,\n    verticesStats: getVerticesStats(state),\n  }\n}\n\nconst machineDispatchToProps = (dispatch, ownProps) => {\n  return {\n    onSlider: (value) => {\n      dispatch(setMachineSlider(value))\n    },\n  }\n}\n\nclass MachinePreview extends Component {\n  render() {\n    return (\n      <div className=\"machine-preview\">\n\n        <Panel>\n            <PreviewWindow />\n            Points: {this.props.verticesStats.numPoints}, Distance: {this.props.verticesStats.distance}\n            <div className=\"slide-box\">\n                <Slider\n                  value={this.props.sliderValue}\n                  step={1.0}\n                  min={0.0}\n                  max={100.0}\n                  onChange={this.props.onSlider}\n                />\n            </div>\n            <div className=\"cheatBox\" id=\"biggerBox\">\n                <MachineSettings />\n            </div>\n        </Panel>\n      </div>\n    )\n  }\n}\nMachinePreview = connect(machineStateToProps, machineDispatchToProps)(MachinePreview);\n\nexport default MachinePreview;\n\n","import './GCode.css';\nimport React, { Component } from 'react';\nimport {\n  Button,\n  ControlLabel,\n  FormControl,\n  FormGroup,\n  ListGroupItem,\n  Modal,\n} from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport {\n  getVertices,\n} from '../inputs/Computer.js';\n\nimport {\n  Vertex,\n} from '../Geometry.js'\nimport Victor from 'victor';\n\n// GCode Actions\nexport const setGCodeFilename = ( text ) => {\n  return {\n    type: 'SET_GCODE_FILENAME',\n    value: text,\n  };\n}\n\nexport const setGCodePre = ( text ) => {\n  localStorage.setItem('gcode_pre', text)\n  return {\n    type: 'SET_GCODE_PRE',\n    value: text,\n  };\n}\n\nexport const setGCodePost = ( text ) => {\n  localStorage.setItem('gcode_post', text)\n  return {\n    type: 'SET_GCODE_POST',\n    value: text,\n  };\n}\n\nexport const toggleReverse = ( ) => {\n  return {\n    type: 'TOGGLE_REVERSE',\n  };\n}\n\nexport const setShowGCode = ( on ) => {\n  return {\n    type: 'SET_SHOW_GCODE',\n    value: on,\n  };\n}\n\n\n// Helper function to take a string and make the user download a text file with that text as the\n// content.\n//\n// I don't really understand this, but I took it from here, and it seems to work:\n// https://stackoverflow.com/a/18197511\n//\nfunction download(filename, text) {\n  var pom = document.createElement('a');\n  pom.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\n  pom.setAttribute('download', filename);\n\n  if (document.createEvent) {\n    var event = document.createEvent('MouseEvents');\n    event.initEvent('click', true, true);\n    pom.dispatchEvent(event);\n  }\n  else {\n    pom.click();\n  }\n}\n\nfunction gcode(vertex) {\n  var command = 'G01' +\n    ' X' + vertex.x.toFixed(3) +\n    ' Y' + vertex.y.toFixed(3)\n  if (vertex.speed > 0.0) {\n    command += ' F' + vertex.f\n  }\n  return command + '\\n'\n}\n\nfunction thetarho(vertex) {\n  return \"\" + vertex.x.toFixed(5) + \" \" + vertex.y.toFixed(5) + \"\\n\";\n}\n\nconst getComments = (state) => {\n\n  let comments = [];\n  comments.push(\"Created by Sandify\");\n  comments.push(\"\");\n  comments.push(\"  https://sandify.org\");\n  comments.push(\"\");\n  comments.push(\"  Sandify Version: \" + state.app.sandifyVersion);\n  comments.push(\"\");\n  comments.push(\"  Machine Type: \" + (state.machine.rectangular ? \"Rectangular\" : \"Polar\"));\n  if (state.machine.rectangular) {\n    comments.push(\"    MinX: \" + state.machine.min_x + \" MaxX: \" + state.machine.max_x + \" MinY: \" + state.machine.min_y + \" MaxY: \" + state.machine.max_y);\n  } else {\n    comments.push(\"    Max Radius: \" + state.machine.max_radius);\n    comments.push(\"    Force Endpoints: \" + state.machine.polarEndpoints);\n  }\n\n  switch (state.app.input) {\n    case 0: // shapes\n      var shapeName = state.shapes.shapes.find(shape => shape.name === state.shapes.currentShape).name;\n\n      comments.push(\"  Content Type: Shapes\");\n      comments.push(\"    Starting Size: \" + state.shapes.startingSize);\n      comments.push(\"    Offset: X: \" + state.transform.xformOffsetX + \" Y: \" + state.transform.xformOffsetY);\n      comments.push(\"    Selected Shape: \" + shapeName);\n\n      switch (state.shapes.currentShape) {\n        case \"Polygon\":\n          comments.push(\"      Polygon Sides: \" + state.shapes.polygonSides);\n          break;\n        case \"Star\":\n          comments.push(\"      Star Points: \" + state.shapes.starPoints);\n          comments.push(\"      Star Ratio: \" + state.shapes.starRatio);\n          break;\n        case \"Circle\":\n          comments.push(\"      Circle Lobes: \" + state.shapes.circleLobes);\n          break;\n        case \"Heart\":\n          break;\n        case \"Reuleaux\":\n          comments.push(\"      Reuleaux Sides: \" + state.shapes.reuleauxSides);\n          break;\n        case \"Text\":\n          comments.push(\"      Input Text: \" + state.shapes.inputText);\n          break;\n        case \"Vicious1\":\n          break;\n        case \"Epicycloid\":\n          comments.push(\"      a: \" + state.shapes.epicycloidA);\n          comments.push(\"      b: \" + state.shapes.epicycloidB);\n          break;\n        case \"Hypocycloid\":\n          comments.push(\"      a: \" + state.shapes.hypocycloidA);\n          comments.push(\"      b: \" + state.shapes.hypocycloidB);\n          break;\n        case \"Rose\":\n          comments.push(\"      n: \" + state.shapes.roseN);\n          comments.push(\"      d: \" + state.shapes.roseD);\n          break;\n        default:\n          break;\n      }\n\n      comments.push(\"    Number of Loops: \" + state.transform.numLoops);\n      comments.push(\"    Spin: \" + state.transform.spinEnabled);\n      if (state.transform.spinEnabled) {\n        comments.push(\"      Spin Value: \" + state.transform.spinValue);\n        comments.push(\"      Spin Switchbacks: \" + state.transform.spinSwitchbacks);\n      }\n      comments.push(\"    Grow: \" + state.transform.growEnabled);\n      if (state.transform.growEnabled) {\n        comments.push(\"      Grow Value: \" + state.transform.growValue);\n      }\n      comments.push(\"    Track: \" + state.transform.trackEnabled);\n      if (state.transform.trackEnabled) {\n        comments.push(\"      Track Size: \" + state.transform.trackValue);\n        comments.push(\"      Track Length: \" + state.transform.trackLength);\n        comments.push(\"      Track Grow: \" + state.transform.trackGrowEnabled);\n        if (state.transform.trackGrowEnabled) {\n          comments.push(\"          Track Grow Value: \" + state.transform.trackGrow);\n        }\n      }\n      break;\n    case 2: // wiper\n      comments.push(\"  Content Type: Wiper\");\n      comments.push(\"    Wiper Angle: \" + state.wiper.angleDeg);\n      comments.push(\"    Wiper Size: \"  + state.wiper.size);\n      break;\n    case 3: // thetarho\n      comments.push(\"  Content Type: ThetaRho\");\n      comments.push(\"    Input File: \" + state.file.name);\n      comments.push(\"    Zoom: \"  + state.file.zoom);\n      comments.push(\"    Aspect Ratio: \" + state.file.aspectRatio);\n      break;\n    default: // Dunno\n      comments.push(\"  Content Type: Unknown\");\n      break;\n  }\n  comments.push(\"  Path Reversed: \" + state.app.reverse);\n  comments.push(\"\");\n\n  return comments;\n};\n\nconst gcodeProps = (state, ownProps) => {\n  return {\n    reverse: state.app.reverse,\n    show: state.app.showGCode,\n    vertices: getVertices(state),\n\n    settings: getComments(state),\n    xOffset: (state.machine.min_x + state.machine.max_x) / 2.0,\n    yOffset: (state.machine.min_y + state.machine.max_y) / 2.0,\n    max_radius: state.machine.max_radius,\n\n    filename: state.gcode.filename,\n    pre: state.gcode.pre,\n    post: state.gcode.post,\n  }\n}\n\nconst gcodeDispatch = (dispatch, ownProps) => {\n  return {\n    open: () => {\n      dispatch(setShowGCode(true));\n    },\n    close: () => {\n      dispatch(setShowGCode(false));\n    },\n    toggleReverse: () => {\n      dispatch(toggleReverse());\n    },\n    setFilename: (event) => {\n      dispatch(setGCodeFilename(event.target.value));\n    },\n    setPre: (event) => {\n      dispatch(setGCodePre(event.target.value));\n    },\n    setPost: (event) => {\n      dispatch(setGCodePost(event.target.value));\n    },\n  }\n}\n\n// A class that will encapsulate all the gcode generation. This is currently just a button that\n// converts vertices and a speed into a list of positions. There is a lot more than could exists\n// here.\nclass GCodeGenerator extends Component {\n\n  generateGCode() {\n    var content = \"; \" + this.props.settings.join(\"\\n; \");\n    content += \"\\n\";\n    content += \"; filename: '\" + this.props.filename + \"'\\n\\n\";\n    content += \"; BEGIN PRE\\n\";\n    content += this.props.pre;\n    content += \"; END PRE\\n\";\n\n    console.log(\"offset x: \" + this.props.xOffset + \" y: \" + this.props.yOffset);\n    var centeredVertices = this.props.vertices.map( (vertex) => {\n      return {\n        ...vertex,\n        x: vertex.x + this.props.xOffset,\n        y: vertex.y + this.props.yOffset,\n      }\n    });\n\n    var lines = centeredVertices.map(gcode);\n\n    content += lines.join('');\n\n    content += '\\n';\n    content += \"; BEGIN POST\\n\";\n    content += this.props.post;\n    content += \"; END POST\\n\";\n    var filename = this.props.filename;\n    if (!filename.includes(\".\")) {\n      filename += \".gcode\";\n    }\n    download(filename, content)\n    this.props.close();\n  }\n\n  generateThetaRho() {\n    var content = \"# \" + this.props.settings.join(\"\\n# \");\n    content += \"\\n\";\n    content += \"# filename: '\" + this.props.filename + \"'\\n\\n\";\n    content += \"# BEGIN PRE\\n\";\n    content += this.props.pre;\n    content += \"# END PRE\\n\";\n    content += '\\n';\n\n    // First, downsample larger lines into smaller ones.\n    var maxLength = 2.0;\n    var subsampledVertices = [];\n    var previous = undefined;\n    var next;\n    for (next = 0; next < this.props.vertices.length; next++) {\n      if (previous !== undefined) {\n        var start = Victor.fromObject(this.props.vertices[previous]);\n        var end = Victor.fromObject(this.props.vertices[next]);\n\n        var delta = end.clone().subtract(start);\n        var deltaSegment = end.clone().subtract(start).normalize().multiply(Victor(maxLength, maxLength));\n\n        // This loads up (start, end].\n        for (let step = 0; step < (delta.magnitude() / maxLength) ; step++) {\n          subsampledVertices.push(Vertex(start.x + step * deltaSegment.x,\n                                         start.y + step * deltaSegment.y,\n                                         this.props.vertices[next].f));\n        }\n\n      }\n      previous = next;\n    }\n    // Add in the end.\n    if (previous !== undefined) {\n      subsampledVertices.push(this.props.vertices[this.props.vertices.length - 1]);\n    }\n\n    // Convert to Theta, Rho\n    var trVertices = [];\n    var previousTheta = 0;\n    var previousRawTheta = 0;\n    for (next = 0; next < subsampledVertices.length; ++next) {\n      // Normalize the radius\n      var rho = Victor.fromObject(subsampledVertices[next]).magnitude() / this.props.max_radius;\n\n      // What is the basic theta for this point?\n      var rawTheta = Math.atan2(subsampledVertices[next].x,\n                                subsampledVertices[next].y);\n      // Convert to [0,2pi]\n      rawTheta = (rawTheta + 2.0 * Math.PI) % (2.0 * Math.PI);\n\n      // Compute the difference to the last point.\n      var deltaTheta = rawTheta - previousRawTheta;\n      // Convert to [-pi,pi]\n      if (deltaTheta < -Math.PI) {\n        deltaTheta += 2.0 * Math.PI;\n      }\n      if (deltaTheta > Math.PI) {\n        deltaTheta -= 2.0 * Math.PI;\n      }\n      var theta = previousTheta + deltaTheta;\n      previousRawTheta = rawTheta;\n      previousTheta = theta;\n\n      trVertices.push(Vertex(theta, rho, subsampledVertices[next].f));\n    }\n\n    var lines = trVertices.map(thetarho);\n\n    content += lines.join('');\n\n    content += '\\n';\n    content += \"# BEGIN POST\\n\";\n    content += this.props.post;\n    content += \"# END POST\\n\";\n\n    var filename = this.props.filename;\n    if (!filename.includes(\".\")) {\n      filename += \".thr\";\n    }\n    download(filename, content)\n\n    this.props.close();\n  }\n\n  render() {\n    const reverseActiveClass = (this.props.reverse ? \"active\" : null);\n    return (\n      <div>\n        <Button className=\"finishButton\" bsStyle=\"primary\" bsSize=\"large\" onClick={this.props.open}>Create Code</Button>\n        <Modal show={this.props.show} onHide={this.props.close}>\n          <Modal.Header closeButton>\n            <Modal.Title>Code Parameters</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <FormGroup controlId=\"sandifyFilename\">\n              <ControlLabel>Name of Output</ControlLabel>\n              <FormControl type=\"text\" value={this.props.filename} onChange={this.props.setFilename}/>\n            </FormGroup>\n            <FormGroup controlId=\"preCode\">\n              <ControlLabel>Program Start Code</ControlLabel>\n              <FormControl componentClass=\"textarea\" value={this.props.pre} onChange={this.props.setPre}/>\n            </FormGroup>\n            <FormGroup controlId=\"postCode\">\n              <ControlLabel>Program End Code</ControlLabel>\n              <FormControl componentClass=\"textarea\" value={this.props.post} onChange={this.props.setPost}/>\n            </FormGroup>\n            <ListGroupItem header=\"Reverse Path\" className={reverseActiveClass} onClick={this.props.toggleReverse}>Reverses the Code, starting at the final location</ListGroupItem>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button id=\"code-close\" bsStyle=\"default\" onClick={this.props.close}>Close</Button>\n            <Button id=\"code-gen-gcode\" bsStyle=\"primary\" onClick={this.generateGCode.bind(this)}>Generate GCode</Button>\n            <Button id=\"code-gen-thetarho\" bsStyle=\"primary\" onClick={this.generateThetaRho.bind(this)}>Generate Theta Rho</Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    );\n  }\n}\nGCodeGenerator = connect(gcodeProps, gcodeDispatch)(GCodeGenerator);\n\nexport default GCodeGenerator\n","import React, { Component } from 'react';\nimport './App.css';\nimport { createStore } from 'redux';\nimport { combineReducers } from 'redux';\nimport { Provider } from 'react-redux';\n\nimport app from '../reducers/App.js';\nimport file from '../reducers/File.js';\nimport gcode from '../reducers/GCode.js';\nimport machine from '../reducers/Machine.js';\nimport shapes from '../reducers/Shapes.js';\nimport transform from '../reducers/Transform.js';\nimport wiper from '../reducers/Wiper.js';\nimport Header from './Header';\nimport Documentation from './Documentation';\nimport InputTabs from '../inputs/InputTabs';\nimport MachinePreview from '../machine/MachinePreview';\nimport GCodeGenerator from '../machine/GCode';\n\nconst store =\n  createStore(\n    combineReducers(\n      {\n        app,\n        file,\n        gcode,\n        machine,\n        shapes,\n        transform,\n        wiper,\n      }));\n\nclass App extends Component {\n\n  render() {\n\n    return (\n      <Provider store={store}>\n        <div className=\"App\">\n\n          <div className=\"App-header\">\n            <Header/>\n          </div>\n\n          <div className=\"App-col-7 App-left\">\n            <InputTabs/>\n          </div>\n\n          <div className=\"App-col-5 App-mid\">\n            <div className=\"App-canvas\">\n              <MachinePreview/>\n            </div>\n\n            <div id=\"output\">\n              <GCodeGenerator/>\n            </div>\n          </div>\n          <div className=\"App-col-12 App-doc\">\n            <Documentation/>\n          </div>\n\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import 'bootstrap/dist/css/bootstrap.css';\n// import 'bootstrap/dist/css/bootstrap-theme.css';\nimport App from './App/App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}