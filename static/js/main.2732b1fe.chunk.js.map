{"version":3,"sources":["App/logo.svg","reducers/App.js","reducers/File.js","reducers/GCode.js","reducers/Machine.js","Geometry.js","shapes/Polygon.js","shapes/Star.js","shapes/Circle.js","shapes/Heart.js","shapes/Reuleaux.js","shapes/Epicycloid.js","shapes/Hypocycloid.js","shapes/Rose.js","shapes/raysol_cursive.js","shapes/raysol_sanserif.js","shapes/Fonts.js","shapes/Vicious1Vertices.js","inputs/Transforms.js","shapes/InputText.js","shapes/V1Engineering.js","reducers/Shapes.js","reducers/Transform.js","reducers/Wiper.js","App/Header.js","App/Documentation.js","inputs/Wiper.js","inputs/ThetaRho.js","inputs/InputTabs.js","machine/MachineSettings.js","machine/LimitEnforcer.js","inputs/Computer.js","machine/MachinePreview.js","machine/GCode.js","App/App.js","index.js"],"names":["module","exports","__webpack_require__","p","defaultState","sandifyVersion","input","reverse","canvas_width","canvas_height","machineSlider","machineRectExpanded","machinePolarExpanded","showGCode","name","comments","vertices","zoom","aspectRatio","filename","pre","localStorage","getItem","post","rectangular","undefined","min_x","parseFloat","max_x","min_y","max_y","max_radius","rectOrigin","polarEndpoints","Vertex","x","y","f","arguments","length","Polygon","Object","classCallCheck","this","createClass","key","value","state","ownProps","polygonSides","shapes","dispatch","onPolygonSizeChange","event","type","target","parent","points","i","angle","Math","PI","push","cos","sin","options","title","props","onChange","action","objectSpread","Star","starPoints","starRatio","onStarPointsChange","onStarRatioChange","min","max","star_points","star_scale","step","Circle","circleLobes","onCircleLobesChange","circle_points","Heart","heart_points","pow","Reuleaux","reuleauxSides","onReuleauxSidesChange","corners","coverageAngle","halfCoverageAngle","c","startAngle","corn","Epicycloid","epicycloidA","epicycloidB","onepicycloidAChange","onepicycloidBChange","link","a","b","Hypocycloid","hypocycloidA","hypocycloidB","onhypocycloidAChange","onhypocycloidBChange","Rose","roseN","roseD","onRoseNChange","onRoseDChange","n","parseInt","d","thetaClose","resolution","theta","r","raysol_cursive"," ","0","1","2","3","4","5","6","7","8","9","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","e","g","h","j","k","l","m","o","q","s","t","u","v","w","z","a*","b*","c*","d*","e*","f*","g*","h*","i*","j*","k*","l*","m*","n*","o*","p*","q*","r*","s*","t*","u*","v*","w*","x*","y*","z*",",","?","&","$","!","raysol_sanserif","billsey",".","curve","toConsumableArray","Array","keys","map","index","billseyConverter","newVertices","prevPoint","forEach","vertex","width","abs","height","concat","cv","raysolConverter","MonospaceFont","ch","upper","toUpperCase","hasOwnProperty","CursiveFont","Vicious1Vertices","registeredShapes","InputText","inputText","inputFont","onInputTextChange","onInputFontChange","prevLetter","chi","shape","letter","search","vi","widthOffset","point","choices","V1Engineering","disableEnter","shiftKey","preventDefault","Shape","activeClassName","active","options_render","option","react_default","createElement","react_bootstrap_es","controlId","componentClass","ControlLabel","sm","bsStyle","id","onSelect","onKeyDown","choice","eventKey","options_list_render","link_render","rel","href","className","collapsible","expanded","horizontal","onClick","clicked","Component","ShapeList","_this","possibleConstructorReturn","getPrototypeOf","call","addShape","getParams","assertThisInitialized","self","shape_render","Transforms_Shape","currentShape","setShape","startingSize","onSizeChange","x_offset","onOffsetXChange","y_offset","onOffsetYChange","connect","transform","xformOffsetX","xformOffsetY","registeredProps","mapStateToProps","assign","apply","methods","offset","registeredMethods","mapDispatchToProps","RotationTransform","header","activeCallback","switchbacks","onSwitchbacksChange","spinEnabled","spinValue","spinSwitchbacks","ScaleTransform","growEnabled","growValue","TrackTransform","activeGrowClassName","activeGrow","onChangeLength","activeGrowCallback","trackGrow","onChangeGrow","trackEnabled","trackGrowEnabled","trackValue","trackLength","Transforms","Transforms_ShapeList","loops","changeLoops","Transforms_ScaleTransform","Transforms_RotationTransform","Transforms_TrackTransform","numLoops","reduceReducers","getReducer","angleDeg","size","Header","src","logo","alt","Documentation","Wiper","changeAngle","changeSize","wiper","ThetaRho","aspectRatioActive","htmlFor","style","cursor","accept","setVertices","display","join","setZoom","toggleAspectRatio","file","parseThrFile","rv","reader","FileReader","onload","lines","result","split","has_vertex","ii","line","trim","indexOf","pointStrings","console","log","thetaRhos","previous","max_angle","next","deltaAngle","rhoStep","rho","emergency_break","convertToXY","readAsText","files","InputTabs","defaultActiveKey","handleSelect","bind","src_inputs_Transforms","inputs_Wiper","src_inputs_ThetaRho","RectSettings","smOffset","onMinXChange","onMaxXChange","onMinYChange","onMaxYChange","origin","onOriginChange","app","machine","setItem","setMachineRectOrigin","PolarSettings","endpointsActiveClass","endpoints","onMaxRadiusChange","toggleEndpoints","MachineSettings","MachineSettings_RectSettings","MachineSettings_PolarSettings","pointLocation","size_x","size_y","location","intersection","line_start","line_end","side_start","side_end","clone","subtract","side","lineCrossSidePerp","diff","add","multiply","Victor","clipLine","quadrant_start","quadrant_end","nearestVertex","boundPoint","sides","intersections","int_point","fromObject","Error","lengthSq","temp","midpoint","good","bad","dx","dy","fixed","distance","traceCircle","start","end","endAngle","tracePoints","onSegment","clipLineCircle","rad_start","magnitude","rad_end","nearestVertexCircle","direction","normalize","distanceToLine","dt","sqrt","point1","point2","on","getIntersections","other_point","scale","scale_perc","data","fraction_index","transformed_vertex","offset_x","offset_y","loop_period","spin_amount","angle_deg","rotate","loop_index","radius","track","outOfBounds","nearEnough","polishVertices","outPoint","first","last","vFirst","vLast","nextCorner","unshift","cleanVertices","pt","cleanerVertices","enforceRectLimits","enforcePolarLimits","outputVertices","startLocation","cosa","sina","orig_delta_w","orig_delta_h","delta_w","delta_h","endLocation","nextWidthPoint","nextHeightPoint","corner","getVertices","createSelector","wiperState","findShape","num_loops","fraction","transformShapes","x_scale","y_scale","thetaRho","getVerticesStats","numPoints","floor","getTrackVertices","trackVertices","PreviewWindow","canvas","ReactDOM","findDOMNode","context","getContext","bigBox","document","getElementById","resize","window","addEventListener","setTimeout","paint","clearRect","machine_x","machine_y","use_rect","scale_x","scale_y","min_scale","mmToPixelsScale","in_mm","mmToPixels","moveTo","lineTo","arc","fillStyle","strokeStyle","fill","sliderValue","begin_fraction","end_fraction","begin_vertex","round","end_vertex","slice","save","beginPath","lineWidth","moveTo_mm","lineTo_mm","stroke","drawing_vertices","slice_vertices","dot_mm","showTrack","restore","getComputedStyle","getPropertyValue","onResize","_this$props","MachinePreview","MachinePreview_PreviewWindow","verticesStats","rc_slider_es","onSlider","src_machine_MachineSettings","setMachineSlider","setShowGCode","download","text","blob","Blob","navigator","msSaveOrOpenBlob","URL","createObjectURL","createEvent","initEvent","dispatchEvent","click","revokeObjectURL","gcode","command","toFixed","speed","thetarho","getComments","shapeInfo","find","GCodeGenerator","content","settings","xOffset","yOffset","includes","close","subsampledVertices","delta","deltaSegment","trVertices","previousTheta","previousRawTheta","rawTheta","atan2","deltaTheta","reverseActiveClass","bsSize","open","show","onHide","closeButton","Title","Body","setFilename","setPre","setPost","toggleReverse","Footer","generateGCode","generateThetaRho","store","createStore","combineReducers","comment","newValue","App","react_redux_es","src_App_Header","src_inputs_InputTabs","src_machine_MachinePreview","machine_GCode","src_App_Documentation","render","src_App_App"],"mappings":"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AAC,KAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,GAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,OAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,GAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,IAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,OAAQ,CAAC,KAAO,OAAQ,CAAC,KAAO,OAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,KAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,MAAQ,C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CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,KAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,IAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,KAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,KAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,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CAAC,KAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,GAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,KAAO,KAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,GAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,IAAO,IACjjCC,KAAO,CAAE,CAAC,KAAO,KAAQ,CAAC,KAAO,KAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MACjtBC,KAAO,CAAE,CAAC,KAAO,MAAQ,CAAC,KAAO,KAAQ,CAAC,KAAO,KAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,IAAQ,CAAC,MAAO,MACj2BC,KAAO,CAAE,CAAC,MAAO,IAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,IAAO,GAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,IAAQ,CAAC,KAAO,KAAQ,CAAC,KAAO,IAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,GAAQ,CAAC,IAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,OAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,OAAQ,CAAC,KAAO,MAAQ,CAAC,KAAO,IACj4BC,KAAO,CAAE,CAAC,MAAO,KAAQ,CAAC,KAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,KAAQ,CAAC,KAAO,KAAQ,CAAC,IAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,KAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,KAAO,OAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,KAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,MAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,IACj+CC,KAAO,CAAE,CAAC,MAAO,KAAQ,CAAC,KAAO,KAAQ,CAAC,KAAO,KAAQ,CAAC,KAAO,KAAQ,CAAC,KAAO,KAAQ,CAAC,KAAO,KAAQ,CAAC,IAAO,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AO,IAAQ,CAAC,KAAO,IAAQ,CAAC,KAAO,IAAQ,CAAC,KAAO,IAAQ,CAAC,KAAO,IAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,KAAQ,CAAC,IAAM,KAAQ,CAAC,IAAM,KAAQ,CAAC,IAAM,KAAQ,CAAC,IAAM,KAAQ,CAAC,IAAM,KAAQ,CAAC,IAAM,KAAQ,CAAC,IAAM,KAAQ,CAAC,IAAM,KAAQ,CAAC,IAAM,KAAQ,CAAC,IAAM,KAAQ,CAAC,IAAM,KAAQ,CAAC,IAAM,KAAQ,CAAC,IAAM,KAAQ,CAAC,IAAM,KAAQ,CAAC,IAAM,KAAQ,CAAC,IAAM,KAAQ,CAAC,IAAM,KAAQ,CAAC,IAAM,KAAQ,CAAC,IAAM,KAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,GAAQ,CAAC,KAAO,IAAQ,CAAC,KAAO,IAAQ,CAAC,KAAO,IAAQ,CAAC,KAAO,IAAQ,CAAC,KAAO,IAAQ,CAAC,KAAO,IAAQ,CAAC,KAAO,IAAQ,CAAC,KAAO,IAAQ,CAAC,KAAO,IAAQ,CAAC,KAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,KAAO,IAAQ,CAAC,KAAO,IAAQ,CAAC,KAAO,IAAQ,CAAC,KA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Q,CAAC,KAAO,IAAQ,CAAC,KAAO,IAAQ,CAAC,KAAO,IAAQ,CAAC,KAAO,IAAQ,CAAC,KAAO,IAAQ,CAAC,KAAO,IAAQ,CAAC,KAAO,IAAQ,CAAC,KAAO,IAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,KAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,KAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,IAAQ,CAAC,IAAM,GAAQ,CAAC,KAAO,IAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAAQ,CAAC,IAAM,GAA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CAAC,IAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,IAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,IAAO,GAAQ,CAAC,KAAO,GAAQ,CAAC,IAAO,GAAQ,CAAC,KAAO,IAC7vBC,KAAO,CAAE,CAAC,KAAO,GAAQ,CAAC,IAAO,IACjCC,KAAO,CAAE,CAAC,KAAO,GAAQ,CAAC,IAAO,IACjCC,KAAO,CAAE,CAAC,KAAO,GAAQ,CAAC,IAAO,IACjCC,KAAO,CAAE,CAAC,KAAO,GAAQ,CAAC,IAAO,IACjCC,KAAO,CAAE,CAAC,KAAO,GAAQ,CAAC,IAAO,IACjCC,KAAO,CAAE,CAAC,KAAO,GAAQ,CAAC,IAAO,IACjCC,KAAO,CAAE,CAAC,KAAO,GAAQ,CAAC,IAAO,IACjCC,KAAO,CAAE,CAAC,KAAO,GAAQ,CAAC,IAAO,IACjCC,KAAO,CAAE,CAAC,KAAO,GAAQ,CAAC,IAAO,IACjCC,KAAO,CAAE,CAAC,KAAO,GAAQ,CAAC,IAAO,IACjCC,KAAO,CAAE,CAAC,KAAO,GAAQ,CAAC,IAAO,IACjCC,KAAO,CAAE,CAAC,KAAO,GAAQ,CAAC,IAAO,IACjCC,KAAO,CAAE,CAAC,KAAO,GAAQ,CAAC,IAAO,IACjCC,KAAO,CAAE,CAAC,KAAO,GAAQ,CAAC,IAAO,IACjCC,KAAO,CAAE,CAAC,KAAO,GAAQ,CAAC,IAAO,IACjCC,KAAO,CAAE,CAAC,KAAO,GAAQ,CAAC,IAAO,IACjCC,KAAO,CAAE,CAAC,KAAO,GAAQ,CAAC,IAAO,IACjCC,KAAO,CAAE,CAAC,KAAO,GAAQ,CAAC,IAAO,IACjCC,KAAO,CAAE,CAAC,KAAO,GAAQ,CAAC,IAAO,IACjCC,KAAO,CAAE,CAAC,KAAO,GAAQ,CAAC,IAAO,IACjCC,KAAO,CAAE,CAAC,KAAO,GAAQ,CAAC,IAAO,IACjCC,KAAO,CAAE,CAAC,KAAO,GAAQ,CAAC,IAAO,IACjCC,KAAO,CAAE,CAAC,KAAO,GAAQ,CAAC,IAAO,IACjCC,KAAO,CAAE,CAAC,KAAO,GAAQ,CAAC,IAAO,IACjCC,KAAO,CAAE,CAAC,KAAO,GAAQ,CAAC,IAAO,IACjCC,KAAO,CAAE,CAAC,KAAO,GAAQ,CA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CvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,aACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,cACvBA,EAAO,cAAgB,cACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,cACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,aAAe,eACtBA,EAAO,aAAe,eACtBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,cACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,cACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,cACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,aAAe,eACtBA,EAAO,cAAgB,eACvBA,EAAO,aAAe,eACtBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,cACvBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,gBACvBA,EAAO,cAAgB,gBACvBA,EAAO,cAAgB,gBACvBA,EAAO,aAAe,gBACtBA,EAAO,cAAgB,kBACvBA,EAAO,eAAiB,gBACxBA,EAAO,eAAiB,gBACxBA,EAAO,eAAiB,gBACxBA,EAAO,eAAiB,gBACxBA,EAAO,cAAgB,eACvBA,EAAO,eAAiB,eACxBA,EAAO,cAAgB,eACvBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,cACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,cAAgB,cACvBA,EAAO,aAAe,eACtBA,EAAO,cAAgB,eACvBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,cAAgB,eACvBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,cACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,cAAgB,eACvBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,eACvBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,cACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,cACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,cACxBA,EAAO,cAAgB,eACvBA,EAAO,eAAiB,aACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,cACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,cACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,cAAgB,eACvBA,EAAO,cAAgB,cACvBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,eAAiB,eACxBA,EAAO,gBAAkB,cACzBA,EAAO,gBAAkB,eACzBA,EAAO,gBAAkB,eACzBA,EAAO,gBAAkB,eACzBA,EAAO,gBAAkB,eACzBA,GAAQ,iBAAmB,eAC3BA,GAAQ,gBAAkB,eAC1BA,GAAQ,gBAAkB,eAC1BA,GAAQ,gBAAkB,eAC1BA,GAAQ,gBAAkB,cAC1BA,GAAQ,gBAAkB,eAC1BA,GAAQ,eAAiB,cACzBA,GAAQ,eAAiB,eACzBA,GAAQ,eAAiB,eACzBA,GAAQ,eAAiB,eACzBA,GAAQ,eAAiB,eACzBA,GAAQ,eAAiB,eACzBA,GAAQ,eAAiB,eACzBA,GAAQ,eAAiB,eACzBA,GAAQ,eAAiB,eACzBA,GAAQ,cAAgB,eACxBA,GAAQ,eAAiB,cACzBA,GAAQ,eAAiB,eACzBA,GAAQ,eAAiB,eACzBA,GAAQ,eAAiB,eACzBA,GAAQ,eAAiB,eACzBA,GAAQ,eAAiB,eACzBA,GAAQ,eAAiB,cACzBA,GAAQ,eAAiB,eACzBA,GAAQ,eAAiB,eACzBA,GAAQ,eAAiB,eACzBA,GAAQ,eAAiB,eACzBA,GAAQ,eAAiB,eACzBA,GAAQ,eAAiB,eACzBA,GAAQ,eAAiB,eACzBA,GAAQ,eAAiB,eACzBA,GAAQ,cAAgB,eACxBA,GAAQ,eAAiB,eACzBA,GAAQ,eAAiB,cACzBA,GAAQ,eAAiB,eACzBA,GAAQ,eAAiB,aACzBA,GAAQ,eAAiB,eACzBA,GAAQ,eAAiB,cACzBA,GAAQ,eAAiB,cACzBA,GAAQ,eAAiB,cACzBA,GAAQ,eAAiB,cACzBA,GAAQ,eAAiB,eACzBA,GAAQ,cAAgB,eACxBA,GAAQ,eAAiB,eACzBA,GAAQ,eAAiB,eACzBA,GAAQ,cAAgB,eACxBA,GAAQ,eAAiB,eACzBA,GAAQ,eAAiB,eACzBA,GAAQ,eAAiB,eACzBA,GAAQ,eAAiB,eACzBA,GAAQ,eAAiB,cACzBA,GAAQ,eAAiB,eACzBA,GAAQ,eAAiB,eACzBA,GAAQ,eAAiB,cACzBA,GAAQ,eAAiB,eACzBA,GAAQ,eAAiB,eACzBA,GAAQ,eAAiB,eACzBA,GAAQ,eAAiB,eACzBA,GAAQ,eAAiB,eACzBA,GAAQ,eAAiB,eACzBA,GAAQ,eAAiB,eACzBA,GAAQ,eAAiB,eACzBA,GAAQ,eAAiB,eACzBA,GAAQ,eAAiB,cACzBA,GAAQ,eAAiB,eACzBA,GAAQ,eAAiB,eACzBA,GAAQ,cAAgB,eACxBA,GAAQ,eAAiB,cACzBA,GAAQ,eAAiB,eACzBA,GAAQ,eAAiB,gBACzBA,GAAQ,cAAgB,iBACxBA,GAAQ,aAAe,gBACvBA,GAAQ,cAAgB,gBACxBA,GAAQ,cAAgB,gBACxBA,GAAQ,cAAgB,eACxBA,GAAQ,cAAgB,eACxBA,GAAQ,cAAgB,eACxBA,GAAQ,cAAgB,eACxBA,GAAQ,cAAgB,eACxBA,GAAQ,cAAgB,eACxBA,GAAQ,cAAgB,eACxBA,GAAQ,cAAgB,eACxBA,GAAQ,cAAgB,eACxBA,GAAQ,cAAgB,eACxBA,GAAQ,cAAgB,eACxBA,GAAQ,cAAgB,eACxBA,GAAQ,aAAe,eACvBA,GAAQ,cAAgB,eACxBA,GAAQ,cAAgB,eACxBA,GAAQ,cAAgB,cACxBA,GAAQ,cAAgB,eACxBA,GAAQ,cAAgB,eACxBA,GAAQ,cAAgB,eACxBA,GAAQ,cAAgB,eACxBA,GAAQ,cAAgB,eACxBA,GAAQ,cAAgB,eACxBA,GAAQ,cAAgB,eACxBA,GAAQ,cAAgB,eACxBA,GAAQ,cAAgB,eACxBA,GAAQ,cAAgB,eACxBA,GAAQ,cAAgB,eACxBA,GAAQ,cAAgB,eACxBA,GAAQ,aAAe,eACvBA,GAAQ,cAAgB,eACxBA,GAAQ,aAAe,cACvBA,GAAQ,cAAgB,eACxBA,GAAQ,cAAgB,eACxBA,GAAQ,aAAe,cACvBA,GAAQ,cAAgB,eACxBA,GAAQ,cAAgB,eACxBA,GAAQ,cAAgB,eACxBA,GAAQ,cAAgB,eACxBA,GAAQ,cAAgB,eACxBA,GAAQ,cAAgB,eACxBA,GAAQ,cAAgB,eACxBA,GAAQ,cAAgB,eACxBA,GAAQ,cAAgB,eACxBA,GAAQ,cAAgB,eACxBA,GAAQ,cAAgB,eACxBA,GAAQ,cAAgB,eACxBA,GAAQ,cAAgB,iBCzYfuM,EAAmB,CAACjM,EAAS+B,EAAMU,EAAQI,EAAOG,EAAUS,EACvEQ,EAAaK,ECXf,oBAAA4H,IAAAjM,OAAAC,EAAA,EAAAD,CAAAE,KAAA+L,GAAA,OAAAjM,OAAAG,EAAA,EAAAH,CAAAiM,EAAA,OAAA7L,IAAA,kBAAAC,MAAA,SACyBC,EAAOC,GAC5B,MAAO,CACL2L,UAAW5L,EAAMG,OAAOyL,UACxBC,UAAW7L,EAAMG,OAAO0L,aAJ9B,CAAA/L,IAAA,qBAAAC,MAAA,SAQ4BK,EAAUH,GAClC,MAAO,CACL6L,kBAAmB,SAACxL,GAClBF,EAxBC,CACLG,KAAM,uBACNR,MAsB+BO,EAAME,OAAOT,SAE1CgM,kBAAmB,SAACzL,GAClBF,EApBC,CACLG,KAAM,uBACNR,MAkB+BO,QAdnC,CAAAR,IAAA,YAAAC,MAAA,SAmBmBU,GACf,MAAO,CACL1C,KAAM,OACNE,SAAU,SAAC+B,GAIT,IAHA,IHmHsBoL,EGnHlB1K,EAAS,GACTsL,EAAa,GACb5M,EAAI,EACC6M,EAAM,EAAGA,EAAMjM,EAAMG,OAAOyL,UAAUpM,OAAQyM,IAAO,CAC5D,IAYIC,EAZAC,EAASnM,EAAMG,OAAOyL,UAAUK,GACjB,MAAfD,GAAqC,MAAfA,GAAqC,MAAfA,GAAqC,MAAfA,GACpEA,EAAaG,GACqB,IAA9BA,EAAOC,OAAO,YAAgD,YAA3BpM,EAAMG,OAAO0L,YAElDM,GAAkB,MAIpBH,EAAaG,EAIgB,YAA3BnM,EAAMG,OAAO0L,UACfK,EAAQV,EAAYW,GACgB,eAA3BnM,EAAMG,OAAO0L,WHgGJT,EG/FIe,EAAtBD,EHgGNvH,EAAe4G,eAAeH,GACzBF,EAAgBnB,EAAgBqB,IAEhCF,EAAgBnB,EAAgB,OGjG/BmC,EADoC,cAA3BlM,EAAMG,OAAO0L,UACdV,EAAcgB,GAGdX,EAAYW,GAItB,IAAK,IAAIE,EAAK,EAAGA,EAAKH,EAAMjO,SAASuB,OAAQ6M,IAC3C3L,EAAOK,KAAK5B,EAAO+M,EAAMjO,SAASoO,GAAIjN,EAAIA,EAAG8M,EAAMjO,SAASoO,GAAIhN,IAElED,GAAK8M,EAAMjO,SAASiO,EAAMjO,SAASuB,OAAO,GAAGJ,EAE/C,IAAIkN,EAAclN,EAAI,EACtB,OAAOsB,EAAO4J,IAAK,SAACiC,GAClB,OAAOpN,EAAOoN,EAAMnN,EAAIkN,EAAaC,EAAMlN,MAG/C6B,QAAS,CACP,CACEC,MAAO,OACPZ,KAAM,WACNT,IAAK,YACLC,MAAO,WAAQ,OAAOU,EAAOW,MAAMwK,WACnCvK,SAAUZ,EAAOW,MAAM0K,mBAEzB,CACE3K,MAAO,OACPZ,KAAM,WACNiM,QAAS,CAAC,UAAW,aAAc,aACnCzM,MAAO,WAAQ,OAAOU,EAAOW,MAAMyK,WACnCxK,SAAUZ,EAAOW,MAAM2K,uBA3EjC,CAAAjM,IAAA,aAAAC,MAAA,SAiFoBC,EAAOsB,GACvB,OAAOA,EAAOf,MACZ,IAAK,uBACH,OAAOb,OAAA6B,EAAA,EAAA7B,CAAA,GAAIM,EAAX,CACE4L,UAAWtK,EAAOvB,QAGtB,IAAK,uBACH,OAAOL,OAAA6B,EAAA,EAAA7B,CAAA,GAAIM,EAAX,CACE6L,UAAWvK,EAAOvB,QAGtB,QACE,OAAOC,OA9Ff2L,EAAA,GCfA,oBAAAc,IAAA/M,OAAAC,EAAA,EAAAD,CAAAE,KAAA6M,GAAA,OAAA/M,OAAAG,EAAA,EAAAH,CAAA+M,EAAA,OAAA3M,IAAA,kBAAAC,MAAA,SACyBC,EAAOC,GAC5B,MAAO,KAFX,CAAAH,IAAA,qBAAAC,MAAA,SAO4BK,EAAUH,GAClC,MAAO,KARX,CAAAH,IAAA,YAAAC,MAAA,SAamBU,GACf,MAAO,CACL1C,KAAM,gBACNE,SAAU,SAAC+B,GACT,OAAOyL,KAETvK,QAAS,MAnBf,CAAApB,IAAA,aAAAC,MAAA,SAuBoBC,EAAOsB,GAGnB,OAFGA,EAAOf,KAEHP,MA1BfyM,EAAA,IFwIMC,EAAe,SAACpM,GACF,UAAdA,EAAMR,MAAsC,IAAnBQ,EAAMqM,UACjCrM,EAAMsM,kBAIJC,mLAEF,IAAIC,EAAkB,GAClBlN,KAAKwB,MAAM2L,SACbD,EAAkB,UAGpB,IAAIE,EAAiBpN,KAAKwB,MAAMF,QAAQoJ,IAAK,SAAC2C,GAC5C,OAAIA,EAAO1M,MAAwB,aAAhB0M,EAAO1M,KACjB2M,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAWC,UAAU,eAAevN,IAAKmN,EAAO9L,OAC9C+L,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAKE,eAAgBC,IAAcC,GAAI,GACpCP,EAAO9L,OAEV+L,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAKI,GAAI,GACPN,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAgBK,QAAQ,UACRC,GAAG,wBACHvM,MAAO8L,EAAOlN,QACd4N,SAAU,SAACrN,GACP2M,EAAO5L,SAASf,IAEpBsN,UAAWlB,GACxBO,EAAOT,QAAQlC,IAAI,SAACuD,GACjB,OAAOX,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAUtN,IAAK+N,EAAQC,SAAUD,GAASA,QAM3DX,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAWC,UAAU,eAAevN,IAAKmN,EAAO9L,OAC9C+L,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAKE,eAAgBC,IAAcC,GAAI,GACpCP,EAAO9L,OAEV+L,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAKI,GAAI,GACPN,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CACE7M,KAAM0M,EAAO1M,KAAO0M,EAAO1M,KAAO,SAClC0B,KAAMgL,EAAOhL,KAAOgL,EAAOhL,KAAO,EAClClC,MAAOkN,EAAOlN,QACdsB,SAAU,SAACf,GACT2M,EAAO5L,SAASf,IAElBsN,UAAWlB,QAMxBqB,OAAsBrP,EACtBsP,OAActP,EAkBlB,OAhBIkB,KAAKwB,MAAMmC,OACbyK,EAAcd,EAAA1J,EAAA2J,cAAA,gBAAOD,EAAA1J,EAAA2J,cAAA,KAAG3M,OAAO,SAASyN,IAAI,sBAAsBC,KAAMtO,KAAKwB,MAAMmC,MAAO3D,KAAKwB,MAAMmC,MAAvF,eAGZ3D,KAAKwB,MAAMF,QAAQ1B,QAAU,IAC/BuO,EACEb,EAAA1J,EAAA2J,cAAA,OAAKgB,UAAU,iBACbjB,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAOe,UAAU,gBAAgBC,aAAW,EAACC,SAAUzO,KAAKwB,MAAM2L,QAChEG,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAMkB,YAAU,GACbN,EACAhB,MAOTE,EAAA1J,EAAA2J,cAAA,OAAKgB,UAAU,SACbjB,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAee,UAAWrB,EAAiByB,QAAS3O,KAAKwB,MAAMoN,SAAU5O,KAAKwB,MAAMrD,MAC/EgQ,UApEOU,aA8GdC,cACJ,SAAAA,EAAYtN,GAAO,IAAAuN,EAAA,OAAAjP,OAAAC,EAAA,EAAAD,CAAAE,KAAA8O,GACjBC,EAAAjP,OAAAkP,EAAA,EAAAlP,CAAAE,KAAAF,OAAAmP,EAAA,EAAAnP,CAAAgP,GAAAI,KAAAlP,KAAMwB,IAENsK,EAAiBf,QAAQ,SAACuB,GACxByC,EAAKvN,MAAM2N,SAAS7C,EAAM8C,UAANtP,OAAAuP,EAAA,EAAAvP,CAAAiP,OAJLA,wEASjB,IAAIO,EAAOtP,KAEPuP,EAAevP,KAAKwB,MAAMjB,OAAOmK,IAAK,SAAC4B,GACzC,OAAOgB,EAAA1J,EAAA2J,cAACiC,EAAD,CACEtP,IAAKoM,EAAMnO,KACXA,KAAMmO,EAAMnO,KACZwF,KAAM2I,EAAM3I,MAAQ,GACpBwJ,OAAQb,EAAMnO,OAASmR,EAAK9N,MAAMiO,aAClCnO,QAASgL,EAAMhL,QACfsN,QAAU,WAAQU,EAAK9N,MAAMkO,SAASpD,EAAMnO,WAIvD,OACEmP,EAAA1J,EAAA2J,cAAA,OAAKgB,UAAU,UACbjB,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,KACG+B,GAEHjC,EAAA1J,EAAA2J,cAAA,OAAKgB,UAAU,aACbjB,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAOe,UAAU,gBAAgBC,aAAW,EAACC,UAAQ,GACnDnB,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAMkB,YAAU,GACdpB,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAWC,UAAU,cACnBH,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAKE,eAAgBC,IAAcC,GAAI,GAAvC,iBAGAN,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAKI,GAAI,GACPN,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAa7M,KAAK,SAASR,MAAOH,KAAKwB,MAAMmO,aAAclO,SAAUzB,KAAKwB,MAAMoO,aAAc5B,UAAWlB,MAG7GQ,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAWC,UAAU,gBACnBH,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAKE,eAAgBC,IAAcC,GAAI,GAAvC,UAGAN,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAKE,eAAgBC,IAAcC,GAAI,GAAvC,KAGAN,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAKI,GAAI,GACPN,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAa7M,KAAK,SAASR,MAAOH,KAAKwB,MAAMqO,SAAUpO,SAAUzB,KAAKwB,MAAMsO,gBAAiB9B,UAAWlB,KAE1GQ,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAKE,eAAgBC,IAAcC,GAAI,GAAvC,KAGAN,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAKI,GAAI,GACPN,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAa7M,KAAK,SAASR,MAAOH,KAAKwB,MAAMuO,SAAUtO,SAAUzB,KAAKwB,MAAMwO,gBAAiBhC,UAAWlB,iBArDlG+B,aAgExBC,EAAYmB,YApGW,SAAC7P,EAAOC,GAC7B,IAAImB,EAAQ,CACVjB,OAAQH,EAAMG,OAAOA,OACrBkP,aAAcrP,EAAMG,OAAOkP,aAC3BE,aAAcvP,EAAMG,OAAOoP,aAC3BE,SAAUzP,EAAM8P,UAAUC,aAC1BJ,SAAU3P,EAAM8P,UAAUE,cAExBC,EAAkBvE,EAAiBpB,IAAI,SAAC4B,GAAD,OAAWA,EAAMgE,gBAAgBlQ,EAAOC,KAEnF,OAAOP,OAAOyQ,OAAPC,MAAA1Q,OAAM,CAAQ0B,GAAR4J,OAAAtL,OAAAyK,EAAA,EAAAzK,CAAkBuQ,MAGP,SAAC7P,EAAUH,GACnC,IAAIoQ,EAAU,CACZtB,SAAU,SAAC7C,GACT9L,EA3MkB,SAAE8L,GACxB,MAAO,CACL3L,KAAM,YACN2L,MAAOA,GAwMI6C,CAAS7C,KAEpBoD,SAAU,SAACvR,GACTqC,EAvMG,CACLG,KAAM,YACNR,MAqMoBhC,KAEpByR,aAAc,SAAClP,GACbF,EAnMG,CACLG,KAAM,iBACNR,MAiMwBO,EAAME,OAAOT,SAErC2P,gBAAiB,SAACpP,GA/LS,IAAEgQ,EAgM3BlQ,GAhM2BkQ,EAgMFhQ,EAAME,OAAOT,MA/LnC,CACLQ,KAAM,qBACNR,MAAOnB,WAAW0R,OA+LlBV,gBAAiB,SAACtP,GA3LS,IAAEgQ,EA4L3BlQ,GA5L2BkQ,EA4LFhQ,EAAME,OAAOT,MA3LnC,CACLQ,KAAM,qBACNR,MAAOnB,WAAW0R,QA4LhBC,EAAoB7E,EAAiBpB,IAAI,SAAC4B,GAAD,OAAWA,EAAMsE,mBAAmBpQ,EAAUH,KAE3F,OAAOP,OAAOyQ,OAAPC,MAAA1Q,OAAM,CAAQ2Q,GAARrF,OAAAtL,OAAAyK,EAAA,EAAAzK,CAAoB6Q,MAmEvBV,CAA2CnB,GAEvD,IAsBM+B,mLAGF,IAAI3D,EAAkB,GAKtB,OAJIlN,KAAKwB,MAAM2L,SACbD,EAAkB,UAIlBI,EAAA1J,EAAA2J,cAAA,OAAKgB,UAAU,UACbjB,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAesD,OAAO,OAAOvC,UAAWrB,EAAiByB,QAAS3O,KAAKwB,MAAMuP,gBAA7E,oDACAzD,EAAA1J,EAAA2J,cAAA,OAAKgB,UAAU,kBACbjB,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAOe,UAAU,gBAAgBC,aAAW,EAACC,SAAUzO,KAAKwB,MAAM2L,QAChEG,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAMkB,YAAU,GACdpB,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAWC,UAAU,eACnBH,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAKE,eAAgBC,IAAcC,GAAI,GAAvC,+BAGAN,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAKI,GAAI,GACPN,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAa7M,KAAK,SAAS0B,KAAK,MAAMlC,MAAOH,KAAKwB,MAAMrB,MAAOsB,SAAUzB,KAAKwB,MAAMC,SAAUuM,UAAWlB,MAG7GQ,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAWC,UAAU,sBACnBH,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAKE,eAAgBC,IAAcC,GAAI,GAAvC,eAGAN,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAKI,GAAI,GACPN,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAa7M,KAAK,SAAS0B,KAAK,IAAIlC,MAAOH,KAAKwB,MAAMwP,YAAavP,SAAUzB,KAAKwB,MAAMyP,oBAAqBjD,UAAWlB,iBA3B1G+B,aAqChCgC,EAAoBZ,YA3DA,SAAC7P,EAAOC,GAC1B,MAAO,CACL8M,OAAQ/M,EAAM8P,UAAUgB,YACxB/Q,MAAOC,EAAM8P,UAAUiB,UACvBH,YAAa5Q,EAAM8P,UAAUkB,kBAIV,SAAC5Q,EAAUH,GAChC,MAAO,CACL0Q,eAAgB,WACdvQ,EAlQG,CACLG,KAAM,iBAmQNc,SAAU,SAACf,GA/PQ,IAAEP,EAgQnBK,GAhQmBL,EAgQFO,EAAME,OAAOT,MA/P3B,CACLQ,KAAM,WACNR,MAAOnB,WAAWmB,OA+PlB8Q,oBAAqB,SAACvQ,GA3PQ,IAAEP,EA4P9BK,GA5P8BL,EA4PFO,EAAME,OAAOT,MA3PtC,CACLQ,KAAM,uBACNR,MAAOsE,SAAStE,SAmSA8P,CAAqCY,GAGzD,IAkBMQ,mLAGF,IAAInE,EAAkB,GAKtB,OAJIlN,KAAKwB,MAAM2L,SACbD,EAAkB,UAIlBI,EAAA1J,EAAA2J,cAAA,OAAKgB,UAAU,SACbjB,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAesD,OAAO,OAAOvC,UAAWrB,EAAiByB,QAAS3O,KAAKwB,MAAMuP,gBAA7E,+DACAzD,EAAA1J,EAAA2J,cAAA,OAAKgB,UAAU,iBACbjB,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAOe,UAAU,gBAAgBC,aAAW,EAACC,SAAUzO,KAAKwB,MAAM2L,QAChEG,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAMkB,YAAU,GACdpB,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAWC,UAAU,cACnBH,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAKE,eAAgBC,IAAcC,GAAI,GAAvC,aAGAN,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAKI,GAAI,GACPN,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAa7M,KAAK,SAASR,MAAOH,KAAKwB,MAAMrB,MAAOsB,SAAUzB,KAAKwB,MAAMC,SAAUuM,UAAWlB,iBAnBnF+B,aA6B7BwC,EAAiBpB,YA/CE,SAAC7P,EAAOC,GACzB,MAAO,CACL8M,OAAQ/M,EAAM8P,UAAUoB,YACxBnR,MAAOC,EAAM8P,UAAUqB,YAIL,SAAC/Q,EAAUH,GAC/B,MAAO,CACL0Q,eAAgB,WACdvQ,EA3SG,CACLG,KAAM,iBA4SNc,SAAU,SAACf,GACTF,EAxSG,CACLG,KAAM,WACNR,MAsSmBO,EAAME,OAAOT,WAkCnB8P,CAAmCoB,GAEpD,IA8BMG,mLAGF,IAAItE,EAAkB,GAClBlN,KAAKwB,MAAM2L,SACbD,EAAkB,UAGpB,IAAIuE,EAAsB,GAK1B,OAJIzR,KAAKwB,MAAMkQ,aACbD,EAAsB,UAItBnE,EAAA1J,EAAA2J,cAAA,OAAKgB,UAAU,SACbjB,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAesD,OAAO,QAAQvC,UAAWrB,EAAiByB,QAAS3O,KAAKwB,MAAMuP,gBAA9E,kDACAzD,EAAA1J,EAAA2J,cAAA,OAAKgB,UAAU,iBACbjB,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAOe,UAAU,gBAAgBC,aAAW,EAACC,SAAUzO,KAAKwB,MAAM2L,QAChEG,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAMkB,YAAU,GACdpB,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAWC,UAAU,cACnBH,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAKE,eAAgBC,IAAcC,GAAI,GAAvC,cAGAN,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAKI,GAAI,GACPN,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAa7M,KAAK,SAASR,MAAOH,KAAKwB,MAAMrB,MAAOsB,SAAUzB,KAAKwB,MAAMC,SAAUuM,UAAWlB,MAGlGQ,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAWC,UAAU,gBACnBH,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAKE,eAAgBC,IAAcC,GAAI,GAAvC,gBAGAN,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAKI,GAAI,GACPN,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAa7M,KAAK,SAASR,MAAOH,KAAKwB,MAAM5B,OAAQyC,KAAK,OAAOZ,SAAUzB,KAAKwB,MAAMmQ,eAAgB3D,UAAWlB,MAGrHQ,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAesD,OAAO,OAAOvC,UAAWkD,EAAqB9C,QAAS3O,KAAKwB,MAAMoQ,oBAAjF,yDACAtE,EAAA1J,EAAA2J,cAAA,OAAKgB,UAAU,iBACbjB,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAOe,UAAU,gBAAgBC,aAAW,EAACC,SAAUzO,KAAKwB,MAAMkQ,YAC9DpE,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAWC,UAAU,cACnBH,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAKE,eAAgBC,IAAcC,GAAI,GAAvC,mBAGAN,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAKI,GAAI,GACPN,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAa7M,KAAK,SAASR,MAAOH,KAAKwB,MAAMqQ,UAAWpQ,SAAUzB,KAAKwB,MAAMsQ,aAAc9D,UAAWlB,mBA3CjG+B,aAuD7B2C,EAAiBvB,YArFE,SAAC7P,EAAOC,GACzB,MAAO,CACL8M,OAAQ/M,EAAM8P,UAAU6B,aACxBL,WAAYtR,EAAM8P,UAAU8B,iBAC5B7R,MAAOC,EAAM8P,UAAU+B,WACvBrS,OAAQQ,EAAM8P,UAAUgC,YACxBL,UAAWzR,EAAM8P,UAAU2B,YAIT,SAACrR,EAAUH,GAC/B,MAAO,CACL0Q,eAAgB,WACdvQ,EAlVG,CACLG,KAAM,kBAmVNiR,mBAAoB,WAClBpR,EA/UG,CACLG,KAAM,uBAgVNc,SAAU,SAACf,GACTF,EA5UG,CACLG,KAAM,YACNR,MA0UoBO,EAAME,OAAOT,SAEjCwR,eAAgB,SAACjR,GACfF,EAxUG,CACLG,KAAM,mBACNR,MAsU0BO,EAAME,OAAOT,SAEvC2R,aAAc,SAACpR,GACbF,EApUG,CACLG,KAAM,iBACNR,MAkUwBO,EAAME,OAAOT,WA4DxB8P,CAAmCuB,GAEpD,IAcMW,mLAGF,OACE7E,EAAA1J,EAAA2J,cAAA,OAAKgB,UAAU,cACbjB,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAOe,UAAU,gBACfjB,EAAA1J,EAAA2J,cAAA,0BACAD,EAAA1J,EAAA2J,cAAC6E,EAAD,OAEF9E,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAOe,UAAU,oBACfjB,EAAA1J,EAAA2J,cAAA,uBACAD,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAOe,UAAU,iBACfjB,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAMkB,YAAU,GACdpB,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAWC,UAAU,cACnBH,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAKE,eAAgBC,IAAcC,GAAI,GAAvC,mBAGAN,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAKI,GAAI,GACPN,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAa7M,KAAK,SAASR,MAAOH,KAAKwB,MAAM6Q,MAAO5Q,SAAUzB,KAAKwB,MAAM8Q,YAAatE,UAAWlB,QAKzGQ,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,KACEF,EAAA1J,EAAA2J,cAACgF,EAAD,MAEAjF,EAAA1J,EAAA2J,cAACiF,EAAD,MAEAlF,EAAA1J,EAAA2J,cAACkF,EAAD,gBA5Ba5D,aAuCVsD,EAHfA,EAAalC,YAlDW,SAAC7P,EAAOC,GAC9B,MAAO,CACLgS,MAAOjS,EAAM8P,UAAUwC,WAIA,SAAClS,EAAUH,GACpC,MAAO,CACLiS,YAAa,SAAC5R,GACZF,EA7cG,CACLG,KAAM,YACNR,MA2coBO,EAAME,OAAOT,WAyCxB8P,CAA6CkC,YGrjBpD1U,EAAe,CAEnB8C,OAAQ,GACRkP,aAAc,UACdnP,aAAc,EACduB,WAAY,EACZC,UAAW,GACXS,YAAa,EACbO,cAAe,EACfkJ,UAAW,UACXC,UAAW,UACX0D,aAAc,GACdpM,YAAa,EACbC,YAAa,IACbO,aAAc,EACdC,aAAc,IACdI,MAAO,EACPC,MAAO,GA+BMsO,UAAcnC,WAAd,GA5Bf,WAAqD,IAA9BpQ,EAA8BT,UAAAC,OAAA,QAAAd,IAAAa,UAAA,GAAAA,UAAA,GAAtBlC,EAAciE,EAAQ/B,UAAAC,OAAA,EAAAD,UAAA,QAAAb,EACnD,OAAQ4C,EAAOf,MAGb,IAAK,YACH,OAAOb,OAAA6B,EAAA,EAAA7B,CAAA,GAAIM,EAAX,CACIG,OAAM,GAAA6K,OAAAtL,OAAAyK,EAAA,EAAAzK,CAAMM,EAAMG,QAAZ,CACJmB,EAAO4K,UAIf,IAAK,YACH,OAAOxM,OAAA6B,EAAA,EAAA7B,CAAA,GAAIM,EAAX,CACEqP,aAAc/N,EAAOvB,QAGzB,IAAK,iBACH,OAAOL,OAAA6B,EAAA,EAAA7B,CAAA,GAAIM,EAAX,CACEuP,aAAcjO,EAAOvB,QAGzB,IAAK,eAEL,QACE,OAAOC,KAIEgL,OAAAtL,OAAAyK,EAAA,EAAAzK,CAAiCgM,EAAiBpB,IAAI,SAAC4B,GAAD,OAAWA,EAAMsG,gBClDhFnV,EAAe,CACnB0S,aAAc,EACdC,aAAc,EACdsC,SAAU,GACVpB,aAAa,EACbC,UAAW,IACXL,aAAa,EACbC,UAAW,EACXC,gBAAiB,EACjBW,cAAc,EACdC,kBAAkB,EAClBC,WAAY,GACZC,YAAa,GACbL,UAAW,ICbb,IAAMpU,EAAe,CACnBoV,SAAU,GACVC,KAAM,6BCgBOC,4LAbX,OACEzF,EAAA1J,EAAA2J,cAAA,OAAKgB,UAAU,UACbjB,EAAA1J,EAAA2J,cAAA,OAAKyF,IAAKC,KAAM1E,UAAU,WAAW2E,IAAI,SACzC5F,EAAA1J,EAAA2J,cAAA,qBACAD,EAAA1J,EAAA2J,cAAA,sIANasB,cCwDNsE,4LAvDX,OACE7F,EAAA1J,EAAA2J,cAAA,OAAKgB,UAAU,iBACbjB,EAAA1J,EAAA2J,cAAA,OAAKgB,UAAU,aACbjB,EAAA1J,EAAA2J,cAAA,MAAIgB,UAAU,YAAd,SADF,8KAKEjB,EAAA1J,EAAA2J,cAAA,WACAD,EAAA1J,EAAA2J,cAAA,WANF,wFAQgBD,EAAA1J,EAAA2J,cAAA,KAAGe,KAAK,uCAAR,0BAAqEhB,EAAA1J,EAAA2J,cAAA,4CARrF,aAQwID,EAAA1J,EAAA2J,cAAA,KAAGe,KAAK,iCAAR,UARxI,KAUAhB,EAAA1J,EAAA2J,cAAA,OAAKgB,UAAU,aACbjB,EAAA1J,EAAA2J,cAAA,MAAIgB,UAAU,YAAd,gBADF,gIAIEjB,EAAA1J,EAAA2J,cAAA,WACAD,EAAA1J,EAAA2J,cAAA,KAAGe,KAAK,yCAAR,8BACAhB,EAAA1J,EAAA2J,cAAA,WACAD,EAAA1J,EAAA2J,cAAA,KAAGe,KAAK,6CAAR,0BACAhB,EAAA1J,EAAA2J,cAAA,WARF,mEASkED,EAAA1J,EAAA2J,cAAA,KAAGe,KAAK,oCAAR,uBATlE,iCAUEhB,EAAA1J,EAAA2J,cAAA,WAVF,sCAYED,EAAA1J,EAAA2J,cAAA,KAAGe,KAAK,qEAAR,6BAEFhB,EAAA1J,EAAA2J,cAAA,OAAKgB,UAAU,aACbjB,EAAA1J,EAAA2J,cAAA,MAAIgB,UAAU,YAAd,UADF,iCAGEjB,EAAA1J,EAAA2J,cAAA,WACAD,EAAA1J,EAAA2J,cAAA,KAAGe,KAAK,sCAAR,uBACAhB,EAAA1J,EAAA2J,cAAA,WALF,+EAOED,EAAA1J,EAAA2J,cAAA,WACAD,EAAA1J,EAAA2J,cAAA,KAAGe,KAAK,6CAAR,yBACAhB,EAAA1J,EAAA2J,cAAA,WATF,+DAWED,EAAA1J,EAAA2J,cAAA,WACAD,EAAA1J,EAAA2J,cAAA,KAAGe,KAAK,0DAAR,iBAEFhB,EAAA1J,EAAA2J,cAAA,OAAKgB,UAAU,aACbjB,EAAA1J,EAAA2J,cAAA,MAAIgB,UAAU,YAAd,WADF,6CAGEjB,EAAA1J,EAAA2J,cAAA,WAHF,oJAMED,EAAA1J,EAAA2J,cAAA,WACAD,EAAA1J,EAAA2J,cAAA,KAAGe,KAAK,oEAAR,4BAjDkBO,cC0CtBuE,4LAIF,OACE9F,EAAA1J,EAAA2J,cAAA,OAAKgB,UAAU,SACbjB,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAOe,UAAU,eACfjB,EAAA1J,EAAA2J,cAAA,2BACAD,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAOe,UAAU,eACfjB,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAMkB,YAAU,GACdpB,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAWC,UAAU,SACnBH,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAKE,eAAgBC,IAAcC,GAAI,GAAvC,eAGAN,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAKI,GAAI,GACPN,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAa7M,KAAK,SAASsB,IAAI,IAAIC,IAAI,MAAMG,KAAK,MAAMlC,MAAOH,KAAKwB,MAAMR,MAAOS,SAAUzB,KAAKwB,MAAM6R,gBAG1G/F,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAWC,UAAU,QACnBH,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAKE,eAAgBC,IAAcC,GAAI,GAAvC,cAGAN,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAKI,GAAI,GACPN,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAa7M,KAAK,SAAS0B,KAAK,MAAMlC,MAAOH,KAAKwB,MAAMsR,KAAMrR,SAAUzB,KAAKwB,MAAM8R,0BAvBjFzE,cAoCLuE,GAFfA,GAAQnD,YApDW,SAAC7P,EAAOC,GACzB,MAAO,CACLW,MAAOZ,EAAMmT,MAAMV,SACnBC,KAAM1S,EAAMmT,MAAMT,OAIA,SAACtS,EAAUH,GAC/B,MAAO,CACLgT,YAAa,SAAC3S,GACZF,EAxBG,CACLG,KAAM,sBACNR,MAsB4BnB,WAAW0B,EAAME,OAAOT,UAEpDmT,WAAY,SAAC5S,GACXF,EApBG,CACLG,KAAM,iBACNR,MAkBwBnB,WAAW0B,EAAME,OAAOT,YAuC5C8P,CAAmCmD,IC0FrCtG,WAAe,SAACpM,GACF,UAAdA,EAAMR,MAAsC,IAAnBQ,EAAMqM,UACjCrM,EAAMsM,mBAIJwG,oLAGF,IAAIC,EAAoB,GAKxB,OAJIzT,KAAKwB,MAAMjD,cACbkV,EAAoB,UAIpBnG,EAAA1J,EAAA2J,cAAA,OAAKgB,UAAU,YACbjB,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAOe,UAAU,aACfjB,EAAA1J,EAAA2J,cAAA,6BACAD,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAce,UAAU,YAAYmF,QAAQ,aAAaC,MAAO,CAAEC,OAAQ,YACxEtG,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAesD,OAAO,gBAAgBvC,UAAU,IAAhD,+DACAjB,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CACIM,GAAG,aACHnN,KAAK,OACLkT,OAAO,OACPpS,SAAUzB,KAAKwB,MAAMsS,YACrBH,MAAO,CAAEI,QAAS,WAGxBzG,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,eAAcxN,KAAKwB,MAAMrD,KAAzB,IAA+BmP,EAAA1J,EAAA2J,cAAA,WAA/B,cAAiDvN,KAAKwB,MAAMpD,SAAS4V,KAAK,MAA1E,IAAkF1G,EAAA1J,EAAA2J,cAAA,WAAlF,sBAA2GvN,KAAKwB,MAAMnD,SAASuB,QAC/H0N,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAMkB,YAAU,GACdpB,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAWC,UAAU,YACnBH,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAKE,eAAgBC,IAAcC,GAAI,GAAvC,QAGAN,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAKI,GAAI,GACPN,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAa7M,KAAK,SAASR,MAAOH,KAAKwB,MAAMlD,KAAMmD,SAAUzB,KAAKwB,MAAMyS,QAASjG,UAAWlB,QAIlGQ,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAesD,OAAO,oBAAoBvC,UAAWkF,EAAmB9E,QAAS3O,KAAKwB,MAAM0S,mBAA5F,gCACA5G,EAAA1J,EAAA2J,cAAA,WACAD,EAAA1J,EAAA2J,cAAA,oCACAD,EAAA1J,EAAA2J,cAAA,UACED,EAAA1J,EAAA2J,cAAA,UAAID,EAAA1J,EAAA2J,cAAA,UAAID,EAAA1J,EAAA2J,cAAA,KAAGe,KAAK,kCAAR,yBACRhB,EAAA1J,EAAA2J,cAAA,UAAID,EAAA1J,EAAA2J,cAAA,UAAID,EAAA1J,EAAA2J,cAAA,KAAGe,KAAK,6CAAR,2BACRhB,EAAA1J,EAAA2J,cAAA,UAAID,EAAA1J,EAAA2J,cAAA,UAAID,EAAA1J,EAAA2J,cAAA,KAAGe,KAAK,8CAAR,iCACRhB,EAAA1J,EAAA2J,cAAA,UAAID,EAAA1J,EAAA2J,cAAA,UAAID,EAAA1J,EAAA2J,cAAA,KAAGe,KAAK,2CAAR,wBACRhB,EAAA1J,EAAA2J,cAAA,UAAID,EAAA1J,EAAA2J,cAAA,UAAID,EAAA1J,EAAA2J,cAAA,KAAGe,KAAK,8DAAR,wBACRhB,EAAA1J,EAAA2J,cAAA,UAAID,EAAA1J,EAAA2J,cAAA,UAAID,EAAA1J,EAAA2J,cAAA,KAAGe,KAAK,mCAAR,mBAGVhB,EAAA1J,EAAA2J,cAAA,oCACAD,EAAA1J,EAAA2J,cAAA,6NACAD,EAAA1J,EAAA2J,cAAA,8FACAD,EAAA1J,EAAA2J,cAAA,8OACAD,EAAA1J,EAAA2J,cAAA,oPACAD,EAAA1J,EAAA2J,cAAA,yCAlDasB,aA0DR2E,GAFfA,GAAWvD,YAtLM,SAAC7P,EAAOC,GACvB,MAAO,CACLlC,KAAMiC,EAAM+T,KAAKhW,KACjBC,SAAUgC,EAAM+T,KAAK/V,SACrBC,SAAU+B,EAAM+T,KAAK9V,SACrBC,KAAM8B,EAAM+T,KAAK7V,KACjBC,YAAa6B,EAAM+T,KAAK5V,cAKR,SAACiC,EAAUH,GAE7B,IAkDI+T,EAAe,SAACD,GAClB,IAAIE,EAAK,CACTA,SAAc,GACdA,SAAc,IAEVC,EAAS,IAAIC,WAEjBD,EAAOE,OAAS,SAAC9T,GAIf,IAHA,IACI+T,EADOH,EAAOI,OACDC,MAAM,MACnBC,GAAa,EACRC,EAAK,EAAGA,EAAKJ,EAAM7U,OAAQiV,IAAM,CACxC,IAAIC,EAAOL,EAAMI,GAAIE,OACrB,GAAoB,IAAhBD,EAAKlV,SAIiB,IAAtBkV,EAAKE,QAAQ,MAAeJ,GAC9BP,EAAGjW,SAAS+C,KAAKsT,EAAMI,IAGC,IAAtBC,EAAKE,QAAQ,MAAY,CAC3BJ,GAAa,EAEb,IAAIK,EAAeH,EAAKH,MAAM,OAC9B,GAA4B,IAAxBM,EAAarV,OAAc,CAE7BsV,QAAQC,IAAIF,GACZ,SAEFZ,EAAGhW,SAAS8C,KAAK,CAACnC,WAAWiW,EAAa,IAAKjW,WAAWiW,EAAa,OAI3EzU,EArHG,CACLG,KAAM,mBACNR,MAmH0BkU,EAAGjW,WAC3BoC,EApIG,CACLG,KAAM,oBACNtC,SA6CgB,SAAC+W,GAIjB,IAHA,IAAI/W,EAAW,GACXgX,OAAWvW,EACXwW,EAAYrU,KAAKC,GAAK,GACjB2T,EAAK,EAAGA,EAAKO,EAAUxV,OAAQiV,IAAM,CAC5C,IAAIU,EAAOH,EAAUP,GACrB,GAAIQ,EACF,GAAIpU,KAAKiK,IAAIqK,EAAK,GAAKF,EAAS,IAAMC,EAEpCjX,EAAS8C,KAAK,CACA3B,EAAG6V,EAAS,GAAKpU,KAAKI,IAAIgU,EAAS,IACnC5V,EAAG4V,EAAS,GAAKpU,KAAKG,IAAIiU,EAAS,IACnC3V,EAAG,UAEZ,CAEL,IAAI8V,EAAaD,EAAK,GAAKF,EAAS,GAChCI,EAAUH,EAAYrU,KAAKiK,IAAIsK,IAAeD,EAAK,GAAKF,EAAS,IACjEK,EAAML,EAAS,GACnB,GAAIG,EAAa,EAEf,IADA,IAAIG,EAAkB,EACb3U,EAAQqU,EAAS,GAAIrU,EAAQuU,EAAK,KACzClX,EAAS8C,KAAK,CACA3B,EAAGkW,EAAMzU,KAAKI,IAAIL,GAClBvB,EAAGiW,EAAMzU,KAAKG,IAAIJ,GAClBtB,EAAG,QAEbiW,IAAoB,MANqB3U,GAASsU,EAAWI,GAAOD,QAW1E,IAAK,IAAIzU,EAAQqU,EAAS,GAAIrU,EAAQuU,EAAK,KACzClX,EAAS8C,KAAK,CACA3B,EAAGkW,EAAMzU,KAAKI,IAAIL,GAClBvB,EAAGiW,EAAMzU,KAAKG,IAAIJ,GAClBtB,EAAG,QAEbiW,IAAoB,MANqB3U,GAASsU,EAAWI,GAAOD,IAahFJ,EAAWE,EAEb,OAAOlX,EAsCoBuX,CAAYvB,EAAGhW,aAG1CiW,EAAOuB,WAAW1B,IAGpB,MAAO,CACLL,YAAa,SAACpT,GACZ,IAAIyT,EAAOzT,EAAME,OAAOkV,MAAM,GAC9BZ,QAAQC,IAAIhB,GACZ3T,EAvIG,CACLG,KAAM,gBACNR,MAqIuBgU,EAAKhW,OAC1BiW,EAAaD,IAEfF,QAAS,SAACvT,GACRF,EA7HG,CACLG,KAAM,gBACNR,MA2HuBnB,WAAW0B,EAAME,OAAOT,UAE/C+T,kBAAmB,SAACxT,GAzHa,IAAEP,EA0HjCK,EAzHG,CACLG,KAAM,2BACNR,MAAOA,OA0LA8P,CAA+BuD,ICrNpCuC,wLAEU7V,GACZF,KAAKwB,MAAMhB,SATN,CACLG,KAAM,eACNR,MAOgCD,qCAIhC,OACGoN,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAMwI,iBAAkB,EAAGjI,SAAU/N,KAAKiW,aAAaC,KAAKlW,MAAO8N,GAAG,aACpER,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAKU,SAAU,EAAG3M,MAAM,UACtB+L,EAAA1J,EAAA2J,cAAC4I,EAAD,OAEF7I,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAKU,SAAU,EAAG3M,MAAM,SACtB+L,EAAA1J,EAAA2J,cAAC6I,GAAD,OAEF9I,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAKU,SAAU,EAAG3M,MAAM,QACtB+L,EAAA1J,EAAA2J,cAAC8I,GAAD,eAhBaxH,aAwBTkH,GAFfA,GAAY9F,cAAU8F,ICiFhBO,mMAEF,IAAIpJ,EAAkB,GAKtB,OAJIlN,KAAKwB,MAAM2L,SACbD,EAAkB,UAIlBI,EAAA1J,EAAA2J,cAAA,OAAKgB,UAAU,QACbjB,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAesD,OAAO,sBAAsBvC,UAAWrB,EAAiByB,QAAS3O,KAAKwB,MAAMuP,gBAA5F,uCACAzD,EAAA1J,EAAA2J,cAAA,OAAKgB,UAAU,gBACbjB,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAOe,UAAU,gBAAgBC,aAAW,EAACC,SAAUzO,KAAKwB,MAAMiN,UAChEnB,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAMkB,YAAU,GACdpB,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAWe,UAAU,iBAAiBd,UAAU,SAC9CH,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAKe,UAAU,iBAAiBb,eAAgBC,IAAcC,GAAI,GAAlE,cAGAN,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAKI,GAAI,EAAG2I,SAAU,GACpBjJ,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAa7M,KAAK,SAASR,MAAOH,KAAKwB,MAAMzC,MAAO0C,SAAUzB,KAAKwB,MAAMgV,iBAG7ElJ,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAWe,UAAU,iBAAiBd,UAAU,SAC9CH,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAKe,UAAU,iBAAiBb,eAAgBC,IAAcC,GAAI,GAAlE,cAGAN,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAKI,GAAI,EAAG2I,SAAU,GACpBjJ,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAa7M,KAAK,SAASR,MAAOH,KAAKwB,MAAMvC,MAAOwC,SAAUzB,KAAKwB,MAAMiV,iBAG7EnJ,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAWe,UAAU,iBAAiBd,UAAU,SAC9CH,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAKe,UAAU,iBAAiBb,eAAgBC,IAAcC,GAAI,GAAlE,cAGAN,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAKI,GAAI,EAAG2I,SAAU,GACpBjJ,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAa7M,KAAK,SAASR,MAAOH,KAAKwB,MAAMtC,MAAOuC,SAAUzB,KAAKwB,MAAMkV,iBAG7EpJ,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAWe,UAAU,iBAAiBd,UAAU,SAC9CH,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAKe,UAAU,iBAAiBb,eAAgBC,IAAcC,GAAI,GAAlE,cAGAN,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAKI,GAAI,EAAG2I,SAAU,GACpBjJ,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAa7M,KAAK,SAASR,MAAOH,KAAKwB,MAAMrC,MAAOsC,SAAUzB,KAAKwB,MAAMmV,iBAG7ErJ,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAWe,UAAU,iBAAiBd,UAAU,SAC9CH,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAKe,UAAU,iBAAiBb,eAAgBC,IAAcC,GAAI,GAAlE,gBAGAN,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAKE,eAAgBC,IAAcC,GAAI,EAAG2I,SAAU,GAClDjJ,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAmBM,GAAG,aAAanN,KAAK,WAAWxC,KAAK,SAASgC,MAAOH,KAAKwB,MAAMoV,OAAQnV,SAAUzB,KAAKwB,MAAMqV,gBAC9GvJ,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAcrN,MAAO,GAArB,cACAmN,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAcrN,MAAO,GAArB,cACAmN,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAcrN,MAAO,GAArB,eACAmN,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAcrN,MAAO,GAArB,6BAtDO0O,cAkE3ByH,GAAerG,YArGa,SAAC7P,EAAOC,GAClC,MAAO,CACLoO,SAAUrO,EAAM0W,IAAI9Y,oBACpBmP,OAAU/M,EAAM2W,QAAQlY,YACxBE,MAAUqB,EAAM2W,QAAQhY,MACxBE,MAAUmB,EAAM2W,QAAQ9X,MACxBC,MAAUkB,EAAM2W,QAAQ7X,MACxBC,MAAUiB,EAAM2W,QAAQ5X,MACxByX,OAAUxW,EAAM2W,QAAQ1X,aAIG,SAACmB,EAAUH,GACxC,MAAO,CACL0Q,eAAgB,SAACrQ,GACfF,GAlFJ9B,aAAasY,QAAQ,sBAAuB,GACrC,CACLrW,KAAM,mCAkFN6V,aAAc,SAAC9V,GA1DW,IAAEP,EA2D1BK,GA3D0BL,EA2DFnB,WAAW0B,EAAME,OAAOT,OAzDpDzB,aAAasY,QAAQ,gBAAiB7W,GAC/B,CACLQ,KAAM,YACNR,MAAOA,MAwDPsW,aAAc,SAAC/V,GApDW,IAAEP,EAqD1BK,GArD0BL,EAqDFnB,WAAW0B,EAAME,OAAOT,OApDpDzB,aAAasY,QAAQ,gBAAiB7W,GAC/B,CACLQ,KAAM,YACNR,MAAOA,MAmDPuW,aAAc,SAAChW,GA/CW,IAAEP,EAgD1BK,GAhD0BL,EAgDFnB,WAAW0B,EAAME,OAAOT,OA/CpDzB,aAAasY,QAAQ,gBAAiB7W,GAC/B,CACLQ,KAAM,YACNR,MAAOA,MA8CPwW,aAAc,SAACjW,GA1CW,IAAEP,EA2C1BK,GA3C0BL,EA2CFnB,WAAW0B,EAAME,OAAOT,OA1CpDzB,aAAasY,QAAQ,gBAAiB7W,GAC/B,CACLQ,KAAM,YACNR,MAAOA,MAyCP0W,eAAgB,SAAC1W,GACfK,EA9E8B,SAACL,GACnC,MAAO,CACLQ,KAAM,0BACNR,MAAOA,GA2EI8W,CAAqB9W,OAuErB8P,CAAqDqG,IAEpE,IAuBMY,oLAEF,IAAIhK,EAAkB,GAClBlN,KAAKwB,MAAM2L,SACbD,EAAkB,UAGpB,IAAMiK,EAAwBnX,KAAKwB,MAAM4V,UAAY,SAAW,KAEhE,OACE9J,EAAA1J,EAAA2J,cAAA,OAAKgB,UAAU,SACbjB,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAesD,OAAO,gBAAgBvC,UAAWrB,EAAiByB,QAAS3O,KAAKwB,MAAMuP,gBAAtF,qCACAzD,EAAA1J,EAAA2J,cAAA,OAAKgB,UAAU,iBACbjB,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAOe,UAAU,gBAAgBC,aAAW,EAACC,SAAUzO,KAAKwB,MAAMiN,UAChEnB,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAMkB,YAAU,GACdpB,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAWe,UAAU,iBAAiBd,UAAU,cAC9CH,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAKe,UAAU,iBAAiBb,eAAgBC,IAAcC,GAAI,GAAlE,mBAGAN,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAKI,GAAI,EAAG2I,SAAU,GACpBjJ,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAa7M,KAAK,SAASR,MAAOH,KAAKwB,MAAMpC,WAAYqC,SAAUzB,KAAKwB,MAAM6V,uBAIpF/J,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAesD,OAAO,kBAAkBvC,UAAW4I,EAAsBxI,QAAS3O,KAAKwB,MAAM8V,iBAA7F,4EAxBgBzI,aAgC5BqI,GAAgBjH,YAvDa,SAAC7P,EAAOC,GACnC,MAAO,CACLoO,SAAYrO,EAAM0W,IAAI7Y,qBACtBkP,QAAa/M,EAAM2W,QAAQlY,YAC3BO,WAAYgB,EAAM2W,QAAQ3X,WAC1BgY,UAAYhX,EAAM2W,QAAQzX,iBAIE,SAACkB,EAAUH,GACzC,MAAO,CACL0Q,eAAgB,SAACrQ,GACfF,GA/KJ9B,aAAasY,QAAQ,sBAAuB,GACrC,CACLrW,KAAM,oCA+KN0W,kBAAmB,SAAC3W,GA7HQ,IAAEP,EA8H5BK,GA9H4BL,EA8HFnB,WAAW0B,EAAME,OAAOT,OA7HtDzB,aAAasY,QAAQ,iBAAkB7W,GAChC,CACLQ,KAAM,iBACNR,MAAOA,MA4HPmX,gBAAiB,WACf9W,EA9KG,CACLG,KAAM,gCAkNMsP,CAAuDiH,QAmBxDK,oLAdX,OACEjK,EAAA1J,EAAA2J,cAAA,OAAKgB,UAAU,gBACbjB,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAOe,UAAU,iBACfjB,EAAA1J,EAAA2J,cAAA,8BACAD,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,KACEF,EAAA1J,EAAA2J,cAACiK,GAAD,MACAlK,EAAA1J,EAAA2J,cAACkK,GAAD,gBATkB5I,oDCnO9B,SAAS6I,GAAc/K,EAAOgL,EAAQC,GACpC,IAAIC,EAAW,EAaf,OAZIlL,EAAMnN,GAAKmY,EACbE,GAAY,EACHlL,EAAMnN,EAAImY,IACnBE,GAAY,GAGVlL,EAAMlN,GAAKmY,EACbC,GAAY,EACHlL,EAAMlN,EAAImY,IACnBC,GAAY,GAGPA,EAIT,SAASC,GAAaC,EAAYC,EAAUC,EAAYC,GAEtD,IAAIpD,EAAOkD,EAASG,QAAQC,SAASL,GACjCM,EAAOH,EAASC,QAAQC,SAASH,GACjCK,EAAoBxD,EAAKtV,EAAI6Y,EAAK5Y,EAAIqV,EAAKrV,EAAI4Y,EAAK7Y,EAGxD,GAA0B,IAAtB8Y,EACF,OAAO,KAGT,IAAIC,EAAON,EAAWE,QAAQC,SAASL,GACnChQ,GAAKwQ,EAAK/Y,EAAI6Y,EAAK5Y,EAAI8Y,EAAK9Y,EAAI4Y,EAAK7Y,GAAK8Y,EAC9C,GAAIvQ,EAAI,GAAKA,GAAK,EAChB,OAAO,KAGT,IAAIC,GAAKuQ,EAAK/Y,EAAIsV,EAAKrV,EAAI8Y,EAAK9Y,EAAIqV,EAAKtV,GAAK8Y,EAC9C,OAAItQ,EAAI,GAAKA,GAAK,EACT,KAGU+P,EAAWI,QAAQK,IAAI1D,EAAKqD,QAAQM,SAASC,KAAO3Q,EAAGA,KAQ5E,SAAS4Q,GAASZ,EAAYC,EAAUL,EAAQC,GAE9C,IAAIgB,EAAiBlB,GAAcK,EAAYJ,EAAQC,GACnDiB,EAAenB,GAAcM,EAAUL,EAAQC,GAEnD,GAAuB,IAAnBgB,GAA8C,IAAjBC,EAE/B,MAAO,CAACd,EAAYC,GAGtB,GAAIY,IAAmBC,EAErB,MAAO,CAACC,GAAcf,EAAYJ,EAAQC,GAASkB,GAAcd,EAAUL,EAAQC,IAGrF,GAAIgB,EAAiBC,EAEnB,MAAO,CAACC,GAAcf,EAAYJ,EAAQC,GAASkB,GAAcd,EAAUL,EAAQC,IAGrF,GAAuB,IAAnBgB,EAA0B,CAG5B,IAAI9D,EAAO,CAACiD,GAGZ,OAFAjD,EAAK3T,KAAK4X,GAAWhB,EAAYC,EAAUL,EAAQC,IACnD9C,EAAK3T,KAAK2X,GAAcd,EAAUL,EAAQC,IACnC9C,EAGT,GAAqB,IAAjB+D,EAEF,MAAO,CAACE,GAAWf,EAAUD,EAAYJ,EAAQC,GAASI,GAoB5D,IAbA,IAAMgB,EAAQ,CAEZ,CAACN,MAAQf,GAASC,GAASc,MAAQf,EAAQC,IAE3C,CAACc,KAAOf,GAASC,GAASc,KAAOf,EAAQC,IAEzC,CAACc,MAAQf,GAASC,GAASc,KAAOf,GAASC,IAE3C,CAACc,MAAQf,EAAQC,GAASc,KAAOf,EAAQC,KAIvCqB,EAAgB,GACXnR,EAAE,EAAGA,EAAEkR,EAAMpZ,OAAQkI,IAAK,CACjC,IAAIoR,EAAYpB,GAAaY,KAAOS,WAAWpB,GAClBW,KAAOS,WAAWnB,GAClBgB,EAAMlR,GAAG,GACTkR,EAAMlR,GAAG,IAClCoR,GACFD,EAAc9X,KAAK5B,EAAO2Z,EAAU1Z,EAAG0Z,EAAUzZ,IAIrD,GAA6B,IAAzBwZ,EAAcrZ,OAAc,CAC9B,GAA6B,IAAzBqZ,EAAcrZ,OAIhB,MADAsV,QAAQC,IAAI8D,GACNG,MAAM,2BAKd,GAAIV,KAAOS,WAAWF,EAAc,IAAIb,SAASM,KAAOS,WAAWpB,IAAasB,WAC5EX,KAAOS,WAAWF,EAAc,IAAIb,SAASM,KAAOS,WAAWpB,IAAasB,WAAY,CAC1F,IAAIC,EAAOL,EAAc,GACzBA,EAAc,GAAKA,EAAc,GACjCA,EAAc,GAAKK,EAErB,SAAAlO,OAAW6N,EAAX,CAA0BH,GAAcd,EAAUL,EAAQC,KAS5D,IAAI2B,EAAWb,KAAOS,WAAWpB,GAAYS,IAAIE,KAAOS,WAAWnB,IAAWS,SAASC,KAAO,GAAK,KAEnG,SAAAtN,OAAAtL,OAAAyK,EAAA,EAAAzK,CAAW6Y,GAASZ,EAAYwB,EAAU5B,EAAQC,IAAlD9X,OAAAyK,EAAA,EAAAzK,CACW6Y,GAASY,EAAYvB,EAAUL,EAAQC,KAKpD,SAASkB,GAAc9N,EAAQ2M,EAAQC,GACrC,OAAOrY,EAAO0B,KAAKgB,IAAI0V,EAAQ1W,KAAKiB,KAAKyV,EAAQ3M,EAAOxL,IAC1CyB,KAAKgB,IAAI2V,EAAQ3W,KAAKiB,KAAK0V,EAAQ5M,EAAOvL,KAM1D,SAASsZ,GAAWS,EAAMC,EAAK9B,EAAQC,GACrC,IAAI8B,EAAKF,EAAKha,EAAIia,EAAIja,EAClBma,EAAKH,EAAK/Z,EAAIga,EAAIha,EAElBma,EAAQra,EAAOka,EAAIja,EAAGia,EAAIha,GAC1Boa,EAAW,EACf,OAAIJ,EAAIja,GAAKmY,GAAU8B,EAAIja,EAAImY,GACzB8B,EAAIja,GAAKmY,EAEXiC,EAAMpa,GAAKmY,EAGXiC,EAAMpa,EAAImY,EAEZkC,GAAYD,EAAMpa,EAAIga,EAAKha,GAAKka,EAChCE,EAAMna,EAAI+Z,EAAK/Z,EAAIoa,EAAWF,EAEvBZ,GAAWS,EAAMI,EAAOjC,EAAQC,MAErC6B,EAAIha,GAAKmY,GAAU6B,EAAIha,EAAImY,KACzB6B,EAAIha,GAAKmY,EAEXgC,EAAMna,GAAKmY,EAGXgC,EAAMna,EAAImY,EAEZiC,GAAYD,EAAMna,EAAI+Z,EAAK/Z,GAAKka,EAChCC,EAAMpa,EAAIga,EAAKha,EAAIqa,EAAWH,GAEzBE,GAIT,SAASE,GAAYC,EAAOC,EAAKlH,GAC/B,IAAM1P,EAAa2W,EAAM/Y,QACnBiZ,EAAWD,EAAIhZ,QACjB4D,EAAsB,EAAR3D,KAAKC,GAAU,IAC7BsU,GAAeyE,EAAW7W,EAAc,EAAMnC,KAAKC,KAAO,EAAMD,KAAKC,IACrEsU,EAAavU,KAAKC,KACpBsU,GAAc,EAAMvU,KAAKC,IAEvBsU,EAAa,IACf5Q,IAAe,GAIjB,IADA,IAAIsV,EAAc,GACT7X,EAAO,EAAGA,EAAQmT,EAAW5Q,EAAcvC,IAClD6X,EAAY/Y,KAAKuX,KAAO5F,EAAO7R,KAAKG,IAAIwD,EAAavC,EAAOe,GACpC0P,EAAO7R,KAAKI,IAAIuD,EAAavC,EAAOe,KAE9D,OAAO8W,EAGT,SAASC,GAAUJ,EAAOC,EAAKrN,GAC7B,OAAIoN,EAAMF,SAASlN,GAASqN,EAAIH,SAASlN,GAASoN,EAAMF,SAASG,GAAO,KA8C1E,SAASI,GAAerC,EAAYC,EAAUlF,GAoB5C,IAAMiH,EAAQrB,KAAOS,WAAWpB,GAC1BiC,EAAMtB,KAAOS,WAAWnB,GAGxBqC,EAAYN,EAAMO,YAClBC,EAAUP,EAAIM,YAGpB,GAAID,GAAavH,GAAQyH,GAAWzH,EAElC,MAAO,CAACiF,EAAYC,GAItB,GAAI+B,EAAMF,SAASG,GAAO,KACvB,MAAO,CAACQ,GAAoBT,EAAOjH,IAGtC,IAAImG,EA7EN,SAA0Bc,EAAOC,EAAKlH,GACpC,IAAI2H,EAAYT,EAAI7B,QAAQC,SAAS2B,GAAO5B,QAAQuC,YAEhD3S,GAAmB,EAAf0S,EAAUjb,EAAWua,EAAMva,GAAmB,EAAfib,EAAUhb,EAAWsa,EAAMta,EAG9Dkb,EAFIF,EAAUtC,QAAQM,SAASC,KAAO3Q,EAAEA,IAAIyQ,IAAIuB,GAE7BO,YAEvB,GAAIK,GAAkB7H,EAEpB,MAAO,CACLgF,cAAc,EACdhX,OAAQ,IAIZ,IAAI8Z,EAAK3Z,KAAK4Z,KAAK/H,EAAKA,EAAO6H,EAAeA,GAE1CG,EAASL,EAAUtC,QAAQM,SAASC,KAAO3Q,EAAI6S,EAAG7S,EAAI6S,IAAKpC,IAAIuB,GAC/DgB,EAASN,EAAUtC,QAAQM,SAASC,KAAO3Q,EAAI6S,EAAG7S,EAAI6S,IAAKpC,IAAIuB,GAEnE,MAAO,CACLjC,cAAc,EACdhX,OAAQ,CACN,CACE6L,MAAOmO,EACPE,GAAIb,GAAUJ,EAAOC,EAAKc,IAE5B,CACEnO,MAAOoO,EACPC,GAAIb,GAAUJ,EAAOC,EAAKe,MA+CZE,CAAiBlB,EAAOC,EAAKlH,GAEjD,IAAMmG,EAAcnB,aAGlB,OAAOgC,GAAYC,EAAOC,EAAKlH,GAIjC,IAAKmG,EAAcnY,OAAO,GAAGka,KAAQ/B,EAAcnY,OAAO,GAAGka,GAC3D,OAAOlB,GAAYC,EAAOC,EAAKlH,GAIjC,GAAIuH,EAAYvH,EAAO,MAAUyH,EAAUzH,EAAO,KAAQ,CACxD,IAAInG,EAAQsM,EAAcnY,OAAO,GAAG6L,MAChCuO,EAAcjC,EAAcnY,OAAO,GAAG6L,MAE1C,SAAAvB,OAAAtL,OAAAyK,EAAA,EAAAzK,CACKga,GAAYC,EAAOpN,EAAOmG,IAD/B,CAEEnG,GAFF7M,OAAAyK,EAAA,EAAAzK,CAGKga,GAAYoB,EAAalB,EAAKlH,KAKrC,GAAIuH,GAAavH,EAAM,CACrB,IAAIgI,EAAU7B,EAAcnY,OAAO,GAAGka,IAAM/Z,KAAKiK,IAAI+N,EAAcnY,OAAO,GAAG6L,MAAQoN,GAAS,KAAUd,EAAcnY,OAAO,GAAG6L,MAAQsM,EAAcnY,OAAO,GAAG6L,MAChK,OACEoN,GADF3O,OAAAtL,OAAAyK,EAAA,EAAAzK,CAEKga,GAAYgB,EAAQd,EAAKlH,IAF9B,CAGEkH,IAIF,OADAc,EAAS7B,EAAcnY,OAAO,GAAGka,GAAK/B,EAAcnY,OAAO,GAAG6L,MAAQsM,EAAcnY,OAAO,GAAG6L,MAC9F,GAAAvB,OAAAtL,OAAAyK,EAAA,EAAAzK,CACKga,GAAYC,EAAOe,EAAQhI,IADhC,CAEEgI,EACAd,IAON,SAASQ,GAAoBxP,EAAQ8H,GACnC,IAAMnG,EAAQ+L,KAAOS,WAAWnO,GAChC,GAAK2B,EAAM/M,SAAWkT,EAAM,CAC1B,IAAIqI,EAAQrI,EAAOnG,EAAM/M,SACzB,OAAO+M,EAAM8L,SAASC,KAAOyC,EAAOA,IAEpC,OAAOxO,EAMJ,aCzVP,SAASwO,GAAOnQ,EAAQoQ,GACtB,IAAID,EAAQC,EAAa,IACzB,MAAO,CACL5b,EAAGwL,EAAOxL,EAAI2b,EACd1b,EAAGuL,EAAOvL,EAAI0b,EACdzb,EAAGsL,EAAOtL,GAyBP,IAAMwQ,GAAY,SAACmL,EAAMrQ,EAAQsQ,GACtC,IAAIC,EAAqBvQ,EAMzB,GALIqQ,EAAK/J,cAEPiK,EAAqBJ,GAAMI,EAAoB,IAASF,EAAK9J,UAAY+J,IAE3EC,EA3BF,SAAiBvQ,EAAQwQ,EAAUC,GACjC,MAAO,CACLjc,EAAGwL,EAAOxL,EAAIgc,EACd/b,EAAGuL,EAAOvL,EAAIgc,EACd/b,EAAGsL,EAAOtL,GAuBSgR,CAAO6K,EAAoBF,EAAKlL,aAAckL,EAAKjL,cACpEiL,EAAKnK,YACT,CACE,IAAIwK,EAAcL,EAAK3I,UAAYjO,SAAS4W,EAAKjK,iBAAmB,GAEhEqJ,EADQa,EAAeI,EACF,EAAI,EAAI,GAAO,EACpCC,EAAclB,GAAaa,EAAiBI,GAAeL,EAAKlK,UAEhEsJ,EAAY,IACdkB,GAAeD,EAAcL,EAAKlK,WAEpCoK,EAvDJ,SAAiBvQ,EAAQ4Q,GACvB,IAAI5a,EAAQC,KAAKC,GAAK,IAAQ0a,EAC9B,OAAOrc,EACEyL,EAAOxL,EAAIyB,KAAKG,IAAIJ,GAASgK,EAAOvL,EAAIwB,KAAKI,IAAIL,GACjDgK,EAAOxL,EAAIyB,KAAKI,IAAIL,GAASgK,EAAOvL,EAAIwB,KAAKG,IAAIJ,GACjDgK,EAAOtL,GAkDOmc,CAAON,EAAoBI,GAKlD,OAHIN,EAAKtJ,eACPwJ,EAjCJ,SAAgBvQ,EAAQqQ,EAAMS,GAC5B,IAAI9a,EAAQqa,EAAKnJ,YAAc4J,EAAa,GAAK,EAAM7a,KAAKC,GACxD6a,EAAS,EAIb,OAHIV,EAAKrJ,mBACP+J,EAAS,EAAMD,EAAa,GAAOT,EAAKxJ,UAAY,KAE/C,CACLrS,EAAGwL,EAAOxL,EAAIuc,EAASV,EAAKpJ,WAAahR,KAAKG,IAAIJ,GAClDvB,EAAGuL,EAAOvL,EAAIsc,EAASV,EAAKpJ,WAAahR,KAAKI,IAAIL,GAClDtB,EAAGsL,EAAOtL,GAwBWsc,CAAMT,EAAoBF,EAAMC,IAEhDC,GAGHU,GAAc,SAACtP,EAAO1B,EAAOE,GACjC,OAAIwB,EAAMnN,GAAKyL,EAAM,IAGjB0B,EAAMlN,GAAK0L,EAAO,IAGlBwB,EAAMnN,EAAIyL,EAAM,GAGhB0B,EAAMlN,EAAI0L,EAAO,KAkBvB,SAAS4N,GAAWS,EAAMC,EAAK9B,EAAQC,GACrC,IAAI8B,EAAKF,EAAKha,EAAIia,EAAIja,EAClBma,EAAKH,EAAK/Z,EAAIga,EAAIha,EAElBma,EAAQlB,KAAOe,EAAIja,EAAGia,EAAIha,GAC1Boa,EAAW,EACf,OAAIJ,EAAIja,GAAKmY,GAAU8B,EAAIja,EAAImY,GACzB8B,EAAIja,GAAKmY,EAEXiC,EAAMpa,GAAKmY,EAGXiC,EAAMpa,EAAImY,EAEZkC,GAAYD,EAAMpa,EAAIga,EAAKha,GAAKka,EAChCE,EAAMna,EAAI+Z,EAAK/Z,EAAIoa,EAAWF,EAEvBZ,GAAWS,EAAMI,EAAOjC,EAAQC,MAErC6B,EAAIha,GAAKmY,GAAU6B,EAAIha,EAAImY,KACzB6B,EAAIha,GAAKmY,EAEXgC,EAAMna,GAAKmY,EAGXgC,EAAMna,EAAImY,EAEZiC,GAAYD,EAAMna,EAAI+Z,EAAK/Z,GAAKka,EAChCC,EAAMpa,EAAIga,EAAKha,EAAIqa,EAAWH,GAEzBE,GAGT,SAASsC,GAAWlC,EAAKrN,GACvB,OAAIA,EAAMwL,QAAQC,SAAS4B,GAAKpa,SAAW,IAOtC,IAAMuc,GAAiB,SAAC/b,EAAO/B,GACpC,IAAI0Y,EAAU3W,EAAM2W,QACpB,GAAI1Y,EAASuB,OAAS,EAAG,CACvB,GAAImX,EAAQlY,aAA6C,IAA9BkY,EAAQ1X,WAAWO,OAAc,CAS1D,IAAI8Z,GAAM3C,EAAQ9X,MAAQ8X,EAAQhY,OAAS,EACvC4a,GAAM5C,EAAQ5X,MAAQ4X,EAAQ7X,OAAS,EAEvC8D,EAAU,CACZ,CAACxD,GAAIka,EAAIja,GAAIka,GACb,CAACna,GAAIka,EAAIja,EAAIka,GACb,CAACna,EAAIka,EAAIja,EAAIka,GACb,CAACna,EAAIka,EAAIja,GAAIka,IAEfzE,QAAQC,IAAInS,GAEZ,IAQIoZ,EARAC,EAAQhe,EAAS,GACjBie,EAAOje,EAASA,EAASuB,OAAO,GAGhCR,EAAa6B,KAAK4Z,KAAK5Z,KAAK2B,IAAI,EAAI8W,EAAG,GAAOzY,KAAK2B,IAAI,EAAI+W,EAAI,IAAQ,EAEvE4C,EAAS7D,KAAOS,WAAWkD,GAC3BG,EAAQ9D,KAAOS,WAAWmD,GAE1BzR,EAAc,GAClB,GAAI0R,EAAOjC,aAAekC,EAAMlC,YAAa,CAE3C,IAAIa,EAAQ/b,EAAaod,EAAMlC,YAC/B8B,EAAWI,EAAM/D,SAASC,KAAOyC,EAAMA,IACvCtQ,EAAY1J,KAAZrB,OAAA6B,EAAA,EAAA7B,CAAA,GAAsBwc,EAAtB,CAA4B9c,EAAG4c,EAAS5c,EAAGC,EAAG2c,EAAS3c,SAClD,CACL,IAAI0b,EAAQ/b,EAAamd,EAAOjC,YAChC8B,EAAWG,EAAO9D,SAASC,KAAOyC,EAAMA,IACxCtQ,EAAY1J,KAAZrB,OAAA6B,EAAA,EAAA7B,CAAA,GAAsBuc,EAAtB,CAA6B7c,EAAG4c,EAAS5c,EAAGC,EAAG2c,EAAS3c,KAE1DyV,QAAQC,IAAIiH,GACZlH,QAAQC,IAAIuE,GAEZ,IAAI+C,EAAa,EAoBjB,IAnBIL,EAAS5c,GAAKka,EAEhB+C,EAAa,EACJL,EAAS5c,IAAMka,EAExB+C,EAAa,EACJL,EAAS3c,GAAKka,EAEvB8C,EAAa,EACJL,EAAS3c,IAAMka,EAExB8C,EAAa,GAEbvH,QAAQC,IAAI,SACZsH,EAAa,GAKRA,IAAe1F,EAAQ1X,WAAW,IACvC6V,QAAQC,IAAI,eAAiBsH,GAC7B5R,EAAY1J,KAAZrB,OAAA6B,EAAA,EAAA7B,CAAA,GAAsBuc,EAAtB,CAA6B7c,EAAGwD,EAAQyZ,GAAYjd,EAAGC,EAAGuD,EAAQyZ,GAAYhd,MAC9Egd,GAAc,GACG,IACfA,EAAa,GAGjBvH,QAAQC,IAAI,eAAiBsH,GAC7B5R,EAAY1J,KAAZrB,OAAA6B,EAAA,EAAA7B,CAAA,GAAsBuc,EAAtB,CAA6B7c,EAAGwD,EAAQyZ,GAAYjd,EAAGC,EAAGuD,EAAQyZ,GAAYhd,KAE9EyV,QAAQC,IAAItK,GAGVxM,EAFEke,EAAOjC,aAAekC,EAAMlC,YAEnBjc,EAAS+M,OAAOP,GAEhBA,EAAYjN,UAAUwN,OAAO/M,GAG5C,GAAI0Y,EAAQzX,iBAAmByX,EAAQlY,YAAa,CAElD,IAAIwd,EAAQhe,EAAS,GACjBie,EAAOje,EAASA,EAASuB,OAAO,GAKhCR,EAAa2X,EAAQ3X,WACrBmd,EAAS7D,KAAOS,WAAWkD,GAC3BG,EAAQ9D,KAAOS,WAAWmD,GAC9B,GAAIC,EAAOjC,aAAekC,EAAMlC,YAAa,CAE3C,IAAIa,EAAQ/b,EAAaod,EAAMlC,YAC3B8B,EAAWI,EAAM/D,SAASC,KAAOyC,EAAMA,IAC3C9c,EAASqe,QAAQnd,EAAO,EAAK,EAAK8c,EAAM3c,IACxCrB,EAAS8C,KAAK5B,EAAO6c,EAAS5c,EAAG4c,EAAS3c,EAAG6c,EAAK5c,QAC7C,CACL,IAAIyb,EAAQ/b,EAAamd,EAAOjC,YAC5B8B,EAAWG,EAAO9D,SAASC,KAAOyC,EAAMA,IAC5C9c,EAAS8C,KAAK5B,EAAO,EAAK,EAAK8c,EAAM3c,IACrCrB,EAASqe,QAAQnd,EAAO6c,EAAS5c,EAAG4c,EAAS3c,EAAG6c,EAAK5c,MAkB3D,OAdIU,EAAM0W,IAAIlZ,SACZS,EAAST,UAGTS,EADE0Y,EAAQlY,YD4GmB,SAASR,EAAUsZ,EAAQC,GAC1D,IAAI+E,EAAgB,GAChBtH,EAAW,KAEXsC,EAAS,IACXA,IAAW,GAETC,EAAS,IACXA,IAAW,GAEb,IAAK,IAAIrC,EAAK,EAAGA,EAAKlX,EAASuB,OAAQ2V,IAAQ,CAC7C,IAAIvK,EAAS3M,EAASkX,GACtB,GAAIF,EAEF,IADA,IAAIP,EAAO6D,GAAStD,EAAUrK,EAAQ2M,EAAQC,GACrCgF,EAAG,EAAGA,EAAG9H,EAAKlV,OAAQgd,IACzB9H,EAAK8H,KAAQvH,GACfsH,EAAcxb,KAAK2T,EAAK8H,SAI5BD,EAAcxb,KAAK2X,GAAc9N,EAAQ2M,EAAQC,IAEnDvC,EAAWrK,EAKbqK,EAAW,KAEX,IADA,IAAIwH,EAAkB,GACb9b,EAAE,EAAGA,EAAE4b,EAAc/c,OAAQmB,IAAK,CACzC,GAAIsU,EAAU,CACZ,IAAI0E,EAAQrB,KAAOS,WAAWwD,EAAc5b,IACxCiZ,EAAMtB,KAAOS,WAAW9D,GACxB0E,EAAMF,SAASG,GAAO,MACxB6C,EAAgB1b,KAAK2X,GAAc6D,EAAc5b,GAAI4W,EAAQC,SAG/DiF,EAAgB1b,KAAK2X,GAAc6D,EAAc5b,GAAI4W,EAAQC,IAE/DvC,EAAWsH,EAAc5b,GAG3B,OAAO8b,ECrJMC,CAAkBze,GACC0Y,EAAQ9X,MAAQ8X,EAAQhY,OAAO,GAC/BgY,EAAQ5X,MAAQ4X,EAAQ7X,OAAO,GDsJ/B,SAASb,EAAUyU,GAKnD,IAHA,IAAI6J,EAAgB,GAChBtH,EAAW,KAENE,EAAK,EAAGA,EAAKlX,EAASuB,OAAQ2V,IAAQ,CAC7C,IAAIvK,EAAS3M,EAASkX,GACtB,GAAIF,EAEF,IADA,IAAIP,EAAOsF,GAAe/E,EAAUrK,EAAQ8H,GACnC8J,EAAG,EAAGA,EAAG9H,EAAKlV,OAAQgd,IACzB9H,EAAK8H,KAAQvH,GACfsH,EAAcxb,KAAK2T,EAAK8H,SAI5BD,EAAcxb,KAAKqZ,GAAoBxP,EAAQ8H,IAEjDuC,EAAWrK,EAKbqK,EAAW,KAEX,IADA,IAAIwH,EAAkB,GACb9b,EAAE,EAAGA,EAAE4b,EAAc/c,OAAQmB,IAAK,CACzC,GAAIsU,EAAU,CACZ,IAAI0E,EAAQrB,KAAOS,WAAWwD,EAAc5b,IACxCiZ,EAAMtB,KAAOS,WAAW9D,GACxB0E,EAAMF,SAASG,GAAO,MACxB6C,EAAgB1b,KAAKqZ,GAAoBmC,EAAc5b,GAAI+R,SAG7D+J,EAAgB1b,KAAKqZ,GAAoBmC,EAAc5b,GAAI+R,IAE7DuC,EAAWsH,EAAc5b,GAE3B,OAAO8b,ECvLME,CAAmB1e,EACA0Y,EAAQ3X,aAOpCmU,GAAQ,SAACnT,GAEb,IAAI4c,EAAiB,GAKjBhc,GAAS,IAASZ,EAAMmT,MAAMV,SAAW,KAAQ,IACjD7R,EAAQ,IACVA,GAAS,KAEXA,EAAiBA,E1B5QJ,IAAQC,KAAKC,G0B+Q1B,IAAIiK,EAAS,EACTF,EAAQ,EACR8L,EAAU3W,EAAM2W,QAChBA,EAAQlY,aACVsM,EAAS4L,EAAQ5X,MAAQ4X,EAAQ7X,MACjC+L,EAAQ8L,EAAQ9X,MAAQ8X,EAAQhY,OAGhCkM,EADAE,EAA8B,EAArB4L,EAAQ3X,WAInB,IAAI6d,EAAgBvE,MAAQzN,EAAM,EAAKE,EAAO,GAC1C+R,EAAOjc,KAAKG,IAAIJ,GAChBmc,EAAOlc,KAAKI,IAAIL,GAEhBC,KAAKiK,IAAIgS,GAAQ,QACnBA,EAAO,OAELjc,KAAKiK,IAAIiS,GAAQ,QACnBA,EAAO,OAET,IAAIC,EAAe1E,KAAOtY,EAAMmT,MAAMT,KAAOoK,EAAM,GAC/CG,EAAe3E,KAAO,GAAMtY,EAAMmT,MAAMT,KAAOqK,GAEnD,GAAInc,EAAQC,KAAKC,GAAG,GAAOF,EAAQ,IAAOC,KAAKC,GAAI,CAEjD,IAAIoY,EAAO8D,EAAajF,QACxBiF,EAAeC,EAAalF,QAC5BkF,EAAe/D,EAEbtY,EAAQC,KAAKC,GAAG,IAClB+b,EAAgBvE,MAAQzN,EAAM,GAAME,EAAO,GAC3CiS,EAAeA,EAAajF,QAAQM,SAASC,MAAQ,GAAM,IAC3D2E,EAAeA,EAAalF,QAAQM,SAASC,MAAQ,GAAM,KAE7D,IAAI4E,EAAUF,EACVG,EAAUF,EACVG,EAAcP,EAAc9E,QAAQM,SAASC,MAAQ,GAAM,IAC/DsE,EAAe7b,KAAK8b,GAKpB,IAJA,IAAIQ,EAAiBR,EACjBS,EAAkBT,EAElBtH,EAAkB,EACfA,EAAkB,KAAM,CAK7B,GAJAA,GAAmB,EAGnB8H,EAAiBA,EAAetF,QAAQK,IAAI8E,GACxCrB,GAAYwB,EAAgBxS,EAAOE,GAAS,CAC9C,IAAIwS,EAAS5E,GAAW0E,EAAetF,QAAQC,SAASkF,GAAUG,EAAgBxS,EAAM,EAAKE,EAAO,GAEpG,GADA6R,EAAe7b,KAAKwc,GAChBzB,GAAWsB,EAAaG,GAC1B,MAEFF,EAAiB1E,GAAW2E,EAAiBD,EAAgBxS,EAAM,EAAKE,EAAO,GAC/EmS,EAAUD,EAGZ,GADAL,EAAe7b,KAAKsc,GAChBvB,GAAWsB,EAAaC,GAC1B,MAUF,GANAC,EAAkBA,EAAgBvF,QAAQK,IAAI+E,GAC1CtB,GAAYyB,EAAiBzS,EAAOE,KACtCuS,EAAkB3E,GAAW0E,EAAgBC,EAAiBzS,EAAM,EAAKE,EAAO,GAChFoS,EAAUH,GAEZJ,EAAe7b,KAAKuc,GAChBxB,GAAWsB,EAAaE,GAC1B,MAMF,GAFAA,EAAkBA,EAAgBvF,QAAQK,IAAI+E,GAC9CP,EAAe7b,KAAKuc,GAChBxB,GAAWsB,EAAaE,GAC1B,MAEF,GAAIzB,GAAYyB,EAAiBzS,EAAOE,GAAS,CAC/C,IAAIwS,EAAS5E,GAAW2E,EAAgBvF,QAAQC,SAASmF,GAAUG,EAAiBzS,EAAM,EAAKE,EAAO,GAEtG,GADA6R,EAAe7b,KAAKwc,GAChBzB,GAAWsB,EAAaG,GAC1B,MAEFD,EAAkB3E,GAAW0E,EAAgBC,EAAiBzS,EAAM,EAAKE,EAAO,GAChFoS,EAAUH,EAGZ,GADAJ,EAAe7b,KAAKuc,GAChBxB,GAAWsB,EAAaE,GAC1B,MAMF,GAFAD,EAAiBA,EAAetF,QAAQK,IAAI8E,GAC5CN,EAAe7b,KAAKsc,GAChBvB,GAAWsB,EAAaC,GAC1B,MAEExB,GAAYwB,EAAgBxS,EAAOE,KACrCsS,EAAiB1E,GAAW2E,EAAiBD,EAAgBxS,EAAM,EAAKE,EAAO,GAC/EmS,EAAUD,GAKd,OAAOlB,GAAe/b,EAAO4c,IAqDlBY,GAAcC,aACzB,CARa,SAAAzd,GAAK,OAAIA,EAAM0W,KACZ,SAAA1W,GAAK,OAAIA,EAAMG,QACZ,SAAAH,GAAK,OAAIA,EAAM8P,WACpB,SAAA9P,GAAK,OAAIA,EAAM+T,MACd,SAAA/T,GAAK,OAAIA,EAAMmT,OACb,SAAAnT,GAAK,OAAIA,EAAM2W,UAWhC,SAACD,EAAKvW,EAAQ2P,EAAWiE,EAAM2J,EAAY/G,GACzC,IAAI3W,EAAQ,CACV0W,IAAKA,EACLvW,OAAQA,EACR2P,UAAWA,EACXiE,KAAMA,EACNZ,MAAOuK,EACP/G,QAASA,GAGX,OAAwB,IAApB3W,EAAM0W,IAAInZ,MA/CM,SAACyC,GACvB,IAAMkM,EAtUU,SAAC/L,EAAQpC,GACzB,IAAK,IAAI4C,EAAE,EAAGA,EAAER,EAAOX,OAAQmB,IAC7B,GAAI5C,IAASoC,EAAOQ,GAAG5C,KACrB,OAAOoC,EAAOQ,GAGlB,OAAO,KAgUOgd,CAAU3d,EAAMG,OAAOA,OAAQH,EAAMG,OAAOkP,cACtD9R,EAAQ,GACR2O,IACF3O,EAAQ2O,EAAMjO,SAAS+B,GAAOsK,IAAK,SAACM,GAClC,OAAOmQ,GAAMnQ,EAAQ,IAAQ5K,EAAMG,OAAOoP,iBAM9C,IAFA,IAAIqO,EAAY5d,EAAM8P,UAAUwC,SAC5BsK,EAAiB,GACZjc,EAAE,EAAGA,EAAEid,EAAWjd,IACzB,IAAK,IAAIyG,EAAE,EAAGA,EAAE7J,EAAMiC,OAAQ4H,IAAK,CACjC,IAAIyW,EAAWzW,EAAE7J,EAAMiC,OACvBod,EAAe7b,KAAK+O,GAAU9P,EAAM8P,UAAWvS,EAAM6J,GAAIzG,EAAEkd,IAI/D,OAAO9B,GAAe/b,EAAO4c,GA8BlBkB,CAAgB9d,GACM,IAApBA,EAAM0W,IAAInZ,MACZ4V,GAAMnT,GACgB,IAApBA,EAAM0W,IAAInZ,MAzER,SAACyC,GAChB,IAAI2W,EAAU3W,EAAM2W,QAChBoH,GAAWpH,EAAQ9X,MAAQ8X,EAAQhY,OAAO,EAAM,IAAOqB,EAAM+T,KAAK7V,KAClE8f,GAAWrH,EAAQ5X,MAAQ4X,EAAQ7X,OAAO,EAAM,IAAOkB,EAAM+T,KAAK7V,KACjEyY,EAAQlY,cACXsf,EAAUC,EAAUrH,EAAQ3X,YAE9B+e,GAAW,IAAO/d,EAAM+T,KAAK7V,KAC7B8f,GAAW,IAAOhe,EAAM+T,KAAK7V,KACzB8B,EAAM+T,KAAK5V,cACb4f,EAAUC,EAAUnd,KAAKgB,IAAIkc,EAAQC,IAGvC,IAAIvT,EAAczK,EAAM+T,KAAK9V,SAASqM,IAAK,SAACM,GAC1C,OAAOlL,OAAA6B,EAAA,EAAA7B,CAAA,GAAIkL,EAAX,CACExL,EAAGwL,EAAOxL,EAAI2e,EACd1e,EAAGuL,EAAOvL,EAAI2e,MAGlB,OAAOjC,GAAe/b,EAAOyK,GAuDlBwT,CAASje,QADX,IAMEke,GAAmBT,aAC9B,CACID,IAEJ,SAACvf,GACC,IAAIwb,EAAW,EACXxE,EAAW,KAQf,OAPAhX,EAAS0M,QAAS,SAACC,GACbqK,IACFwE,GAAY5Y,KAAK4Z,KAAK5Z,KAAK2B,IAAIoI,EAAOxL,EAAI6V,EAAS7V,EAAG,GAChCyB,KAAK2B,IAAIoI,EAAOvL,EAAI4V,EAAS5V,EAAG,KAExD4V,EAAWrK,IAEN,CACLuT,UAAWlgB,EAASuB,OACpBia,SAAU5Y,KAAKud,MAAM3E,MCzcrB4E,GAAmBZ,aACvB,CAHmB,SAAAzd,GAAK,OAAIA,EAAM8P,YAIlC,SAACmL,GAGC,IAFA,IAAI2C,EAAY3C,EAAK3I,SACjBgM,EAAgB,GACX3d,EAAE,EAAGA,EAAEid,EAAWjd,IACrBsa,EAAKtJ,cACP2M,EAAcvd,KAAK+O,GAAUmL,EAAM,CAAC7b,EAAG,EAAKC,EAAG,GAAMsB,IAGzD,OAAO2d,IA8BLC,+LACgB,IAAA5P,EAAA/O,KACd4e,EAASC,IAASC,YAAY9e,MAC9B+e,EAAUH,EAAOI,WAAW,MAC5BC,EAASC,SAASC,eAAe,aACrCnf,KAAKof,OAAOR,EAAQK,GACpBI,OAAOC,iBAAiB,SAAU,WAAQvQ,EAAKqQ,OAAOR,EAAQK,KAAW,GAGzEM,WAAW,kBAAMxQ,EAAKqQ,OAAOR,EAAQK,IAAS,KAE9Cjf,KAAKwf,MAAMT,gDAIX,IAAIH,EAASC,IAASC,YAAY9e,MACpB4e,EAAOI,WAAW,MACxBS,UAAU,EAAG,EAAGzf,KAAKwB,MAAM3D,aAAcmC,KAAKwB,MAAM1D,eAC5D,IAAImhB,EAASC,SAASC,eAAe,aACrCnf,KAAKof,OAAOR,EAAQK,6CAMpB,IAAIS,EAAY,EACZC,EAAY,EACZ3f,KAAKwB,MAAMoe,UACbF,EAAY1f,KAAKwB,MAAMvC,MAAQe,KAAKwB,MAAMzC,MAC1C4gB,EAAY3f,KAAKwB,MAAMrC,MAAQa,KAAKwB,MAAMtC,OAG1CygB,EADAD,EAAoC,EAAxB1f,KAAKwB,MAAMpC,WAIzB,IAAIygB,EAAU7f,KAAKwB,MAAM3D,aAAe6hB,EACpCI,EAAU9f,KAAKwB,MAAM1D,cAAgB6hB,EAEzC,MAAoC,IAA7B1e,KAAKgB,IAAI4d,EAASC,sCAGhB9U,GACT,IAAI+U,EAAY/f,KAAKggB,kBAEjBxgB,EAAIwL,EAAOxL,EAAIugB,EAAY/f,KAAKwB,MAAM3D,aAAa,EAEnD4B,GAAKuL,EAAOvL,EAAIsgB,EAAY/f,KAAKwB,MAAM1D,cAAc,EAEzD,OAAOyB,EAAOC,EAAGC,qCAGTsf,EAAS/T,GACjB,IAAIiV,EAAQjgB,KAAKkgB,WAAWlV,GAC5B+T,EAAQoB,OAAOF,EAAMzgB,EAAGygB,EAAMxgB,qCAGtBsf,EAAS/T,GACjB,IAAIiV,EAAQjgB,KAAKkgB,WAAWlV,GAC5B+T,EAAQqB,OAAOH,EAAMzgB,EAAGygB,EAAMxgB,kCAGzBsf,EAAS/T,GACd,IAAIiV,EAAQjgB,KAAKkgB,WAAWlV,GAC5B+T,EAAQsB,IAAIJ,EAAMzgB,EAAGygB,EAAMxgB,EAAGwB,KAAKiB,IAAI,EAA8B,IAAzBlC,KAAKggB,mBAA0B,EAAG,EAAI/e,KAAKC,IAAI,GAC3F6d,EAAQuB,UAAYvB,EAAQwB,YAC5BxB,EAAQyB,8CAGKniB,EAAUoiB,GAEvB,GAAoB,IAAhBA,EACF,OAAOpiB,EAMT,IAAMqiB,EAAiBD,EAAc,IAC/BE,GATa,GASgBF,GAAe,IAE5CG,EAAe3f,KAAK4f,MAAMxiB,EAASuB,OAAS8gB,GAC5CI,EAAa7f,KAAK4f,MAAMxiB,EAASuB,OAAS+gB,GAEhD,OAAOtiB,EAAS0iB,MAAMH,EAAcE,iCAGhC/B,GAOJ,GANAA,EAAQiC,OAGRjC,EAAQkC,YACRlC,EAAQmC,UAAY,IACpBnC,EAAQwB,YAAc,OAClBvgB,KAAKwB,MAAMoe,SACb5f,KAAKmhB,UAAUpC,EAASxf,GAAQS,KAAKwB,MAAMzC,MAAQiB,KAAKwB,MAAMvC,OAAO,GAAMe,KAAKwB,MAAMtC,MAAQc,KAAKwB,MAAMrC,OAAO,IAChHa,KAAKohB,UAAUrC,EAASxf,GAAQS,KAAKwB,MAAMvC,MAAQe,KAAKwB,MAAMzC,OAAO,GAAMiB,KAAKwB,MAAMtC,MAAQc,KAAKwB,MAAMrC,OAAO,IAChHa,KAAKohB,UAAUrC,EAASxf,GAAQS,KAAKwB,MAAMvC,MAAQe,KAAKwB,MAAMzC,OAAO,GAAMiB,KAAKwB,MAAMrC,MAAQa,KAAKwB,MAAMtC,OAAO,IAChHc,KAAKohB,UAAUrC,EAASxf,GAAQS,KAAKwB,MAAMzC,MAAQiB,KAAKwB,MAAMvC,OAAO,GAAMe,KAAKwB,MAAMrC,MAAQa,KAAKwB,MAAMtC,OAAO,IAChHc,KAAKohB,UAAUrC,EAASxf,GAAQS,KAAKwB,MAAMzC,MAAQiB,KAAKwB,MAAMvC,OAAO,GAAMe,KAAKwB,MAAMtC,MAAQc,KAAKwB,MAAMrC,OAAO,QAC3G,CACLa,KAAKmhB,UAAUpC,EAASxf,EAAOS,KAAKwB,MAAMpC,WAAY,IAEtD,IADA,IACS2B,EAAE,EAAGA,GADG,IACaA,IAAK,CACjC,IAAIC,EAAkB,EAAVC,KAAKC,GAFF,IAE0BH,EACzCf,KAAKohB,UAAUrC,EAASxf,EAAOS,KAAKwB,MAAMpC,WAAa6B,KAAKG,IAAIJ,GACjChB,KAAKwB,MAAMpC,WAAa6B,KAAKI,IAAIL,MAGpE+d,EAAQsC,SAER,IAAIC,EAAmBthB,KAAKwB,MAAMnD,SAIlC,IAFAijB,EAAmBthB,KAAKuhB,eAAeD,EAAkBthB,KAAKwB,MAAMif,eAE5Ca,EAAiB1hB,OAAS,EAAG,CAenD,GAZAmf,EAAQkC,YACRlC,EAAQmC,UAAY,EACpBnC,EAAQwB,YAAc,QACtBvgB,KAAKwhB,OAAOzC,EAAS/e,KAAKwB,MAAMnD,SAAS,IACzC0gB,EAAQsC,SACRtC,EAAQkC,YACRlC,EAAQmC,UAAY,EACpBnC,EAAQwB,YAAc,MACtBvgB,KAAKwhB,OAAOzC,EAAS/e,KAAKwB,MAAMnD,SAAS2B,KAAKwB,MAAMnD,SAASuB,OAAO,IACpEmf,EAAQsC,SAGuB,IAA3BrhB,KAAKwB,MAAMif,YAAmB,CAChC1B,EAAQkC,YACRlC,EAAQmC,UAAYlhB,KAAKggB,kBACzBjB,EAAQwB,YAAc,OACtBvgB,KAAKmhB,UAAUpC,EAAS/e,KAAKwB,MAAMnD,SAAS,IAC5C,IAAK,IAAI0C,EAAE,EAAGA,EAAEf,KAAKwB,MAAMnD,SAASuB,OAAQmB,IAC1Cf,KAAKohB,UAAUrC,EAAS/e,KAAKwB,MAAMnD,SAAS0C,IAE9Cge,EAAQsC,SAIVtC,EAAQkC,YACRlC,EAAQmC,UAAYlhB,KAAKggB,kBACzBjB,EAAQwB,YAAc,SACtBvgB,KAAKmhB,UAAUpC,EAASuC,EAAiB,IACzC,IAAK,IAAIvgB,EAAE,EAAGA,EAAEugB,EAAiB1hB,OAAQmB,IACvCf,KAAKohB,UAAUrC,EAASuC,EAAiBvgB,IAE3Cge,EAAQsC,SAGV,GAAIrhB,KAAKwB,MAAMkd,eAAiB1e,KAAKwB,MAAMkd,cAAc9e,OAAS,GAAKI,KAAKwB,MAAMigB,UAAW,CAE3F1C,EAAQkC,YACRlC,EAAQmC,UAAYlhB,KAAKggB,kBACzBjB,EAAQwB,YAAc,QACtBvgB,KAAKmhB,UAAUpC,EAAS/e,KAAKwB,MAAMkd,cAAc,IACjD,IAAK,IAAI3d,EAAE,EAAGA,EAAEf,KAAKwB,MAAMkd,cAAc9e,OAAQmB,IAC/Cf,KAAKohB,UAAUrC,EAAS/e,KAAKwB,MAAMkd,cAAc3d,IAEnDge,EAAQsC,SAGVtC,EAAQ2C,yCAGH9C,EAAQK,GACb,IAAInM,EAAOrO,SAASkd,iBAAiB1C,GAAQ2C,iBAAiB,SAAS,IACvEhD,EAAO3T,MAAQ6H,EACf8L,EAAOzT,OAAS2H,EACZ9S,KAAKwB,MAAM3D,eAAiBiV,GAC9B9S,KAAKwB,MAAMqgB,SAAS/O,GAEtB,IAAIiM,EAAUH,EAAOI,WAAW,MAChChf,KAAKwf,MAAMT,oCAGJ,IAAA+C,EAC+B9hB,KAAKwB,MAApC3D,EADAikB,EACAjkB,aAAcC,EADdgkB,EACchkB,cACrB,OACIwP,EAAA1J,EAAA2J,cAAA,UAAQgB,UAAU,SAChBtD,MAAOpN,EACPsN,OAAQrN,WAtLU+Q,aA2L5B8P,GAAgB1O,YArNQ,SAAC7P,EAAOC,GAC9B,MAAO,CACLuf,SAAUxf,EAAM2W,QAAQlY,YACxBE,MAAOqB,EAAM2W,QAAQhY,MACrBE,MAAOmB,EAAM2W,QAAQ9X,MACrBC,MAAOkB,EAAM2W,QAAQ7X,MACrBC,MAAOiB,EAAM2W,QAAQ5X,MACrBC,WAAYgB,EAAM2W,QAAQ3X,WAC1BvB,aAAcuC,EAAM0W,IAAIjZ,aACxBC,cAAesC,EAAM0W,IAAIhZ,cACzBO,SAAUuf,GAAYxd,GACtBqgB,YAAargB,EAAM0W,IAAI/Y,cACvB0jB,UAA+B,IAApBrhB,EAAM0W,IAAInZ,MACrB+gB,cAAeD,GAAiBre,KAIT,SAACI,EAAUH,GACpC,MAAO,CACLwhB,SAAU,SAAC/O,GACTtS,EAjDG,CACLG,KAAM,mBACNR,MA+CiC2S,OAiMrB7C,CAA6C0O,IAE7D,IAeMoD,oLAEF,OACEzU,EAAA1J,EAAA2J,cAAA,OAAKgB,UAAU,mBAEbjB,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,KACIF,EAAA1J,EAAA2J,cAACyU,GAAD,MADJ,WAEahiB,KAAKwB,MAAMygB,cAAc1D,UAFtC,eAE6Dve,KAAKwB,MAAMygB,cAAcpI,SAClFvM,EAAA1J,EAAA2J,cAAA,OAAKgB,UAAU,aACXjB,EAAA1J,EAAA2J,cAAC2U,GAAA,EAAD,CACE/hB,MAAOH,KAAKwB,MAAMif,YAClBpe,KAAM,EACNJ,IAAK,EACLC,IAAK,IACLT,SAAUzB,KAAKwB,MAAM2gB,YAG3B7U,EAAA1J,EAAA2J,cAAA,OAAKgB,UAAU,WAAWT,GAAG,aACzBR,EAAA1J,EAAA2J,cAAC6U,GAAD,gBAlBavT,aA2BdkT,GAFfA,GAAiB9R,YAxCW,SAAC7P,EAAOC,GAClC,MAAO,CACLogB,YAAargB,EAAM0W,IAAI/Y,cACvBkkB,cAAe3D,GAAiBle,KAIL,SAACI,EAAUH,GACxC,MAAO,CACL8hB,SAAU,SAAChiB,GACTK,EAxP0B,SAAEL,GAChC,MAAO,CACLQ,KAAM,qBACNR,MAAOA,GAqPIkiB,CAAiBliB,OA8Bf8P,CAAqD8R,IC3PzDO,WAAe,SAAEtH,GAC5B,MAAO,CACLra,KAAM,iBACNR,MAAO6a,KAWX,SAASuH,GAAS/jB,EAAUgkB,GAE1B,IAAI7e,EAAOub,SAAS3R,cAAc,KAClC5J,EAAK4e,SAAW/jB,EAEhB,IAAIikB,EAAO,IAAIC,KAAK,CAACF,GAAM,CAAC7hB,KAAM,6BAGlC,GAAI0e,OAAOsD,WAAatD,OAAOsD,UAAUC,iBACvCvD,OAAOsD,UAAUC,iBAAiBH,EAAMjkB,OACnC,CAEL,GADAmF,EAAK2K,KAAOuU,IAAIC,gBAAgBL,GAC5BvD,SAAS6D,YAAa,CACxB,IAAIriB,EAAQwe,SAAS6D,YAAY,eACjCriB,EAAMsiB,UAAU,SAAS,GAAM,GAC/Brf,EAAKsf,cAAcviB,QAGnBiD,EAAKuf,QAEPL,IAAIM,gBAAgBxf,EAAK2K,OAK7B,SAAS8U,GAAMpY,GACb,IAAIqY,EAAU,QACLrY,EAAOxL,EAAE8jB,QAAQ,GACxB,KAAOtY,EAAOvL,EAAE6jB,QAAQ,GAI1B,OAHItY,EAAOuY,MAAQ,IACjBF,GAAW,KAAOrY,EAAOtL,GAEpB2jB,EAAU,KAGnB,SAASG,GAASxY,GAChB,OAAYA,EAAOxL,EAAE8jB,QAAQ,GAAK,IAAMtY,EAAOvL,EAAE6jB,QAAQ,GAAK,KAGhE,IAAMG,GAAc,SAACrjB,GAEnB,IAAIhC,EAAW,GAef,OAdAA,EAAS+C,KAAK,sBACd/C,EAAS+C,KAAK,IACd/C,EAAS+C,KAAK,yBACd/C,EAAS+C,KAAK,IACd/C,EAAS+C,KAAK,sBAAwBf,EAAM0W,IAAIpZ,gBAChDU,EAAS+C,KAAK,IACd/C,EAAS+C,KAAK,oBAAsBf,EAAM2W,QAAQlY,YAAc,cAAgB,UAC5EuB,EAAM2W,QAAQlY,YAChBT,EAAS+C,KAAK,aAAef,EAAM2W,QAAQhY,MAAQ,UAAYqB,EAAM2W,QAAQ9X,MAAQ,UAAYmB,EAAM2W,QAAQ7X,MAAQ,UAAYkB,EAAM2W,QAAQ5X,QAEjJf,EAAS+C,KAAK,mBAAqBf,EAAM2W,QAAQ3X,YACjDhB,EAAS+C,KAAK,wBAA0Bf,EAAM2W,QAAQzX,iBAGhDc,EAAM0W,IAAInZ,OAChB,KAAK,EACH,IAAI+lB,EAAYtjB,EAAMG,OAAOA,OAAOojB,KAAK,SAAArX,GAAK,OAAIA,EAAMnO,OAASiC,EAAMG,OAAOkP,eAE9ErR,EAAS+C,KAAK,0BACd/C,EAAS+C,KAAK,sBAAwBf,EAAMG,OAAOoP,cACnDvR,EAAS+C,KAAK,kBAAoBf,EAAM8P,UAAUC,aAAe,OAAS/P,EAAM8P,UAAUE,cAC1FhS,EAAS+C,KAAK,uBAAyBuiB,EAAUvlB,MAEjDulB,EAAUpiB,QAAQyJ,QAAQ,SAACsC,GACzBjP,EAAS+C,KAAK,SAAWkM,EAAO9L,MAAQ,KAAOnB,EAAMG,OAAO8M,EAAOnN,QAGrE9B,EAAS+C,KAAK,wBAA0Bf,EAAM8P,UAAUwC,UACxDtU,EAAS+C,KAAK,aAAef,EAAM8P,UAAUgB,aACzC9Q,EAAM8P,UAAUgB,cAClB9S,EAAS+C,KAAK,qBAAuBf,EAAM8P,UAAUiB,WACrD/S,EAAS+C,KAAK,2BAA6Bf,EAAM8P,UAAUkB,kBAE7DhT,EAAS+C,KAAK,aAAef,EAAM8P,UAAUoB,aACzClR,EAAM8P,UAAUoB,aAClBlT,EAAS+C,KAAK,qBAAuBf,EAAM8P,UAAUqB,WAEvDnT,EAAS+C,KAAK,cAAgBf,EAAM8P,UAAU6B,cAC1C3R,EAAM8P,UAAU6B,eAClB3T,EAAS+C,KAAK,qBAAuBf,EAAM8P,UAAU+B,YACrD7T,EAAS+C,KAAK,uBAAyBf,EAAM8P,UAAUgC,aACvD9T,EAAS+C,KAAK,qBAAuBf,EAAM8P,UAAU8B,kBACjD5R,EAAM8P,UAAU8B,kBAClB5T,EAAS+C,KAAK,+BAAiCf,EAAM8P,UAAU2B,YAGnE,MACF,KAAK,EACHzT,EAAS+C,KAAK,yBACd/C,EAAS+C,KAAK,oBAAsBf,EAAMmT,MAAMV,UAChDzU,EAAS+C,KAAK,mBAAsBf,EAAMmT,MAAMT,MAChD,MACF,KAAK,EACH1U,EAAS+C,KAAK,4BACd/C,EAAS+C,KAAK,mBAAqBf,EAAM+T,KAAKhW,MAC9CC,EAAS+C,KAAK,aAAgBf,EAAM+T,KAAK7V,MACzCF,EAAS+C,KAAK,qBAAuBf,EAAM+T,KAAK5V,aAChD,MACF,QACEH,EAAS+C,KAAK,2BAMlB,OAHA/C,EAAS+C,KAAK,oBAAsBf,EAAM0W,IAAIlZ,SAC9CQ,EAAS+C,KAAK,IAEP/C,GA8CHwlB,2LAEY,IAAA7U,EAAA/O,KACV6jB,EAAU,KAAO7jB,KAAKwB,MAAMsiB,SAAS9P,KAAK,QAC9C6P,GAAW,KACXA,GAAW,gBAAkB7jB,KAAKwB,MAAMhD,SAAW,QACnDqlB,GAAW,gBACXA,GAAW7jB,KAAKwB,MAAM/C,IACtBolB,GAAW,cAEX3O,QAAQC,IAAI,aAAenV,KAAKwB,MAAMuiB,QAAU,OAAS/jB,KAAKwB,MAAMwiB,SAWpEH,GAVuB7jB,KAAKwB,MAAMnD,SAASqM,IAAK,SAACM,GAC/C,OAAOlL,OAAA6B,EAAA,EAAA7B,CAAA,GACFkL,EADL,CAEExL,EAAGwL,EAAOxL,EAAIuP,EAAKvN,MAAMuiB,QACzBtkB,EAAGuL,EAAOvL,EAAIsP,EAAKvN,MAAMwiB,YAIAtZ,IAAI0Y,IAEhBpP,KAAK,IAEtB6P,GAAW,KACXA,GAAW,iBACXA,GAAW7jB,KAAKwB,MAAM5C,KACtBilB,GAAW,eACX,IAAIrlB,EAAWwB,KAAKwB,MAAMhD,SACrBA,EAASylB,SAAS,OACrBzlB,GAAY,UAEd+jB,GAAS/jB,EAAUqlB,GACnB7jB,KAAKwB,MAAM0iB,mDAIX,IAAIL,EAAU,KAAO7jB,KAAKwB,MAAMsiB,SAAS9P,KAAK,QAC9C6P,GAAW,KACXA,GAAW,gBAAkB7jB,KAAKwB,MAAMhD,SAAW,QACnDqlB,GAAW,gBACXA,GAAW7jB,KAAKwB,MAAM/C,IACtBolB,GAAW,cACXA,GAAW,KAGX,IAGItO,EAFA4O,EAAqB,GACrB9O,OAAWvW,EAEf,IAAKyW,EAAO,EAAGA,EAAOvV,KAAKwB,MAAMnD,SAASuB,OAAQ2V,IAAQ,CACxD,QAAiBzW,IAAbuW,EAQF,IAPA,IAAI0E,EAAQrB,KAAOS,WAAWnZ,KAAKwB,MAAMnD,SAASgX,IAC9C2E,EAAMtB,KAAOS,WAAWnZ,KAAKwB,MAAMnD,SAASkX,IAE5C6O,EAAQpK,EAAI7B,QAAQC,SAAS2B,GAC7BsK,EAAerK,EAAI7B,QAAQC,SAAS2B,GAAOW,YAAYjC,SAASC,KAVxD,MAaHrW,EAAO,EAAGA,EAAQ+hB,EAAM9J,YAbrB,EAagDjY,IAC1D8hB,EAAmBhjB,KAAK5B,EAAOwa,EAAMva,EAAI6C,EAAOgiB,EAAa7kB,EAC9Bua,EAAMta,EAAI4C,EAAOgiB,EAAa5kB,EAC9BO,KAAKwB,MAAMnD,SAASkX,GAAM7V,IAI7D2V,EAAWE,OAGIzW,IAAbuW,GACF8O,EAAmBhjB,KAAKnB,KAAKwB,MAAMnD,SAAS2B,KAAKwB,MAAMnD,SAASuB,OAAS,IAI3E,IAAI0kB,EAAa,GACbC,EAAgB,EAChBC,EAAmB,EACvB,IAAKjP,EAAO,EAAGA,EAAO4O,EAAmBvkB,SAAU2V,EAAM,CAEvD,IAAIG,EAAMgD,KAAOS,WAAWgL,EAAmB5O,IAAO+E,YAActa,KAAKwB,MAAMpC,WAG3EqlB,EAAWxjB,KAAKyjB,MAAMP,EAAmB5O,GAAM/V,EACzB2kB,EAAmB5O,GAAM9V,GAK/CklB,GAHJF,GAAYA,EAAW,EAAMxjB,KAAKC,KAAO,EAAMD,KAAKC,KAGxBsjB,EAExBG,GAAc1jB,KAAKC,KACrByjB,GAAc,EAAM1jB,KAAKC,IAEvByjB,EAAa1jB,KAAKC,KACpByjB,GAAc,EAAM1jB,KAAKC,IAE3B,IAAI2D,EAAQ0f,EAAgBI,EAC5BH,EAAmBC,EACnBF,EAAgB1f,EAEhByf,EAAWnjB,KAAK5B,EAAOsF,EAAO6Q,EAAKyO,EAAmB5O,GAAM7V,IAK9DmkB,GAFYS,EAAW5Z,IAAI8Y,IAEVxP,KAAK,IAEtB6P,GAAW,KACXA,GAAW,iBACXA,GAAW7jB,KAAKwB,MAAM5C,KACtBilB,GAAW,eAEX,IAAIrlB,EAAWwB,KAAKwB,MAAMhD,SACrBA,EAASylB,SAAS,OACrBzlB,GAAY,QAEd+jB,GAAS/jB,EAAUqlB,GAEnB7jB,KAAKwB,MAAM0iB,yCAIX,IAAMU,EAAsB5kB,KAAKwB,MAAM5D,QAAU,SAAW,KAC5D,OACE0P,EAAA1J,EAAA2J,cAAA,WACED,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAQe,UAAU,eAAeV,QAAQ,UAAUgX,OAAO,QAAQlW,QAAS3O,KAAKwB,MAAMsjB,MAAtF,eACAxX,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAOuX,KAAM/kB,KAAKwB,MAAMujB,KAAMC,OAAQhlB,KAAKwB,MAAM0iB,OAC/C5W,EAAA1J,EAAA2J,cAACC,EAAA,EAAMuF,OAAP,CAAckS,aAAW,GACvB3X,EAAA1J,EAAA2J,cAACC,EAAA,EAAM0X,MAAP,yBAEF5X,EAAA1J,EAAA2J,cAACC,EAAA,EAAM2X,KAAP,KACE7X,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAWC,UAAU,mBACnBH,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,uBACAF,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAa7M,KAAK,OAAOR,MAAOH,KAAKwB,MAAMhD,SAAUiD,SAAUzB,KAAKwB,MAAM4jB,eAE5E9X,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAWC,UAAU,WACnBH,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,2BACAF,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAaE,eAAe,WAAWvN,MAAOH,KAAKwB,MAAM/C,IAAKgD,SAAUzB,KAAKwB,MAAM6jB,UAErF/X,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAWC,UAAU,YACnBH,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,yBACAF,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAaE,eAAe,WAAWvN,MAAOH,KAAKwB,MAAM5C,KAAM6C,SAAUzB,KAAKwB,MAAM8jB,WAEtFhY,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAesD,OAAO,eAAevC,UAAWqW,EAAoBjW,QAAS3O,KAAKwB,MAAM+jB,eAAxF,sDAEFjY,EAAA1J,EAAA2J,cAACC,EAAA,EAAMgY,OAAP,KACElY,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAQM,GAAG,aAAaD,QAAQ,UAAUc,QAAS3O,KAAKwB,MAAM0iB,OAA9D,SACA5W,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAQM,GAAG,iBAAiBD,QAAQ,UAAUc,QAAS3O,KAAKylB,cAAcvP,KAAKlW,OAA/E,kBACAsN,EAAA1J,EAAA2J,cAACC,EAAA,EAAD,CAAQM,GAAG,oBAAoBD,QAAQ,UAAUc,QAAS3O,KAAK0lB,iBAAiBxP,KAAKlW,OAArF,gCAnJiB6O,aA4Jd+U,GAFfA,GAAiB3T,YArME,SAAC7P,EAAOC,GACzB,MAAO,CACLzC,QAASwC,EAAM0W,IAAIlZ,QACnBmnB,KAAM3kB,EAAM0W,IAAI5Y,UAChBG,SAAUuf,GAAYxd,GAEtB0jB,SAAUL,GAAYrjB,GACtB2jB,SAAU3jB,EAAM2W,QAAQhY,MAAQqB,EAAM2W,QAAQ9X,OAAS,EACvD+kB,SAAU5jB,EAAM2W,QAAQ7X,MAAQkB,EAAM2W,QAAQ5X,OAAS,EACvDC,WAAYgB,EAAM2W,QAAQ3X,WAE1BZ,SAAU4B,EAAMgjB,MAAM5kB,SACtBC,IAAK2B,EAAMgjB,MAAM3kB,IACjBG,KAAMwB,EAAMgjB,MAAMxkB,OAIA,SAAC4B,EAAUH,GAC/B,MAAO,CACLykB,KAAM,WACJtkB,EAAS8hB,IAAa,KAExB4B,MAAO,WACL1jB,EAAS8hB,IAAa,KAExBiD,cAAe,WACb/kB,EA3JG,CACLG,KAAM,oBA4JNykB,YAAa,SAAC1kB,GACZF,EArLG,CACLG,KAAM,qBACNR,MAmL4BO,EAAME,OAAOT,SAEzCklB,OAAQ,SAAC3kB,GAjLc,IAAE8hB,EAkLvBhiB,GAlLuBgiB,EAkLF9hB,EAAME,OAAOT,MAjLtCzB,aAAasY,QAAQ,YAAawL,GAC3B,CACL7hB,KAAM,gBACNR,MAAOqiB,MAgLP8C,QAAS,SAAC5kB,GA5Kc,IAAE8hB,EA6KxBhiB,GA7KwBgiB,EA6KF9hB,EAAME,OAAOT,MA5KvCzB,aAAasY,QAAQ,aAAcwL,GAC5B,CACL7hB,KAAM,iBACNR,MAAOqiB,QA2UMvS,CAAmC2T,IChW9C+B,GACJC,YACEC,YACE,CACE/O,IjCVO,WAA2C,IAA9B1W,EAA8BT,UAAAC,OAAA,QAAAd,IAAAa,UAAA,GAAAA,UAAA,GAAtBlC,EAAciE,EAAQ/B,UAAAC,OAAA,EAAAD,UAAA,QAAAb,EACxD,OAAQ4C,EAAOf,MAGb,IAAK,eACH,OAAOb,OAAA6B,EAAA,EAAA7B,CAAA,GAAIM,EAAX,CACEzC,MAAO+D,EAAOvB,QAElB,IAAK,iBACH,OAAOL,OAAA6B,EAAA,EAAA7B,CAAA,GAAIM,EAAX,CACExC,SAAUwC,EAAMxC,UAEpB,IAAK,mBACH,OAAOkC,OAAA6B,EAAA,EAAA7B,CAAA,GAAIM,EAAX,CACEvC,aAAc6D,EAAOvB,MACrBrC,cAAe4D,EAAOvB,QAE1B,IAAK,qBACH,OAAOL,OAAA6B,EAAA,EAAA7B,CAAA,GAAIM,EAAX,CACErC,cAAe2D,EAAOvB,QAE1B,IAAK,+BACH,OAAOL,OAAA6B,EAAA,EAAA7B,CAAA,GAAIM,EAAX,CACEpC,qBAAsBoC,EAAMpC,oBAC5BC,sBAAsB,IAE1B,IAAK,gCACH,OAAO6B,OAAA6B,EAAA,EAAA7B,CAAA,GAAIM,EAAX,CACEnC,sBAAuBmC,EAAMnC,qBAC7BD,qBAAqB,IAEzB,IAAK,iBACH,OAAO8B,OAAA6B,EAAA,EAAA7B,CAAA,GAAIM,EAAX,CACElC,UAAWwD,EAAOvB,QAItB,IAAK,eAEL,QACE,OAAOC,IiC7BL+T,KhCfO,WAA4C,IAA9B/T,EAA8BT,UAAAC,OAAA,QAAAd,IAAAa,UAAA,GAAAA,UAAA,GAAtBlC,EAAciE,EAAQ/B,UAAAC,OAAA,EAAAD,UAAA,QAAAb,EACzD,OAAQ4C,EAAOf,MAGb,IAAK,oBACH,OAAOb,OAAA6B,EAAA,EAAA7B,CAAA,GAAIM,EAAX,CACE/B,SAAWqD,EAAOrD,WAEtB,IAAK,gBACH,OAAOyB,OAAA6B,EAAA,EAAA7B,CAAA,GAAIM,EAAX,CACEjC,KAAMuD,EAAOvB,QAEjB,IAAK,mBACH,OAAOL,OAAA6B,EAAA,EAAA7B,CAAA,GAAIM,EAAX,CACE0lB,QAASpkB,EAAOvB,QAEpB,IAAK,gBACH,OAAOL,OAAA6B,EAAA,EAAA7B,CAAA,GAAIM,EAAX,CACE9B,KAAMoD,EAAOvB,QAEjB,IAAK,2BACH,OAAOL,OAAA6B,EAAA,EAAA7B,CAAA,GAAIM,EAAX,CACE7B,aAAc6B,EAAM7B,cAGxB,IAAK,eAEL,QACE,OAAO6B,IgCZLgjB,M/BlBO,WAA6C,IAA9BhjB,EAA8BT,UAAAC,OAAA,QAAAd,IAAAa,UAAA,GAAAA,UAAA,GAAtBlC,EAAciE,EAAQ/B,UAAAC,OAAA,EAAAD,UAAA,QAAAb,EAC1D,OAAQ4C,EAAOf,MAGb,IAAK,qBACH,OAAOb,OAAA6B,EAAA,EAAA7B,CAAA,GAAIM,EAAX,CACE5B,SAAUkD,EAAOvB,QAErB,IAAK,gBACH,OAAOL,OAAA6B,EAAA,EAAA7B,CAAA,GAAIM,EAAX,CACE3B,IAAKiD,EAAOvB,QAEhB,IAAK,iBACH,OAAOL,OAAA6B,EAAA,EAAA7B,CAAA,GAAIM,EAAX,CACExB,KAAM8C,EAAOvB,QAGjB,IAAK,eAEL,QACE,OAAOC,I+BDL2W,Q9BbO,WAA+C,IAA9B3W,EAA8BT,UAAAC,OAAA,QAAAd,IAAAa,UAAA,GAAAA,UAAA,GAAtBlC,EAAciE,EAAQ/B,UAAAC,OAAA,EAAAD,UAAA,QAAAb,EAC5D,OAAQ4C,EAAOf,MAEb,IAAK,+BACH,OAAOb,OAAA6B,EAAA,EAAA7B,CAAA,GAAIM,EAAX,CACEvB,aAAa,IAEjB,IAAK,gCACH,OAAOiB,OAAA6B,EAAA,EAAA7B,CAAA,GAAIM,EAAX,CACEvB,aAAa,IAGjB,IAAK,YACH,OAAOiB,OAAA6B,EAAA,EAAA7B,CAAA,GAAIM,EAAX,CACErB,MAAO2C,EAAOvB,QAElB,IAAK,YACH,OAAOL,OAAA6B,EAAA,EAAA7B,CAAA,GAAIM,EAAX,CACEnB,MAAOyC,EAAOvB,QAElB,IAAK,YACH,OAAOL,OAAA6B,EAAA,EAAA7B,CAAA,GAAIM,EAAX,CACElB,MAAOwC,EAAOvB,QAElB,IAAK,YACH,OAAOL,OAAA6B,EAAA,EAAA7B,CAAA,GAAIM,EAAX,CACEjB,MAAOuC,EAAOvB,QAElB,IAAK,iBACH,OAAOL,OAAA6B,EAAA,EAAA7B,CAAA,GAAIM,EAAX,CACEhB,WAAYsC,EAAOvB,QAEvB,IAAK,0BAEH,IADA,IAAI4lB,EAAW,GACNhlB,EAAI,EAAGA,EAAIW,EAAOvB,MAAMP,OAASmB,IACxC,IAAKX,EAAMf,WAAW4kB,SAASviB,EAAOvB,MAAMY,IAAK,CAC/CglB,EAAS5kB,KAAKO,EAAOvB,MAAMY,IAC3B,MAGJ,OAAOjB,OAAA6B,EAAA,EAAA7B,CAAA,GAAIM,EAAX,CACEf,WAAY0mB,IAEhB,IAAK,2BACH,OAAOjmB,OAAA6B,EAAA,EAAA7B,CAAA,GAAIM,EAAX,CACEd,gBAAiBc,EAAMd,iBAE3B,IAAK,eAEL,QACE,OAAOc,I8BpCLG,SACA2P,UZXO,WAAiD,IAA9B9P,EAA8BT,UAAAC,OAAA,QAAAd,IAAAa,UAAA,GAAAA,UAAA,GAAtBlC,EAAciE,EAAQ/B,UAAAC,OAAA,EAAAD,UAAA,QAAAb,EAC9D,OAAQ4C,EAAOf,MAEb,IAAK,qBACH,OAAOb,OAAA6B,EAAA,EAAA7B,CAAA,GAAIM,EAAX,CACE+P,aAAczO,EAAOvB,QAGzB,IAAK,qBACH,OAAOL,OAAA6B,EAAA,EAAA7B,CAAA,GAAIM,EAAX,CACEgQ,aAAc1O,EAAOvB,QAGzB,IAAK,YACH,OAAOL,OAAA6B,EAAA,EAAA7B,CAAA,GAAIM,EAAX,CACEsS,SAAUhR,EAAOvB,QAGrB,IAAK,cACH,OAAOL,OAAA6B,EAAA,EAAA7B,CAAA,GAAIM,EAAX,CACE8Q,aAAc9Q,EAAM8Q,cAGxB,IAAK,cACH,OAAOpR,OAAA6B,EAAA,EAAA7B,CAAA,GAAIM,EAAX,CACEkR,aAAclR,EAAMkR,cAGxB,IAAK,eACH,OAAOxR,OAAA6B,EAAA,EAAA7B,CAAA,GAAIM,EAAX,CACE2R,cAAe3R,EAAM2R,eAGzB,IAAK,oBACH,OAAOjS,OAAA6B,EAAA,EAAA7B,CAAA,GAAIM,EAAX,CACE4R,kBAAmB5R,EAAM4R,mBAG7B,IAAK,WACH,OAAOlS,OAAA6B,EAAA,EAAA7B,CAAA,GAAIM,EAAX,CACE+Q,UAAWzP,EAAOvB,QAGtB,IAAK,uBACH,OAAOL,OAAA6B,EAAA,EAAA7B,CAAA,GAAIM,EAAX,CACEgR,gBAAkB1P,EAAOvB,OAAS,EAAGuB,EAAOvB,MAAQ,IAGxD,IAAK,WACH,OAAOL,OAAA6B,EAAA,EAAA7B,CAAA,GAAIM,EAAX,CACEmR,UAAW7P,EAAOvB,QAGtB,IAAK,YACH,OAAOL,OAAA6B,EAAA,EAAA7B,CAAA,GAAIM,EAAX,CACE6R,WAAYvQ,EAAOvB,QAGvB,IAAK,mBACH,OAAOL,OAAA6B,EAAA,EAAA7B,CAAA,GAAIM,EAAX,CACE8R,YAAaxQ,EAAOvB,QAGxB,IAAK,iBACH,OAAOL,OAAA6B,EAAA,EAAA7B,CAAA,GAAIM,EAAX,CACEyR,UAAWnQ,EAAOvB,QAItB,IAAK,eAEL,QACE,OAAOC,IY5DLmT,MXvBO,WAA6C,IAA9BnT,EAA8BT,UAAAC,OAAA,QAAAd,IAAAa,UAAA,GAAAA,UAAA,GAAtBlC,EAAciE,EAAQ/B,UAAAC,OAAA,EAAAD,UAAA,QAAAb,EAC1D,OAAQ4C,EAAOf,MAGb,IAAK,sBACH,OAAOb,OAAA6B,EAAA,EAAA7B,CAAA,GAAIM,EAAX,CACEyS,SAAUnR,EAAOvB,QAErB,IAAK,iBACH,OAAOL,OAAA6B,EAAA,EAAA7B,CAAA,GAAIM,EAAX,CACE0S,KAAMpR,EAAOvB,QAGjB,IAAK,eAEL,QACE,OAAOC,OW6CE4lB,oLA/BX,OACE1Y,EAAA1J,EAAA2J,cAAC0Y,EAAA,EAAD,CAAUN,MAAOA,IACfrY,EAAA1J,EAAA2J,cAAA,OAAKgB,UAAU,OAEbjB,EAAA1J,EAAA2J,cAAA,OAAKgB,UAAU,cACbjB,EAAA1J,EAAA2J,cAAC2Y,GAAD,OAGF5Y,EAAA1J,EAAA2J,cAAA,OAAKgB,UAAU,sBACbjB,EAAA1J,EAAA2J,cAAC4Y,GAAD,OAGF7Y,EAAA1J,EAAA2J,cAAA,OAAKgB,UAAU,qBACbjB,EAAA1J,EAAA2J,cAAA,OAAKgB,UAAU,cACbjB,EAAA1J,EAAA2J,cAAC6Y,GAAD,OAGF9Y,EAAA1J,EAAA2J,cAAA,OAAKO,GAAG,UACNR,EAAA1J,EAAA2J,cAAC8Y,GAAD,QAGJ/Y,EAAA1J,EAAA2J,cAAA,OAAKgB,UAAU,sBACbjB,EAAA1J,EAAA2J,cAAC+Y,GAAD,gBA1BMzX,oBCzBlBgQ,IAAS0H,OACPjZ,EAAA1J,EAAA2J,cAACiZ,GAAD,MACAtH,SAASC,eAAe","file":"static/js/main.2732b1fe.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.a6ab37e6.svg\";","\nconst defaultState = {\n  sandifyVersion: \"0.1.7\", // Also change the version in package.json.\n  input: 0,\n  reverse: false,\n  canvas_width: 600,\n  canvas_height: 600,\n  machineSlider: 0.0,\n  machineRectExpanded: false,\n  machinePolarExpanded: false,\n  showGCode: false,\n}\n\nexport default function app(state = defaultState, action) {\n  switch (action.type) {\n\n    // Vertex actions\n    case 'CHOOSE_INPUT':\n      return {...state,\n        input: action.value,\n      };\n    case 'TOGGLE_REVERSE':\n      return {...state,\n        reverse: !state.reverse,\n      };\n    case 'SET_MACHINE_SIZE':\n      return {...state,\n        canvas_width: action.value,\n        canvas_height: action.value,\n      };\n    case 'SET_MACHINE_SLIDER':\n      return {...state,\n        machineSlider: action.value,\n      };\n    case 'TOGGLE_MACHINE_RECT_EXPANDED':\n      return {...state,\n        machineRectExpanded: !state.machineRectExpanded,\n        machinePolarExpanded: false,\n      };\n    case 'TOGGLE_MACHINE_POLAR_EXPANDED':\n      return {...state,\n        machinePolarExpanded: !state.machinePolarExpanded,\n        machineRectExpanded: false,\n      };\n    case 'SET_SHOW_GCODE':\n      return {...state,\n        showGCode: action.value,\n      };\n\n\n    case '@@redux/INIT':\n      return state;\n    default:\n      return state;\n  }\n}\n\n\n\n","\nconst defaultState = {\n  name: \"\",\n  comments: [],\n  vertices: [],\n  zoom: 100,\n  aspectRatio: false,\n}\n\nexport default function file(state = defaultState, action) {\n  switch (action.type) {\n\n    // File actions\n    case 'SET_FILE_VERTICES':\n      return {...state,\n        vertices : action.vertices,\n      };\n    case 'SET_FILE_NAME':\n      return {...state,\n        name: action.value,\n      };\n    case 'SET_FILE_COMMENT':\n      return {...state,\n        comment: action.value,\n      };\n    case 'SET_FILE_ZOOM':\n      return {...state,\n        zoom: action.value,\n      };\n    case 'TOGGLE_FILE_ASPECT_RATIO':\n      return {...state,\n        aspectRatio: !state.aspectRatio,\n      };\n\n    case '@@redux/INIT':\n      return state;\n    default:\n      return state;\n  }\n}\n\n\n\n","\nconst defaultState = {\n  filename: \"sandify\",\n  pre: localStorage.getItem('gcode_pre') ? localStorage.getItem('gcode_pre') : '',\n  post: localStorage.getItem('gcode_post') ? localStorage.getItem('gcode_post') : '',\n}\n\nexport default function gcode(state = defaultState, action) {\n  switch (action.type) {\n\n    // GCode Settings\n    case 'SET_GCODE_FILENAME':\n      return {...state,\n        filename: action.value,\n      };\n    case 'SET_GCODE_PRE':\n      return {...state,\n        pre: action.value,\n      };\n    case 'SET_GCODE_POST':\n      return {...state,\n        post: action.value,\n      };\n\n    case '@@redux/INIT':\n      return state;\n    default:\n      return state;\n  }\n}\n\n\n\n","\nconst defaultState = {\n  // Machine settings\n  rectangular: undefined !== localStorage.getItem('machine_rect_active') ? localStorage.getItem('machine_rect_active') < 2 : true,\n  min_x: parseFloat(localStorage.getItem('machine_min_x') ? localStorage.getItem('machine_min_x') : 0),\n  max_x: parseFloat(localStorage.getItem('machine_max_x') ? localStorage.getItem('machine_max_x') : 500),\n  min_y: parseFloat(localStorage.getItem('machine_min_y') ? localStorage.getItem('machine_min_y') : 0),\n  max_y: parseFloat(localStorage.getItem('machine_max_y') ? localStorage.getItem('machine_max_y') : 500),\n  max_radius: localStorage.getItem('machine_radius') ? localStorage.getItem('machine_radius') : 250,\n  rectOrigin: [],\n  polarEndpoints: false,\n}\n\nexport default function machine(state = defaultState, action) {\n  switch (action.type) {\n    // Machine Settings\n    case 'TOGGLE_MACHINE_RECT_EXPANDED':\n      return {...state,\n        rectangular: true,\n      };\n    case 'TOGGLE_MACHINE_POLAR_EXPANDED':\n      return {...state,\n        rectangular: false,\n      };\n\n    case 'SET_MIN_X':\n      return {...state,\n        min_x: action.value,\n      };\n    case 'SET_MAX_X':\n      return {...state,\n        max_x: action.value,\n      };\n    case 'SET_MIN_Y':\n      return {...state,\n        min_y: action.value,\n      };\n    case 'SET_MAX_Y':\n      return {...state,\n        max_y: action.value,\n      };\n    case 'SET_MAX_RADIUS':\n      return {...state,\n        max_radius: action.value,\n      };\n    case 'SET_MACHINE_RECT_ORIGIN':\n      let newValue = [];\n      for (let i = 0; i < action.value.length ; i++) {\n        if (!state.rectOrigin.includes(action.value[i])) {\n          newValue.push(action.value[i]);\n          break;\n        }\n      }\n      return {...state,\n        rectOrigin: newValue,\n      };\n    case 'TOGGLE_MACHINE_ENDPOINTS':\n      return {...state,\n        polarEndpoints: !state.polarEndpoints,\n      };\n    case '@@redux/INIT':\n      return state;\n    default:\n      return state;\n  }\n}\n\n\n\n","\n// A simple struct that we can use everywhere we need vertices. I don't see a\n// problem letting this bloat a little.\n//\nexport const Vertex = (x, y, speed=0) => {\n  return {\n    x: x,\n    y: y,\n    f: speed\n  }\n}\n\n// convert degrees to radians\nexport const degToRad = (deg) => {\n  return deg / 180.0 * Math.PI;\n}\n\n// convert radians to degrees\nexport const radToDeg = (rad) => {\n  return rad * 180.0 / Math.PI;\n}\n\n","import { Vertex } from '../Geometry';\n\nexport const setShapePolygonSides = ( sides ) => {\n  return {\n    type: 'SET_SHAPE_POLYGON_SIDES',\n    value: sides,\n  };\n}\n\nexport class Polygon {\n  static mapStateToProps(state, ownProps) {\n    return {\n      polygonSides: state.shapes.polygonSides,\n    }\n  }\n\n  static mapDispatchToProps(dispatch, ownProps) {\n    return {\n      onPolygonSizeChange: (event) => {\n        dispatch(setShapePolygonSides(event.target.value));\n      },\n    }\n  }\n\n  static getParams(parent) {\n    return {\n      name: \"Polygon\",\n      vertices: (state) => {\n        let points = [];\n        for (let i=0; i<state.shapes.polygonSides; i++) {\n          let angle = Math.PI * 2.0 / state.shapes.polygonSides * (0.5 + i);\n          points.push(Vertex(Math.cos(angle), Math.sin(angle)))\n        }\n        return points;\n      },\n      options: [\n        {\n          title: \"Number of Sides\",\n          key: \"polygonSides\",\n          value: () => { return parent.props.polygonSides },\n          onChange: parent.props.onPolygonSizeChange,\n        },\n      ],\n    };\n  }\n\n  static getReducer(state, action) {\n    switch(action.type) {\n      case 'SET_SHAPE_POLYGON_SIDES':\n        return {...state,\n          polygonSides: action.value,\n        };\n\n      default:\n        return state;\n    }\n  }\n}\n","import { Vertex } from '../Geometry';\n\nexport const setShapeStarPoints = ( sides ) => {\n  return {\n    type: 'SET_SHAPE_STAR_POINTS',\n    value: sides,\n  };\n}\n\nexport const setShapeStarRatio = ( value ) => {\n  return {\n    type: 'SET_SHAPE_STAR_RATIO',\n    value: Math.min(Math.max(value, 0.0), 1.0),\n  };\n}\n\n\nexport class Star {\n  static mapStateToProps(state, ownProps) {\n    return {\n      starPoints:   state.shapes.starPoints,\n      starRatio:    state.shapes.starRatio,\n    }\n  }\n\n  static mapDispatchToProps(dispatch, ownProps) {\n    return {\n      onStarPointsChange: (event) => {\n        dispatch(setShapeStarPoints(event.target.value));\n      },\n      onStarRatioChange: (event) => {\n        dispatch(setShapeStarRatio(event.target.value));\n      },\n    }\n  }\n\n  static getParams(parent) {\n    return {\n      name: \"Star\",\n      vertices: (state) => {\n        let star_points = [];\n        for (let i=0; i<state.shapes.starPoints * 2; i++) {\n          let angle = Math.PI * 2.0 / (2.0 * state.shapes.starPoints) * i;\n          let star_scale = 1.0;\n          if (i % 2 === 0) {\n            star_scale *= state.shapes.starRatio;\n          }\n          star_points.push(Vertex(star_scale * Math.cos(angle), star_scale * Math.sin(angle)))\n        }\n        return star_points\n      },\n      options: [\n        {\n          title: \"Number of Points\",\n          key: \"starPoints\",\n          value: () => { return parent.props.starPoints },\n          onChange: parent.props.onStarPointsChange,\n        },\n        {\n          title: \"Size of Points\",\n          key: \"starRatio\",          \n          value: () => { return parent.props.starRatio },\n          onChange: parent.props.onStarRatioChange,\n          step: 0.05,\n        },\n      ],\n    };\n  }\n\n  static getReducer(state, action) {\n    switch(action.type) {\n      case 'SET_SHAPE_STAR_POINTS':\n        return {...state,\n          starPoints: action.value,\n        };\n\n      case 'SET_SHAPE_STAR_RATIO':\n        return {...state,\n          starRatio: action.value,\n        };\n\n      default:\n        return state;\n    }\n  }\n}\n","import { Vertex } from '../Geometry';\n\nexport const setShapeCircleLobes = ( sides ) => {\n  return {\n    type: 'SET_SHAPE_CIRCLE_LOBES',\n    value: sides,\n  };\n}\n\nexport class Circle {\n  static mapStateToProps(state, ownProps) {\n    return {\n      circleLobes: state.shapes.circleLobes,\n    }\n  }\n\n  static mapDispatchToProps(dispatch, ownProps) {\n    return {\n      onCircleLobesChange: (event) => {\n        dispatch(setShapeCircleLobes(event.target.value));\n      },\n    }\n  }\n\n  static getParams(parent) {\n    return {\n      name: \"Circle\",\n      vertices: (state) => {\n        let circle_points = []\n        for (let i=0; i<128; i++) {\n          let angle = Math.PI * 2.0 / 128.0 * i\n          circle_points.push(Vertex(Math.cos(angle), Math.sin(state.shapes.circleLobes * angle)/state.shapes.circleLobes))\n        }\n        return circle_points\n      },\n      options: [\n        {\n          title: \"Number of Lobes\",\n          key: \"circleLobes\",\n          value: () => { return parent.props.circleLobes },\n          onChange: parent.props.onCircleLobesChange,\n        },\n      ],\n    };\n  }\n\n  static getReducer(state, action) {\n    switch(action.type) {\n      case 'SET_SHAPE_CIRCLE_LOBES':\n        return {...state,\n          circleLobes: action.value,\n        };\n\n      default:\n        return state;\n    }\n  }\n}\n","import { Vertex } from '../Geometry';\n\nexport class Heart {\n  static mapStateToProps(state, ownProps) {\n    return {\n\n    }\n  }\n\n  static mapDispatchToProps(dispatch, ownProps) {\n    return {\n\n    }\n  }\n\n  static getParams(parent) {\n    return {\n      name: \"Heart\",\n      vertices: (state) => {\n        let heart_points = []\n        for (let i=0; i<128; i++) {\n          let angle = Math.PI * 2.0 / 128.0 * i\n          // heart equation from: http://mathworld.wolfram.com/HeartCurve.html\n          heart_points.push(Vertex(1.0 * Math.pow(Math.sin(angle), 3),\n                                   13.0/16.0 * Math.cos(angle) +\n                                   -5.0/16.0 * Math.cos(2.0 * angle) +\n                                   -2.0/16.0 * Math.cos(3.0 * angle) +\n                                   -1.0/16.0 * Math.cos(4.0 * angle)))\n        }\n        return heart_points\n      },\n      options: [\n      ],\n    };\n  }\n\n  static getReducer(state, action) {\n    switch(action.type) {\n      default:\n        return state;\n    }\n  }\n}\n","import { Vertex } from '../Geometry';\n\nexport const setShapeReuleauxSides = ( sides ) => {\n  return {\n    type: 'SET_SHAPE_REULEAUX_SIDES',\n    value: sides,\n  };\n}\n\nexport class Reuleaux {\n  static mapStateToProps(state, ownProps) {\n    return {\n      reuleauxSides: state.shapes.reuleauxSides,\n    }\n  }\n\n  static mapDispatchToProps(dispatch, ownProps) {\n    return {\n      onReuleauxSidesChange: (event) => {\n        dispatch(setShapeReuleauxSides(event.target.value));\n      },\n    }\n  }\n\n  static getParams(parent) {\n    return {\n      name: \"Reuleaux\",\n      vertices: (state) => {\n        let points = []\n        // Construct an equalateral triangle\n        let corners = []\n        // Initial location at PI/2\n        let angle = Math.PI/2.0;\n        // How much of the circle in one side?\n        let coverageAngle = Math.PI/state.shapes.reuleauxSides;\n        let halfCoverageAngle = 0.5 * coverageAngle;\n        for (let c=0; c<state.shapes.reuleauxSides; c++) {\n          let startAngle = angle + Math.PI - halfCoverageAngle;\n          corners.push( [Vertex(Math.cos(angle), Math.sin(angle)), startAngle] );\n          angle += 2.0 * Math.PI / state.shapes.reuleauxSides;\n        }\n        let length = 0.5 / Math.cos(Math.PI/2.0/state.shapes.reuleauxSides);\n        for (let corn=0; corn < corners.length; corn++) {\n          for (let i=0; i<128; i++) {\n            let angle = coverageAngle  * (i / 128.0) + corners[corn][1];\n            points.push(Vertex(length * corners[corn][0].x + Math.cos(angle),\n                               length * corners[corn][0].y + Math.sin(angle)));\n          }\n        }\n        return points;\n      },\n      options: [\n        {\n          title: \"Number of sides\",\n          key: \"reuleauxSides\",\n          value: () => { return parent.props.reuleauxSides },\n          onChange: parent.props.onReuleauxSidesChange,\n          step: 1,\n        },\n      ],\n    };\n  }\n\n  static getReducer(state, action) {\n    switch(action.type) {\n      case 'SET_SHAPE_REULEAUX_SIDES':\n        return {...state,\n          reuleauxSides: action.value,\n        };\n\n      default:\n        return state;\n    }\n  }\n}\n","import { Vertex } from '../Geometry';\n\nexport const setShapeepicycloidA = ( a ) => {\n  return {\n    type: 'SET_SHAPE_EPICYCLOID_A',\n    value: a,\n  };\n}\n\nexport const setShapeepicycloidB = ( b ) => {\n  return {\n    type: 'SET_SHAPE_EPICYCLOID_B',\n    value: b,\n  };\n}\n\nexport class Epicycloid {\n  static mapStateToProps(state, ownProps) {\n    return {\n      epicycloidA: state.shapes.epicycloidA,\n      epicycloidB: state.shapes.epicycloidB,\n    }\n  }\n\n  static mapDispatchToProps(dispatch, ownProps) {\n    return {\n      onepicycloidAChange: (event) => {\n        dispatch(setShapeepicycloidA(event.target.value));\n      },\n      onepicycloidBChange: (event) => {\n        dispatch(setShapeepicycloidB(event.target.value));\n      },\n    }\n  }\n\n  static getParams(parent) {\n    return {\n      name: \"Clover\",\n      link: \"http://mathworld.wolfram.com/Epicycloid.html\",\n      vertices: (state) => {\n        let points = []\n        let a = parseFloat(state.shapes.epicycloidA)\n        let b = parseFloat(state.shapes.epicycloidB)\n\n        for (let i=0; i<128; i++) {\n          let angle = Math.PI * 2.0 / 128.0 * i\n          points.push(Vertex(0.5 * (a + b) * Math.cos(angle) - 0.5 * b * Math.cos(((a + b) / b) * angle),\n                             0.5 * (a + b) * Math.sin(angle) - 0.5 * b * Math.sin(((a + b) / b) * angle)))\n        }\n        return points\n      },\n      options: [\n        {\n          title: \"Large circle radius\",\n          key: \"epicycloidA\",\n          value: () => { return parent.props.epicycloidA },\n          onChange: parent.props.onepicycloidAChange,\n          step: 0.1,\n        },\n        {\n          title: \"Small circle radius\",\n          key: \"epicycloidB\",\n          value: () => { return parent.props.epicycloidB },\n          onChange: parent.props.onepicycloidBChange,\n          step: 0.1,\n        },\n      ],\n    };\n  }\n\n  static getReducer(state, action) {\n    switch(action.type) {\n      case 'SET_SHAPE_EPICYCLOID_A':\n        return {...state,\n          epicycloidA: action.value,\n        };\n\n      case 'SET_SHAPE_EPICYCLOID_B':\n        return {...state,\n          epicycloidB: action.value,\n        };\n\n      default:\n        return state;\n    }\n  }\n}\n","import { Vertex } from '../Geometry';\n\nexport const setShapehypocycloidA = ( a ) => {\n  return {\n    type: 'SET_SHAPE_HYPOCYCLOID_A',\n    value: a,\n  };\n}\n\nexport const setShapehypocycloidB = ( b ) => {\n  return {\n    type: 'SET_SHAPE_HYPOCYCLOID_B',\n    value: b,\n  };\n}\n\nexport class Hypocycloid {\n  static mapStateToProps(state, ownProps) {\n    return {\n      hypocycloidA: state.shapes.hypocycloidA,\n      hypocycloidB: state.shapes.hypocycloidB,\n    }\n  }\n\n  static mapDispatchToProps(dispatch, ownProps) {\n    return {\n      onhypocycloidAChange: (event) => {\n        dispatch(setShapehypocycloidA(event.target.value));\n      },\n      onhypocycloidBChange: (event) => {\n        dispatch(setShapehypocycloidB(event.target.value));\n      },\n    }\n  }\n\n  static getParams(parent) {\n    return {\n      name: \"Web\",\n      link: \"http://mathworld.wolfram.com/Hypocycloid.html\",\n      vertices: (state) => {\n        let points = []\n        let a = parseFloat(state.shapes.hypocycloidA)\n        let b = parseFloat(state.shapes.hypocycloidB)\n\n        for (let i=0; i<128; i++) {\n          let angle = Math.PI * 2.0 / 128.0 * i\n          points.push(Vertex(1.0 * (a - b) * Math.cos(angle) + b * Math.cos(((a - b) / b) * angle),\n                                1.0 * (a - b) * Math.sin(angle) - b * Math.sin(((a - b) / b) * angle)))\n        }\n        return points\n      },\n      options: [\n        {\n          title: \"Large circle radius\",\n          key: \"hypocycloidA\",\n          value: () => { return parent.props.hypocycloidA },\n          onChange: parent.props.onhypocycloidAChange,\n          step: 0.1,\n        },\n        {\n          title: \"Small circle radius\",\n          key: \"hypocycloidB\",                    \n          value: () => { return parent.props.hypocycloidB },\n          onChange: parent.props.onhypocycloidBChange,\n          step: 0.1,\n        },\n      ],\n    };\n  }\n\n  static getReducer(state, action) {\n    switch(action.type) {\n      case 'SET_SHAPE_HYPOCYCLOID_A':\n        return {...state,\n          hypocycloidA: action.value,\n        };\n\n      case 'SET_SHAPE_HYPOCYCLOID_B':\n        return {...state,\n          hypocycloidB: action.value,\n        };\n\n      default:\n        return state;\n    }\n  }\n}\n","import { Vertex } from '../Geometry';\n\nexport const setShapeRoseN = ( n ) => {\n  return {\n    type: 'SET_SHAPE_ROSE_N',\n    value: n,\n  };\n}\n\nexport const setShapeRoseD = ( d ) => {\n  return {\n    type: 'SET_SHAPE_ROSE_D',\n    value: d,\n  };\n}\n\nexport class Rose {\n  static mapStateToProps(state, ownProps) {\n    return {\n      roseN: state.shapes.roseN,\n      roseD: state.shapes.roseD,\n    }\n  }\n\n  static mapDispatchToProps(dispatch, ownProps) {\n    return {\n      onRoseNChange: (event) => {\n        dispatch(setShapeRoseN(event.target.value));\n      },\n      onRoseDChange: (event) => {\n        dispatch(setShapeRoseD(event.target.value));\n      },\n    }\n  }\n\n  static getParams(parent) {\n    return {\n      name: \"Rose\",\n      link: \"http://mathworld.wolfram.com/Rose.html\",\n      vertices: (state) => {\n        let points = []\n        let a = 2\n        let n = parseInt(state.shapes.roseN)\n        let d = parseInt(state.shapes.roseD)\n        let p = (n * d % 2 === 0) ? 2 : 1\n        let thetaClose = d * p * 32 * n;\n        let resolution = 64 * n;\n\n        for (let i=0; i<thetaClose+1; i++) {\n          let theta = Math.PI * 2.0 / (resolution) * i\n          let r = 0.5 * a * Math.sin((n / d) * theta)\n          points.push(Vertex(r * Math.cos(theta), r * Math.sin(theta)))\n        }\n        return points\n      },\n      options: [\n        {\n          title: \"Numerator\",\n          key: \"roseN\",\n          value: () => { return parent.props.roseN },\n          onChange: parent.props.onRoseNChange,\n          step: 1,\n        },\n        {\n          title: \"Denominator\",\n          key: \"roseD\",          \n          value: () => { return parent.props.roseD },\n          onChange: parent.props.onRoseDChange,\n          step: 1,\n        },\n      ],\n    };\n  }\n\n  static getReducer(state, action) {\n    switch(action.type) {\n      case 'SET_SHAPE_ROSE_N':\n        return {...state,\n          roseN: action.value,\n        };\n\n      case 'SET_SHAPE_ROSE_D':\n        return {...state,\n          roseD: action.value,\n        };\n\n      default:\n        return state;\n    }\n  }\n}\n","export let raysol_cursive = {\n  ' ' : [ [0.000,-1.000], [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.250,-1.000], [0.300,-1.000], [0.350,-1.000], [0.400,-1.000],  ],\n  '0' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.250,-1.000], [0.323,-1.000], [0.335,-0.991], [0.377,-0.947], [0.429,-0.867], [0.444,-0.830], [0.470,-0.720], [0.490,-0.571], [0.490,-0.447], [0.490,-0.323], [0.490,-0.199], [0.490,-0.075], [0.490,0.049], [0.490,0.173], [0.490,0.296], [0.490,0.420], [0.490,0.550], [0.477,0.630], [0.458,0.684], [0.441,0.738], [0.418,0.794], [0.370,0.850], [0.335,0.850], [0.302,0.850], [0.260,0.794], [0.220,0.738], [0.200,0.684], [0.185,0.630], [0.170,0.550], [0.170,0.422], [0.170,0.294], [0.170,0.165], [0.170,0.037], [0.170,-0.091], [0.170,-0.219], [0.170,-0.347], [0.170,-0.476], [0.170,-0.604], [0.185,-0.732], [0.206,-0.845], [0.228,-0.900], [0.264,-0.948], [0.288,-0.971], [0.323,-1.000], [0.385,-1.000], [0.430,-1.000], [0.480,-1.000], [0.530,-1.000], [0.580,-1.000], [0.630,-1.000], [0.680,-1.000],  ],\n  '1' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.200,-0.815], [0.200,-0.630], [0.200,-0.445], [0.200,-0.260], [0.200,-0.075], [0.200,0.110], [0.200,0.295], [0.200,0.480], [0.200,0.665], [0.200,0.850], [0.200,0.665], [0.200,0.480], [0.200,0.295], [0.200,0.110], [0.200,-0.075], [0.200,-0.260], [0.200,-0.445], [0.200,-0.630], [0.200,-0.815], [0.200,-1.000], [0.250,-1.000], [0.300,-1.000], [0.350,-1.000], [0.400,-1.000],  ],\n  '2' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-0.901], [0.260,-0.707], [0.320,-0.463], [0.367,-0.280], [0.388,-0.037], [0.404,0.174], [0.410,0.272], [0.416,0.427], [0.420,0.530], [0.416,0.625], [0.406,0.700], [0.398,0.751], [0.390,0.779], [0.370,0.810], [0.345,0.830], [0.320,0.820], [0.290,0.800], [0.260,0.780], [0.220,0.750], [0.180,0.660], [0.145,0.600], [0.180,0.660], [0.220,0.750], [0.260,0.780], [0.290,0.800], [0.320,0.820], [0.345,0.830], [0.370,0.810], [0.390,0.779], [0.398,0.751], [0.406,0.700], [0.416,0.625], [0.420,0.530], [0.416,0.427], [0.410,0.272], [0.404,0.174], [0.388,-0.037], [0.367,-0.280], [0.320,-0.463], [0.260,-0.707], [0.200,-0.901], [0.250,-0.900], [0.320,-0.820], [0.360,-0.780], [0.400,-0.750], [0.450,-0.770], [0.500,-0.800], [0.550,-0.860], [0.600,-0.950], [0.650,-1.000],  ],\n  '3' : [ [0.050,-1.000], [0.100,-1.000], [0.160,-1.000], [0.194,-1.000], [0.238,-1.000], [0.260,-1.000], [0.290,-0.984], [0.329,-0.960], [0.360,-0.920], [0.381,-0.878], [0.398,-0.843], [0.416,-0.801], [0.430,-0.720], [0.449,-0.631], [0.460,-0.541], [0.461,-0.442], [0.456,-0.359], [0.450,-0.288], [0.442,-0.219], [0.412,-0.109], [0.365,-0.050], [0.320,-0.030], [0.250,-0.009], [0.328,0.027], [0.345,0.056], [0.376,0.120], [0.410,0.200], [0.432,0.322], [0.441,0.433], [0.436,0.533], [0.427,0.631], [0.419,0.700], [0.396,0.796], [0.377,0.840], [0.345,0.850], [0.316,0.840], [0.285,0.830], [0.242,0.800], [0.195,0.760], [0.242,0.800], [0.285,0.830], [0.316,0.840], [0.345,0.850], [0.377,0.840], [0.396,0.796], [0.419,0.700], [0.427,0.631], [0.436,0.533], [0.441,0.433], [0.432,0.322], [0.410,0.200], [0.376,0.120], [0.345,0.056], [0.328,0.027], [0.285,-0.009], [0.320,-0.030], [0.365,-0.050], [0.412,-0.109], [0.442,-0.219], [0.450,-0.288], [0.456,-0.359], [0.461,-0.442], [0.460,-0.541], [0.449,-0.631], [0.430,-0.720], [0.416,-0.801], [0.398,-0.843], [0.381,-0.878], [0.360,-0.920], [0.329,-0.960], [0.290,-0.984], [0.250,-0.970], [0.210,-0.950], [0.170,-0.920], [0.130,-0.800], [0.170,-0.920], [0.210,-0.950], [0.250,-0.970], [0.290,-0.984], [0.329,-0.960], [0.400,-1.000], [0.450,-1.000], [0.500,-1.000], [0.550,-1.000], [0.600,-1.000],  ],\n  '4' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.250,-1.000], [0.300,-1.000], [0.350,-1.000], [0.400,-1.000], [0.450,-1.000], [0.450,-0.815], [0.450,-0.630], [0.450,-0.445], [0.450,-0.260], [0.450,-0.075], [0.450,0.110], [0.450,0.295], [0.450,0.480], [0.450,0.665], [0.450,0.850], [0.400,0.696], [0.350,0.542], [0.300,0.387], [0.250,0.233], [0.200,0.079], [0.150,-0.075], [0.209,-0.075], [0.269,-0.075], [0.328,-0.075], [0.388,-0.075], [0.447,-0.075], [0.506,-0.075], [0.566,-0.075], [0.625,-0.075], [0.670,-0.075], [0.625,-0.075], [0.566,-0.075], [0.506,-0.075], [0.447,-0.075], [0.450,-0.260], [0.450,-0.445], [0.450,-0.630], [0.450,-0.815], [0.450,-1.000], [0.500,-1.000], [0.550,-1.000], [0.600,-1.000], [0.650,-1.000], [0.700,-1.000], [0.750,-1.000], [0.800,-1.000],  ],\n  '5' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.258,-1.000], [0.306,-1.000], [0.357,-1.000], [0.388,-0.996], [0.429,-0.956], [0.468,-0.896], [0.502,-0.794], [0.520,-0.660], [0.525,-0.450], [0.522,-0.271], [0.500,-0.150], [0.468,-0.030], [0.438,0.043], [0.400,0.068], [0.358,0.095], [0.318,0.070], [0.259,0.020], [0.223,-0.024], [0.178,-0.091], [0.178,0.095], [0.178,0.282], [0.178,0.468], [0.178,0.654], [0.178,0.780], [0.211,0.780], [0.244,0.780], [0.277,0.780], [0.310,0.780], [0.343,0.780], [0.377,0.780], [0.430,0.780], [0.500,0.780], [0.430,0.780], [0.377,0.780], [0.343,0.780], [0.310,0.780], [0.277,0.780], [0.244,0.780], [0.211,0.780], [0.178,0.780], [0.178,0.654], [0.178,0.468], [0.178,0.282], [0.178,0.095], [0.178,-0.091], [0.223,-0.024], [0.259,0.020], [0.318,0.070], [0.358,0.095], [0.400,0.068], [0.438,0.043], [0.468,-0.030], [0.500,-0.150], [0.522,-0.271], [0.525,-0.450], [0.520,-0.660], [0.502,-0.794], [0.468,-0.896], [0.429,-0.956], [0.388,-0.996], [0.357,-1.000], [0.306,-1.000], [0.250,-0.960], [0.210,-0.900], [0.170,-0.800], [0.140,-0.700], [0.110,-0.650], [0.090,-0.630], [0.110,-0.650], [0.140,-0.700], [0.170,-0.800], [0.210,-0.900], [0.250,-0.960], [0.306,-1.000], [0.357,-1.000], [0.388,-1.000], [0.480,-1.000], [0.530,-1.000], [0.580,-1.000], [0.630,-1.000], [0.680,-1.000], [0.730,-1.000], [0.780,-1.000],  ],\n  '6' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.250,-1.000], [0.264,-0.948], [0.288,-0.971], [0.323,-1.000], [0.385,-0.991], [0.427,-0.947], [0.479,-0.867], [0.494,-0.830], [0.510,-0.788], [0.543,-0.571], [0.545,-0.454], [0.536,-0.325], [0.527,-0.273], [0.508,-0.191], [0.491,-0.137], [0.468,-0.081], [0.424,-0.035], [0.364,-0.025], [0.328,-0.035], [0.302,-0.045], [0.267,-0.077], [0.195,-0.158], [0.219,-0.036], [0.243,0.086], [0.268,0.209], [0.292,0.331], [0.316,0.453], [0.340,0.576], [0.365,0.698], [0.389,0.820], [0.365,0.698], [0.340,0.576], [0.316,0.453], [0.292,0.331], [0.268,0.209], [0.243,0.086], [0.219,-0.036], [0.195,-0.158], [0.163,-0.309], [0.155,-0.398], [0.150,-0.482], [0.161,-0.650], [0.180,-0.732], [0.206,-0.845], [0.230,-0.900], [0.288,-0.971], [0.323,-1.000], [0.385,-0.991], [0.430,-1.000], [0.480,-1.000], [0.530,-1.000], [0.580,-1.000], [0.630,-1.000], [0.680,-1.000],  ],\n  '7' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.230,-0.815], [0.260,-0.630], [0.290,-0.445], [0.320,-0.260], [0.350,-0.075], [0.380,0.110], [0.410,0.295], [0.440,0.480], [0.470,0.665], [0.500,0.850], [0.456,0.850], [0.413,0.850], [0.369,0.850], [0.325,0.850], [0.281,0.850], [0.237,0.850], [0.194,0.850], [0.150,0.850], [0.194,0.850], [0.237,0.850], [0.281,0.850], [0.325,0.850], [0.369,0.850], [0.413,0.850], [0.456,0.850], [0.500,0.850], [0.470,0.665], [0.440,0.480], [0.410,0.295], [0.380,0.110], [0.350,-0.075], [0.320,-0.260], [0.290,-0.445], [0.260,-0.630], [0.230,-0.815], [0.200,-1.000], [0.250,-1.000], [0.300,-1.000], [0.350,-1.000], [0.400,-1.000], [0.450,-1.000], [0.500,-1.000], [0.550,-1.000], [0.600,-1.000], [0.650,-1.000],  ],\n  '8' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.250,-1.000], [0.327,-0.997], [0.364,-1.000], [0.409,-0.973], [0.444,-0.937], [0.468,-0.855], [0.502,-0.734], [0.516,-0.580], [0.512,-0.468], [0.498,-0.389], [0.469,-0.230], [0.436,-0.114], [0.396,0.002], [0.378,0.040], [0.359,0.081], [0.330,0.120], [0.310,0.160], [0.290,0.216], [0.270,0.270], [0.250,0.350], [0.230,0.450], [0.240,0.566], [0.270,0.683], [0.300,0.750], [0.336,0.789], [0.378,0.820], [0.421,0.789], [0.457,0.750], [0.487,0.683], [0.517,0.566], [0.527,0.450], [0.507,0.350], [0.487,0.270], [0.467,0.216], [0.447,0.160], [0.427,0.120], [0.397,0.081], [0.340,0.040], [0.323,0.002], [0.283,-0.114], [0.250,-0.230], [0.221,-0.389], [0.207,-0.468], [0.202,-0.580], [0.217,-0.734], [0.251,-0.855], [0.274,-0.937], [0.310,-0.973], [0.355,-1.000], [0.392,-0.997], [0.409,-0.973], [0.444,-0.937], [0.468,-0.855], [0.502,-0.734], [0.516,-0.580], [0.512,-0.468], [0.498,-0.389], [0.469,-0.230], [0.436,-0.114], [0.469,-0.230], [0.498,-0.389], [0.512,-0.468], [0.516,-0.580], [0.502,-0.734], [0.468,-0.855], [0.444,-0.937], [0.409,-0.973], [0.450,-1.000], [0.500,-1.000], [0.550,-1.000], [0.600,-1.000], [0.650,-1.000],  ],\n  '9' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.250,-1.000], [0.300,-1.000], [0.350,-1.000], [0.400,-1.000], [0.420,-1.000], [0.422,-0.795], [0.422,-0.609], [0.422,-0.424], [0.422,-0.238], [0.422,-0.052], [0.422,0.133], [0.422,0.319], [0.422,0.505], [0.422,0.691], [0.422,0.850], [0.381,0.850], [0.306,0.850], [0.244,0.800], [0.200,0.700], [0.180,0.540], [0.172,0.353], [0.176,0.196], [0.186,0.099], [0.199,0.027], [0.228,-0.110], [0.260,-0.148], [0.299,-0.140], [0.328,-0.110], [0.363,-0.080], [0.390,-0.060], [0.422,-0.052], [0.422,-0.238], [0.422,-0.424], [0.422,-0.609], [0.422,-0.795], [0.420,-1.000], [0.450,-1.000], [0.500,-1.000], [0.550,-1.000], [0.600,-1.000],  ],\n  'A' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.270,-0.994], [0.314,-0.968], [0.367,-0.911], [0.421,-0.782], [0.467,-0.671], [0.421,-0.782], [0.367,-0.911], [0.314,-0.968], [0.270,-0.994], [0.225,-0.949], [0.181,-0.853], [0.147,-0.764], [0.121,-0.633], [0.102,-0.454], [0.100,-0.300], [0.110,-0.078], [0.134,0.098], [0.167,0.262], [0.199,0.367], [0.256,0.524], [0.306,0.626], [0.375,0.732], [0.465,0.821], [0.509,0.850], [0.507,0.756], [0.506,0.611], [0.505,0.466], [0.504,0.321], [0.503,0.176], [0.502,0.031], [0.501,-0.114], [0.500,-0.259], [0.499,-0.404], [0.497,-0.549], [0.498,-0.623], [0.510,-0.737], [0.561,-0.822], [0.608,-0.900], [0.652,-0.950], [0.713,-1.000],  ],\n  'B' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.150,-0.814], [0.150,-0.629], [0.150,-0.443], [0.150,-0.258], [0.150,-0.072], [0.150,0.114], [0.150,0.299], [0.150,0.485], [0.150,0.670], [0.165,0.700], [0.193,0.750], [0.224,0.800], [0.262,0.835], [0.295,0.840], [0.324,0.839], [0.346,0.820], [0.380,0.779], [0.411,0.725], [0.431,0.667], [0.450,0.580], [0.447,0.461], [0.440,0.383], [0.425,0.261], [0.405,0.150], [0.365,0.050], [0.304,0.000], [0.280,0.000], [0.304,0.000], [0.351,-0.046], [0.382,-0.119], [0.400,-0.147], [0.440,-0.248], [0.465,-0.367], [0.476,-0.441], [0.479,-0.607], [0.477,-0.651], [0.468,-0.741], [0.459,-0.805], [0.410,-0.920], [0.366,-0.971], [0.336,-1.000], [0.280,-1.000], [0.220,-1.000], [0.150,-1.000], [0.220,-1.000], [0.280,-1.000], [0.350,-1.000], [0.400,-1.000], [0.450,-1.000], [0.500,-1.000], [0.550,-1.000], [0.600,-1.000],  ],\n  'C' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-0.960], [0.270,-0.890], [0.233,-0.787], [0.210,-0.720], [0.195,-0.606], [0.180,-0.460], [0.175,-0.320], [0.175,-0.200], [0.175,-0.056], [0.187,0.140], [0.199,0.290], [0.227,0.445], [0.272,0.614], [0.322,0.720], [0.384,0.803], [0.457,0.850], [0.513,0.827], [0.566,0.682], [0.600,0.503], [0.612,0.338], [0.600,0.503], [0.566,0.682], [0.513,0.827], [0.457,0.850], [0.384,0.803], [0.322,0.720], [0.272,0.614], [0.227,0.445], [0.199,0.290], [0.187,0.140], [0.175,-0.056], [0.175,-0.200], [0.175,-0.320], [0.180,-0.460], [0.195,-0.606], [0.233,-0.787], [0.270,-0.890], [0.320,-0.955], [0.401,-1.000], [0.457,-1.000], [0.500,-1.000], [0.520,-1.000], [0.560,-1.000], [0.600,-1.000], [0.650,-1.000], [0.700,-1.000], [0.750,-1.000],  ],\n  'D' : [ [0.073,-1.000], [0.125,-1.000], [0.189,-1.000], [0.236,-1.000], [0.273,-1.000], [0.320,-1.000], [0.376,-1.000], [0.454,-0.973], [0.540,-0.911], [0.562,-0.870], [0.600,-0.771], [0.631,-0.616], [0.641,-0.495], [0.649,-0.309], [0.649,-0.206], [0.637,-0.034], [0.625,0.141], [0.610,0.245], [0.594,0.344], [0.578,0.437], [0.529,0.568], [0.480,0.670], [0.440,0.730], [0.380,0.797], [0.333,0.826], [0.292,0.821], [0.250,0.788], [0.250,0.636], [0.250,0.544], [0.250,0.329], [0.250,0.100], [0.250,-0.110], [0.250,-0.258], [0.250,-0.595], [0.250,-0.715], [0.250,-0.900], [0.273,-1.000], [0.320,-1.000], [0.376,-1.000], [0.440,-1.000], [0.500,-1.000], [0.550,-1.000], [0.600,-1.000], [0.650,-1.000], [0.700,-1.000], [0.750,-1.000], [0.800,-1.000],  ],\n  'E' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-0.900], [0.224,-0.797], [0.186,-0.648], [0.163,-0.500], [0.161,-0.334], [0.182,-0.260], [0.209,-0.210], [0.238,-0.160], [0.290,-0.110], [0.331,-0.068], [0.370,-0.043], [0.420,-0.043], [0.370,-0.043], [0.335,0.000], [0.299,0.067], [0.279,0.094], [0.227,0.195], [0.195,0.293], [0.171,0.441], [0.172,0.575], [0.188,0.702], [0.226,0.799], [0.281,0.850], [0.332,0.850], [0.370,0.850], [0.397,0.850], [0.425,0.850], [0.470,0.850], [0.425,0.850], [0.397,0.850], [0.370,0.850], [0.332,0.850], [0.281,0.850], [0.226,0.799], [0.188,0.702], [0.172,0.575], [0.171,0.441], [0.195,0.293], [0.227,0.195], [0.279,0.094], [0.299,0.067], [0.335,0.000], [0.370,-0.043], [0.420,-0.043], [0.370,-0.043], [0.331,-0.068], [0.290,-0.110], [0.238,-0.160], [0.209,-0.210], [0.182,-0.260], [0.161,-0.334], [0.163,-0.500], [0.186,-0.648], [0.224,-0.797], [0.261,-0.896], [0.294,-0.939], [0.343,-0.979], [0.409,-0.994], [0.462,-0.993], [0.508,-0.992], [0.550,-0.991],  ],\n  'F' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.250,-1.000], [0.300,-1.000], [0.340,-1.000], [0.390,-1.000], [0.426,-0.977], [0.466,-0.897], [0.501,-0.731], [0.502,-0.592], [0.502,-0.453], [0.503,-0.313], [0.503,-0.174], [0.504,-0.035], [0.505,0.104], [0.505,0.243], [0.506,0.383], [0.507,0.522], [0.507,0.661], [0.570,0.640], [0.633,0.617], [0.690,0.650], [0.754,0.695], [0.820,0.750], [0.754,0.695], [0.690,0.650], [0.633,0.617], [0.570,0.640], [0.507,0.661], [0.449,0.705], [0.372,0.765], [0.274,0.765], [0.187,0.664], [0.145,0.400], [0.187,0.664], [0.274,0.765], [0.372,0.765], [0.449,0.705], [0.507,0.661], [0.507,0.522], [0.506,0.383], [0.505,0.243], [0.505,0.104], [0.504,-0.035], [0.436,-0.031], [0.371,-0.011], [0.260,0.009], [0.371,-0.011], [0.436,-0.031], [0.504,-0.035], [0.565,-0.034], [0.632,-0.024], [0.720,-0.014], [0.632,-0.024], [0.565,-0.034], [0.504,-0.035], [0.503,-0.174], [0.503,-0.313], [0.502,-0.453], [0.502,-0.540], [0.500,-0.670], [0.501,-0.731], [0.490,-0.840], [0.455,-0.913], [0.390,-0.980], [0.348,-0.976], [0.332,-0.985], [0.316,-0.985], [0.295,-0.975], [0.266,-0.900], [0.247,-0.840], [0.243,-0.760], [0.248,-0.685], [0.279,-0.622], [0.300,-0.595], [0.337,-0.590], [0.384,-0.595], [0.436,-0.658], [0.509,-0.800], [0.545,-0.883], [0.609,-0.964], [0.635,-1.020], [0.713,-1.060], [0.771,-1.050], [0.827,-1.040], [0.877,-1.000],  ],\n  'G' : [ [0.050,-0.999], [0.101,-0.970], [0.144,-0.912], [0.186,-0.851], [0.229,-0.791], [0.288,-0.672], [0.337,-0.543], [0.359,-0.476], [0.387,-0.374], [0.417,-0.221], [0.446,-0.070], [0.460,0.022], [0.482,0.134], [0.492,0.248], [0.504,0.386], [0.518,0.523], [0.520,0.628], [0.518,0.762], [0.495,0.866], [0.448,0.833], [0.423,0.801], [0.410,0.755], [0.377,0.619], [0.371,0.584], [0.360,0.449], [0.357,0.390], [0.370,0.211], [0.384,0.135], [0.409,0.029], [0.490,-0.111], [0.548,-0.107], [0.616,-0.031], [0.657,0.050], [0.693,0.203], [0.742,0.402], [0.733,0.190], [0.711,-0.188], [0.695,-0.351], [0.670,-0.532], [0.649,-0.656], [0.607,-0.810], [0.562,-0.906], [0.509,-0.967], [0.453,-1.001], [0.400,-0.994], [0.352,-0.972], [0.294,-0.910], [0.268,-0.818], [0.251,-0.729], [0.224,-0.641], [0.190,-0.463], [0.274,-0.532], [0.375,-0.625], [0.461,-0.720], [0.535,-0.765], [0.607,-0.810], [0.671,-0.855], [0.733,-0.871], [0.795,-0.897], [0.876,-0.950], [0.948,-1.000],  ],\n  'H' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.250,-1.000], [0.292,-1.000], [0.292,-0.792], [0.292,-0.638], [0.292,-0.484], [0.292,-0.330], [0.292,-0.176], [0.292,-0.022], [0.292,0.131], [0.292,0.285], [0.292,0.400], [0.292,0.523], [0.280,0.636], [0.267,0.733], [0.230,0.800], [0.160,0.850], [0.230,0.800], [0.267,0.733], [0.280,0.636], [0.292,0.523], [0.292,0.400], [0.292,0.285], [0.292,0.131], [0.292,-0.022], [0.374,0.008], [0.455,0.039], [0.537,0.070], [0.618,0.101], [0.650,0.131], [0.650,0.285], [0.650,0.400], [0.650,0.523], [0.650,0.650], [0.660,0.750], [0.685,0.820], [0.750,0.850], [0.685,0.820], [0.660,0.750], [0.650,0.650], [0.650,0.523], [0.650,0.400], [0.650,0.285], [0.650,0.131], [0.650,-0.022], [0.650,-0.176], [0.650,-0.330], [0.650,-0.484], [0.650,-0.638], [0.650,-0.792], [0.670,-0.900], [0.700,-0.970], [0.750,-0.990], [0.800,-1.000], [0.850,-1.000], [0.900,-1.000],  ],\n  'I' : [ [0.050,-1.000], [0.100,-1.000], [0.170,-1.000], [0.250,-1.000], [0.303,-0.984], [0.350,-1.008], [0.403,-1.017], [0.460,-0.985], [0.493,-0.783], [0.537,-0.632], [0.515,-0.485], [0.489,-0.253], [0.464,-0.068], [0.454,0.156], [0.450,0.276], [0.455,0.533], [0.470,0.691], [0.490,0.796], [0.520,0.869], [0.600,0.871], [0.630,0.867], [0.659,0.751], [0.677,0.664], [0.699,0.380], [0.705,0.170], [0.694,-0.152], [0.685,-0.270], [0.647,-0.549], [0.615,-0.673], [0.592,-0.754], [0.529,-0.876], [0.460,-0.985], [0.403,-1.017], [0.350,-1.008], [0.303,-0.984], [0.247,-0.920], [0.224,-0.828], [0.210,-0.738], [0.186,-0.649], [0.159,-0.470], [0.240,-0.542], [0.338,-0.639], [0.421,-0.736], [0.493,-0.783], [0.564,-0.831], [0.626,-0.879], [0.687,-0.897], [0.748,-0.924], [0.828,-0.970], [0.899,-1.000],  ],\n  'J' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.269,-0.937], [0.349,-0.916], [0.252,-0.672], [0.202,-0.470], [0.177,-0.187], [0.172,-0.008], [0.168,0.261], [0.186,0.552], [0.224,0.752], [0.258,0.813], [0.298,0.844], [0.348,0.854], [0.406,0.845], [0.432,0.795], [0.464,0.650], [0.472,0.576], [0.479,0.379], [0.481,0.171], [0.475,-0.144], [0.470,-0.372], [0.463,-0.594], [0.459,-0.797], [0.451,-1.024], [0.442,-1.194], [0.447,-1.400], [0.433,-1.595], [0.419,-1.766], [0.389,-1.845], [0.355,-1.876], [0.250,-1.878], [0.215,-1.848], [0.182,-1.767], [0.175,-1.599], [0.182,-1.420], [0.203,-1.198], [0.233,-1.068], [0.269,-0.937], [0.346,-0.916], [0.397,-0.935], [0.448,-0.954], [0.499,-0.973], [0.550,-0.992], [0.600,-0.991], [0.650,-0.991], [0.699,-1.000],  ],\n  'K' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.250,-1.000], [0.300,-1.000], [0.318,-0.812], [0.324,-0.655], [0.331,-0.499], [0.337,-0.342], [0.344,-0.185], [0.351,-0.028], [0.341,0.111], [0.331,0.249], [0.322,0.388], [0.312,0.527], [0.302,0.666], [0.292,0.804], [0.260,0.801], [0.224,0.792], [0.186,0.724], [0.158,0.639], [0.131,0.551], [0.158,0.639], [0.186,0.724], [0.224,0.792], [0.260,0.801], [0.292,0.804], [0.302,0.666], [0.312,0.527], [0.322,0.388], [0.331,0.249], [0.341,0.111], [0.351,-0.028], [0.405,0.028], [0.442,0.119], [0.479,0.210], [0.516,0.302], [0.553,0.393], [0.590,0.484], [0.628,0.575], [0.665,0.667], [0.676,0.796], [0.665,0.667], [0.628,0.575], [0.590,0.484], [0.553,0.393], [0.516,0.302], [0.479,0.210], [0.442,0.119], [0.405,0.028], [0.368,-0.063], [0.397,-0.153], [0.427,-0.243], [0.456,-0.332], [0.485,-0.422], [0.515,-0.512], [0.544,-0.601], [0.573,-0.691], [0.602,-0.780], [0.632,-0.870], [0.661,-0.970], [0.718,-1.000], [0.764,-1.000], [0.802,-1.000], [0.848,-1.000], [0.898,-1.000],  ],\n  'L' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.190,-0.990], [0.217,-0.975], [0.239,-0.985], [0.254,-0.985], [0.271,-0.976], [0.306,-0.949], [0.328,-0.913], [0.370,-0.840], [0.401,-0.745], [0.422,-0.670], [0.425,-0.540], [0.435,-0.434], [0.440,-0.285], [0.442,-0.127], [0.437,0.099], [0.436,0.188], [0.445,0.235], [0.441,0.341], [0.457,0.557], [0.463,0.631], [0.485,0.761], [0.513,0.847], [0.526,0.898], [0.570,0.925], [0.604,0.860], [0.624,0.776], [0.636,0.627], [0.630,0.534], [0.618,0.471], [0.571,0.356], [0.553,0.329], [0.499,0.264], [0.475,0.248], [0.388,0.227], [0.367,0.230], [0.294,0.264], [0.227,0.329], [0.168,0.408], [0.227,0.329], [0.294,0.264], [0.367,0.230], [0.388,0.227], [0.475,0.248], [0.499,0.264], [0.553,0.329], [0.571,0.356], [0.618,0.471], [0.630,0.534], [0.636,0.627], [0.624,0.776], [0.604,0.860], [0.570,0.925], [0.526,0.898], [0.513,0.847], [0.485,0.761], [0.463,0.631], [0.457,0.557], [0.441,0.341], [0.445,0.235], [0.436,0.188], [0.437,0.099], [0.442,-0.127], [0.440,-0.285], [0.435,-0.434], [0.425,-0.540], [0.422,-0.670], [0.401,-0.745], [0.370,-0.840], [0.328,-0.913], [0.306,-0.949], [0.271,-0.976], [0.254,-0.985], [0.239,-0.985], [0.217,-0.975], [0.189,-0.900], [0.170,-0.840], [0.166,-0.760], [0.171,-0.685], [0.202,-0.622], [0.223,-0.595], [0.260,-0.590], [0.307,-0.595], [0.358,-0.658], [0.432,-0.800], [0.468,-0.883], [0.532,-0.964], [0.558,-1.000], [0.635,-1.000], [0.694,-1.000], [0.750,-1.000], [0.800,-1.000],  ],\n  'M' : [ [0.050,-1.000], [0.125,-1.000], [0.200,-1.000], [0.275,-1.000], [0.343,-0.941], [0.349,-0.806], [0.355,-0.672], [0.360,-0.537], [0.366,-0.402], [0.372,-0.267], [0.378,-0.133], [0.384,0.002], [0.390,0.137], [0.396,0.271], [0.402,0.406], [0.385,0.553], [0.369,0.672], [0.348,0.807], [0.294,0.861], [0.242,0.812], [0.189,0.731], [0.140,0.603], [0.189,0.731], [0.242,0.812], [0.294,0.861], [0.348,0.807], [0.369,0.672], [0.385,0.553], [0.402,0.406], [0.396,0.271], [0.390,0.137], [0.384,0.002], [0.378,-0.133], [0.372,-0.267], [0.366,-0.402], [0.360,-0.537], [0.355,-0.672], [0.349,-0.806], [0.343,-0.941], [0.349,-0.806], [0.355,-0.672], [0.360,-0.537], [0.366,-0.402], [0.372,-0.267], [0.378,-0.133], [0.384,0.002], [0.390,0.137], [0.396,0.271], [0.402,0.406], [0.428,0.602], [0.471,0.771], [0.542,0.858], [0.622,0.874], [0.660,0.784], [0.684,0.683], [0.699,0.595], [0.725,0.403], [0.720,0.269], [0.714,0.134], [0.709,-0.000], [0.703,-0.135], [0.698,-0.269], [0.693,-0.404], [0.687,-0.539], [0.682,-0.673], [0.676,-0.808], [0.671,-0.942], [0.676,-0.808], [0.682,-0.673], [0.687,-0.539], [0.693,-0.404], [0.698,-0.269], [0.703,-0.135], [0.709,-0.000], [0.714,0.134], [0.720,0.269], [0.725,0.403], [0.753,0.630], [0.796,0.799], [0.822,0.863], [0.871,0.907], [0.953,0.903], [0.984,0.828], [1.007,0.742], [1.022,0.654], [1.030,0.564], [1.028,0.419], [1.026,0.275], [1.024,0.130], [1.022,-0.015], [1.019,-0.159], [1.017,-0.304], [1.015,-0.449], [1.013,-0.593], [1.011,-0.738], [1.009,-0.883], [1.068,-0.953], [1.130,-1.000], [1.177,-1.000], [1.227,-1.000], [1.286,-1.000],  ],\n  'N' : [ [0.075,-1.000], [0.150,-1.000], [0.250,-1.000], [0.334,-0.975], [0.339,-0.910], [0.341,-0.784], [0.343,-0.659], [0.345,-0.533], [0.347,-0.408], [0.349,-0.282], [0.351,-0.157], [0.353,-0.032], [0.355,0.094], [0.357,0.219], [0.359,0.345], [0.342,0.557], [0.328,0.675], [0.311,0.805], [0.277,0.871], [0.239,0.867], [0.196,0.801], [0.166,0.708], [0.138,0.604], [0.166,0.708], [0.196,0.801], [0.239,0.867], [0.277,0.871], [0.311,0.805], [0.328,0.675], [0.342,0.557], [0.359,0.345], [0.357,0.219], [0.355,0.094], [0.353,-0.032], [0.351,-0.157], [0.349,-0.282], [0.347,-0.408], [0.345,-0.533], [0.343,-0.659], [0.341,-0.784], [0.339,-0.910], [0.334,-0.975], [0.339,-0.910], [0.341,-0.784], [0.343,-0.659], [0.345,-0.533], [0.347,-0.408], [0.349,-0.282], [0.351,-0.157], [0.353,-0.032], [0.355,0.094], [0.357,0.219], [0.359,0.345], [0.373,0.480], [0.388,0.636], [0.419,0.776], [0.446,0.860], [0.495,0.896], [0.557,0.897], [0.594,0.837], [0.634,0.739], [0.652,0.651], [0.665,0.473], [0.671,0.278], [0.671,0.160], [0.670,0.042], [0.670,-0.076], [0.669,-0.194], [0.669,-0.312], [0.668,-0.430], [0.668,-0.548], [0.667,-0.665], [0.667,-0.783], [0.666,-0.901], [0.704,-0.962], [0.726,-1.000], [0.768,-1.000], [0.797,-1.000], [0.836,-1.000], [0.885,-1.000],  ],\n  'O' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.250,-1.000], [0.332,-0.981], [0.365,-0.986], [0.420,-0.980], [0.474,-0.937], [0.510,-0.900], [0.536,-0.833], [0.564,-0.766], [0.604,-0.579], [0.624,-0.364], [0.628,-0.246], [0.627,-0.047], [0.615,0.237], [0.610,0.371], [0.580,0.535], [0.540,0.711], [0.460,0.850], [0.420,0.850], [0.382,0.820], [0.336,0.747], [0.295,0.697], [0.256,0.598], [0.224,0.507], [0.196,0.370], [0.173,0.274], [0.159,0.124], [0.150,0.000], [0.150,-0.105], [0.150,-0.200], [0.157,-0.317], [0.180,-0.511], [0.200,-0.600], [0.219,-0.686], [0.245,-0.771], [0.265,-0.860], [0.300,-0.930], [0.332,-0.981], [0.365,-0.986], [0.420,-0.980], [0.550,-1.000], [0.600,-1.000], [0.650,-1.000], [0.700,-1.000], [0.750,-1.000], [0.800,-1.000], [0.850,-1.000],  ],\n  'P' : [ [0.050,-1.000], [0.100,-1.000], [0.140,-1.000], [0.170,-1.000], [0.170,-0.829], [0.170,-0.657], [0.170,-0.486], [0.170,-0.314], [0.170,-0.143], [0.184,-0.140], [0.241,-0.175], [0.280,-0.191], [0.355,-0.158], [0.398,-0.121], [0.457,-0.015], [0.470,0.013], [0.504,0.181], [0.507,0.216], [0.510,0.322], [0.507,0.381], [0.504,0.470], [0.487,0.543], [0.456,0.674], [0.441,0.717], [0.405,0.806], [0.385,0.834], [0.355,0.850], [0.330,0.850], [0.290,0.830], [0.258,0.792], [0.235,0.750], [0.208,0.691], [0.190,0.630], [0.170,0.543], [0.170,0.372], [0.170,0.200], [0.170,0.029], [0.170,-0.143], [0.170,-0.314], [0.170,-0.486], [0.170,-0.657], [0.170,-0.829], [0.170,-1.000], [0.220,-1.000], [0.270,-1.000], [0.320,-1.000], [0.370,-1.000], [0.420,-1.000], [0.470,-1.000], [0.520,-1.000], [0.570,-1.000], [0.600,-1.000], [0.650,-1.000],  ],\n  'Q' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.250,-1.000], [0.300,-1.000], [0.365,-1.000], [0.332,-0.981], [0.300,-0.930], [0.265,-0.860], [0.245,-0.771], [0.219,-0.686], [0.200,-0.600], [0.180,-0.511], [0.157,-0.317], [0.150,-0.200], [0.150,-0.105], [0.150,0.000], [0.159,0.124], [0.173,0.274], [0.196,0.370], [0.224,0.507], [0.256,0.598], [0.295,0.697], [0.336,0.760], [0.382,0.820], [0.420,0.850], [0.480,0.840], [0.540,0.711], [0.580,0.535], [0.610,0.371], [0.625,0.150], [0.627,-0.047], [0.628,-0.246], [0.624,-0.364], [0.604,-0.579], [0.564,-0.766], [0.536,-0.833], [0.510,-0.900], [0.474,-0.937], [0.420,-0.980], [0.365,-1.000], [0.332,-0.981], [0.300,-0.930], [0.265,-0.860], [0.245,-0.771], [0.261,-0.700], [0.282,-0.640], [0.323,-0.580], [0.396,-0.580], [0.455,-0.630], [0.506,-0.700], [0.537,-0.775], [0.595,-0.860], [0.642,-0.936], [0.695,-1.000], [0.741,-1.000], [0.795,-1.000],  ],\n  'R' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.190,-1.000], [0.240,-1.000], [0.240,-0.828], [0.240,-0.656], [0.240,-0.484], [0.240,-0.312], [0.240,-0.140], [0.240,0.033], [0.240,0.205], [0.240,0.377], [0.240,0.549], [0.240,0.780], [0.282,0.800], [0.325,0.800], [0.381,0.800], [0.430,0.800], [0.480,0.800], [0.526,0.753], [0.568,0.650], [0.591,0.566], [0.604,0.507], [0.620,0.370], [0.618,0.250], [0.609,0.150], [0.587,0.081], [0.553,0.006], [0.500,-0.070], [0.434,-0.094], [0.370,-0.110], [0.330,-0.114], [0.300,-0.118], [0.255,-0.112], [0.265,-0.182], [0.310,-0.300], [0.350,-0.450], [0.385,-0.546], [0.401,-0.589], [0.423,-0.647], [0.445,-0.705], [0.468,-0.763], [0.500,-0.840], [0.525,-0.910], [0.548,-0.980], [0.570,-1.020], [0.593,-1.040], [0.637,-1.050], [0.665,-1.040], [0.700,-1.000], [0.750,-1.000],  ],\n  'S' : [ [0.050,-1.000], [0.100,-1.000], [0.140,-0.970], [0.180,-0.920], [0.210,-0.870], [0.230,-0.780], [0.255,-0.660], [0.290,-0.460], [0.320,-0.300], [0.365,-0.150], [0.405,0.000], [0.465,0.106], [0.490,0.200], [0.515,0.319], [0.535,0.430], [0.541,0.537], [0.542,0.647], [0.532,0.737], [0.512,0.807], [0.485,0.840], [0.435,0.850], [0.385,0.840], [0.344,0.820], [0.323,0.788], [0.309,0.727], [0.302,0.637], [0.298,0.570], [0.299,0.470], [0.304,0.400], [0.320,0.285], [0.345,0.130], [0.405,0.000], [0.465,-0.100], [0.513,-0.298], [0.555,-0.430], [0.540,-0.592], [0.520,-0.670], [0.500,-0.750], [0.450,-0.880], [0.400,-0.955], [0.341,-0.970], [0.306,-0.976], [0.280,-0.985], [0.250,-0.985], [0.202,-0.975], [0.175,-0.920], [0.155,-0.840], [0.151,-0.760], [0.156,-0.685], [0.184,-0.622], [0.208,-0.595], [0.249,-0.580], [0.295,-0.580], [0.342,-0.595], [0.393,-0.658], [0.467,-0.800], [0.503,-0.883], [0.567,-0.964], [0.615,-1.020], [0.670,-1.060], [0.729,-1.050], [0.785,-1.000],  ],\n  'T' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.259,-1.000], [0.302,-1.000], [0.340,-0.980], [0.365,-0.957], [0.402,-0.901], [0.422,-0.851], [0.446,-0.742], [0.465,-0.650], [0.476,-0.500], [0.482,-0.344], [0.488,-0.189], [0.494,-0.033], [0.500,0.122], [0.506,0.278], [0.513,0.434], [0.519,0.589], [0.519,0.745], [0.541,0.727], [0.580,0.700], [0.619,0.696], [0.660,0.701], [0.699,0.727], [0.750,0.770], [0.820,0.819], [0.750,0.770], [0.699,0.727], [0.660,0.701], [0.619,0.696], [0.580,0.700], [0.541,0.727], [0.519,0.745], [0.462,0.784], [0.430,0.804], [0.399,0.822], [0.350,0.830], [0.277,0.782], [0.200,0.692], [0.277,0.782], [0.350,0.830], [0.399,0.822], [0.430,0.804], [0.462,0.784], [0.519,0.745], [0.519,0.589], [0.513,0.434], [0.506,0.278], [0.500,0.122], [0.494,-0.033], [0.488,-0.189], [0.482,-0.344], [0.476,-0.500], [0.465,-0.650], [0.341,-0.970], [0.306,-0.976], [0.280,-0.985], [0.250,-0.985], [0.202,-0.975], [0.175,-0.920], [0.155,-0.840], [0.151,-0.760], [0.156,-0.685], [0.184,-0.622], [0.208,-0.595], [0.249,-0.580], [0.295,-0.580], [0.342,-0.595], [0.393,-0.658], [0.467,-0.800], [0.503,-0.883], [0.567,-0.964], [0.615,-1.020], [0.670,-1.060], [0.729,-1.050], [0.785,-1.040], [0.835,-1.020], [0.885,-1.000], [0.935,-1.000],  ],\n  'U' : [ [0.050,-1.000], [0.100,-0.999], [0.150,-0.996], [0.200,-0.994], [0.248,-0.951], [0.295,-0.908], [0.323,-0.852], [0.306,-0.805], [0.289,-0.704], [0.287,-0.492], [0.296,-0.354], [0.305,-0.215], [0.314,-0.076], [0.323,0.062], [0.332,0.201], [0.341,0.340], [0.351,0.478], [0.360,0.617], [0.349,0.682], [0.317,0.784], [0.293,0.813], [0.237,0.783], [0.205,0.699], [0.170,0.577], [0.148,0.506], [0.114,0.443], [0.148,0.506], [0.170,0.577], [0.205,0.699], [0.237,0.783], [0.293,0.813], [0.317,0.784], [0.349,0.682], [0.360,0.617], [0.351,0.478], [0.341,0.340], [0.332,0.201], [0.323,0.062], [0.314,-0.076], [0.305,-0.215], [0.296,-0.354], [0.287,-0.492], [0.289,-0.704], [0.306,-0.805], [0.323,-0.852], [0.348,-0.916], [0.399,-0.968], [0.449,-0.980], [0.493,-0.942], [0.531,-0.882], [0.550,-0.840], [0.569,-0.774], [0.591,-0.723], [0.624,-0.656], [0.631,-0.447], [0.640,-0.304], [0.649,-0.161], [0.657,-0.018], [0.666,0.125], [0.675,0.269], [0.684,0.412], [0.693,0.555], [0.701,0.698], [0.716,0.886], [0.701,0.698], [0.693,0.555], [0.684,0.412], [0.675,0.269], [0.666,0.125], [0.657,-0.018], [0.649,-0.161], [0.640,-0.304], [0.631,-0.447], [0.627,-0.567], [0.624,-0.656], [0.631,-0.791], [0.645,-0.850], [0.662,-0.910], [0.707,-0.960], [0.750,-0.970], [0.798,-1.000], [0.848,-1.000], [0.900,-1.000],  ],\n  'V' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-0.990], [0.250,-0.980], [0.300,-0.950], [0.350,-0.920], [0.380,-0.850], [0.401,-0.769], [0.422,-0.839], [0.442,-0.885], [0.465,-0.940], [0.510,-1.000], [0.570,-0.970], [0.601,-0.917], [0.638,-0.746], [0.658,-0.575], [0.668,-0.428], [0.678,-0.280], [0.688,-0.133], [0.697,0.015], [0.707,0.162], [0.717,0.310], [0.727,0.457], [0.737,0.605], [0.747,0.752], [0.757,0.850], [0.790,0.800], [0.835,0.734], [0.874,0.718], [0.908,0.748], [0.950,0.790], [0.908,0.748], [0.874,0.718], [0.835,0.734], [0.790,0.800], [0.757,0.850], [0.747,0.752], [0.737,0.605], [0.727,0.457], [0.717,0.310], [0.707,0.162], [0.697,0.015], [0.688,-0.133], [0.678,-0.280], [0.668,-0.428], [0.658,-0.575], [0.638,-0.746], [0.601,-0.917], [0.570,-0.970], [0.510,-1.000], [0.465,-0.940], [0.442,-0.885], [0.422,-0.839], [0.401,-0.769], [0.378,-0.575], [0.378,-0.382], [0.378,-0.189], [0.378,0.004], [0.378,0.197], [0.378,0.390], [0.368,0.617], [0.348,0.706], [0.324,0.790], [0.297,0.850], [0.270,0.820], [0.243,0.771], [0.218,0.710], [0.190,0.656], [0.150,0.563], [0.190,0.656], [0.218,0.710], [0.243,0.771], [0.270,0.820], [0.297,0.850], [0.324,0.790], [0.348,0.706], [0.368,0.617], [0.378,0.390], [0.378,0.197], [0.378,0.004], [0.378,-0.189], [0.378,-0.382], [0.378,-0.575], [0.401,-0.769], [0.422,-0.839], [0.442,-0.885], [0.465,-0.940], [0.510,-1.000], [0.570,-0.970], [0.601,-0.917], [0.650,-0.960], [0.700,-0.980], [0.750,-1.000], [0.800,-1.000], [0.850,-1.000], [0.900,-1.000], [0.950,-1.000], [1.000,-1.000], [1.050,-1.000],  ],\n  'W' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.250,-1.000], [0.300,-1.000], [0.325,-0.945], [0.303,-0.836], [0.286,-0.745], [0.269,-0.581], [0.267,-0.491], [0.265,-0.371], [0.268,-0.187], [0.272,-0.003], [0.276,0.181], [0.280,0.366], [0.283,0.550], [0.281,0.702], [0.270,0.778], [0.243,0.870], [0.210,0.837], [0.180,0.700], [0.140,0.550], [0.180,0.700], [0.210,0.837], [0.243,0.870], [0.270,0.778], [0.281,0.702], [0.283,0.550], [0.280,0.366], [0.276,0.181], [0.272,-0.003], [0.268,-0.187], [0.265,-0.371], [0.267,-0.491], [0.269,-0.581], [0.286,-0.745], [0.303,-0.836], [0.325,-0.945], [0.353,-0.969], [0.383,-0.976], [0.427,-0.961], [0.464,-0.927], [0.503,-0.876], [0.537,-0.758], [0.558,-0.656], [0.580,-0.399], [0.582,-0.267], [0.584,-0.136], [0.586,-0.004], [0.587,0.127], [0.589,0.259], [0.591,0.390], [0.593,0.522], [0.594,0.653], [0.596,0.785], [0.599,0.850], [0.596,0.785], [0.594,0.653], [0.593,0.522], [0.591,0.390], [0.589,0.259], [0.587,0.127], [0.586,-0.004], [0.584,-0.136], [0.582,-0.267], [0.580,-0.399], [0.582,-0.714], [0.603,-0.832], [0.635,-0.892], [0.681,-0.970], [0.735,-0.970], [0.785,-0.920], [0.824,-0.865], [0.845,-0.807], [0.850,-0.633], [0.856,-0.459], [0.861,-0.285], [0.866,-0.111], [0.872,0.063], [0.877,0.237], [0.882,0.411], [0.888,0.585], [0.893,0.759], [0.899,0.850], [0.893,0.759], [0.888,0.585], [0.882,0.411], [0.877,0.237], [0.872,0.063], [0.866,-0.111], [0.861,-0.285], [0.856,-0.459], [0.850,-0.633], [0.845,-0.807], [0.890,-0.872], [0.942,-0.920], [0.993,-0.960], [1.044,-1.000], [1.095,-1.000], [1.144,-1.000],  ],\n  'X' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.189,-0.877], [0.228,-0.754], [0.267,-0.631], [0.306,-0.508], [0.345,-0.385], [0.384,-0.262], [0.423,-0.139], [0.462,-0.016], [0.501,0.106], [0.540,0.229], [0.579,0.352], [0.618,0.475], [0.657,0.598], [0.696,0.721], [0.735,0.844], [0.696,0.721], [0.657,0.598], [0.618,0.475], [0.579,0.352], [0.540,0.229], [0.501,0.106], [0.459,0.095], [0.447,0.237], [0.436,0.380], [0.424,0.523], [0.412,0.666], [0.375,0.829], [0.301,0.784], [0.250,0.680], [0.218,0.604], [0.181,0.484], [0.218,0.604], [0.250,0.680], [0.301,0.784], [0.375,0.829], [0.412,0.666], [0.424,0.523], [0.436,0.380], [0.447,0.237], [0.459,0.095], [0.471,-0.048], [0.483,-0.191], [0.495,-0.333], [0.506,-0.476], [0.518,-0.619], [0.530,-0.762], [0.557,-0.880], [0.579,-0.994], [0.610,-1.000], [0.610,-1.000], [0.657,-1.000], [0.714,-1.000], [0.750,-1.000], [0.800,-1.000], [0.850,-1.000],  ],\n  'Y' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.215,-0.900], [0.228,-0.758], [0.221,-0.623], [0.225,-0.474], [0.238,-0.233], [0.250,0.009], [0.263,0.250], [0.275,0.492], [0.278,0.671], [0.262,0.807], [0.241,0.850], [0.200,0.840], [0.150,0.810], [0.200,0.840], [0.241,0.850], [0.262,0.807], [0.278,0.671], [0.275,0.492], [0.263,0.250], [0.250,0.009], [0.238,-0.233], [0.225,-0.474], [0.221,-0.623], [0.228,-0.758], [0.249,-0.880], [0.274,-0.957], [0.307,-0.964], [0.337,-0.937], [0.370,-0.882], [0.403,-0.809], [0.430,-0.720], [0.465,-0.650], [0.509,-0.581], [0.521,-0.432], [0.533,-0.282], [0.545,-0.133], [0.557,0.016], [0.569,0.166], [0.581,0.315], [0.593,0.464], [0.606,0.613], [0.618,0.750], [0.630,0.850], [0.618,0.750], [0.606,0.613], [0.593,0.464], [0.581,0.315], [0.569,0.166], [0.557,0.016], [0.545,-0.133], [0.533,-0.282], [0.521,-0.432], [0.509,-0.581], [0.498,-0.746], [0.487,-0.912], [0.477,-1.077], [0.466,-1.243], [0.455,-1.409], [0.444,-1.574], [0.426,-1.725], [0.400,-1.820], [0.365,-1.850], [0.330,-1.866], [0.280,-1.880], [0.240,-1.820], [0.221,-1.744], [0.216,-1.611], [0.231,-1.506], [0.260,-1.380], [0.300,-1.250], [0.335,-1.123], [0.368,-1.054], [0.420,-1.000], [0.460,-1.000], [0.490,-1.000], [0.547,-1.000], [0.580,-1.000], [0.620,-1.000], [0.670,-1.000], [0.720,-1.000],  ],\n  'Z' : [ [0.050,-1.000], [0.100,-1.000], [0.144,-1.000], [0.190,-0.900], [0.233,-0.753], [0.287,-0.618], [0.368,-0.356], [0.411,-0.181], [0.441,-0.014], [0.461,0.151], [0.469,0.360], [0.448,0.553], [0.440,0.597], [0.412,0.699], [0.370,0.804], [0.330,0.810], [0.262,0.767], [0.201,0.661], [0.185,0.622], [0.150,0.549], [0.185,0.622], [0.201,0.661], [0.262,0.767], [0.330,0.810], [0.370,0.804], [0.412,0.699], [0.440,0.597], [0.448,0.553], [0.469,0.360], [0.461,0.151], [0.441,-0.014], [0.411,-0.181], [0.368,-0.356], [0.287,-0.618], [0.233,-0.753], [0.190,-0.900], [0.226,-0.879], [0.245,-0.858], [0.313,-0.853], [0.331,-0.882], [0.392,-1.192], [0.383,-1.391], [0.380,-1.448], [0.345,-1.705], [0.335,-1.756], [0.293,-1.921], [0.223,-1.934], [0.179,-1.910], [0.161,-1.866], [0.148,-1.810], [0.137,-1.673], [0.145,-1.500], [0.183,-1.354], [0.221,-1.216], [0.260,-1.100], [0.296,-1.015], [0.350,-0.970], [0.380,-0.980], [0.420,-1.000], [0.466,-1.000], [0.500,-1.000], [0.550,-1.000], [0.600,-1.000],  ],\n  'a' : [ [0.050,-0.920], [0.086,-0.730], [0.086,-0.662], [0.090,-0.610], [0.106,-0.540], [0.120,-0.490], [0.129,-0.450], [0.145,-0.400], [0.160,-0.350], [0.175,-0.300], [0.196,-0.260], [0.223,-0.230], [0.254,-0.190], [0.310,-0.140], [0.370,-0.117], [0.399,-0.117], [0.410,-0.250], [0.405,-0.420], [0.400,-0.550], [0.390,-0.650], [0.385,-0.771], [0.380,-0.826], [0.330,-0.920], [0.295,-0.984], [0.250,-1.017], [0.210,-1.040], [0.164,-1.017], [0.135,-0.962], [0.125,-0.935], [0.108,-0.876], [0.089,-0.800], [0.086,-0.730], [0.086,-0.662], [0.090,-0.610], [0.106,-0.540], [0.120,-0.490], [0.129,-0.450], [0.145,-0.400], [0.160,-0.350], [0.175,-0.300], [0.196,-0.260], [0.223,-0.230], [0.254,-0.190], [0.310,-0.140], [0.370,-0.117], [0.399,-0.117], [0.410,-0.250], [0.405,-0.420], [0.400,-0.550], [0.390,-0.650], [0.385,-0.771], [0.380,-0.826], [0.399,-0.950], [0.429,-1.017], [0.460,-1.000], [0.500,-1.000], [0.550,-1.000],  ],\n  'b' : [ [0.025,-1.000], [0.050,-0.970], [0.075,-0.930], [0.100,-0.890], [0.117,-0.860], [0.134,-0.810], [0.151,-0.750], [0.167,-0.660], [0.184,-0.580], [0.201,-0.500], [0.218,-0.390], [0.235,-0.300], [0.252,-0.200], [0.269,-0.080], [0.286,0.000], [0.302,0.090], [0.319,0.209], [0.336,0.302], [0.345,0.395], [0.346,0.526], [0.337,0.633], [0.311,0.718], [0.278,0.799], [0.254,0.808], [0.234,0.795], [0.216,0.777], [0.201,0.733], [0.190,0.663], [0.187,0.511], [0.186,0.358], [0.185,0.205], [0.184,0.052], [0.186,-0.101], [0.187,-0.254], [0.188,-0.407], [0.189,-0.560], [0.190,-0.712], [0.196,-0.865], [0.207,-0.920], [0.224,-0.981], [0.242,-1.000], [0.272,-1.000], [0.294,-0.995], [0.316,-0.974], [0.332,-0.953], [0.347,-0.884], [0.355,-0.821], [0.366,-0.749], [0.374,-0.680], [0.385,-0.600], [0.389,-0.518], [0.394,-0.420], [0.395,-0.310], [0.396,-0.207], [0.437,-0.240], [0.465,-0.260], [0.495,-0.250],  ],\n  'c' : [ [0.020,-0.980], [0.030,-0.940], [0.045,-0.870], [0.057,-0.780], [0.067,-0.740], [0.080,-0.680], [0.096,-0.600], [0.124,-0.480], [0.145,-0.390], [0.160,-0.335], [0.174,-0.300], [0.194,-0.254], [0.212,-0.220], [0.233,-0.185], [0.260,-0.170], [0.285,-0.160], [0.311,-0.150], [0.350,-0.150], [0.380,-0.200], [0.400,-0.300], [0.380,-0.200], [0.350,-0.150], [0.311,-0.150], [0.285,-0.160], [0.260,-0.170], [0.233,-0.185], [0.212,-0.220], [0.194,-0.254], [0.174,-0.300], [0.160,-0.335], [0.145,-0.390], [0.117,-0.553], [0.117,-0.660], [0.119,-0.740], [0.129,-0.848], [0.145,-0.908], [0.155,-0.935], [0.164,-0.962], [0.180,-1.010], [0.209,-1.050], [0.262,-1.070], [0.330,-1.050], [0.375,-1.040], [0.410,-1.030], [0.450,-1.020], [0.500,-1.010], [0.550,-1.000],  ],\n  'd' : [ [0.050,-1.000], [0.080,-0.980], [0.107,-0.900], [0.140,-0.800], [0.164,-0.730], [0.166,-0.662], [0.170,-0.610], [0.175,-0.540], [0.184,-0.450], [0.196,-0.360], [0.210,-0.300], [0.250,-0.220], [0.276,-0.180], [0.303,-0.160], [0.370,-0.125], [0.410,-0.117], [0.460,-0.117], [0.410,-0.117], [0.370,-0.125], [0.303,-0.160], [0.276,-0.180], [0.250,-0.220], [0.210,-0.300], [0.196,-0.360], [0.184,-0.450], [0.175,-0.540], [0.170,-0.610], [0.166,-0.662], [0.164,-0.730], [0.169,-0.800], [0.188,-0.876], [0.215,-0.962], [0.244,-1.017], [0.270,-1.028], [0.300,-1.025], [0.330,-1.017], [0.375,-0.984], [0.410,-0.920], [0.470,-0.840], [0.510,-0.826], [0.510,-0.771], [0.510,-0.650], [0.510,-0.550], [0.510,-0.420], [0.510,-0.250], [0.510,0.000], [0.510,0.200], [0.510,0.400], [0.510,0.600], [0.510,0.800], [0.510,0.600], [0.510,0.400], [0.510,0.200], [0.510,0.000], [0.510,-0.250], [0.510,-0.420], [0.510,-0.550], [0.510,-0.650], [0.510,-0.771], [0.510,-0.826], [0.515,-0.900], [0.529,-0.950], [0.559,-1.017], [0.590,-1.044], [0.628,-1.033], [0.660,-1.030], [0.700,-1.000],  ],\n  'e' : [ [0.050,-1.000], [0.100,-1.000], [0.171,-0.950], [0.222,-0.890], [0.270,-0.850], [0.296,-0.800], [0.316,-0.720], [0.330,-0.660], [0.336,-0.600], [0.339,-0.550], [0.341,-0.470], [0.339,-0.400], [0.334,-0.344], [0.329,-0.300], [0.324,-0.263], [0.314,-0.200], [0.304,-0.160], [0.286,-0.130], [0.261,-0.110], [0.236,-0.100], [0.211,-0.110], [0.186,-0.130], [0.168,-0.160], [0.158,-0.200], [0.148,-0.263], [0.143,-0.300], [0.138,-0.344], [0.133,-0.400], [0.131,-0.470], [0.133,-0.550], [0.136,-0.600], [0.142,-0.660], [0.156,-0.720], [0.176,-0.800], [0.201,-0.850], [0.248,-0.900], [0.300,-0.950], [0.356,-0.970], [0.400,-1.000], [0.450,-1.000], [0.500,-1.000],  ],\n  'f' : [ [0.025,-1.000], [0.045,-0.991], [0.063,-0.984], [0.085,-0.950], [0.113,-0.910], [0.133,-0.880], [0.155,-0.860], [0.189,-0.830], [0.220,-0.771], [0.250,-0.720], [0.265,-0.600], [0.275,-0.500], [0.285,-0.400], [0.295,-0.300], [0.305,-0.200], [0.315,-0.120], [0.325,-0.020], [0.332,0.079], [0.342,0.175], [0.356,0.278], [0.364,0.398], [0.372,0.520], [0.361,0.640], [0.340,0.710], [0.315,0.725], [0.285,0.730], [0.250,0.714], [0.220,0.692], [0.194,0.653], [0.175,0.550], [0.173,0.429], [0.172,0.277], [0.173,0.124], [0.174,-0.075], [0.174,-0.277], [0.174,-0.400], [0.175,-0.528], [0.174,-0.650], [0.174,-0.778], [0.174,-0.910], [0.174,-1.050], [0.172,-1.170], [0.170,-1.300], [0.168,-1.400], [0.165,-1.550], [0.165,-1.670], [0.164,-1.800], [0.160,-1.960], [0.190,-1.959], [0.220,-1.958], [0.249,-1.950], [0.279,-1.900], [0.300,-1.850], [0.319,-1.800], [0.324,-1.700], [0.319,-1.600], [0.314,-1.500], [0.307,-1.400], [0.299,-1.300], [0.289,-1.200], [0.275,-1.120], [0.260,-1.070], [0.225,-0.960], [0.247,-0.980], [0.275,-1.020], [0.300,-1.050], [0.334,-1.030], [0.376,-1.020], [0.425,-1.010], [0.475,-1.000], [0.525,-1.000],  ],\n  'g' : [ [0.020,-0.990], [0.039,-0.970], [0.069,-0.930], [0.085,-0.905], [0.120,-0.853], [0.140,-0.820], [0.167,-0.771], [0.187,-0.730], [0.206,-0.670], [0.226,-0.614], [0.235,-0.581], [0.255,-0.526], [0.275,-0.472], [0.294,-0.417], [0.310,-0.370], [0.329,-0.330], [0.354,-0.281], [0.372,-0.250], [0.399,-0.230], [0.429,-0.210], [0.459,-0.190], [0.489,-0.176], [0.519,-0.180], [0.530,-0.220], [0.528,-0.300], [0.526,-0.380], [0.524,-0.460], [0.522,-0.540], [0.520,-0.620], [0.518,-0.700], [0.516,-0.780], [0.514,-0.860], [0.512,-0.940], [0.480,-0.970], [0.449,-1.000], [0.399,-1.030], [0.359,-1.044], [0.310,-1.030], [0.269,-1.000], [0.235,-0.962], [0.209,-0.870], [0.196,-0.771], [0.187,-0.730], [0.206,-0.670], [0.226,-0.614], [0.235,-0.581], [0.255,-0.526], [0.275,-0.472], [0.294,-0.417], [0.310,-0.370], [0.329,-0.330], [0.354,-0.281], [0.372,-0.250], [0.399,-0.230], [0.429,-0.210], [0.459,-0.190], [0.489,-0.176], [0.519,-0.180], [0.530,-0.220], [0.528,-0.300], [0.526,-0.380], [0.524,-0.460], [0.522,-0.540], [0.520,-0.620], [0.518,-0.700], [0.516,-0.780], [0.514,-0.860], [0.512,-0.940], [0.510,-1.020], [0.508,-1.100], [0.506,-1.180], [0.504,-1.260], [0.502,-1.340], [0.500,-1.420], [0.498,-1.500], [0.496,-1.580], [0.494,-1.660], [0.492,-1.740], [0.490,-1.820], [0.488,-1.900], [0.486,-1.980], [0.450,-1.975], [0.410,-1.967], [0.380,-1.955], [0.350,-1.920], [0.320,-1.870], [0.290,-1.800], [0.270,-1.720], [0.260,-1.660], [0.250,-1.580], [0.255,-1.520], [0.270,-1.470], [0.294,-1.398], [0.312,-1.350], [0.334,-1.300], [0.369,-1.240], [0.409,-1.190], [0.439,-1.150], [0.470,-1.100], [0.514,-1.050], [0.558,-1.040], [0.610,-1.030], [0.650,-1.020], [0.700,-1.000],  ],\n  'h' : [ [0.027,-0.910], [0.042,-0.858], [0.065,-0.794], [0.079,-0.738], [0.099,-0.681], [0.116,-0.624], [0.130,-0.568], [0.147,-0.515], [0.163,-0.460], [0.178,-0.400], [0.192,-0.360], [0.205,-0.310], [0.225,-0.257], [0.254,-0.173], [0.284,-0.120], [0.299,-0.060], [0.323,0.000], [0.339,0.079], [0.354,0.163], [0.363,0.218], [0.377,0.275], [0.383,0.360], [0.388,0.440], [0.389,0.541], [0.383,0.651], [0.377,0.740], [0.352,0.798], [0.319,0.830], [0.284,0.830], [0.239,0.793], [0.209,0.751], [0.189,0.674], [0.174,0.526], [0.174,0.426], [0.174,0.324], [0.174,0.192], [0.174,0.059], [0.174,-0.073], [0.174,-0.205], [0.174,-0.338], [0.174,-0.470], [0.174,-0.603], [0.174,-0.735], [0.174,-0.868], [0.174,-1.000], [0.176,-0.868], [0.178,-0.735], [0.194,-0.680], [0.216,-0.601], [0.230,-0.529], [0.247,-0.436], [0.263,-0.374], [0.280,-0.292], [0.298,-0.250], [0.332,-0.230], [0.367,-0.220], [0.399,-0.230], [0.437,-0.270], [0.451,-0.344], [0.447,-0.436], [0.444,-0.516], [0.440,-0.607], [0.440,-0.702], [0.448,-0.807], [0.463,-0.919], [0.497,-0.975], [0.541,-1.009], [0.591,-1.000],  ],\n  'i' : [ [0.050,-1.005], [0.102,-1.020], [0.150,-1.029], [0.170,-0.974], [0.186,-0.912], [0.195,-0.822], [0.196,-0.722], [0.197,-0.672], [0.201,-0.582], [0.204,-0.512], [0.207,-0.412], [0.207,-0.312], [0.208,-0.242], [0.210,-0.112], [0.210,-0.242], [0.211,-0.312], [0.209,-0.412], [0.212,-0.512], [0.214,-0.582], [0.217,-0.672], [0.217,-0.722], [0.218,-0.822], [0.226,-0.912], [0.240,-0.975], [0.260,-1.029], [0.305,-1.050], [0.344,-1.010], [0.398,-1.000],  ],\n  'j' : [ [0.025,-0.970], [0.058,-0.939], [0.077,-0.890], [0.094,-0.849], [0.111,-0.796], [0.117,-0.767], [0.133,-0.719], [0.147,-0.682], [0.160,-0.625], [0.173,-0.569], [0.187,-0.498], [0.197,-0.427], [0.202,-0.386], [0.212,-0.304], [0.219,-0.193], [0.225,-0.132], [0.225,-0.191], [0.225,-0.272], [0.225,-0.400], [0.225,-0.539], [0.225,-0.679], [0.225,-0.818], [0.225,-0.958], [0.225,-1.097], [0.225,-1.237], [0.225,-1.377], [0.225,-1.516], [0.225,-1.656], [0.216,-1.728], [0.205,-1.799], [0.192,-1.856], [0.174,-1.875], [0.150,-1.880], [0.128,-1.860], [0.115,-1.834], [0.101,-1.728], [0.095,-1.599], [0.094,-1.499], [0.102,-1.399], [0.115,-1.313], [0.128,-1.257], [0.142,-1.201], [0.155,-1.144], [0.168,-1.088], [0.177,-1.060], [0.193,-1.025], [0.210,-0.993], [0.226,-0.961], [0.240,-0.948], [0.258,-0.938], [0.278,-0.938], [0.300,-0.957], [0.325,-0.977], [0.350,-1.000],  ],\n  'k' : [ [0.025,-0.950], [0.045,-0.900], [0.062,-0.850], [0.080,-0.800], [0.100,-0.720], [0.121,-0.662], [0.141,-0.608], [0.160,-0.553], [0.175,-0.526], [0.198,-0.434], [0.226,-0.341], [0.254,-0.248], [0.282,-0.156], [0.310,-0.063], [0.327,-0.008], [0.344,0.046], [0.356,0.101], [0.366,0.155], [0.388,0.233], [0.398,0.288], [0.409,0.344], [0.420,0.400], [0.430,0.456], [0.441,0.512], [0.450,0.590], [0.454,0.673], [0.434,0.720], [0.409,0.730], [0.385,0.730], [0.355,0.730], [0.325,0.720], [0.295,0.700], [0.265,0.646], [0.235,0.587], [0.210,0.473], [0.200,0.360], [0.200,0.246], [0.200,0.132], [0.200,0.019], [0.200,-0.063], [0.200,-0.153], [0.200,-0.243], [0.200,-0.333], [0.200,-0.423], [0.200,-0.513], [0.200,-0.602], [0.200,-0.692], [0.200,-0.782], [0.200,-0.872], [0.200,-0.962], [0.200,-1.071], [0.200,-0.962], [0.200,-0.872], [0.200,-0.782], [0.200,-0.692], [0.200,-0.602], [0.208,-0.513], [0.234,-0.500], [0.274,-0.490], [0.314,-0.480], [0.364,-0.460], [0.404,-0.430], [0.444,-0.400], [0.469,-0.350], [0.484,-0.308], [0.478,-0.240], [0.464,-0.180], [0.446,-0.145], [0.424,-0.112], [0.384,-0.140], [0.354,-0.200], [0.304,-0.300], [0.274,-0.400], [0.254,-0.470], [0.225,-0.520], [0.244,-0.570], [0.268,-0.608], [0.287,-0.662], [0.307,-0.717], [0.326,-0.771], [0.340,-0.826], [0.348,-0.853], [0.366,-0.908], [0.385,-0.962], [0.405,-1.017], [0.429,-1.070], [0.454,-1.100], [0.479,-1.090], [0.504,-1.070], [0.529,-1.050], [0.554,-1.030], [0.571,-1.020], [0.595,-1.000], [0.626,-1.020], [0.650,-1.000],  ],\n  'l' : [ [0.035,-0.950], [0.057,-0.891], [0.073,-0.835], [0.085,-0.800], [0.101,-0.749], [0.114,-0.693], [0.132,-0.636], [0.150,-0.580], [0.170,-0.522], [0.180,-0.466], [0.200,-0.411], [0.222,-0.355], [0.237,-0.300], [0.256,-0.210], [0.270,-0.140], [0.284,-0.060], [0.295,-0.009], [0.300,0.037], [0.308,0.090], [0.314,0.149], [0.322,0.204], [0.326,0.260], [0.333,0.338], [0.340,0.400], [0.344,0.490], [0.349,0.591], [0.350,0.646], [0.344,0.727], [0.324,0.789], [0.303,0.833], [0.282,0.845], [0.265,0.850], [0.235,0.844], [0.204,0.827], [0.190,0.771], [0.185,0.716], [0.181,0.668], [0.179,0.601], [0.179,0.499], [0.179,0.397], [0.179,0.295], [0.179,0.193], [0.179,0.091], [0.179,-0.011], [0.179,-0.113], [0.179,-0.215], [0.179,-0.317], [0.179,-0.419], [0.179,-0.521], [0.178,-0.623], [0.178,-0.726], [0.178,-0.828], [0.183,-0.901], [0.202,-0.959], [0.225,-0.990], [0.256,-0.997], [0.284,-1.024], [0.317,-1.040], [0.355,-1.020], [0.398,-1.010], [0.450,-1.000], [0.500,-1.000], [0.550,-1.000],  ],\n  'm' : [ [0.039,-0.950], [0.059,-0.908], [0.068,-0.880], [0.088,-0.826], [0.098,-0.799], [0.117,-0.744], [0.127,-0.717], [0.137,-0.690], [0.147,-0.662], [0.159,-0.620], [0.174,-0.560], [0.186,-0.526], [0.191,-0.499], [0.197,-0.472], [0.205,-0.444], [0.219,-0.400], [0.229,-0.370], [0.245,-0.335], [0.264,-0.281], [0.274,-0.254], [0.284,-0.226], [0.294,-0.199], [0.310,-0.170], [0.333,-0.156], [0.355,-0.140], [0.382,-0.145], [0.391,-0.172], [0.393,-0.196], [0.396,-0.256], [0.400,-0.316], [0.403,-0.376], [0.406,-0.436], [0.409,-0.496], [0.403,-0.548], [0.398,-0.600], [0.392,-0.652], [0.386,-0.704], [0.381,-0.756], [0.375,-0.808], [0.369,-0.860], [0.364,-0.913], [0.358,-0.965], [0.352,-1.017], [0.358,-0.965], [0.364,-0.913], [0.369,-0.860], [0.375,-0.808], [0.381,-0.756], [0.386,-0.704], [0.392,-0.652], [0.398,-0.600], [0.403,-0.548], [0.409,-0.496], [0.421,-0.444], [0.437,-0.400], [0.450,-0.363], [0.460,-0.335], [0.470,-0.308], [0.479,-0.281], [0.489,-0.254], [0.499,-0.226], [0.519,-0.180], [0.539,-0.150], [0.568,-0.127], [0.597,-0.117], [0.607,-0.145], [0.616,-0.172], [0.626,-0.199], [0.632,-0.243], [0.638,-0.286], [0.644,-0.330], [0.650,-0.374], [0.656,-0.417], [0.649,-0.474], [0.642,-0.532], [0.635,-0.589], [0.628,-0.646], [0.621,-0.703], [0.614,-0.760], [0.608,-0.818], [0.601,-0.875], [0.594,-0.932], [0.594,-0.989], [0.594,-0.932], [0.601,-0.875], [0.608,-0.818], [0.614,-0.760], [0.621,-0.703], [0.628,-0.646], [0.635,-0.589], [0.642,-0.532], [0.649,-0.474], [0.656,-0.417], [0.665,-0.390], [0.680,-0.350], [0.695,-0.308], [0.705,-0.281], [0.715,-0.240], [0.734,-0.199], [0.744,-0.172], [0.759,-0.145], [0.799,-0.120], [0.841,-0.145], [0.861,-0.199], [0.871,-0.226], [0.881,-0.281], [0.876,-0.338], [0.871,-0.395], [0.866,-0.452], [0.861,-0.509], [0.856,-0.565], [0.851,-0.622], [0.846,-0.679], [0.841,-0.736], [0.837,-0.793], [0.832,-0.850], [0.832,-0.908], [0.851,-0.962], [0.861,-0.989], [0.880,-1.020], [0.930,-1.030], [0.959,-1.030], [0.987,-1.015], [1.018,-1.010], [1.050,-1.000],  ],\n  'n' : [ [0.020,-1.000], [0.039,-1.000], [0.050,-0.950], [0.060,-0.900], [0.070,-0.810], [0.085,-0.700], [0.100,-0.600], [0.115,-0.500], [0.130,-0.350], [0.150,-0.200], [0.172,-0.063], [0.195,0.000], [0.220,-0.030], [0.235,-0.090], [0.244,-0.145], [0.249,-0.200], [0.254,-0.250], [0.256,-0.308], [0.253,-0.374], [0.253,-0.439], [0.253,-0.504], [0.253,-0.570], [0.253,-0.635], [0.253,-0.701], [0.253,-0.766], [0.253,-0.831], [0.253,-0.897], [0.253,-0.962], [0.253,-0.897], [0.253,-0.831], [0.253,-0.766], [0.253,-0.701], [0.253,-0.635], [0.253,-0.570], [0.253,-0.504], [0.253,-0.439], [0.253,-0.374], [0.270,-0.360], [0.285,-0.330], [0.299,-0.308], [0.309,-0.281], [0.319,-0.254], [0.328,-0.226], [0.345,-0.190], [0.365,-0.145], [0.386,-0.090], [0.407,-0.063], [0.436,-0.063], [0.456,-0.090], [0.465,-0.117], [0.475,-0.145], [0.480,-0.200], [0.485,-0.250], [0.485,-0.350], [0.485,-0.420], [0.485,-0.500], [0.485,-0.570], [0.485,-0.640], [0.485,-0.690], [0.485,-0.750], [0.485,-0.800], [0.485,-0.853], [0.485,-0.908], [0.490,-0.970], [0.509,-1.030], [0.544,-1.040], [0.569,-1.030], [0.602,-1.000],  ],\n  'o' : [ [0.050,-0.930], [0.079,-0.850], [0.095,-0.790], [0.110,-0.730], [0.120,-0.680], [0.126,-0.640], [0.140,-0.581], [0.151,-0.540], [0.157,-0.500], [0.170,-0.450], [0.185,-0.390], [0.195,-0.363], [0.204,-0.335], [0.219,-0.290], [0.234,-0.254], [0.244,-0.226], [0.253,-0.199], [0.263,-0.172], [0.284,-0.160], [0.309,-0.140], [0.344,-0.140], [0.369,-0.160], [0.381,-0.172], [0.394,-0.200], [0.403,-0.220], [0.410,-0.250], [0.420,-0.281], [0.424,-0.338], [0.423,-0.395], [0.426,-0.451], [0.425,-0.508], [0.421,-0.565], [0.418,-0.622], [0.413,-0.679], [0.405,-0.735], [0.395,-0.792], [0.385,-0.849], [0.378,-0.900], [0.365,-0.960], [0.350,-1.010], [0.325,-1.050], [0.300,-1.070], [0.270,-1.080], [0.234,-1.065], [0.219,-1.040], [0.204,-1.005], [0.185,-0.962], [0.175,-0.935], [0.165,-0.908], [0.155,-0.880], [0.149,-0.850], [0.139,-0.800], [0.129,-0.750], [0.122,-0.700], [0.126,-0.640], [0.140,-0.581], [0.151,-0.540], [0.157,-0.500], [0.170,-0.450], [0.185,-0.390], [0.195,-0.363], [0.204,-0.335], [0.219,-0.290], [0.234,-0.254], [0.244,-0.226], [0.253,-0.199], [0.263,-0.172], [0.284,-0.160], [0.308,-0.200], [0.320,-0.250], [0.335,-0.290], [0.350,-0.310], [0.370,-0.330], [0.390,-0.340], [0.410,-0.340], [0.430,-0.340], [0.450,-0.340], [0.470,-0.335], [0.490,-0.330], [0.510,-0.320], [0.530,-0.300], [0.550,-0.280], [0.570,-0.250],  ],\n  'p' : [ [0.040,-1.017], [0.077,-0.977], [0.106,-0.890], [0.124,-0.793], [0.137,-0.692], [0.149,-0.590], [0.161,-0.489], [0.171,-0.428], [0.186,-0.377], [0.198,-0.286], [0.214,-0.234], [0.219,-0.327], [0.218,-0.454], [0.217,-0.581], [0.216,-0.708], [0.215,-0.835], [0.213,-0.962], [0.212,-1.089], [0.211,-1.216], [0.210,-1.343], [0.209,-1.470], [0.208,-1.597], [0.207,-1.724], [0.206,-1.851], [0.207,-1.724], [0.208,-1.597], [0.209,-1.470], [0.210,-1.343], [0.211,-1.216], [0.212,-1.089], [0.213,-0.962], [0.215,-0.835], [0.216,-0.708], [0.217,-0.581], [0.218,-0.454], [0.219,-0.327], [0.220,-0.200], [0.214,-0.234], [0.239,-0.182], [0.257,-0.131], [0.281,-0.099], [0.300,-0.077], [0.314,-0.066], [0.332,-0.055], [0.359,-0.063], [0.390,-0.088], [0.417,-0.165], [0.424,-0.197], [0.443,-0.275], [0.453,-0.406], [0.454,-0.495], [0.455,-0.627], [0.447,-0.708], [0.440,-0.800], [0.427,-0.845], [0.406,-0.891], [0.383,-0.915], [0.346,-0.961], [0.312,-0.954], [0.280,-0.950], [0.250,-0.930], [0.280,-0.950], [0.312,-0.954], [0.346,-0.961], [0.367,-0.955], [0.399,-0.972], [0.449,-0.988], [0.479,-0.996], [0.517,-1.020], [0.550,-1.020], [0.586,-1.010], [0.620,-1.000],  ],\n  'q' : [ [0.020,-0.990], [0.039,-0.970], [0.069,-0.930], [0.085,-0.905], [0.108,-0.853], [0.127,-0.799], [0.137,-0.771], [0.162,-0.720], [0.176,-0.670], [0.196,-0.614], [0.205,-0.581], [0.225,-0.526], [0.245,-0.472], [0.264,-0.417], [0.280,-0.370], [0.299,-0.330], [0.324,-0.281], [0.342,-0.250], [0.369,-0.230], [0.399,-0.210], [0.429,-0.190], [0.459,-0.176], [0.489,-0.180], [0.500,-0.220], [0.498,-0.300], [0.496,-0.380], [0.494,-0.460], [0.492,-0.540], [0.490,-0.620], [0.488,-0.700], [0.486,-0.780], [0.484,-0.860], [0.482,-0.940], [0.450,-0.970], [0.419,-1.000], [0.369,-1.030], [0.329,-1.044], [0.280,-1.030], [0.239,-1.000], [0.205,-0.962], [0.179,-0.870], [0.166,-0.771], [0.176,-0.670], [0.196,-0.614], [0.205,-0.581], [0.225,-0.526], [0.245,-0.472], [0.264,-0.417], [0.280,-0.370], [0.299,-0.330], [0.324,-0.281], [0.342,-0.250], [0.369,-0.230], [0.399,-0.210], [0.429,-0.190], [0.459,-0.176], [0.489,-0.180], [0.500,-0.220], [0.498,-0.300], [0.496,-0.380], [0.494,-0.460], [0.492,-0.540], [0.490,-0.620], [0.488,-0.700], [0.486,-0.780], [0.484,-0.860], [0.482,-0.940], [0.480,-1.020], [0.478,-1.100], [0.476,-1.180], [0.474,-1.260], [0.472,-1.340], [0.470,-1.420], [0.468,-1.500], [0.466,-1.580], [0.464,-1.660], [0.462,-1.740], [0.460,-1.820], [0.458,-1.900], [0.456,-1.980], [0.480,-1.975], [0.510,-1.967], [0.530,-1.955], [0.550,-1.920], [0.570,-1.870], [0.590,-1.800], [0.610,-1.720], [0.620,-1.660], [0.625,-1.580], [0.620,-1.520], [0.610,-1.470], [0.590,-1.398], [0.570,-1.350], [0.550,-1.300], [0.530,-1.240], [0.510,-1.190], [0.500,-1.150], [0.500,-1.080], [0.528,-1.050], [0.560,-1.030], [0.590,-1.010], [0.620,-1.000], [0.670,-1.000], [0.720,-1.000],  ],\n  'r' : [ [0.050,-1.000], [0.100,-0.960], [0.130,-0.900], [0.150,-0.850], [0.170,-0.800], [0.182,-0.700], [0.195,-0.600], [0.205,-0.490], [0.213,-0.420], [0.220,-0.350], [0.229,-0.270], [0.235,-0.200], [0.310,-0.200], [0.360,-0.200], [0.410,-0.200], [0.460,-0.200], [0.510,-0.200], [0.510,-0.250], [0.505,-0.350], [0.500,-0.450], [0.490,-0.550], [0.480,-0.650], [0.475,-0.750], [0.490,-0.850], [0.510,-0.900], [0.550,-0.950], [0.600,-0.980], [0.660,-1.000], [0.730,-1.000],  ],\n  's' : [ [0.039,-0.980], [0.079,-0.935], [0.099,-0.900], [0.117,-0.860], [0.150,-0.799], [0.184,-0.700], [0.225,-0.600], [0.245,-0.520], [0.260,-0.450], [0.265,-0.360], [0.265,-0.300], [0.250,-0.150], [0.300,-0.240], [0.330,-0.300], [0.360,-0.350], [0.384,-0.400], [0.410,-0.450], [0.430,-0.548], [0.440,-0.600], [0.445,-0.651], [0.450,-0.703], [0.445,-0.755], [0.435,-0.807], [0.420,-0.859], [0.400,-0.910], [0.372,-0.954], [0.334,-1.000], [0.304,-1.017], [0.275,-1.020], [0.245,-1.017], [0.220,-1.000], [0.180,-0.970], [0.140,-0.930], [0.180,-0.970], [0.220,-1.000], [0.245,-1.017], [0.275,-1.020], [0.304,-1.017], [0.334,-1.000], [0.372,-0.954], [0.399,-0.980], [0.424,-1.000], [0.449,-1.000], [0.474,-1.000], [0.500,-1.000], [0.550,-1.000],  ],\n  't' : [ [0.050,-1.000], [0.100,-1.000], [0.140,-1.000], [0.175,-1.000], [0.220,-1.000], [0.262,-1.000], [0.285,-0.967], [0.294,-0.787], [0.302,-0.607], [0.311,-0.426], [0.320,-0.246], [0.328,-0.066], [0.337,0.115], [0.346,0.295], [0.325,0.295], [0.307,0.295], [0.274,0.295], [0.242,0.295], [0.200,0.295], [0.150,0.295], [0.100,0.295], [0.150,0.295], [0.200,0.295], [0.242,0.295], [0.274,0.295], [0.307,0.295], [0.325,0.295], [0.372,0.295], [0.405,0.295], [0.429,0.295], [0.461,0.295], [0.494,0.295], [0.527,0.295], [0.575,0.295], [0.625,0.295], [0.575,0.295], [0.527,0.295], [0.494,0.295], [0.461,0.295], [0.429,0.295], [0.405,0.295], [0.372,0.295], [0.346,0.295], [0.354,0.475], [0.363,0.655], [0.372,0.836], [0.372,0.655], [0.372,0.475], [0.372,0.295], [0.372,0.115], [0.372,-0.066], [0.372,-0.246], [0.372,-0.426], [0.372,-0.607], [0.372,-0.787], [0.372,-0.967], [0.387,-1.022], [0.424,-1.035], [0.475,-1.015], [0.526,-1.005], [0.575,-1.000], [0.625,-1.000], [0.675,-1.000], [0.725,-1.000],  ],\n  'u' : [ [0.025,-0.970], [0.050,-0.950], [0.075,-0.930], [0.092,-0.910], [0.105,-0.887], [0.120,-0.835], [0.130,-0.783], [0.140,-0.730], [0.150,-0.670], [0.168,-0.652], [0.172,-0.594], [0.176,-0.536], [0.180,-0.478], [0.184,-0.420], [0.188,-0.363], [0.191,-0.305], [0.195,-0.247], [0.199,-0.189], [0.202,-0.131], [0.199,-0.189], [0.195,-0.247], [0.191,-0.305], [0.188,-0.363], [0.184,-0.420], [0.180,-0.478], [0.176,-0.536], [0.172,-0.594], [0.168,-0.652], [0.165,-0.710], [0.161,-0.768], [0.157,-0.826], [0.153,-0.884], [0.149,-0.942], [0.153,-1.000], [0.170,-1.020], [0.195,-1.030], [0.225,-1.020], [0.250,-1.010], [0.271,-0.990], [0.295,-0.970], [0.320,-0.950], [0.343,-0.930], [0.362,-0.910], [0.380,-0.880], [0.395,-0.840], [0.401,-0.787], [0.403,-0.731], [0.405,-0.676], [0.408,-0.620], [0.410,-0.565], [0.412,-0.509], [0.414,-0.454], [0.416,-0.398], [0.418,-0.342], [0.421,-0.287], [0.423,-0.231], [0.425,-0.162], [0.427,-0.102], [0.425,-0.162], [0.423,-0.231], [0.421,-0.287], [0.418,-0.342], [0.416,-0.398], [0.414,-0.454], [0.412,-0.509], [0.410,-0.565], [0.408,-0.620], [0.419,-0.697], [0.423,-0.760], [0.430,-0.820], [0.440,-0.880], [0.445,-0.940], [0.465,-1.000], [0.497,-1.020], [0.530,-1.020], [0.555,-1.010], [0.600,-1.000],  ],\n  'v' : [ [0.018,-0.996], [0.030,-0.940], [0.041,-0.883], [0.053,-0.826], [0.065,-0.770], [0.077,-0.713], [0.089,-0.656], [0.101,-0.581], [0.108,-0.516], [0.120,-0.459], [0.132,-0.403], [0.144,-0.346], [0.156,-0.289], [0.167,-0.233], [0.189,-0.174], [0.205,-0.145], [0.228,-0.129], [0.253,-0.138], [0.268,-0.164], [0.280,-0.189], [0.287,-0.232], [0.293,-0.282], [0.299,-0.324], [0.299,-0.362], [0.297,-0.404], [0.296,-0.453], [0.294,-0.502], [0.293,-0.550], [0.292,-0.599], [0.290,-0.648], [0.289,-0.696], [0.287,-0.745], [0.286,-0.794], [0.290,-0.848], [0.300,-0.907], [0.309,-0.956], [0.326,-1.004], [0.349,-1.032], [0.373,-1.008], [0.396,-0.976], [0.405,-0.926], [0.414,-0.875], [0.422,-0.824], [0.431,-0.773], [0.433,-0.718], [0.443,-0.665], [0.446,-0.604], [0.452,-0.554], [0.459,-0.465], [0.465,-0.375], [0.472,-0.285], [0.479,-0.195], [0.521,-0.204], [0.565,-0.228], [0.597,-0.243], [0.622,-0.250],  ],\n  'w' : [ [0.017,-0.994], [0.029,-0.962], [0.049,-0.907], [0.060,-0.879], [0.072,-0.850], [0.086,-0.794], [0.100,-0.738], [0.114,-0.681], [0.127,-0.625], [0.141,-0.569], [0.154,-0.499], [0.167,-0.416], [0.180,-0.332], [0.193,-0.248], [0.206,-0.165], [0.212,-0.123], [0.210,-0.222], [0.207,-0.322], [0.205,-0.421], [0.202,-0.520], [0.199,-0.620], [0.201,-0.683], [0.206,-0.783], [0.211,-0.863], [0.230,-0.943], [0.255,-0.995], [0.291,-1.015], [0.333,-0.987], [0.346,-0.931], [0.360,-0.875], [0.374,-0.819], [0.385,-0.763], [0.396,-0.707], [0.405,-0.651], [0.414,-0.595], [0.418,-0.496], [0.423,-0.397], [0.427,-0.298], [0.432,-0.199], [0.436,-0.150], [0.443,-0.216], [0.450,-0.332], [0.457,-0.448], [0.464,-0.564], [0.471,-0.680], [0.478,-0.797], [0.485,-0.913], [0.510,-0.992], [0.536,-0.999], [0.560,-0.987], [0.581,-0.926], [0.597,-0.877], [0.610,-0.821], [0.624,-0.765], [0.631,-0.698], [0.638,-0.602], [0.642,-0.549], [0.648,-0.444], [0.654,-0.338], [0.660,-0.233], [0.667,-0.150], [0.699,-0.160], [0.732,-0.180], [0.763,-0.200], [0.797,-0.250],  ],\n  'x' : [ [0.050,-1.000], [0.100,-1.000], [0.129,-0.923], [0.154,-0.860], [0.179,-0.797], [0.203,-0.733], [0.228,-0.670], [0.253,-0.607], [0.277,-0.543], [0.307,-0.472], [0.327,-0.417], [0.351,-0.353], [0.376,-0.290], [0.401,-0.227], [0.425,-0.163], [0.450,-0.100], [0.470,-0.050], [0.450,-0.100], [0.425,-0.163], [0.401,-0.227], [0.376,-0.290], [0.351,-0.353], [0.327,-0.417], [0.307,-0.472], [0.262,-0.580], [0.245,-0.525], [0.224,-0.446], [0.202,-0.367], [0.180,-0.287], [0.158,-0.208], [0.137,-0.129], [0.115,-0.050], [0.137,-0.129], [0.158,-0.208], [0.180,-0.287], [0.202,-0.367], [0.224,-0.446], [0.245,-0.525], [0.262,-0.580], [0.289,-0.683], [0.311,-0.763], [0.332,-0.842], [0.354,-0.921], [0.376,-1.000], [0.400,-1.044], [0.422,-1.051], [0.449,-1.070], [0.470,-1.065], [0.491,-1.060], [0.508,-1.040], [0.530,-1.025], [0.550,-1.010], [0.580,-1.000],  ],\n  'y' : [ [0.020,-0.990], [0.039,-0.969], [0.058,-0.944], [0.073,-0.922], [0.085,-0.880], [0.098,-0.837], [0.110,-0.795], [0.123,-0.752], [0.135,-0.710], [0.147,-0.667], [0.160,-0.625], [0.172,-0.582], [0.185,-0.540], [0.197,-0.497], [0.210,-0.455], [0.222,-0.412], [0.235,-0.370], [0.247,-0.328], [0.260,-0.285], [0.272,-0.243], [0.302,-0.220], [0.322,-0.219], [0.345,-0.237], [0.355,-0.264], [0.360,-0.308], [0.356,-0.358], [0.353,-0.403], [0.344,-0.496], [0.335,-0.588], [0.326,-0.681], [0.317,-0.773], [0.308,-0.866], [0.307,-0.940], [0.312,-1.002], [0.323,-1.029], [0.334,-1.056], [0.345,-1.083], [0.358,-1.108], [0.373,-1.128], [0.394,-1.136], [0.414,-1.136], [0.455,-1.125], [0.493,-1.083], [0.512,-1.043], [0.555,-0.951], [0.559,-0.868], [0.563,-0.785], [0.567,-0.701], [0.571,-0.618], [0.575,-0.535], [0.579,-0.451], [0.583,-0.368], [0.587,-0.285], [0.591,-0.229], [0.587,-0.285], [0.583,-0.368], [0.579,-0.451], [0.575,-0.535], [0.571,-0.618], [0.567,-0.701], [0.563,-0.785], [0.559,-0.868], [0.555,-0.951], [0.551,-1.034], [0.547,-1.118], [0.543,-1.201], [0.539,-1.284], [0.535,-1.368], [0.531,-1.451], [0.527,-1.534], [0.523,-1.617], [0.519,-1.701], [0.514,-1.784], [0.510,-1.867], [0.493,-1.923], [0.463,-1.938], [0.423,-1.948], [0.384,-1.958], [0.347,-1.949], [0.319,-1.929], [0.308,-1.902], [0.298,-1.875], [0.287,-1.848], [0.277,-1.811], [0.274,-1.767], [0.278,-1.706], [0.293,-1.661], [0.300,-1.621], [0.314,-1.574], [0.322,-1.535], [0.333,-1.492], [0.342,-1.464], [0.351,-1.437], [0.360,-1.409], [0.369,-1.382], [0.377,-1.354], [0.386,-1.326], [0.411,-1.296], [0.440,-1.265], [0.468,-1.234], [0.497,-1.203], [0.578,-1.130], [0.611,-1.084], [0.644,-1.048], [0.677,-1.027], [0.710,-1.006], [0.740,-1.000],  ],\n  'z' : [ [0.020,-0.960], [0.039,-0.908], [0.049,-0.880], [0.068,-0.826], [0.078,-0.799], [0.098,-0.744], [0.108,-0.717], [0.127,-0.662], [0.137,-0.635], [0.157,-0.581], [0.169,-0.540], [0.186,-0.490], [0.196,-0.460], [0.215,-0.410], [0.229,-0.370], [0.259,-0.300], [0.289,-0.220], [0.303,-0.172], [0.323,-0.130], [0.339,-0.110], [0.362,-0.117], [0.382,-0.145], [0.391,-0.172], [0.401,-0.199], [0.411,-0.226], [0.417,-0.300], [0.411,-0.363], [0.399,-0.450], [0.384,-0.529], [0.362,-0.608], [0.342,-0.662], [0.319,-0.750], [0.294,-0.826], [0.274,-0.880], [0.264,-0.908], [0.235,-0.989], [0.225,-1.017], [0.235,-0.989], [0.264,-0.908], [0.274,-0.880], [0.294,-0.826], [0.323,-0.826], [0.339,-0.860], [0.352,-0.908], [0.362,-0.935], [0.378,-0.980], [0.391,-1.044], [0.394,-1.071], [0.391,-1.098], [0.391,-1.153], [0.391,-1.207], [0.384,-1.350], [0.369,-1.450], [0.354,-1.537], [0.342,-1.589], [0.333,-1.616], [0.313,-1.698], [0.303,-1.725], [0.290,-1.760], [0.270,-1.834], [0.254,-1.861], [0.236,-1.880], [0.215,-1.861], [0.205,-1.834], [0.179,-1.770], [0.166,-1.725], [0.159,-1.670], [0.166,-1.616], [0.178,-1.566], [0.196,-1.507], [0.205,-1.480], [0.215,-1.453], [0.225,-1.425], [0.235,-1.398], [0.245,-1.371], [0.254,-1.344], [0.264,-1.316], [0.274,-1.289], [0.295,-1.254], [0.315,-1.210], [0.336,-1.170], [0.356,-1.130], [0.377,-1.100], [0.397,-1.070], [0.418,-1.050], [0.438,-1.030], [0.459,-1.020], [0.479,-1.005], [0.500,-1.000], [0.525,-0.990], [0.550,-0.990], [0.575,-1.000],  ],\n  'a*' : [ [0.040,-0.280], [0.080,-0.250], [0.120,-0.230], [0.160,-0.190], [0.200,-0.180], [0.254,-0.170], [0.310,-0.140], [0.370,-0.117], [0.399,-0.117], [0.410,-0.250], [0.405,-0.420], [0.400,-0.550], [0.390,-0.650], [0.385,-0.771], [0.380,-0.826], [0.330,-0.920], [0.295,-0.984], [0.250,-1.017], [0.210,-1.040], [0.164,-1.017], [0.135,-0.962], [0.125,-0.935], [0.108,-0.876], [0.089,-0.800], [0.086,-0.730], [0.086,-0.662], [0.090,-0.610], [0.106,-0.540], [0.120,-0.490], [0.129,-0.450], [0.145,-0.400], [0.160,-0.350], [0.175,-0.300], [0.196,-0.260], [0.223,-0.230], [0.254,-0.170], [0.310,-0.140], [0.370,-0.117], [0.399,-0.117], [0.410,-0.250], [0.405,-0.420], [0.400,-0.550], [0.390,-0.650], [0.385,-0.771], [0.380,-0.826], [0.399,-0.950], [0.429,-1.017], [0.460,-1.000], [0.500,-1.000],  ],\n  'b*' : [ [0.025,-0.260], [0.050,-0.270], [0.075,-0.260], [0.105,-0.260], [0.135,-0.265], [0.165,-0.260], [0.195,-0.240], [0.215,-0.210], [0.230,-0.150], [0.244,-0.080], [0.261,0.000], [0.277,0.090], [0.294,0.209], [0.311,0.302], [0.320,0.395], [0.321,0.526], [0.312,0.633], [0.286,0.718], [0.253,0.799], [0.229,0.808], [0.209,0.795], [0.191,0.777], [0.176,0.733], [0.165,0.663], [0.162,0.511], [0.161,0.358], [0.160,0.205], [0.159,0.052], [0.161,-0.101], [0.162,-0.254], [0.163,-0.407], [0.164,-0.560], [0.165,-0.712], [0.171,-0.865], [0.182,-0.920], [0.199,-0.981], [0.217,-1.000], [0.247,-1.000], [0.269,-0.995], [0.291,-0.974], [0.307,-0.953], [0.322,-0.884], [0.330,-0.821], [0.341,-0.749], [0.349,-0.680], [0.360,-0.600], [0.364,-0.518], [0.369,-0.420], [0.370,-0.310], [0.371,-0.207], [0.412,-0.240], [0.440,-0.260], [0.470,-0.250],  ],\n  'c*' : [ [0.050,-0.240], [0.103,-0.230], [0.143,-0.220], [0.183,-0.200], [0.216,-0.180], [0.243,-0.170], [0.268,-0.160], [0.294,-0.150], [0.333,-0.150], [0.363,-0.200], [0.383,-0.300], [0.363,-0.200], [0.333,-0.150], [0.294,-0.150], [0.268,-0.160], [0.243,-0.170], [0.216,-0.185], [0.195,-0.220], [0.177,-0.254], [0.157,-0.300], [0.143,-0.335], [0.128,-0.390], [0.100,-0.553], [0.100,-0.660], [0.102,-0.740], [0.112,-0.848], [0.128,-0.908], [0.138,-0.935], [0.147,-0.962], [0.163,-1.010], [0.192,-1.050], [0.245,-1.070], [0.313,-1.050], [0.358,-1.040], [0.393,-1.030], [0.433,-1.020], [0.483,-1.010], [0.533,-1.000],  ],\n  'd*' : [ [0.040,-0.260], [0.080,-0.270], [0.120,-0.260], [0.160,-0.240], [0.200,-0.220], [0.250,-0.220], [0.276,-0.180], [0.303,-0.160], [0.370,-0.125], [0.410,-0.117], [0.460,-0.117], [0.410,-0.117], [0.370,-0.125], [0.303,-0.160], [0.276,-0.180], [0.250,-0.220], [0.210,-0.300], [0.196,-0.360], [0.184,-0.450], [0.175,-0.540], [0.170,-0.610], [0.166,-0.662], [0.164,-0.730], [0.169,-0.800], [0.188,-0.876], [0.215,-0.962], [0.244,-1.017], [0.270,-1.028], [0.300,-1.025], [0.330,-1.017], [0.375,-0.984], [0.410,-0.920], [0.470,-0.840], [0.510,-0.826], [0.510,-0.771], [0.510,-0.650], [0.510,-0.550], [0.510,-0.420], [0.510,-0.250], [0.510,0.000], [0.510,0.200], [0.510,0.400], [0.510,0.600], [0.510,0.800], [0.510,0.600], [0.510,0.400], [0.510,0.200], [0.510,0.000], [0.510,-0.250], [0.510,-0.420], [0.510,-0.550], [0.510,-0.650], [0.510,-0.771], [0.510,-0.826], [0.515,-0.900], [0.529,-0.950], [0.559,-1.017], [0.590,-1.044], [0.628,-1.033], [0.660,-1.030], [0.700,-1.010], [0.750,-1.000],  ],\n  'e*' : [ [0.050,-0.250], [0.080,-0.265], [0.100,-0.280], [0.120,-0.300], [0.136,-0.320], [0.155,-0.360], [0.185,-0.400], [0.225,-0.460], [0.265,-0.480], [0.295,-0.470], [0.325,-0.390], [0.333,-0.344], [0.334,-0.300], [0.329,-0.263], [0.319,-0.200], [0.309,-0.160], [0.291,-0.130], [0.266,-0.110], [0.241,-0.100], [0.216,-0.110], [0.191,-0.130], [0.173,-0.160], [0.153,-0.200], [0.138,-0.250], [0.136,-0.320], [0.136,-0.390], [0.136,-0.460], [0.138,-0.550], [0.141,-0.600], [0.147,-0.660], [0.153,-0.720], [0.165,-0.800], [0.175,-0.860], [0.195,-0.900], [0.215,-0.940], [0.245,-0.970], [0.285,-0.980], [0.325,-0.990], [0.365,-1.000], [0.400,-1.000], [0.450,-1.000],  ],\n  'f*' : [ [0.025,-0.300], [0.045,-0.350], [0.065,-0.440], [0.085,-0.540], [0.105,-0.600], [0.125,-0.650], [0.145,-0.700], [0.165,-0.750], [0.189,-0.830], [0.220,-0.771], [0.250,-0.720], [0.265,-0.600], [0.275,-0.500], [0.285,-0.400], [0.295,-0.300], [0.305,-0.200], [0.315,-0.120], [0.325,-0.020], [0.332,0.079], [0.342,0.175], [0.356,0.278], [0.364,0.398], [0.372,0.520], [0.361,0.640], [0.340,0.710], [0.315,0.725], [0.285,0.730], [0.250,0.714], [0.220,0.692], [0.194,0.653], [0.175,0.550], [0.173,0.429], [0.172,0.277], [0.173,0.124], [0.174,-0.075], [0.174,-0.277], [0.174,-0.400], [0.175,-0.528], [0.174,-0.650], [0.174,-0.778], [0.174,-0.910], [0.174,-1.050], [0.172,-1.170], [0.170,-1.300], [0.168,-1.400], [0.165,-1.550], [0.165,-1.670], [0.164,-1.800], [0.160,-1.960], [0.190,-1.959], [0.220,-1.958], [0.249,-1.950], [0.279,-1.900], [0.300,-1.850], [0.319,-1.800], [0.324,-1.700], [0.319,-1.600], [0.314,-1.500], [0.307,-1.400], [0.299,-1.300], [0.289,-1.200], [0.275,-1.120], [0.260,-1.070], [0.225,-0.960], [0.247,-0.980], [0.275,-1.020], [0.300,-1.050], [0.334,-1.030], [0.376,-1.020], [0.425,-1.010], [0.475,-1.000],  ],\n  'g*' : [ [0.040,-0.260], [0.080,-0.270], [0.120,-0.280], [0.160,-0.290], [0.200,-0.280], [0.230,-0.285], [0.264,-0.281], [0.282,-0.250], [0.309,-0.230], [0.339,-0.210], [0.369,-0.190], [0.399,-0.176], [0.429,-0.180], [0.440,-0.220], [0.438,-0.300], [0.436,-0.380], [0.434,-0.460], [0.432,-0.540], [0.430,-0.620], [0.428,-0.700], [0.426,-0.780], [0.424,-0.860], [0.422,-0.940], [0.390,-0.970], [0.359,-1.000], [0.309,-1.030], [0.269,-1.044], [0.220,-1.030], [0.179,-1.000], [0.145,-0.962], [0.119,-0.870], [0.106,-0.771], [0.104,-0.720], [0.116,-0.670], [0.136,-0.614], [0.145,-0.581], [0.165,-0.526], [0.185,-0.472], [0.204,-0.417], [0.220,-0.370], [0.239,-0.330], [0.264,-0.281], [0.282,-0.250], [0.309,-0.230], [0.339,-0.210], [0.369,-0.190], [0.399,-0.176], [0.429,-0.180], [0.440,-0.220], [0.438,-0.300], [0.436,-0.380], [0.434,-0.460], [0.432,-0.540], [0.430,-0.620], [0.428,-0.700], [0.426,-0.780], [0.424,-0.860], [0.422,-0.940], [0.420,-1.020], [0.418,-1.100], [0.416,-1.180], [0.414,-1.260], [0.412,-1.340], [0.410,-1.420], [0.408,-1.500], [0.406,-1.580], [0.404,-1.660], [0.402,-1.740], [0.400,-1.820], [0.398,-1.900], [0.396,-1.980], [0.360,-1.975], [0.320,-1.967], [0.290,-1.955], [0.260,-1.920], [0.230,-1.870], [0.200,-1.800], [0.180,-1.720], [0.170,-1.660], [0.160,-1.580], [0.165,-1.520], [0.180,-1.470], [0.204,-1.398], [0.222,-1.350], [0.244,-1.300], [0.279,-1.240], [0.319,-1.190], [0.349,-1.150], [0.380,-1.100], [0.424,-1.050], [0.468,-1.040], [0.520,-1.030], [0.570,-1.020], [0.620,-1.000],  ],\n  'h*' : [ [0.040,-0.280], [0.080,-0.310], [0.120,-0.330], [0.160,-0.340], [0.190,-0.330], [0.178,-0.400], [0.192,-0.360], [0.205,-0.310], [0.225,-0.257], [0.254,-0.173], [0.284,-0.120], [0.299,-0.060], [0.323,0.000], [0.339,0.079], [0.354,0.163], [0.363,0.218], [0.377,0.275], [0.383,0.360], [0.388,0.440], [0.389,0.541], [0.383,0.651], [0.377,0.740], [0.352,0.798], [0.319,0.830], [0.284,0.830], [0.239,0.793], [0.209,0.751], [0.189,0.674], [0.174,0.526], [0.174,0.426], [0.174,0.324], [0.174,0.192], [0.174,0.059], [0.174,-0.073], [0.174,-0.205], [0.174,-0.338], [0.174,-0.470], [0.174,-0.603], [0.174,-0.735], [0.174,-0.868], [0.174,-1.000], [0.176,-0.868], [0.178,-0.735], [0.194,-0.680], [0.216,-0.601], [0.230,-0.529], [0.247,-0.436], [0.263,-0.374], [0.280,-0.292], [0.298,-0.250], [0.332,-0.230], [0.367,-0.220], [0.399,-0.230], [0.437,-0.270], [0.451,-0.344], [0.447,-0.436], [0.444,-0.516], [0.440,-0.607], [0.440,-0.702], [0.448,-0.807], [0.463,-0.919], [0.497,-0.975], [0.541,-1.009], [0.591,-1.000],  ],\n  'i*' : [ [0.030,-0.270], [0.049,-0.272], [0.070,-0.262], [0.090,-0.243], [0.113,-0.174], [0.137,-0.105], [0.133,-0.235], [0.132,-0.305], [0.128,-0.405], [0.127,-0.505], [0.127,-0.575], [0.127,-0.665], [0.127,-0.715], [0.126,-0.815], [0.129,-0.905], [0.142,-0.968], [0.159,-1.023], [0.204,-1.048], [0.254,-1.020],  ],\n  'j*' : [ [0.020,-0.257], [0.036,-0.265], [0.056,-0.270], [0.076,-0.280], [0.096,-0.260], [0.116,-0.240], [0.136,-0.210], [0.156,-0.180], [0.176,-0.160], [0.186,-0.140], [0.196,-0.134], [0.210,-0.120], [0.225,-0.132], [0.225,-0.191], [0.225,-0.272], [0.225,-0.400], [0.225,-0.539], [0.225,-0.679], [0.225,-0.818], [0.225,-0.958], [0.225,-1.097], [0.225,-1.237], [0.225,-1.377], [0.225,-1.516], [0.225,-1.656], [0.216,-1.728], [0.205,-1.799], [0.192,-1.856], [0.174,-1.875], [0.150,-1.880], [0.128,-1.860], [0.115,-1.834], [0.101,-1.728], [0.095,-1.599], [0.094,-1.499], [0.102,-1.399], [0.115,-1.313], [0.128,-1.257], [0.142,-1.201], [0.155,-1.144], [0.168,-1.088], [0.177,-1.060], [0.193,-1.025], [0.210,-0.993], [0.226,-0.961], [0.240,-0.948], [0.258,-0.938], [0.278,-0.938], [0.300,-0.957], [0.325,-0.977], [0.350,-1.000],  ],\n  'k*' : [ [0.025,-0.270], [0.050,-0.300], [0.070,-0.320], [0.090,-0.370], [0.110,-0.400], [0.130,-0.400], [0.160,-0.380], [0.190,-0.350], [0.198,-0.434], [0.226,-0.341], [0.254,-0.248], [0.282,-0.156], [0.310,-0.063], [0.327,-0.008], [0.344,0.046], [0.356,0.101], [0.366,0.155], [0.388,0.233], [0.398,0.288], [0.409,0.344], [0.420,0.400], [0.430,0.456], [0.441,0.512], [0.450,0.590], [0.454,0.673], [0.434,0.720], [0.409,0.730], [0.385,0.730], [0.355,0.730], [0.325,0.720], [0.295,0.700], [0.265,0.646], [0.235,0.587], [0.210,0.473], [0.200,0.360], [0.200,0.246], [0.200,0.132], [0.200,0.019], [0.200,-0.063], [0.200,-0.153], [0.200,-0.243], [0.200,-0.333], [0.200,-0.423], [0.200,-0.513], [0.200,-0.602], [0.200,-0.692], [0.200,-0.782], [0.200,-0.872], [0.200,-0.962], [0.200,-1.071], [0.200,-0.962], [0.200,-0.872], [0.200,-0.782], [0.200,-0.692], [0.200,-0.602], [0.208,-0.513], [0.234,-0.500], [0.274,-0.490], [0.314,-0.480], [0.364,-0.460], [0.404,-0.430], [0.444,-0.400], [0.469,-0.350], [0.484,-0.308], [0.478,-0.240], [0.464,-0.180], [0.446,-0.145], [0.424,-0.112], [0.384,-0.140], [0.354,-0.200], [0.304,-0.300], [0.274,-0.400], [0.254,-0.470], [0.225,-0.520], [0.244,-0.570], [0.268,-0.608], [0.287,-0.662], [0.307,-0.717], [0.326,-0.771], [0.340,-0.826], [0.348,-0.853], [0.366,-0.908], [0.385,-0.962], [0.405,-1.017], [0.429,-1.070], [0.454,-1.100], [0.479,-1.090], [0.504,-1.070], [0.529,-1.050], [0.554,-1.030], [0.571,-1.020], [0.595,-1.000], [0.626,-1.000], [0.650,-1.000],  ],\n  'l*' : [ [0.018,-0.260], [0.032,-0.280], [0.052,-0.300], [0.072,-0.350], [0.092,-0.400], [0.122,-0.430], [0.142,-0.450], [0.167,-0.460], [0.180,-0.466], [0.200,-0.411], [0.222,-0.355], [0.237,-0.300], [0.256,-0.210], [0.270,-0.140], [0.284,-0.060], [0.295,-0.009], [0.300,0.037], [0.308,0.090], [0.314,0.149], [0.322,0.204], [0.326,0.260], [0.333,0.338], [0.340,0.400], [0.344,0.490], [0.349,0.591], [0.350,0.646], [0.344,0.727], [0.324,0.789], [0.303,0.833], [0.282,0.845], [0.265,0.850], [0.235,0.844], [0.204,0.827], [0.190,0.771], [0.185,0.716], [0.181,0.668], [0.179,0.601], [0.179,0.499], [0.179,0.397], [0.179,0.295], [0.179,0.193], [0.179,0.091], [0.179,-0.011], [0.179,-0.113], [0.179,-0.215], [0.179,-0.317], [0.179,-0.419], [0.179,-0.521], [0.178,-0.623], [0.178,-0.726], [0.178,-0.828], [0.183,-0.901], [0.202,-0.959], [0.225,-0.990], [0.256,-0.997], [0.284,-1.024], [0.317,-1.040], [0.355,-1.020], [0.398,-1.010], [0.450,-1.000], [0.500,-1.000], [0.550,-1.000],  ],\n  'm*' : [ [0.020,-0.250], [0.050,-0.240], [0.080,-0.240], [0.110,-0.230], [0.140,-0.220], [0.160,-0.200], [0.185,-0.160], [0.205,-0.140], [0.232,-0.145], [0.241,-0.172], [0.243,-0.196], [0.246,-0.256], [0.250,-0.316], [0.253,-0.376], [0.256,-0.436], [0.259,-0.496], [0.253,-0.548], [0.248,-0.600], [0.242,-0.652], [0.236,-0.704], [0.231,-0.756], [0.225,-0.808], [0.219,-0.860], [0.214,-0.913], [0.208,-0.965], [0.202,-1.017], [0.208,-0.965], [0.214,-0.913], [0.219,-0.860], [0.225,-0.808], [0.231,-0.756], [0.236,-0.704], [0.242,-0.652], [0.248,-0.600], [0.253,-0.548], [0.259,-0.496], [0.271,-0.444], [0.287,-0.400], [0.300,-0.363], [0.310,-0.335], [0.320,-0.308], [0.329,-0.281], [0.339,-0.254], [0.349,-0.226], [0.369,-0.180], [0.389,-0.150], [0.418,-0.127], [0.447,-0.117], [0.457,-0.145], [0.466,-0.172], [0.476,-0.199], [0.482,-0.243], [0.488,-0.286], [0.494,-0.330], [0.500,-0.374], [0.506,-0.417], [0.499,-0.474], [0.492,-0.532], [0.485,-0.589], [0.478,-0.646], [0.471,-0.703], [0.464,-0.760], [0.458,-0.818], [0.451,-0.875], [0.444,-0.932], [0.444,-0.989], [0.444,-0.932], [0.451,-0.875], [0.458,-0.818], [0.464,-0.760], [0.471,-0.703], [0.478,-0.646], [0.485,-0.589], [0.492,-0.532], [0.499,-0.474], [0.506,-0.417], [0.515,-0.390], [0.530,-0.350], [0.545,-0.308], [0.555,-0.281], [0.565,-0.240], [0.584,-0.199], [0.594,-0.172], [0.609,-0.145], [0.649,-0.120], [0.691,-0.145], [0.711,-0.199], [0.721,-0.226], [0.731,-0.281], [0.726,-0.338], [0.721,-0.395], [0.716,-0.452], [0.711,-0.509], [0.706,-0.565], [0.701,-0.622], [0.696,-0.679], [0.691,-0.736], [0.687,-0.793], [0.682,-0.850], [0.682,-0.908], [0.701,-0.962], [0.711,-0.989], [0.730,-1.020], [0.780,-1.030], [0.809,-1.030], [0.837,-1.020], [0.868,-1.015], [0.920,-1.010], [0.970,-1.000],  ],\n  'n*' : [ [0.030,-0.230], [0.060,-0.210], [0.090,-0.190], [0.120,-0.130], [0.140,-0.080], [0.155,-0.050], [0.171,-0.030], [0.195,0.000], [0.220,-0.030], [0.235,-0.090], [0.244,-0.145], [0.249,-0.200], [0.254,-0.250], [0.256,-0.308], [0.253,-0.374], [0.253,-0.439], [0.253,-0.504], [0.253,-0.570], [0.253,-0.635], [0.253,-0.701], [0.253,-0.766], [0.253,-0.831], [0.253,-0.897], [0.253,-0.962], [0.253,-0.897], [0.253,-0.831], [0.253,-0.766], [0.253,-0.701], [0.253,-0.635], [0.253,-0.570], [0.253,-0.504], [0.253,-0.439], [0.253,-0.374], [0.270,-0.360], [0.285,-0.330], [0.299,-0.308], [0.309,-0.281], [0.319,-0.254], [0.328,-0.226], [0.345,-0.190], [0.365,-0.145], [0.386,-0.090], [0.407,-0.063], [0.436,-0.063], [0.456,-0.090], [0.465,-0.117], [0.475,-0.145], [0.480,-0.200], [0.485,-0.250], [0.485,-0.350], [0.485,-0.420], [0.485,-0.500], [0.485,-0.570], [0.485,-0.640], [0.485,-0.690], [0.485,-0.750], [0.485,-0.800], [0.485,-0.853], [0.485,-0.908], [0.490,-0.970], [0.509,-1.030], [0.544,-1.040], [0.569,-1.030], [0.602,-1.000], [0.640,-1.000],  ],\n  'o*' : [ [0.030,-0.275], [0.060,-0.280], [0.090,-0.270], [0.120,-0.260], [0.150,-0.250], [0.180,-0.240], [0.204,-0.254], [0.214,-0.226], [0.223,-0.199], [0.233,-0.172], [0.254,-0.160], [0.279,-0.140], [0.314,-0.140], [0.339,-0.160], [0.351,-0.172], [0.364,-0.200], [0.373,-0.220], [0.380,-0.250], [0.390,-0.281], [0.394,-0.338], [0.393,-0.395], [0.396,-0.451], [0.395,-0.508], [0.391,-0.565], [0.388,-0.622], [0.383,-0.679], [0.375,-0.735], [0.365,-0.792], [0.355,-0.849], [0.348,-0.900], [0.335,-0.960], [0.320,-1.010], [0.295,-1.050], [0.270,-1.070], [0.240,-1.080], [0.204,-1.065], [0.189,-1.040], [0.174,-1.005], [0.155,-0.962], [0.145,-0.935], [0.135,-0.908], [0.125,-0.880], [0.119,-0.850], [0.109,-0.800], [0.099,-0.750], [0.092,-0.700], [0.096,-0.640], [0.110,-0.581], [0.121,-0.540], [0.127,-0.500], [0.140,-0.450], [0.155,-0.390], [0.165,-0.363], [0.174,-0.335], [0.189,-0.290], [0.204,-0.254], [0.214,-0.226], [0.223,-0.199], [0.233,-0.172], [0.254,-0.160], [0.278,-0.200], [0.290,-0.250], [0.305,-0.290], [0.320,-0.310], [0.340,-0.330], [0.360,-0.340], [0.380,-0.340], [0.400,-0.340], [0.420,-0.340], [0.440,-0.335], [0.460,-0.330], [0.480,-0.320], [0.500,-0.300], [0.520,-0.280], [0.540,-0.250],  ],\n  'p*' : [ [0.025,-0.255], [0.050,-0.260], [0.080,-0.260], [0.110,-0.260], [0.140,-0.240], [0.164,-0.234], [0.169,-0.327], [0.168,-0.454], [0.167,-0.581], [0.166,-0.708], [0.165,-0.835], [0.163,-0.962], [0.162,-1.089], [0.161,-1.216], [0.160,-1.343], [0.159,-1.470], [0.158,-1.597], [0.157,-1.724], [0.156,-1.851], [0.157,-1.724], [0.158,-1.597], [0.159,-1.470], [0.160,-1.343], [0.161,-1.216], [0.162,-1.089], [0.163,-0.962], [0.165,-0.835], [0.166,-0.708], [0.167,-0.581], [0.168,-0.454], [0.169,-0.327], [0.170,-0.200], [0.164,-0.234], [0.189,-0.182], [0.207,-0.131], [0.231,-0.099], [0.250,-0.077], [0.264,-0.066], [0.282,-0.055], [0.309,-0.063], [0.340,-0.088], [0.367,-0.165], [0.374,-0.197], [0.393,-0.275], [0.403,-0.406], [0.404,-0.495], [0.405,-0.627], [0.397,-0.708], [0.390,-0.800], [0.377,-0.845], [0.356,-0.891], [0.333,-0.915], [0.296,-0.961], [0.262,-0.954], [0.230,-0.950], [0.200,-0.930], [0.230,-0.950], [0.262,-0.954], [0.296,-0.961], [0.317,-0.955], [0.349,-0.972], [0.399,-0.988], [0.429,-0.996], [0.467,-1.020], [0.500,-1.020], [0.536,-1.010], [0.570,-1.000],  ],\n  'q*' : [ [0.030,-0.255], [0.060,-0.260], [0.090,-0.265], [0.120,-0.270], [0.150,-0.290], [0.180,-0.310], [0.210,-0.300], [0.240,-0.290], [0.270,-0.270], [0.302,-0.250], [0.329,-0.230], [0.359,-0.210], [0.389,-0.190], [0.419,-0.176], [0.449,-0.180], [0.460,-0.220], [0.458,-0.300], [0.456,-0.380], [0.454,-0.460], [0.452,-0.540], [0.450,-0.620], [0.448,-0.700], [0.446,-0.780], [0.444,-0.860], [0.442,-0.940], [0.410,-0.970], [0.379,-1.000], [0.329,-1.030], [0.289,-1.044], [0.240,-1.030], [0.199,-1.000], [0.165,-0.962], [0.139,-0.870], [0.126,-0.771], [0.122,-0.720], [0.136,-0.670], [0.156,-0.614], [0.165,-0.581], [0.185,-0.526], [0.205,-0.472], [0.224,-0.417], [0.240,-0.370], [0.259,-0.330], [0.284,-0.281], [0.302,-0.250], [0.329,-0.230], [0.359,-0.210], [0.389,-0.190], [0.419,-0.176], [0.449,-0.180], [0.460,-0.220], [0.458,-0.300], [0.456,-0.380], [0.454,-0.460], [0.452,-0.540], [0.450,-0.620], [0.448,-0.700], [0.446,-0.780], [0.444,-0.860], [0.442,-0.940], [0.440,-1.020], [0.438,-1.100], [0.436,-1.180], [0.434,-1.260], [0.432,-1.340], [0.430,-1.420], [0.428,-1.500], [0.426,-1.580], [0.424,-1.660], [0.422,-1.740], [0.420,-1.820], [0.418,-1.900], [0.416,-1.980], [0.440,-1.975], [0.470,-1.967], [0.490,-1.955], [0.510,-1.920], [0.530,-1.870], [0.550,-1.800], [0.570,-1.720], [0.580,-1.660], [0.585,-1.580], [0.580,-1.520], [0.570,-1.470], [0.550,-1.398], [0.530,-1.350], [0.510,-1.300], [0.490,-1.240], [0.470,-1.190], [0.460,-1.150], [0.460,-1.080], [0.488,-1.050], [0.520,-1.030], [0.550,-1.020], [0.580,-1.015], [0.600,-1.010], [0.650,-1.005], [0.710,-1.000],  ],\n  'r*' : [ [0.050,-0.280], [0.100,-0.290], [0.100,-0.150], [0.150,-0.150], [0.200,-0.150], [0.250,-0.150], [0.300,-0.150], [0.300,-0.250], [0.295,-0.350], [0.290,-0.450], [0.280,-0.550], [0.270,-0.650], [0.265,-0.750], [0.280,-0.850], [0.300,-0.900], [0.340,-0.950], [0.390,-0.980], [0.450,-1.000],  ],\n  's*' : [ [0.050,-0.250], [0.100,-0.260], [0.130,-0.280], [0.160,-0.310], [0.190,-0.350], [0.220,-0.350], [0.250,-0.340], [0.280,-0.330], [0.310,-0.310], [0.330,-0.300], [0.355,-0.270], [0.390,-0.245], [0.440,-0.215], [0.482,-0.200], [0.483,-0.280], [0.488,-0.335], [0.495,-0.415], [0.503,-0.490], [0.510,-0.548], [0.510,-0.600], [0.510,-0.651], [0.505,-0.703], [0.500,-0.755], [0.495,-0.807], [0.485,-0.859], [0.460,-0.910], [0.387,-0.980], [0.360,-0.965], [0.322,-0.940], [0.292,-0.880], [0.263,-0.800], [0.233,-0.700], [0.208,-0.600], [0.195,-0.500], [0.190,-0.400], [0.195,-0.500], [0.208,-0.600], [0.233,-0.700], [0.263,-0.800], [0.292,-0.880], [0.322,-0.940], [0.360,-0.965], [0.387,-0.980], [0.412,-1.000], [0.437,-1.010], [0.462,-1.020], [0.500,-1.030], [0.550,-1.020], [0.600,-1.010], [0.650,-1.000],  ],\n  't*' : [ [0.050,-0.300], [0.100,-0.350], [0.150,-0.400], [0.200,-0.380], [0.250,-0.300], [0.300,-0.200], [0.328,-0.066], [0.337,0.115], [0.346,0.295], [0.325,0.295], [0.307,0.295], [0.274,0.295], [0.242,0.295], [0.200,0.295], [0.150,0.295], [0.100,0.295], [0.150,0.295], [0.200,0.295], [0.242,0.295], [0.274,0.295], [0.307,0.295], [0.325,0.295], [0.372,0.295], [0.405,0.295], [0.429,0.295], [0.461,0.295], [0.494,0.295], [0.527,0.295], [0.575,0.295], [0.625,0.295], [0.575,0.295], [0.527,0.295], [0.494,0.295], [0.461,0.295], [0.429,0.295], [0.405,0.295], [0.372,0.295], [0.346,0.295], [0.354,0.475], [0.363,0.655], [0.372,0.836], [0.372,0.655], [0.372,0.475], [0.372,0.295], [0.372,0.115], [0.372,-0.066], [0.372,-0.246], [0.372,-0.426], [0.372,-0.607], [0.372,-0.787], [0.372,-0.967], [0.387,-1.022], [0.424,-1.035], [0.475,-1.015], [0.526,-1.005], [0.575,-1.000], [0.625,-1.000], [0.675,-1.000], [0.725,-1.000],  ],\n  'u*' : [ [0.025,-0.260], [0.050,-0.270], [0.075,-0.260], [0.095,-0.260], [0.115,-0.240], [0.135,-0.200], [0.160,-0.170], [0.180,-0.140], [0.202,-0.131], [0.199,-0.189], [0.195,-0.247], [0.191,-0.305], [0.188,-0.363], [0.184,-0.420], [0.180,-0.478], [0.176,-0.536], [0.172,-0.594], [0.168,-0.652], [0.165,-0.710], [0.161,-0.768], [0.157,-0.826], [0.153,-0.884], [0.149,-0.942], [0.153,-1.000], [0.170,-1.020], [0.195,-1.030], [0.225,-1.020], [0.250,-1.010], [0.271,-0.990], [0.295,-0.970], [0.320,-0.950], [0.343,-0.930], [0.362,-0.910], [0.380,-0.880], [0.395,-0.840], [0.401,-0.787], [0.403,-0.731], [0.405,-0.676], [0.408,-0.620], [0.410,-0.565], [0.412,-0.509], [0.414,-0.454], [0.416,-0.398], [0.418,-0.342], [0.421,-0.287], [0.423,-0.231], [0.425,-0.162], [0.427,-0.102], [0.425,-0.162], [0.423,-0.231], [0.421,-0.287], [0.418,-0.342], [0.416,-0.398], [0.414,-0.454], [0.412,-0.509], [0.410,-0.565], [0.408,-0.620], [0.419,-0.697], [0.423,-0.760], [0.430,-0.820], [0.440,-0.880], [0.445,-0.940], [0.465,-1.000], [0.497,-1.020], [0.530,-1.020], [0.555,-1.010], [0.600,-1.000],  ],\n  'v*' : [ [0.030,-0.260], [0.060,-0.240], [0.080,-0.220], [0.095,-0.190], [0.110,-0.170], [0.124,-0.140], [0.143,-0.138], [0.158,-0.164], [0.170,-0.189], [0.177,-0.232], [0.183,-0.282], [0.189,-0.324], [0.189,-0.362], [0.187,-0.404], [0.186,-0.453], [0.184,-0.502], [0.183,-0.550], [0.182,-0.599], [0.180,-0.648], [0.179,-0.696], [0.177,-0.745], [0.176,-0.794], [0.180,-0.848], [0.190,-0.907], [0.199,-0.956], [0.216,-1.004], [0.239,-1.032], [0.263,-1.008], [0.286,-0.976], [0.295,-0.926], [0.304,-0.875], [0.312,-0.824], [0.321,-0.773], [0.323,-0.718], [0.333,-0.665], [0.336,-0.604], [0.342,-0.554], [0.349,-0.465], [0.355,-0.375], [0.362,-0.285], [0.369,-0.195], [0.411,-0.204], [0.455,-0.228], [0.487,-0.243], [0.512,-0.250],  ],\n  'w*' : [ [0.030,-0.225], [0.060,-0.210], [0.090,-0.170], [0.110,-0.150], [0.132,-0.123], [0.130,-0.222], [0.127,-0.322], [0.125,-0.421], [0.122,-0.520], [0.119,-0.620], [0.121,-0.683], [0.126,-0.783], [0.131,-0.863], [0.150,-0.943], [0.175,-0.995], [0.211,-1.015], [0.253,-0.987], [0.266,-0.931], [0.280,-0.875], [0.294,-0.819], [0.305,-0.763], [0.316,-0.707], [0.325,-0.651], [0.334,-0.595], [0.338,-0.496], [0.343,-0.397], [0.347,-0.298], [0.352,-0.199], [0.356,-0.150], [0.363,-0.216], [0.370,-0.332], [0.377,-0.448], [0.384,-0.564], [0.391,-0.680], [0.398,-0.797], [0.405,-0.913], [0.430,-0.992], [0.456,-0.999], [0.480,-0.987], [0.501,-0.926], [0.517,-0.877], [0.530,-0.821], [0.544,-0.765], [0.551,-0.698], [0.558,-0.602], [0.562,-0.549], [0.568,-0.444], [0.574,-0.338], [0.580,-0.233], [0.587,-0.150], [0.619,-0.160], [0.652,-0.180], [0.683,-0.200], [0.717,-0.250],  ],\n  'x*' : [ [0.025,-0.200], [0.050,-0.150], [0.075,-0.080], [0.115,-0.050], [0.137,-0.129], [0.158,-0.208], [0.180,-0.287], [0.202,-0.367], [0.224,-0.446], [0.245,-0.525], [0.262,-0.580], [0.253,-0.607], [0.228,-0.670], [0.203,-0.733], [0.179,-0.797], [0.154,-0.860], [0.129,-0.923], [0.100,-1.000], [0.129,-0.923], [0.154,-0.860], [0.179,-0.797], [0.203,-0.733], [0.228,-0.670], [0.253,-0.607], [0.277,-0.543], [0.307,-0.472], [0.327,-0.417], [0.351,-0.353], [0.376,-0.290], [0.401,-0.227], [0.425,-0.163], [0.450,-0.100], [0.470,-0.050], [0.450,-0.100], [0.425,-0.163], [0.401,-0.227], [0.376,-0.290], [0.351,-0.353], [0.327,-0.417], [0.307,-0.472], [0.277,-0.543], [0.262,-0.580], [0.289,-0.683], [0.311,-0.763], [0.332,-0.842], [0.354,-0.921], [0.376,-1.000], [0.400,-1.044], [0.422,-1.051], [0.449,-1.070], [0.470,-1.065], [0.491,-1.060], [0.508,-1.040], [0.530,-1.025], [0.550,-1.010], [0.580,-1.000],  ],\n  'y*' : [ [0.025,-0.260], [0.050,-0.270], [0.075,-0.260], [0.095,-0.260], [0.115,-0.250], [0.135,-0.240], [0.155,-0.220], [0.180,-0.220], [0.200,-0.219], [0.223,-0.237], [0.234,-0.264], [0.238,-0.308], [0.235,-0.358], [0.232,-0.403], [0.223,-0.496], [0.214,-0.588], [0.204,-0.681], [0.195,-0.773], [0.186,-0.866], [0.185,-0.940], [0.191,-1.002], [0.202,-1.029], [0.212,-1.056], [0.223,-1.083], [0.236,-1.108], [0.252,-1.128], [0.272,-1.136], [0.292,-1.136], [0.333,-1.125], [0.372,-1.083], [0.390,-1.043], [0.433,-0.951], [0.437,-0.868], [0.441,-0.785], [0.445,-0.701], [0.449,-0.618], [0.453,-0.535], [0.457,-0.451], [0.461,-0.368], [0.466,-0.285], [0.470,-0.229], [0.466,-0.285], [0.461,-0.368], [0.457,-0.451], [0.453,-0.535], [0.449,-0.618], [0.445,-0.701], [0.441,-0.785], [0.437,-0.868], [0.433,-0.951], [0.429,-1.034], [0.425,-1.118], [0.421,-1.201], [0.417,-1.284], [0.413,-1.368], [0.409,-1.451], [0.405,-1.534], [0.401,-1.617], [0.397,-1.701], [0.393,-1.784], [0.389,-1.867], [0.371,-1.923], [0.341,-1.938], [0.302,-1.948], [0.262,-1.958], [0.225,-1.949], [0.198,-1.929], [0.187,-1.902], [0.176,-1.875], [0.165,-1.848], [0.156,-1.811], [0.153,-1.767], [0.157,-1.706], [0.171,-1.661], [0.179,-1.621], [0.192,-1.574], [0.201,-1.535], [0.212,-1.492], [0.221,-1.464], [0.229,-1.437], [0.238,-1.409], [0.247,-1.382], [0.256,-1.354], [0.265,-1.326], [0.289,-1.296], [0.318,-1.265], [0.347,-1.234], [0.376,-1.203], [0.457,-1.130], [0.489,-1.084], [0.522,-1.048], [0.555,-1.027], [0.589,-1.006], [0.619,-1.000],  ],\n  'z*' : [ [0.025,-0.260], [0.050,-0.270], [0.080,-0.280], [0.110,-0.280], [0.140,-0.280], [0.170,-0.280], [0.200,-0.260], [0.220,-0.240], [0.239,-0.210], [0.253,-0.172], [0.273,-0.130], [0.289,-0.110], [0.312,-0.117], [0.332,-0.145], [0.350,-0.172], [0.360,-0.199], [0.370,-0.250], [0.367,-0.300], [0.361,-0.363], [0.349,-0.450], [0.334,-0.529], [0.312,-0.608], [0.292,-0.662], [0.269,-0.750], [0.244,-0.826], [0.224,-0.880], [0.214,-0.908], [0.185,-0.989], [0.175,-1.017], [0.185,-0.989], [0.214,-0.908], [0.224,-0.880], [0.244,-0.826], [0.273,-0.826], [0.289,-0.860], [0.302,-0.908], [0.312,-0.935], [0.328,-0.980], [0.341,-1.044], [0.344,-1.071], [0.341,-1.098], [0.341,-1.153], [0.341,-1.207], [0.334,-1.350], [0.319,-1.450], [0.304,-1.537], [0.292,-1.589], [0.283,-1.616], [0.263,-1.698], [0.253,-1.725], [0.240,-1.760], [0.220,-1.834], [0.204,-1.861], [0.186,-1.880], [0.165,-1.861], [0.155,-1.834], [0.129,-1.770], [0.116,-1.725], [0.109,-1.670], [0.116,-1.616], [0.128,-1.566], [0.146,-1.507], [0.155,-1.480], [0.165,-1.453], [0.175,-1.425], [0.185,-1.398], [0.195,-1.371], [0.204,-1.344], [0.214,-1.316], [0.224,-1.289], [0.245,-1.254], [0.265,-1.210], [0.286,-1.170], [0.306,-1.130], [0.327,-1.100], [0.347,-1.070], [0.368,-1.050], [0.388,-1.030], [0.409,-1.020], [0.429,-1.005], [0.450,-1.000], [0.480,-0.990], [0.510,-0.990], [0.540,-1.000],  ],\n  ',' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.210,-0.900], [0.230,-0.800], [0.270,-0.900], [0.280,-1.000], [0.290,-1.100], [0.290,-1.200], [0.270,-1.300], [0.250,-1.400], [0.210,-1.500], [0.150,-1.600], [0.210,-1.500], [0.250,-1.400], [0.270,-1.300], [0.290,-1.200], [0.290,-1.100], [0.280,-1.000], [0.270,-0.900], [0.230,-0.800], [0.270,-0.900], [0.280,-1.000], [0.350,-1.000], [0.400,-1.000], [0.450,-1.000], [0.500,-1.000],  ],\n  '?' : [ [0.050,-1.000], [0.100,-1.000], [0.160,-1.000], [0.200,-1.000], [0.250,-1.000], [0.250,-1.000], [0.250,-0.900], [0.250,-0.800], [0.250,-0.700], [0.250,-0.600], [0.250,-0.500], [0.250,-0.400], [0.250,-0.300], [0.250,-0.150], [0.310,-0.120], [0.345,-0.100], [0.376,-0.070], [0.410,0.020], [0.432,0.100], [0.441,0.222], [0.440,0.380], [0.436,0.533], [0.427,0.631], [0.419,0.700], [0.396,0.796], [0.377,0.840], [0.345,0.850], [0.316,0.860], [0.285,0.850], [0.242,0.800], [0.200,0.750], [0.125,0.650], [0.200,0.750], [0.242,0.800], [0.285,0.850], [0.316,0.860], [0.345,0.850], [0.377,0.840], [0.396,0.796], [0.419,0.700], [0.427,0.631], [0.436,0.533], [0.440,0.380], [0.441,0.222], [0.432,0.100], [0.410,0.020], [0.376,-0.070], [0.345,-0.100], [0.310,-0.120], [0.250,-0.150], [0.250,-0.300], [0.250,-0.400], [0.250,-0.500], [0.250,-0.600], [0.250,-0.700], [0.250,-0.800], [0.250,-0.900], [0.250,-1.000], [0.360,-1.000], [0.330,-0.850], [0.250,-0.750], [0.170,-0.850], [0.140,-1.000], [0.170,-1.150], [0.250,-1.250], [0.330,-1.150], [0.360,-1.000], [0.250,-1.000], [0.350,-1.000], [0.400,-1.000], [0.450,-1.000], [0.500,-1.000], [0.550,-1.000], [0.600,-1.000], [0.650,-1.000],  ],\n  '&' : [ [0.050,-1.000], [0.100,-1.000], [0.140,-1.000], [0.202,-0.990], [0.250,-0.985], [0.295,-0.985], [0.371,-0.970], [0.430,-0.955], [0.480,-0.880], [0.530,-0.750], [0.570,-0.670], [0.600,-0.592], [0.650,-0.450], [0.710,-0.300], [0.650,-0.450], [0.600,-0.592], [0.570,-0.670], [0.530,-0.750], [0.480,-0.880], [0.430,-0.955], [0.371,-0.970], [0.295,-0.985], [0.250,-0.985], [0.202,-0.990], [0.175,-0.920], [0.160,-0.870], [0.150,-0.780], [0.145,-0.660], [0.150,-0.460], [0.180,-0.300], [0.240,-0.150], [0.290,-0.070], [0.320,-0.020], [0.390,0.030], [0.445,0.106], [0.470,0.200], [0.495,0.319], [0.515,0.430], [0.521,0.537], [0.522,0.647], [0.512,0.737], [0.492,0.807], [0.465,0.840], [0.415,0.850], [0.375,0.850], [0.335,0.840], [0.294,0.820], [0.273,0.788], [0.259,0.727], [0.252,0.637], [0.248,0.570], [0.249,0.470], [0.254,0.400], [0.270,0.285], [0.295,0.130], [0.340,0.000], [0.380,-0.200], [0.420,-0.400], [0.450,-0.600], [0.480,-0.800], [0.510,-1.000], [0.550,-1.050], [0.600,-1.050], [0.645,-1.020], [0.700,-1.000], [0.759,-1.000], [0.815,-1.000], [0.860,-1.000],  ],\n  '$' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.250,-1.000], [0.300,-1.000], [0.300,-1.300], [0.300,-1.000], [0.300,-0.700], [0.300,-0.400], [0.300,-0.100], [0.300,0.200], [0.300,0.500], [0.300,0.900], [0.320,0.900], [0.320,0.500], [0.320,0.200], [0.320,-0.100], [0.320,-0.400], [0.320,-0.700], [0.320,-1.000], [0.320,-1.300], [0.320,-1.000], [0.384,-1.000], [0.429,-0.990], [0.464,-0.937], [0.488,-0.855], [0.522,-0.734], [0.536,-0.580], [0.532,-0.468], [0.518,-0.389], [0.489,-0.300], [0.456,-0.240], [0.416,-0.240], [0.370,-0.240], [0.320,-0.240], [0.279,-0.240], [0.240,-0.230], [0.200,-0.190], [0.180,-0.160], [0.160,-0.110], [0.130,-0.030], [0.110,0.060], [0.100,0.210], [0.110,0.326], [0.140,0.443], [0.170,0.510], [0.206,0.549], [0.250,0.570], [0.300,0.570], [0.348,0.570], [0.400,0.570], [0.450,0.570], [0.500,0.570], [0.450,0.570], [0.400,0.570], [0.348,0.570], [0.300,0.570], [0.250,0.570], [0.206,0.549], [0.170,0.510], [0.140,0.443], [0.110,0.326], [0.100,0.210], [0.110,0.060], [0.130,-0.030], [0.160,-0.110], [0.180,-0.160], [0.200,-0.190], [0.240,-0.230], [0.279,-0.240], [0.320,-0.240], [0.370,-0.240], [0.416,-0.240], [0.456,-0.240], [0.489,-0.300], [0.518,-0.389], [0.532,-0.468], [0.536,-0.580], [0.522,-0.734], [0.488,-0.855], [0.464,-0.937], [0.429,-0.990], [0.384,-1.000], [0.300,-1.000], [0.250,-1.000], [0.200,-1.000], [0.150,-1.000], [0.100,-1.000], [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.250,-1.000], [0.300,-1.000], [0.350,-1.000], [0.400,-1.000], [0.450,-1.000], [0.500,-1.000], [0.550,-1.000], [0.600,-1.000], [0.650,-1.000],  ],\n  '!' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.250,-1.000], [0.300,-1.000], [0.300,-0.700], [0.300,-0.400], [0.300,-0.100], [0.300,0.200], [0.300,0.500], [0.300,0.850], [0.300,0.500], [0.300,0.200], [0.300,-0.100], [0.300,-0.400], [0.300,-0.700], [0.300,-1.000], [0.410,-1.000], [0.380,-0.850], [0.300,-0.750], [0.220,-0.850], [0.190,-1.000], [0.220,-1.150], [0.300,-1.250], [0.380,-1.150], [0.410,-1.000], [0.300,-1.000], [0.400,-1.000], [0.450,-1.000], [0.500,-1.000], [0.550,-1.000],  ],\n};\n","export let raysol_sanserif = {\n  ' ' : [ [0.000,-1.000], [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.250,-1.000], [0.300,-1.000], [0.350,-1.000], [0.400,-1.000],  ],\n  '0' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.250,-1.000], [0.320,-0.888], [0.370,-0.775], [0.400,-0.663], [0.425,-0.550], [0.450,-0.438], [0.470,-0.325], [0.490,-0.213], [0.494,-0.085], [0.490,0.062], [0.470,0.175], [0.450,0.287], [0.425,0.400], [0.400,0.512], [0.370,0.625], [0.320,0.737], [0.250,0.850], [0.180,0.737], [0.130,0.625], [0.100,0.512], [0.075,0.400], [0.050,0.287], [0.030,0.175], [0.010,0.062], [0.006,-0.085], [0.010,-0.213], [0.030,-0.325], [0.050,-0.438], [0.075,-0.550], [0.100,-0.663], [0.130,-0.775], [0.180,-0.888], [0.250,-1.000], [0.300,-1.000], [0.350,-1.000], [0.400,-1.000], [0.450,-1.000], [0.500,-1.000],  ],\n  '1' : [ [0.050,-1.000], [0.050,-0.815], [0.050,-0.630], [0.050,-0.445], [0.050,-0.260], [0.050,-0.075], [0.050,0.110], [0.050,0.295], [0.050,0.480], [0.050,0.665], [0.050,0.850], [0.050,0.665], [0.050,0.480], [0.050,0.295], [0.050,0.110], [0.050,-0.075], [0.050,-0.260], [0.050,-0.445], [0.050,-0.630], [0.050,-0.815], [0.050,-1.000], [0.100,-1.000],  ],\n  '2' : [ [0.050,-1.000], [0.100,-1.000], [0.050,-1.000], [0.104,-0.780], [0.158,-0.560], [0.212,-0.340], [0.266,-0.120], [0.320,0.100], [0.360,0.250], [0.385,0.400], [0.390,0.550], [0.375,0.650], [0.345,0.750], [0.310,0.810], [0.265,0.845], [0.225,0.850], [0.185,0.845], [0.140,0.810], [0.105,0.750], [0.075,0.650], [0.050,0.550], [0.075,0.650], [0.105,0.750], [0.140,0.810], [0.185,0.845], [0.225,0.850], [0.265,0.845], [0.310,0.810], [0.345,0.750], [0.375,0.650], [0.390,0.550], [0.385,0.400], [0.360,0.250], [0.320,0.100], [0.266,-0.120], [0.212,-0.340], [0.158,-0.560], [0.104,-0.780], [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.250,-1.000], [0.300,-1.000], [0.350,-1.000], [0.400,-1.000], [0.450,-1.000], [0.450,-1.000], [0.500,-0.750], [0.500,-1.000], [0.550,-1.000],  ],\n  '3' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.200,-1.000], [0.240,-0.995], [0.285,-0.960], [0.320,-0.900], [0.350,-0.800], [0.365,-0.700], [0.360,-0.550], [0.335,-0.400], [0.280,-0.250], [0.200,0.000], [0.150,0.000], [0.200,0.000], [0.295,0.100], [0.335,0.250], [0.360,0.400], [0.365,0.550], [0.350,0.650], [0.320,0.750], [0.285,0.810], [0.240,0.845], [0.200,0.850], [0.160,0.845], [0.115,0.810], [0.080,0.750], [0.050,0.650], [0.025,0.550], [0.050,0.650], [0.080,0.750], [0.115,0.810], [0.160,0.845], [0.200,0.850], [0.240,0.845], [0.285,0.810], [0.320,0.750], [0.350,0.650], [0.365,0.550], [0.360,0.400], [0.335,0.250], [0.295,0.100], [0.200,0.000], [0.150,0.000], [0.200,0.000], [0.280,-0.250], [0.335,-0.400], [0.360,-0.550], [0.365,-0.700], [0.350,-0.800], [0.320,-0.900], [0.285,-0.960], [0.240,-0.995], [0.200,-1.000], [0.160,-0.995], [0.115,-0.960], [0.080,-0.900], [0.050,-0.800], [0.025,-0.700], [0.000,-0.590], [0.025,-0.700], [0.050,-0.800], [0.080,-0.900], [0.115,-0.960], [0.160,-0.995], [0.200,-1.000], [0.200,-1.000], [0.250,-1.000], [0.300,-1.000], [0.350,-1.000], [0.400,-1.000],  ],\n  '4' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.250,-1.000], [0.300,-1.000], [0.350,-1.000], [0.350,-0.800], [0.350,-0.600], [0.350,-0.400], [0.350,-0.200], [0.350,-0.075], [0.300,-0.075], [0.250,-0.075], [0.200,-0.075], [0.150,-0.075], [0.100,-0.075], [0.040,-0.075], [0.050,0.000], [0.050,0.200], [0.050,0.400], [0.050,0.600], [0.050,0.800], [0.050,0.850], [0.050,0.800], [0.050,0.600], [0.050,0.400], [0.050,0.200], [0.050,0.000], [0.050,-0.075], [0.100,-0.075], [0.150,-0.075], [0.200,-0.075], [0.250,-0.075], [0.300,-0.075], [0.350,-0.075], [0.400,-0.075], [0.475,-0.075], [0.550,-0.075], [0.475,-0.075], [0.400,-0.075], [0.350,-0.075], [0.350,0.000], [0.350,0.200], [0.350,0.400], [0.350,0.600], [0.350,0.800], [0.350,0.850], [0.350,0.800], [0.350,0.600], [0.350,0.400], [0.350,0.200], [0.350,0.000], [0.350,-0.075], [0.350,-0.200], [0.350,-0.400], [0.350,-0.600], [0.350,-0.800], [0.350,-1.000], [0.400,-1.000], [0.450,-1.000], [0.500,-1.000], [0.550,-1.000], [0.600,-1.000],  ],\n  '5' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.250,-1.000], [0.250,-0.950], [0.290,-0.945], [0.335,-0.910], [0.370,-0.850], [0.400,-0.750], [0.415,-0.650], [0.420,-0.500], [0.410,-0.300], [0.385,-0.150], [0.330,0.000], [0.250,0.130], [0.160,0.120], [0.080,0.090], [0.090,0.280], [0.100,0.470], [0.110,0.660], [0.120,0.850], [0.170,0.850], [0.220,0.850], [0.270,0.850], [0.320,0.850], [0.400,0.850], [0.470,0.850], [0.400,0.850], [0.320,0.850], [0.270,0.850], [0.220,0.850], [0.170,0.850], [0.120,0.850], [0.110,0.660], [0.100,0.470], [0.090,0.280], [0.080,0.090], [0.160,0.120], [0.250,0.130], [0.330,0.000], [0.385,-0.150], [0.410,-0.300], [0.420,-0.500], [0.415,-0.650], [0.400,-0.750], [0.370,-0.850], [0.335,-0.910], [0.290,-0.945], [0.250,-0.950], [0.210,-0.945], [0.165,-0.910], [0.130,-0.850], [0.100,-0.800], [0.075,-0.720], [0.045,-0.570], [0.075,-0.720], [0.100,-0.800], [0.130,-0.850], [0.165,-0.910], [0.210,-0.945], [0.250,-0.950], [0.250,-1.000], [0.300,-1.000], [0.350,-1.000], [0.400,-1.000], [0.450,-1.000], [0.500,-1.000],  ],\n  '6' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.250,-1.000], [0.210,-0.950], [0.250,-0.945], [0.295,-0.910], [0.330,-0.850], [0.360,-0.750], [0.375,-0.650], [0.370,-0.500], [0.345,-0.350], [0.300,-0.200], [0.260,-0.120], [0.210,-0.100], [0.160,-0.120], [0.260,-0.120], [0.210,-0.100], [0.160,-0.120], [0.120,-0.200], [0.075,-0.350], [0.050,-0.500], [0.066,-0.365], [0.082,-0.230], [0.098,-0.095], [0.114,0.040], [0.130,0.175], [0.146,0.310], [0.162,0.445], [0.178,0.580], [0.194,0.715], [0.210,0.850], [0.194,0.715], [0.178,0.580], [0.162,0.445], [0.146,0.310], [0.130,0.175], [0.114,0.040], [0.098,-0.095], [0.082,-0.230], [0.066,-0.365], [0.050,-0.500], [0.045,-0.650], [0.060,-0.750], [0.090,-0.850], [0.125,-0.910], [0.170,-0.945], [0.210,-0.950], [0.250,-1.000], [0.300,-1.000], [0.350,-1.000], [0.400,-1.000],  ],\n  '7' : [ [0.050,-1.000], [0.100,-1.000], [0.130,-0.815], [0.160,-0.630], [0.190,-0.445], [0.220,-0.260], [0.250,-0.075], [0.280,0.110], [0.310,0.295], [0.340,0.480], [0.370,0.665], [0.400,0.850], [0.356,0.850], [0.312,0.850], [0.269,0.850], [0.225,0.850], [0.181,0.850], [0.138,0.850], [0.094,0.850], [0.025,0.850], [0.094,0.850], [0.138,0.850], [0.181,0.850], [0.225,0.850], [0.269,0.850], [0.312,0.850], [0.356,0.850], [0.400,0.850], [0.370,0.665], [0.340,0.480], [0.310,0.295], [0.280,0.110], [0.250,-0.075], [0.220,-0.260], [0.190,-0.445], [0.160,-0.630], [0.130,-0.815], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.250,-1.000], [0.300,-1.000], [0.350,-1.000], [0.400,-1.000], [0.450,-1.000],  ],\n  '8' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.200,-0.950], [0.240,-0.945], [0.285,-0.910], [0.320,-0.850], [0.350,-0.750], [0.365,-0.650], [0.360,-0.500], [0.335,-0.350], [0.290,-0.200], [0.250,-0.050], [0.200,-0.050], [0.150,-0.050], [0.105,0.100], [0.065,0.250], [0.040,0.400], [0.035,0.550], [0.050,0.650], [0.080,0.750], [0.115,0.810], [0.160,0.845], [0.200,0.850], [0.240,0.845], [0.285,0.810], [0.320,0.750], [0.350,0.650], [0.365,0.550], [0.360,0.400], [0.335,0.250], [0.295,0.100], [0.250,-0.050], [0.200,-0.050], [0.150,-0.050], [0.110,-0.200], [0.065,-0.350], [0.040,-0.500], [0.035,-0.650], [0.050,-0.750], [0.080,-0.850], [0.115,-0.910], [0.160,-0.945], [0.200,-0.950], [0.200,-1.000], [0.250,-1.000], [0.300,-1.000], [0.350,-1.000], [0.400,-1.000],  ],\n  '9' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.250,-1.000], [0.300,-1.000], [0.350,-1.000], [0.380,-1.000], [0.380,-0.800], [0.380,-0.600], [0.380,-0.400], [0.380,-0.200], [0.380,0.000], [0.380,0.200], [0.380,0.400], [0.350,0.250], [0.310,0.100], [0.215,0.000], [0.120,0.100], [0.080,0.250], [0.055,0.400], [0.050,0.550], [0.065,0.650], [0.095,0.750], [0.130,0.810], [0.175,0.845], [0.215,0.850], [0.255,0.845], [0.300,0.810], [0.335,0.750], [0.365,0.650], [0.380,0.550], [0.380,0.400], [0.380,0.200], [0.380,0.000], [0.380,-0.200], [0.380,-0.400], [0.380,-0.600], [0.380,-0.800], [0.380,-1.000], [0.400,-1.000], [0.450,-1.000],  ],\n  'A' : [ [0.050,-1.000], [0.075,-0.815], [0.100,-0.630], [0.125,-0.445], [0.150,-0.260], [0.175,-0.075], [0.200,0.110], [0.225,0.295], [0.250,0.480], [0.275,0.665], [0.300,0.850], [0.325,0.665], [0.350,0.480], [0.375,0.295], [0.400,0.110], [0.425,-0.075], [0.450,-0.260], [0.400,-0.260], [0.350,-0.260], [0.300,-0.260], [0.250,-0.260], [0.200,-0.260], [0.150,-0.260], [0.200,-0.260], [0.250,-0.260], [0.300,-0.260], [0.350,-0.260], [0.400,-0.260], [0.450,-0.260], [0.475,-0.445], [0.500,-0.630], [0.525,-0.815], [0.550,-1.000],  ],\n  'B' : [ [0.050,-1.000], [0.050,-0.900], [0.050,-0.800], [0.050,-0.700], [0.050,-0.600], [0.050,-0.500], [0.050,-0.400], [0.050,-0.300], [0.050,-0.200], [0.050,-0.100], [0.050,0.000], [0.050,0.100], [0.050,0.200], [0.050,0.300], [0.050,0.400], [0.050,0.500], [0.050,0.600], [0.050,0.700], [0.050,0.800], [0.050,0.850], [0.090,0.850], [0.130,0.850], [0.170,0.850], [0.210,0.850], [0.250,0.850], [0.270,0.840], [0.300,0.810], [0.330,0.750], [0.350,0.710], [0.370,0.650], [0.390,0.550], [0.410,0.450], [0.410,0.400], [0.390,0.300], [0.370,0.200], [0.350,0.140], [0.330,0.100], [0.300,0.040], [0.270,0.010], [0.250,0.000], [0.210,0.000], [0.170,0.000], [0.130,0.000], [0.090,0.000], [0.050,0.000], [0.090,0.000], [0.130,0.000], [0.170,0.000], [0.210,0.000], [0.250,0.000], [0.270,-0.010], [0.300,-0.040], [0.330,-0.100], [0.350,-0.140], [0.370,-0.200], [0.390,-0.300], [0.410,-0.400], [0.420,-0.500], [0.410,-0.600], [0.390,-0.700], [0.370,-0.800], [0.350,-0.860], [0.330,-0.900], [0.300,-0.960], [0.270,-0.990], [0.250,-1.000], [0.210,-1.000], [0.170,-1.000], [0.130,-1.000], [0.090,-1.000], [0.050,-1.000], [0.090,-1.000], [0.130,-1.000], [0.170,-1.000], [0.210,-1.000], [0.250,-1.000], [0.330,-1.000], [0.380,-1.000], [0.450,-1.000],  ],\n  'C' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.250,-1.000], [0.300,-1.000], [0.300,-0.950], [0.260,-0.945], [0.215,-0.910], [0.180,-0.850], [0.150,-0.750], [0.125,-0.650], [0.100,-0.540], [0.080,-0.400], [0.060,-0.230], [0.050,-0.050], [0.060,0.130], [0.080,0.300], [0.100,0.440], [0.125,0.550], [0.150,0.650], [0.180,0.750], [0.215,0.810], [0.260,0.845], [0.300,0.850], [0.340,0.845], [0.385,0.810], [0.420,0.750], [0.450,0.650], [0.475,0.550], [0.450,0.650], [0.420,0.750], [0.385,0.810], [0.340,0.845], [0.300,0.850], [0.260,0.845], [0.215,0.810], [0.180,0.750], [0.150,0.650], [0.125,0.550], [0.100,0.440], [0.080,0.300], [0.060,0.130], [0.050,-0.050], [0.060,-0.230], [0.080,-0.400], [0.100,-0.540], [0.125,-0.650], [0.150,-0.750], [0.180,-0.850], [0.215,-0.910], [0.260,-0.945], [0.300,-0.950], [0.340,-0.945], [0.385,-0.910], [0.420,-0.850], [0.450,-0.750], [0.475,-0.650], [0.450,-0.750], [0.420,-0.850], [0.385,-0.910], [0.340,-0.945], [0.300,-0.950], [0.300,-1.000], [0.250,-1.000], [0.220,-1.000], [0.250,-1.000], [0.300,-1.000], [0.350,-1.000], [0.400,-1.000], [0.450,-1.000], [0.500,-1.000],  ],\n  'D' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.240,-0.945], [0.285,-0.910], [0.320,-0.850], [0.350,-0.750], [0.375,-0.650], [0.400,-0.540], [0.420,-0.400], [0.440,-0.230], [0.450,-0.050], [0.440,0.130], [0.420,0.300], [0.400,0.440], [0.375,0.550], [0.350,0.650], [0.320,0.750], [0.285,0.810], [0.240,0.845], [0.200,0.850], [0.160,0.850], [0.115,0.850], [0.080,0.850], [0.050,0.800], [0.050,0.700], [0.050,0.600], [0.050,0.500], [0.050,0.400], [0.050,0.300], [0.050,0.200], [0.050,0.100], [0.050,0.000], [0.050,-0.100], [0.050,-0.200], [0.050,-0.300], [0.050,-0.400], [0.050,-0.500], [0.050,-0.600], [0.050,-0.700], [0.050,-0.800], [0.050,-0.900], [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.250,-1.000], [0.300,-1.000], [0.350,-1.000], [0.400,-1.000], [0.450,-1.000], [0.500,-1.000],  ],\n  'E' : [ [0.050,-1.000], [0.050,-1.000], [0.050,-0.900], [0.050,-0.800], [0.050,-0.700], [0.050,-0.600], [0.050,-0.500], [0.050,-0.400], [0.050,-0.300], [0.050,-0.200], [0.050,-0.100], [0.050,0.000], [0.090,0.000], [0.050,0.000], [0.090,0.000], [0.130,0.000], [0.170,0.000], [0.210,0.000], [0.250,0.000], [0.290,0.000], [0.330,0.000], [0.370,0.000], [0.330,0.000], [0.290,0.000], [0.250,0.000], [0.210,0.000], [0.170,0.000], [0.130,0.000], [0.050,0.000], [0.050,0.100], [0.050,0.200], [0.050,0.300], [0.050,0.400], [0.050,0.500], [0.050,0.600], [0.050,0.700], [0.050,0.800], [0.050,0.850], [0.090,0.850], [0.130,0.850], [0.170,0.850], [0.210,0.850], [0.250,0.850], [0.290,0.850], [0.330,0.850], [0.370,0.850], [0.370,0.750], [0.370,0.550], [0.370,0.750], [0.330,0.850], [0.290,0.850], [0.250,0.850], [0.210,0.850], [0.170,0.850], [0.130,0.850], [0.090,0.850], [0.050,0.850], [0.050,0.800], [0.050,0.700], [0.050,0.600], [0.050,0.500], [0.050,0.400], [0.050,0.300], [0.050,0.200], [0.050,0.100], [0.050,0.000], [0.050,-0.100], [0.050,-0.200], [0.050,-0.300], [0.050,-0.400], [0.050,-0.500], [0.050,-0.600], [0.050,-0.700], [0.050,-0.800], [0.050,-0.900], [0.050,-1.000], [0.090,-1.000], [0.130,-1.000], [0.170,-1.000], [0.210,-1.000], [0.250,-1.000], [0.290,-1.000], [0.330,-1.000], [0.370,-0.900], [0.370,-0.700], [0.370,-0.900], [0.370,-1.000], [0.420,-1.000],  ],\n  'F' : [ [0.050,-1.000], [0.050,-1.000], [0.050,-0.900], [0.050,-0.800], [0.050,-0.700], [0.050,-0.600], [0.050,-0.500], [0.050,-0.400], [0.050,-0.300], [0.050,-0.200], [0.050,-0.100], [0.050,0.000], [0.090,0.000], [0.050,0.000], [0.090,0.000], [0.130,0.000], [0.170,0.000], [0.210,0.000], [0.250,0.000], [0.290,0.000], [0.250,0.000], [0.210,0.000], [0.170,0.000], [0.130,0.000], [0.050,0.000], [0.050,0.850], [0.090,0.850], [0.130,0.850], [0.170,0.850], [0.210,0.850], [0.250,0.850], [0.290,0.850], [0.330,0.850], [0.370,0.850], [0.330,0.850], [0.290,0.850], [0.250,0.850], [0.210,0.850], [0.170,0.850], [0.130,0.850], [0.090,0.850], [0.050,0.850], [0.050,0.800], [0.050,0.700], [0.050,0.600], [0.050,0.500], [0.050,0.400], [0.050,0.300], [0.050,0.200], [0.050,0.100], [0.050,0.000], [0.050,-0.100], [0.050,-0.200], [0.050,-0.300], [0.050,-0.400], [0.050,-0.500], [0.050,-0.600], [0.050,-0.700], [0.050,-0.800], [0.050,-0.900], [0.050,-1.000], [0.090,-1.000], [0.130,-1.000], [0.170,-1.000], [0.210,-1.000], [0.250,-1.000], [0.290,-1.000], [0.330,-1.000], [0.370,-1.000],  ],\n  'G' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.250,-1.000], [0.250,-0.950], [0.290,-0.945], [0.335,-0.910], [0.370,-0.850], [0.400,-0.750], [0.425,-0.650], [0.450,-0.540], [0.470,-0.400], [0.490,-0.230], [0.500,-0.050], [0.450,-0.050], [0.400,-0.050], [0.350,-0.050], [0.300,-0.050], [0.250,-0.050], [0.300,-0.050], [0.350,-0.050], [0.400,-0.050], [0.450,-0.050], [0.500,-0.050], [0.490,-0.230], [0.470,-0.400], [0.450,-0.540], [0.425,-0.650], [0.400,-0.750], [0.370,-0.850], [0.335,-0.910], [0.290,-0.945], [0.250,-0.950], [0.210,-0.945], [0.165,-0.910], [0.130,-0.850], [0.100,-0.750], [0.075,-0.650], [0.050,-0.540], [0.030,-0.400], [0.010,-0.230], [0.000,-0.050], [0.010,0.130], [0.030,0.300], [0.050,0.440], [0.075,0.550], [0.100,0.650], [0.130,0.750], [0.165,0.810], [0.210,0.845], [0.250,0.850], [0.290,0.845], [0.335,0.810], [0.370,0.750], [0.400,0.650], [0.370,0.750], [0.335,0.810], [0.290,0.845], [0.250,0.850], [0.210,0.845], [0.165,0.810], [0.130,0.750], [0.100,0.650], [0.075,0.550], [0.050,0.440], [0.030,0.300], [0.010,0.130], [0.000,-0.050], [0.010,-0.230], [0.030,-0.400], [0.050,-0.540], [0.075,-0.650], [0.100,-0.750], [0.130,-0.850], [0.165,-0.910], [0.210,-0.945], [0.250,-0.950], [0.250,-1.000], [0.300,-1.000], [0.350,-1.000], [0.400,-1.000], [0.450,-1.000], [0.500,-1.000], [0.550,-1.000],  ],\n  'H' : [ [0.050,-1.000], [0.050,-0.900], [0.050,-0.800], [0.050,-0.700], [0.050,-0.600], [0.050,-0.500], [0.050,-0.400], [0.050,-0.300], [0.050,-0.200], [0.050,-0.100], [0.050,0.000], [0.090,0.000], [0.050,0.000], [0.090,0.000], [0.130,0.000], [0.170,0.000], [0.210,0.000], [0.250,0.000], [0.290,0.000], [0.330,0.000], [0.370,0.000], [0.410,0.000], [0.450,0.000], [0.450,0.100], [0.450,0.200], [0.450,0.300], [0.450,0.400], [0.450,0.500], [0.450,0.600], [0.450,0.700], [0.450,0.800], [0.450,0.850], [0.450,0.800], [0.450,0.700], [0.450,0.600], [0.450,0.500], [0.450,0.400], [0.450,0.300], [0.450,0.200], [0.450,0.100], [0.450,0.000], [0.410,0.000], [0.370,0.000], [0.330,0.000], [0.290,0.000], [0.250,0.000], [0.210,0.000], [0.170,0.000], [0.130,0.000], [0.090,0.000], [0.050,0.000], [0.090,0.000], [0.050,0.000], [0.050,0.100], [0.050,0.200], [0.050,0.300], [0.050,0.400], [0.050,0.500], [0.050,0.600], [0.050,0.700], [0.050,0.800], [0.050,0.850], [0.050,0.800], [0.050,0.700], [0.050,0.600], [0.050,0.500], [0.050,0.400], [0.050,0.300], [0.050,0.200], [0.050,0.100], [0.050,0.000], [0.050,-0.100], [0.050,0.000], [0.090,0.000], [0.050,0.000], [0.090,0.000], [0.130,0.000], [0.170,0.000], [0.210,0.000], [0.250,0.000], [0.290,0.000], [0.330,0.000], [0.370,0.000], [0.410,0.000], [0.450,0.000], [0.450,-0.100], [0.450,-0.200], [0.450,-0.300], [0.450,-0.400], [0.450,-0.500], [0.450,-0.600], [0.450,-0.700], [0.450,-0.800], [0.450,-0.900], [0.450,-1.000], [0.500,-1.000],  ],\n  'I' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.200,-0.900], [0.200,-0.800], [0.200,-0.700], [0.200,-0.600], [0.200,-0.500], [0.200,-0.400], [0.200,-0.300], [0.200,-0.200], [0.200,-0.100], [0.200,0.000], [0.200,0.100], [0.200,0.200], [0.200,0.300], [0.200,0.400], [0.200,0.500], [0.200,0.600], [0.200,0.700], [0.200,0.800], [0.200,0.850], [0.150,0.850], [0.100,0.850], [0.050,0.850], [0.100,0.850], [0.150,0.850], [0.200,0.850], [0.250,0.850], [0.300,0.850], [0.350,0.850], [0.300,0.850], [0.250,0.850], [0.200,0.800], [0.200,0.700], [0.200,0.600], [0.200,0.500], [0.200,0.400], [0.200,0.300], [0.200,0.200], [0.200,0.100], [0.200,0.000], [0.200,-0.100], [0.200,-0.200], [0.200,-0.300], [0.200,-0.400], [0.200,-0.500], [0.200,-0.600], [0.200,-0.700], [0.200,-0.800], [0.200,-0.900], [0.200,-1.000], [0.150,-0.900], [0.100,-0.900], [0.050,-0.900], [0.100,-0.900], [0.150,-0.900], [0.200,-0.900], [0.250,-0.900], [0.300,-0.900], [0.350,-0.900], [0.300,-0.900], [0.250,-0.900], [0.200,-0.900], [0.200,-1.000], [0.250,-1.000], [0.300,-1.000], [0.350,-1.000], [0.400,-1.000],  ],\n  'J' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.230,-1.000], [0.250,-0.990], [0.280,-0.960], [0.310,-0.900], [0.330,-0.860], [0.350,-0.800], [0.370,-0.700], [0.390,-0.600], [0.400,-0.500], [0.400,-0.400], [0.400,-0.300], [0.400,-0.200], [0.400,-0.100], [0.400,0.000], [0.400,0.100], [0.400,0.200], [0.400,0.300], [0.400,0.400], [0.400,0.500], [0.400,0.600], [0.400,0.700], [0.400,0.800], [0.400,0.850], [0.400,0.800], [0.400,0.700], [0.400,0.600], [0.400,0.500], [0.400,0.400], [0.400,0.300], [0.400,0.200], [0.400,0.100], [0.400,0.000], [0.400,-0.100], [0.400,-0.200], [0.400,-0.300], [0.400,-0.400], [0.400,-0.500], [0.390,-0.600], [0.370,-0.700], [0.350,-0.800], [0.330,-0.860], [0.310,-0.900], [0.280,-0.960], [0.250,-0.990], [0.230,-1.000], [0.200,-1.000], [0.170,-1.000], [0.150,-0.990], [0.120,-0.960], [0.090,-0.900], [0.070,-0.860], [0.050,-0.800], [0.030,-0.700], [0.010,-0.600], [0.000,-0.500], [0.010,-0.600], [0.030,-0.700], [0.050,-0.800], [0.070,-0.860], [0.090,-0.900], [0.120,-0.960], [0.150,-0.990], [0.170,-1.000], [0.200,-1.000], [0.250,-1.000], [0.300,-1.000], [0.350,-1.000], [0.400,-1.000], [0.450,-1.000],  ],\n  'K' : [ [0.050,-1.000], [0.050,-1.000], [0.050,-0.900], [0.050,-0.800], [0.050,-0.700], [0.050,-0.600], [0.050,-0.500], [0.050,-0.400], [0.050,-0.300], [0.050,-0.200], [0.050,-0.100], [0.050,0.000], [0.050,0.100], [0.050,0.200], [0.050,0.300], [0.050,0.400], [0.050,0.500], [0.050,0.600], [0.050,0.700], [0.050,0.800], [0.050,0.850], [0.050,0.800], [0.050,0.700], [0.050,0.600], [0.050,0.500], [0.050,0.400], [0.050,0.300], [0.050,0.200], [0.050,0.100], [0.050,0.000], [0.132,0.085], [0.164,0.170], [0.196,0.255], [0.228,0.340], [0.260,0.425], [0.292,0.510], [0.324,0.595], [0.356,0.680], [0.388,0.765], [0.420,0.850], [0.388,0.765], [0.356,0.680], [0.324,0.595], [0.292,0.510], [0.260,0.425], [0.228,0.340], [0.196,0.255], [0.164,0.170], [0.132,0.085], [0.100,0.000], [0.132,-0.100], [0.164,-0.200], [0.196,-0.300], [0.228,-0.400], [0.260,-0.500], [0.292,-0.600], [0.324,-0.700], [0.356,-0.800], [0.388,-0.900], [0.420,-1.000], [0.470,-1.000],  ],\n  'L' : [ [0.050,-1.000], [0.050,-0.900], [0.050,-0.800], [0.050,-0.700], [0.050,-0.600], [0.050,-0.500], [0.050,-0.400], [0.050,-0.300], [0.050,-0.200], [0.050,-0.100], [0.050,0.000], [0.050,0.100], [0.050,0.200], [0.050,0.300], [0.050,0.400], [0.050,0.500], [0.050,0.600], [0.050,0.700], [0.050,0.800], [0.050,0.850], [0.050,0.800], [0.050,0.700], [0.050,0.600], [0.050,0.500], [0.050,0.400], [0.050,0.300], [0.050,0.200], [0.050,0.100], [0.050,0.000], [0.050,-0.100], [0.050,-0.200], [0.050,-0.300], [0.050,-0.400], [0.050,-0.500], [0.050,-0.600], [0.050,-0.700], [0.050,-0.800], [0.050,-0.900], [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.250,-1.000], [0.300,-1.000], [0.350,-1.000], [0.400,-1.000], [0.450,-1.000], [0.450,-0.750], [0.450,-0.600], [0.450,-0.750], [0.450,-0.900], [0.450,-1.000], [0.400,-1.000], [0.450,-1.000], [0.500,-1.000],  ],\n  'M' : [ [0.050,-1.000], [0.050,-1.000], [0.070,-0.815], [0.090,-0.630], [0.110,-0.445], [0.130,-0.260], [0.150,-0.075], [0.170,0.110], [0.190,0.295], [0.210,0.480], [0.230,0.665], [0.250,0.850], [0.270,0.665], [0.290,0.480], [0.310,0.295], [0.330,0.110], [0.350,-0.075], [0.370,-0.260], [0.390,-0.445], [0.410,-0.630], [0.430,-0.815], [0.450,-1.000], [0.470,-0.815], [0.490,-0.630], [0.510,-0.445], [0.530,-0.260], [0.550,-0.075], [0.570,0.110], [0.590,0.295], [0.610,0.480], [0.630,0.665], [0.650,0.850], [0.670,0.665], [0.690,0.480], [0.710,0.295], [0.730,0.110], [0.750,-0.075], [0.770,-0.260], [0.790,-0.445], [0.810,-0.630], [0.830,-0.815], [0.850,-1.000], [0.900,-1.000],  ],\n  'N' : [ [0.050,-1.000], [0.050,-0.900], [0.050,-0.800], [0.050,-0.700], [0.050,-0.600], [0.050,-0.500], [0.050,-0.400], [0.050,-0.300], [0.050,-0.200], [0.050,-0.100], [0.050,0.000], [0.050,0.100], [0.050,0.200], [0.050,0.300], [0.050,0.400], [0.050,0.500], [0.050,0.600], [0.050,0.700], [0.050,0.800], [0.050,0.850], [0.100,0.665], [0.150,0.480], [0.200,0.295], [0.250,0.110], [0.300,-0.075], [0.350,-0.260], [0.400,-0.445], [0.450,-0.630], [0.500,-0.815], [0.550,-1.000], [0.550,-0.900], [0.550,-0.800], [0.550,-0.700], [0.550,-0.600], [0.550,-0.500], [0.550,-0.400], [0.550,-0.300], [0.550,-0.200], [0.550,-0.100], [0.550,0.000], [0.550,0.100], [0.550,0.200], [0.550,0.300], [0.550,0.400], [0.550,0.500], [0.550,0.600], [0.550,0.700], [0.550,0.800], [0.550,0.850], [0.550,0.800], [0.550,0.700], [0.550,0.600], [0.550,0.500], [0.550,0.400], [0.550,0.300], [0.550,0.200], [0.550,0.100], [0.550,0.000], [0.550,-0.100], [0.550,-0.200], [0.550,-0.300], [0.550,-0.400], [0.550,-0.500], [0.550,-0.600], [0.550,-0.700], [0.550,-0.800], [0.550,-0.900], [0.550,-1.000], [0.600,-1.000],  ],\n  'O' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.250,-1.000], [0.300,-1.000], [0.300,-0.950], [0.340,-0.945], [0.385,-0.910], [0.420,-0.850], [0.450,-0.750], [0.475,-0.650], [0.500,-0.540], [0.520,-0.400], [0.540,-0.230], [0.550,-0.050], [0.540,0.130], [0.520,0.300], [0.500,0.440], [0.475,0.550], [0.450,0.650], [0.420,0.750], [0.385,0.810], [0.340,0.845], [0.300,0.850], [0.260,0.845], [0.215,0.810], [0.180,0.750], [0.150,0.650], [0.125,0.550], [0.100,0.440], [0.080,0.300], [0.060,0.130], [0.050,-0.050], [0.060,-0.230], [0.080,-0.400], [0.100,-0.540], [0.125,-0.650], [0.150,-0.750], [0.180,-0.850], [0.215,-0.910], [0.260,-0.945], [0.300,-0.950], [0.300,-1.000], [0.350,-1.000], [0.400,-1.000], [0.450,-1.000], [0.500,-1.000], [0.550,-1.000], [0.600,-1.000],  ],\n  'P' : [ [0.050,-1.000], [0.050,-0.900], [0.050,-0.800], [0.050,-0.700], [0.050,-0.600], [0.050,-0.500], [0.050,-0.400], [0.050,-0.300], [0.050,-0.200], [0.050,-0.100], [0.050,0.000], [0.090,0.000], [0.130,0.000], [0.170,0.000], [0.210,0.000], [0.250,0.000], [0.270,0.010], [0.300,0.040], [0.330,0.100], [0.350,0.140], [0.370,0.200], [0.390,0.300], [0.410,0.400], [0.410,0.450], [0.390,0.550], [0.370,0.650], [0.350,0.710], [0.330,0.750], [0.300,0.810], [0.270,0.840], [0.250,0.850], [0.210,0.850], [0.170,0.850], [0.130,0.850], [0.090,0.850], [0.050,0.850], [0.050,0.800], [0.050,0.700], [0.050,0.600], [0.050,0.500], [0.050,0.400], [0.050,0.300], [0.050,0.200], [0.050,0.100], [0.050,0.000], [0.050,-0.100], [0.050,-0.200], [0.050,-0.300], [0.050,-0.400], [0.050,-0.500], [0.050,-0.600], [0.050,-0.700], [0.050,-0.800], [0.050,-0.900], [0.050,-1.000], [0.090,-1.000], [0.130,-1.000], [0.170,-1.000], [0.210,-1.000], [0.250,-1.000], [0.290,-1.000], [0.330,-1.000], [0.370,-1.000], [0.410,-1.000], [0.450,-1.000],  ],\n  'Q' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.250,-1.000], [0.300,-1.000], [0.300,-0.950], [0.340,-0.945], [0.385,-0.910], [0.420,-0.850], [0.450,-0.750], [0.475,-0.650], [0.500,-0.540], [0.520,-0.400], [0.540,-0.230], [0.550,-0.050], [0.540,0.130], [0.520,0.300], [0.500,0.440], [0.475,0.550], [0.450,0.650], [0.420,0.750], [0.385,0.810], [0.340,0.845], [0.300,0.850], [0.260,0.845], [0.215,0.810], [0.180,0.750], [0.150,0.650], [0.125,0.550], [0.100,0.440], [0.080,0.300], [0.060,0.130], [0.050,-0.050], [0.060,-0.230], [0.080,-0.400], [0.100,-0.540], [0.125,-0.650], [0.150,-0.750], [0.180,-0.850], [0.215,-0.910], [0.260,-0.945], [0.300,-0.950], [0.300,-1.000], [0.350,-1.000], [0.400,-1.000], [0.450,-1.000], [0.470,-1.080], [0.490,-1.160], [0.510,-1.240], [0.450,-1.000], [0.450,-1.000], [0.510,-1.240], [0.490,-1.160], [0.470,-1.080], [0.450,-1.000], [0.430,-0.920], [0.410,-0.840], [0.390,-0.760], [0.370,-0.680], [0.350,-0.600], [0.370,-0.680], [0.390,-0.760], [0.410,-0.840], [0.430,-0.920], [0.450,-1.000], [0.500,-1.000], [0.550,-1.000], [0.600,-1.000],  ],\n  'R' : [ [0.050,-1.000], [0.050,-0.900], [0.050,-0.800], [0.050,-0.700], [0.050,-0.600], [0.050,-0.500], [0.050,-0.400], [0.050,-0.300], [0.050,-0.200], [0.050,-0.100], [0.050,0.000], [0.050,0.100], [0.050,0.200], [0.050,0.300], [0.050,0.400], [0.050,0.500], [0.050,0.600], [0.050,0.700], [0.050,0.800], [0.050,0.850], [0.090,0.850], [0.130,0.850], [0.170,0.850], [0.210,0.850], [0.250,0.850], [0.270,0.840], [0.300,0.810], [0.330,0.750], [0.350,0.710], [0.370,0.650], [0.390,0.550], [0.410,0.450], [0.410,0.400], [0.390,0.300], [0.370,0.200], [0.350,0.140], [0.330,0.100], [0.300,0.040], [0.270,0.010], [0.250,0.000], [0.210,0.000], [0.170,0.000], [0.130,0.000], [0.090,0.000], [0.050,0.000], [0.090,0.000], [0.130,0.000], [0.170,0.000], [0.210,0.000], [0.230,-0.100], [0.250,-0.200], [0.270,-0.300], [0.290,-0.400], [0.310,-0.500], [0.330,-0.600], [0.350,-0.700], [0.370,-0.800], [0.390,-0.900], [0.410,-1.000], [0.450,-1.000],  ],\n  'S' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.250,-1.000], [0.250,-0.950], [0.290,-0.945], [0.335,-0.910], [0.370,-0.850], [0.400,-0.750], [0.415,-0.650], [0.410,-0.500], [0.385,-0.350], [0.330,-0.200], [0.250,-0.050], [0.170,0.100], [0.115,0.250], [0.090,0.400], [0.085,0.550], [0.100,0.650], [0.130,0.750], [0.165,0.810], [0.210,0.845], [0.250,0.850], [0.290,0.845], [0.335,0.810], [0.370,0.750], [0.400,0.650], [0.425,0.550], [0.400,0.650], [0.370,0.750], [0.335,0.810], [0.290,0.845], [0.250,0.850], [0.210,0.845], [0.165,0.810], [0.130,0.750], [0.100,0.650], [0.085,0.550], [0.090,0.400], [0.115,0.250], [0.170,0.100], [0.250,-0.050], [0.330,-0.200], [0.385,-0.350], [0.410,-0.500], [0.415,-0.650], [0.400,-0.750], [0.370,-0.850], [0.335,-0.910], [0.290,-0.945], [0.250,-0.950], [0.210,-0.945], [0.165,-0.910], [0.130,-0.850], [0.100,-0.750], [0.075,-0.650], [0.050,-0.540], [0.075,-0.650], [0.100,-0.750], [0.130,-0.850], [0.165,-0.910], [0.210,-0.945], [0.250,-0.950], [0.250,-1.000], [0.250,-0.950], [0.300,-1.000], [0.350,-1.000], [0.400,-1.000], [0.450,-1.000],  ],\n  'T' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.250,-1.000], [0.300,-1.000], [0.350,-1.000], [0.350,-0.900], [0.350,-0.800], [0.350,-0.700], [0.350,-0.600], [0.350,-0.500], [0.350,-0.400], [0.350,-0.300], [0.350,-0.200], [0.350,-0.100], [0.350,0.000], [0.350,0.100], [0.350,0.200], [0.350,0.300], [0.350,0.400], [0.350,0.500], [0.350,0.600], [0.350,0.700], [0.350,0.800], [0.350,0.850], [0.300,0.850], [0.250,0.850], [0.200,0.850], [0.150,0.850], [0.100,0.850], [0.050,0.850], [0.100,0.850], [0.150,0.850], [0.200,0.850], [0.250,0.850], [0.300,0.850], [0.350,0.850], [0.400,0.850], [0.450,0.850], [0.500,0.850], [0.550,0.850], [0.600,0.850], [0.650,0.850], [0.600,0.850], [0.550,0.850], [0.500,0.850], [0.450,0.850], [0.400,0.850], [0.350,0.800], [0.350,0.700], [0.350,0.600], [0.350,0.500], [0.350,0.400], [0.350,0.300], [0.350,0.200], [0.350,0.100], [0.350,0.000], [0.350,-0.100], [0.350,-0.200], [0.350,-0.300], [0.350,-0.400], [0.350,-0.500], [0.350,-0.600], [0.350,-0.700], [0.350,-0.800], [0.350,-0.900], [0.350,-1.000], [0.400,-1.000], [0.450,-1.000], [0.500,-1.000], [0.550,-1.000], [0.600,-1.000], [0.650,-1.000],  ],\n  'U' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.250,-1.000], [0.300,-1.000], [0.300,-0.950], [0.340,-0.945], [0.385,-0.910], [0.420,-0.850], [0.450,-0.750], [0.475,-0.650], [0.500,-0.540], [0.520,-0.400], [0.540,-0.230], [0.550,-0.050], [0.550,0.050], [0.550,0.150], [0.550,0.250], [0.550,0.350], [0.550,0.450], [0.550,0.550], [0.550,0.650], [0.550,0.750], [0.550,0.850], [0.550,0.750], [0.550,0.650], [0.550,0.550], [0.550,0.450], [0.550,0.350], [0.550,0.250], [0.550,0.150], [0.550,0.050], [0.550,-0.050], [0.540,-0.230], [0.520,-0.400], [0.500,-0.540], [0.475,-0.650], [0.450,-0.750], [0.420,-0.850], [0.385,-0.910], [0.340,-0.945], [0.300,-0.950], [0.260,-0.945], [0.215,-0.910], [0.180,-0.850], [0.150,-0.750], [0.125,-0.650], [0.100,-0.540], [0.080,-0.400], [0.060,-0.230], [0.050,-0.050], [0.050,0.050], [0.050,0.150], [0.050,0.250], [0.050,0.350], [0.050,0.450], [0.050,0.550], [0.050,0.650], [0.050,0.750], [0.050,0.850], [0.050,0.750], [0.050,0.650], [0.050,0.550], [0.050,0.450], [0.050,0.350], [0.050,0.250], [0.050,0.150], [0.050,0.050], [0.050,-0.050], [0.060,-0.230], [0.080,-0.400], [0.100,-0.540], [0.125,-0.650], [0.150,-0.750], [0.180,-0.850], [0.215,-0.910], [0.260,-0.945], [0.300,-0.950], [0.300,-1.000], [0.350,-1.000], [0.400,-1.000], [0.450,-1.000], [0.500,-1.000], [0.550,-1.000], [0.600,-1.000],  ],\n  'V' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.250,-1.000], [0.300,-1.000], [0.350,-1.000], [0.380,-0.815], [0.410,-0.630], [0.440,-0.445], [0.470,-0.260], [0.500,-0.075], [0.530,0.110], [0.560,0.295], [0.590,0.480], [0.620,0.665], [0.650,0.850], [0.620,0.665], [0.590,0.480], [0.560,0.295], [0.530,0.110], [0.500,-0.075], [0.470,-0.260], [0.440,-0.445], [0.410,-0.630], [0.380,-0.815], [0.350,-1.000], [0.320,-0.815], [0.290,-0.630], [0.260,-0.445], [0.230,-0.260], [0.200,-0.075], [0.170,0.110], [0.140,0.295], [0.110,0.480], [0.080,0.665], [0.050,0.850], [0.080,0.665], [0.110,0.480], [0.140,0.295], [0.170,0.110], [0.200,-0.075], [0.230,-0.260], [0.260,-0.445], [0.290,-0.630], [0.320,-0.815], [0.350,-1.000], [0.400,-1.000], [0.450,-1.000], [0.500,-1.000], [0.550,-1.000], [0.600,-1.000], [0.650,-1.000], [0.700,-1.000],  ],\n  'W' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.250,-1.000], [0.250,-1.000], [0.230,-0.815], [0.210,-0.630], [0.190,-0.445], [0.170,-0.260], [0.150,-0.075], [0.130,0.110], [0.110,0.295], [0.090,0.480], [0.070,0.665], [0.050,0.850], [0.070,0.665], [0.090,0.480], [0.110,0.295], [0.130,0.110], [0.150,-0.075], [0.170,-0.260], [0.190,-0.445], [0.210,-0.630], [0.230,-0.815], [0.250,-1.000], [0.270,-0.815], [0.290,-0.630], [0.310,-0.445], [0.330,-0.260], [0.350,-0.075], [0.370,0.110], [0.390,0.295], [0.410,0.480], [0.430,0.665], [0.450,0.850], [0.470,0.665], [0.490,0.480], [0.510,0.295], [0.530,0.110], [0.550,-0.075], [0.570,-0.260], [0.590,-0.445], [0.610,-0.630], [0.630,-0.815], [0.650,-1.000], [0.670,-0.815], [0.690,-0.630], [0.710,-0.445], [0.730,-0.260], [0.750,-0.075], [0.770,0.110], [0.790,0.295], [0.810,0.480], [0.830,0.665], [0.850,0.850], [0.830,0.665], [0.810,0.480], [0.790,0.295], [0.770,0.110], [0.750,-0.075], [0.730,-0.260], [0.710,-0.445], [0.690,-0.630], [0.670,-0.815], [0.650,-1.000], [0.700,-1.000], [0.750,-1.000], [0.800,-1.000], [0.850,-1.000], [0.900,-1.000],  ],\n  'X' : [ [0.050,-1.000], [0.110,-0.815], [0.170,-0.630], [0.230,-0.445], [0.290,-0.260], [0.350,-0.075], [0.410,0.110], [0.470,0.295], [0.530,0.480], [0.590,0.665], [0.650,0.850], [0.590,0.665], [0.530,0.480], [0.470,0.295], [0.410,0.110], [0.350,-0.075], [0.290,0.110], [0.230,0.295], [0.170,0.480], [0.110,0.665], [0.050,0.850], [0.110,0.665], [0.170,0.480], [0.230,0.295], [0.290,0.110], [0.350,-0.075], [0.410,-0.260], [0.470,-0.445], [0.530,-0.630], [0.590,-0.815], [0.650,-1.000], [0.700,-1.000],  ],\n  'Y' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.250,-1.000], [0.300,-1.000], [0.350,-1.000], [0.350,-0.900], [0.350,-0.800], [0.350,-0.700], [0.350,-0.600], [0.350,-0.500], [0.350,-0.400], [0.350,-0.300], [0.350,-0.200], [0.350,-0.100], [0.350,-0.075], [0.410,0.110], [0.470,0.295], [0.530,0.480], [0.590,0.665], [0.650,0.850], [0.590,0.665], [0.530,0.480], [0.470,0.295], [0.410,0.110], [0.350,-0.075], [0.290,0.110], [0.230,0.295], [0.170,0.480], [0.110,0.665], [0.050,0.850], [0.110,0.665], [0.170,0.480], [0.230,0.295], [0.290,0.110], [0.350,-0.075], [0.350,-0.100], [0.350,-0.200], [0.350,-0.300], [0.350,-0.400], [0.350,-0.500], [0.350,-0.600], [0.350,-0.700], [0.350,-0.800], [0.350,-0.900], [0.350,-1.000], [0.400,-1.000], [0.450,-1.000], [0.500,-1.000], [0.550,-1.000], [0.600,-1.000], [0.650,-1.000], [0.700,-1.000],  ],\n  'Z' : [ [0.050,-1.000], [0.110,-0.815], [0.170,-0.630], [0.230,-0.445], [0.290,-0.260], [0.350,-0.075], [0.410,0.110], [0.470,0.295], [0.530,0.480], [0.590,0.665], [0.650,0.850], [0.550,0.850], [0.450,0.850], [0.350,0.850], [0.250,0.850], [0.150,0.850], [0.050,0.850], [0.150,0.850], [0.250,0.850], [0.350,0.850], [0.450,0.850], [0.550,0.850], [0.650,0.850], [0.590,0.665], [0.530,0.480], [0.470,0.295], [0.410,0.110], [0.350,-0.075], [0.290,-0.260], [0.230,-0.445], [0.170,-0.630], [0.110,-0.815], [0.050,-0.980], [0.150,-0.980], [0.250,-0.980], [0.350,-0.980], [0.450,-0.980], [0.550,-0.980], [0.650,-0.980], [0.650,-1.000], [0.700,-1.000],  ],\n  'a' : [ [0.040,-1.000], [0.090,-1.000], [0.140,-1.000], [0.220,-1.000], [0.260,-1.000], [0.300,-1.000], [0.340,-1.000], [0.380,-1.000], [0.380,-0.900], [0.380,-0.800], [0.380,-0.700], [0.380,-0.600], [0.380,-0.500], [0.380,-0.400], [0.380,-0.300], [0.380,-0.200], [0.380,-0.100], [0.380,0.000], [0.340,0.000], [0.300,0.000], [0.260,0.000], [0.220,0.000], [0.200,-0.010], [0.170,-0.040], [0.140,-0.100], [0.120,-0.140], [0.100,-0.200], [0.080,-0.300], [0.060,-0.400], [0.050,-0.500], [0.060,-0.600], [0.080,-0.700], [0.100,-0.800], [0.120,-0.860], [0.140,-0.900], [0.170,-0.960], [0.200,-0.990], [0.220,-1.000], [0.260,-1.000], [0.300,-1.000], [0.340,-1.000], [0.430,-1.000],  ],\n  'b' : [ [0.050,-1.000], [0.090,-1.000], [0.130,-1.000], [0.170,-1.000], [0.210,-1.000], [0.250,-1.000], [0.270,-0.990], [0.300,-0.960], [0.330,-0.900], [0.350,-0.860], [0.370,-0.800], [0.390,-0.700], [0.410,-0.600], [0.420,-0.500], [0.410,-0.400], [0.390,-0.300], [0.370,-0.200], [0.350,-0.140], [0.330,-0.100], [0.300,-0.040], [0.270,-0.010], [0.250,0.000], [0.210,0.000], [0.170,0.000], [0.130,0.000], [0.090,0.000], [0.050,0.000], [0.050,0.100], [0.050,0.200], [0.050,0.300], [0.050,0.400], [0.050,0.500], [0.050,0.600], [0.050,0.700], [0.050,0.800], [0.050,0.850], [0.050,0.800], [0.050,0.700], [0.050,0.600], [0.050,0.500], [0.050,0.400], [0.050,0.300], [0.050,0.200], [0.050,0.100], [0.050,0.000], [0.050,-0.100], [0.050,-0.200], [0.050,-0.300], [0.050,-0.400], [0.050,-0.500], [0.050,-0.600], [0.050,-0.700], [0.050,-0.800], [0.050,-0.900], [0.050,-1.000], [0.010,-1.000], [0.050,-1.000], [0.090,-1.000], [0.130,-1.000], [0.170,-1.000], [0.210,-1.000], [0.250,-1.000], [0.330,-1.000], [0.380,-1.000], [0.450,-1.000],  ],\n  'c' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.220,-1.000], [0.200,-0.990], [0.170,-0.960], [0.140,-0.900], [0.120,-0.860], [0.100,-0.800], [0.080,-0.700], [0.060,-0.600], [0.050,-0.500], [0.060,-0.400], [0.080,-0.300], [0.100,-0.200], [0.120,-0.140], [0.140,-0.100], [0.170,-0.040], [0.200,-0.010], [0.220,0.000], [0.260,0.000], [0.300,0.000], [0.340,0.000], [0.380,0.000], [0.340,0.000], [0.300,0.000], [0.260,0.000], [0.220,0.000], [0.200,-0.010], [0.170,-0.040], [0.140,-0.100], [0.120,-0.140], [0.100,-0.200], [0.080,-0.300], [0.060,-0.400], [0.050,-0.500], [0.060,-0.600], [0.080,-0.700], [0.100,-0.800], [0.120,-0.860], [0.140,-0.900], [0.170,-0.960], [0.200,-0.990], [0.220,-1.000], [0.260,-1.000], [0.300,-1.000], [0.340,-1.000], [0.380,-1.000],  ],\n  'd' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.220,-1.000], [0.260,-1.000], [0.300,-1.000], [0.340,-1.000], [0.380,-1.000], [0.420,-1.000], [0.420,-0.900], [0.420,-0.800], [0.420,-0.700], [0.420,-0.600], [0.420,-0.500], [0.420,-0.400], [0.420,-0.300], [0.420,-0.200], [0.420,-0.100], [0.420,0.000], [0.420,0.100], [0.420,0.200], [0.420,0.300], [0.420,0.400], [0.420,0.500], [0.420,0.600], [0.420,0.700], [0.420,0.800], [0.420,0.850], [0.420,0.800], [0.420,0.700], [0.420,0.600], [0.420,0.500], [0.420,0.400], [0.420,0.300], [0.420,0.200], [0.420,0.100], [0.420,0.000], [0.380,0.000], [0.340,0.000], [0.300,0.000], [0.260,0.000], [0.220,0.000], [0.200,-0.010], [0.170,-0.040], [0.140,-0.100], [0.120,-0.140], [0.100,-0.200], [0.080,-0.300], [0.060,-0.400], [0.050,-0.500], [0.060,-0.600], [0.080,-0.700], [0.100,-0.800], [0.120,-0.860], [0.140,-0.900], [0.170,-0.960], [0.200,-0.990], [0.220,-1.000], [0.260,-1.000], [0.300,-1.000], [0.340,-1.000], [0.380,-1.000], [0.420,-1.000], [0.470,-1.000],  ],\n  'e' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.220,-1.000], [0.200,-0.990], [0.170,-0.960], [0.140,-0.900], [0.120,-0.860], [0.100,-0.800], [0.075,-0.700], [0.060,-0.600], [0.056,-0.500], [0.105,-0.500], [0.150,-0.500], [0.195,-0.500], [0.240,-0.500], [0.280,-0.500], [0.305,-0.500], [0.350,-0.500], [0.395,-0.500], [0.440,-0.500], [0.425,-0.400], [0.415,-0.300], [0.390,-0.200], [0.370,-0.140], [0.350,-0.100], [0.320,-0.040], [0.290,-0.010], [0.260,0.000], [0.220,0.000], [0.200,-0.010], [0.170,-0.040], [0.140,-0.100], [0.120,-0.140], [0.100,-0.200], [0.075,-0.300], [0.060,-0.400], [0.060,-0.600], [0.075,-0.700], [0.100,-0.800], [0.120,-0.860], [0.140,-0.900], [0.170,-0.960], [0.200,-0.990], [0.260,-1.000], [0.300,-1.000], [0.340,-1.000], [0.380,-1.000], [0.420,-1.000], [0.480,-1.000],  ],\n  'f' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.250,-1.000], [0.250,-0.900], [0.250,-0.800], [0.250,-0.700], [0.250,-0.600], [0.250,-0.500], [0.250,-0.400], [0.250,-0.300], [0.250,-0.200], [0.250,-0.100], [0.250,0.000], [0.300,0.000], [0.350,0.000], [0.400,0.000], [0.475,0.000], [0.400,0.000], [0.350,0.000], [0.300,0.000], [0.250,0.000], [0.200,0.000], [0.150,0.000], [0.100,0.000], [0.025,0.000], [0.100,0.000], [0.150,0.000], [0.200,0.000], [0.250,0.000], [0.250,0.100], [0.250,0.200], [0.250,0.300], [0.260,0.450], [0.275,0.550], [0.300,0.650], [0.320,0.710], [0.340,0.750], [0.370,0.810], [0.400,0.840], [0.420,0.850], [0.460,0.850], [0.500,0.850], [0.460,0.850], [0.420,0.850], [0.400,0.840], [0.370,0.810], [0.340,0.750], [0.320,0.710], [0.300,0.650], [0.275,0.550], [0.260,0.450], [0.250,0.300], [0.250,0.200], [0.250,0.100], [0.250,0.000], [0.250,-0.100], [0.250,-0.200], [0.250,-0.300], [0.250,-0.400], [0.250,-0.500], [0.250,-0.600], [0.250,-0.700], [0.250,-0.800], [0.250,-0.900], [0.250,-1.000], [0.300,-1.000], [0.350,-1.000], [0.400,-1.000], [0.450,-1.000], [0.500,-1.000], [0.550,-1.000],  ],\n  'g' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.260,-1.000], [0.300,-1.000], [0.340,-1.000], [0.380,-1.000], [0.380,-1.100], [0.380,-1.200], [0.380,-1.300], [0.380,-1.400], [0.370,-1.550], [0.355,-1.650], [0.330,-1.750], [0.310,-1.810], [0.290,-1.850], [0.260,-1.910], [0.230,-1.940], [0.210,-1.950], [0.170,-1.950], [0.130,-1.950], [0.090,-1.950], [0.130,-1.950], [0.170,-1.950], [0.210,-1.950], [0.230,-1.940], [0.260,-1.910], [0.290,-1.850], [0.310,-1.810], [0.330,-1.750], [0.355,-1.650], [0.370,-1.550], [0.380,-1.400], [0.380,-1.300], [0.380,-1.200], [0.380,-1.100], [0.380,-1.000], [0.380,-0.900], [0.380,-0.800], [0.380,-0.700], [0.380,-0.600], [0.380,-0.500], [0.380,-0.400], [0.380,-0.300], [0.380,-0.200], [0.380,-0.100], [0.380,0.000], [0.340,0.000], [0.300,0.000], [0.260,0.000], [0.220,0.000], [0.200,-0.010], [0.170,-0.040], [0.140,-0.100], [0.120,-0.140], [0.100,-0.200], [0.080,-0.300], [0.060,-0.400], [0.050,-0.500], [0.060,-0.600], [0.080,-0.700], [0.100,-0.800], [0.120,-0.860], [0.140,-0.900], [0.170,-0.960], [0.200,-0.990], [0.220,-1.000], [0.260,-1.000], [0.300,-1.000], [0.340,-1.000], [0.420,-1.000],  ],\n  'h' : [ [0.050,-1.000], [0.050,-0.900], [0.050,-0.800], [0.050,-0.700], [0.050,-0.600], [0.050,-0.500], [0.050,-0.400], [0.050,-0.300], [0.050,-0.200], [0.050,-0.100], [0.050,0.000], [0.050,0.100], [0.050,0.200], [0.050,0.300], [0.050,0.400], [0.050,0.500], [0.050,0.600], [0.050,0.700], [0.050,0.800], [0.050,0.800], [0.050,0.850], [0.050,0.700], [0.050,0.600], [0.050,0.500], [0.050,0.400], [0.050,0.300], [0.050,0.200], [0.050,0.100], [0.050,0.000], [0.050,-0.200], [0.060,-0.150], [0.090,-0.110], [0.140,-0.050], [0.190,0.000], [0.250,0.000], [0.300,-0.050], [0.350,-0.110], [0.380,-0.150], [0.390,-0.200], [0.390,-0.300], [0.390,-0.400], [0.390,-0.500], [0.390,-0.600], [0.390,-0.700], [0.390,-0.800], [0.390,-0.900], [0.390,-1.000], [0.440,-1.000],  ],\n  'i' : [ [0.050,-1.000], [0.050,-0.900], [0.050,-0.800], [0.050,-0.700], [0.050,-0.600], [0.050,-0.500], [0.050,-0.400], [0.050,-0.300], [0.050,-0.200], [0.050,-0.100], [0.050,0.000], [0.050,-0.100], [0.050,-0.200], [0.050,-0.300], [0.050,-0.400], [0.050,-0.500], [0.050,-0.600], [0.050,-0.700], [0.050,-0.800], [0.050,-0.900], [0.050,-1.000], [0.100,-1.000],  ],\n  'j' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.250,-1.000], [0.290,-1.000], [0.290,-0.900], [0.290,-0.800], [0.290,-0.700], [0.290,-0.600], [0.290,-0.500], [0.290,-0.400], [0.290,-0.300], [0.290,-0.200], [0.290,-0.100], [0.290,0.000], [0.290,-0.100], [0.290,-0.200], [0.290,-0.300], [0.290,-0.400], [0.290,-0.500], [0.290,-0.600], [0.290,-0.700], [0.290,-0.800], [0.290,-0.900], [0.290,-1.000], [0.290,-1.100], [0.290,-1.200], [0.290,-1.300], [0.290,-1.400], [0.280,-1.550], [0.265,-1.650], [0.240,-1.750], [0.220,-1.810], [0.200,-1.850], [0.170,-1.910], [0.140,-1.940], [0.120,-1.950], [0.080,-1.950], [0.040,-1.950], [0.000,-1.950], [0.040,-1.950], [0.080,-1.950], [0.120,-1.950], [0.140,-1.940], [0.170,-1.910], [0.200,-1.850], [0.220,-1.810], [0.240,-1.750], [0.265,-1.650], [0.280,-1.550], [0.290,-1.400], [0.290,-1.300], [0.290,-1.200], [0.290,-1.100], [0.290,-1.000], [0.260,-1.000], [0.290,-1.000], [0.340,-1.000],  ],\n  'k' : [ [0.050,-1.000], [0.050,-0.900], [0.050,-0.800], [0.050,-0.700], [0.050,-0.600], [0.050,-0.500], [0.050,-0.400], [0.050,-0.300], [0.050,-0.200], [0.050,-0.100], [0.050,0.000], [0.050,0.100], [0.050,0.200], [0.050,0.300], [0.050,0.400], [0.050,0.500], [0.050,0.600], [0.050,0.700], [0.050,0.800], [0.050,0.800], [0.050,0.850], [0.050,0.700], [0.050,0.600], [0.050,0.500], [0.050,0.400], [0.050,0.300], [0.050,0.200], [0.050,0.100], [0.050,0.000], [0.050,-0.100], [0.050,-0.200], [0.050,-0.300], [0.050,-0.400], [0.050,-0.500], [0.108,-0.422], [0.167,-0.343], [0.225,-0.265], [0.283,-0.187], [0.342,-0.108], [0.400,-0.030], [0.342,-0.108], [0.283,-0.187], [0.225,-0.265], [0.167,-0.343], [0.108,-0.422], [0.050,-0.500], [0.108,-0.583], [0.167,-0.667], [0.225,-0.750], [0.283,-0.833], [0.342,-0.917], [0.400,-1.000], [0.450,-1.000],  ],\n  'l' : [ [0.050,-1.000], [0.050,-0.900], [0.050,-0.800], [0.050,-0.700], [0.050,-0.600], [0.050,-0.500], [0.050,-0.400], [0.050,-0.300], [0.050,-0.200], [0.050,-0.100], [0.050,0.000], [0.050,0.100], [0.050,0.200], [0.050,0.300], [0.050,0.400], [0.050,0.500], [0.050,0.600], [0.050,0.700], [0.050,0.800], [0.050,0.800], [0.050,0.850], [0.050,0.700], [0.050,0.600], [0.050,0.500], [0.050,0.400], [0.050,0.300], [0.050,0.200], [0.050,0.100], [0.050,0.000], [0.050,-0.100], [0.050,-0.200], [0.050,-0.300], [0.050,-0.400], [0.050,-0.500], [0.050,-0.600], [0.050,-0.700], [0.050,-0.800], [0.050,-0.900], [0.050,-1.000], [0.100,-1.000],  ],\n  'm' : [ [0.050,-1.000], [0.050,-0.900], [0.050,-0.800], [0.050,-0.700], [0.050,-0.600], [0.050,-0.500], [0.050,-0.400], [0.050,-0.300], [0.050,-0.200], [0.050,-0.100], [0.090,-0.070], [0.150,-0.040], [0.190,-0.020], [0.230,-0.020], [0.270,-0.040], [0.330,-0.070], [0.360,-0.100], [0.370,-0.200], [0.370,-0.300], [0.370,-0.400], [0.370,-0.500], [0.370,-0.600], [0.370,-0.700], [0.370,-0.800], [0.370,-0.900], [0.370,-1.025], [0.370,-0.900], [0.370,-0.800], [0.370,-0.700], [0.370,-0.600], [0.370,-0.500], [0.370,-0.400], [0.370,-0.300], [0.370,-0.200], [0.380,-0.100], [0.410,-0.070], [0.470,-0.040], [0.510,-0.020], [0.550,-0.020], [0.590,-0.040], [0.650,-0.070], [0.680,-0.100], [0.690,-0.200], [0.690,-0.300], [0.690,-0.400], [0.690,-0.500], [0.690,-0.600], [0.690,-0.700], [0.690,-0.800], [0.690,-0.900], [0.690,-1.000], [0.740,-1.000],  ],\n  'n' : [ [0.050,-1.000], [0.050,-0.900], [0.050,-0.800], [0.050,-0.700], [0.050,-0.600], [0.050,-0.500], [0.050,-0.400], [0.050,-0.300], [0.050,-0.200], [0.050,-0.100], [0.090,-0.070], [0.150,-0.040], [0.190,-0.020], [0.230,-0.020], [0.270,-0.040], [0.330,-0.070], [0.360,-0.100], [0.370,-0.200], [0.370,-0.300], [0.370,-0.400], [0.370,-0.500], [0.370,-0.600], [0.370,-0.700], [0.370,-0.800], [0.370,-0.900], [0.370,-1.000], [0.420,-1.000],  ],\n  'o' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.250,-1.000], [0.300,-1.000], [0.350,-1.000], [0.380,-1.000], [0.400,-0.990], [0.430,-0.960], [0.460,-0.900], [0.480,-0.860], [0.500,-0.800], [0.520,-0.700], [0.540,-0.600], [0.550,-0.500], [0.540,-0.400], [0.520,-0.300], [0.500,-0.200], [0.480,-0.140], [0.460,-0.100], [0.430,-0.040], [0.400,-0.010], [0.380,0.000], [0.340,0.000], [0.300,0.000], [0.260,0.000], [0.220,0.000], [0.200,-0.010], [0.170,-0.040], [0.140,-0.100], [0.120,-0.140], [0.100,-0.200], [0.080,-0.300], [0.060,-0.400], [0.050,-0.500], [0.060,-0.600], [0.080,-0.700], [0.100,-0.800], [0.120,-0.860], [0.140,-0.900], [0.170,-0.960], [0.200,-0.990], [0.220,-1.000], [0.250,-1.000], [0.300,-1.000], [0.350,-1.000], [0.400,-1.000], [0.450,-1.000], [0.500,-1.000], [0.550,-1.000], [0.600,-1.000],  ],\n  'p' : [ [0.050,-1.000], [0.050,-1.100], [0.050,-1.200], [0.050,-1.300], [0.050,-1.400], [0.050,-1.500], [0.050,-1.600], [0.050,-1.700], [0.050,-1.800], [0.050,-1.900], [0.050,-1.500], [0.050,-1.900], [0.050,-1.800], [0.050,-1.700], [0.050,-1.600], [0.050,-1.500], [0.050,-1.400], [0.050,-1.300], [0.050,-1.200], [0.050,-1.100], [0.090,-1.000], [0.130,-1.000], [0.170,-1.000], [0.210,-1.000], [0.230,-0.990], [0.260,-0.960], [0.290,-0.900], [0.310,-0.860], [0.330,-0.800], [0.350,-0.700], [0.370,-0.600], [0.380,-0.500], [0.370,-0.400], [0.350,-0.300], [0.330,-0.200], [0.310,-0.140], [0.290,-0.100], [0.260,-0.040], [0.230,-0.010], [0.210,0.000], [0.170,0.000], [0.130,0.000], [0.090,0.000], [0.050,0.000], [0.050,-0.100], [0.050,-0.200], [0.050,-0.300], [0.050,-0.400], [0.050,-0.500], [0.050,-0.600], [0.050,-0.700], [0.050,-0.800], [0.050,-0.900], [0.050,-1.000], [0.090,-1.000], [0.130,-1.000], [0.170,-1.000], [0.210,-1.000], [0.290,-1.000], [0.340,-1.000], [0.390,-1.000], [0.430,-1.000],  ],\n  'q' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.220,-1.000], [0.260,-1.000], [0.300,-1.000], [0.340,-1.000], [0.380,-1.000], [0.380,-1.100], [0.380,-1.200], [0.380,-1.300], [0.380,-1.400], [0.390,-1.550], [0.405,-1.650], [0.430,-1.750], [0.450,-1.810], [0.470,-1.850], [0.500,-1.910], [0.530,-1.940], [0.550,-1.950], [0.590,-1.950], [0.630,-1.950], [0.670,-1.950], [0.630,-1.950], [0.590,-1.950], [0.550,-1.950], [0.530,-1.940], [0.500,-1.910], [0.470,-1.850], [0.450,-1.810], [0.430,-1.750], [0.405,-1.650], [0.390,-1.550], [0.380,-1.400], [0.380,-1.300], [0.380,-1.200], [0.380,-1.100], [0.380,-1.000], [0.380,-0.900], [0.380,-0.800], [0.380,-0.700], [0.380,-0.600], [0.380,-0.500], [0.380,-0.400], [0.380,-0.300], [0.380,-0.200], [0.380,-0.100], [0.380,0.000], [0.340,0.000], [0.300,0.000], [0.260,0.000], [0.220,0.000], [0.200,-0.010], [0.170,-0.040], [0.140,-0.100], [0.120,-0.140], [0.100,-0.200], [0.080,-0.300], [0.060,-0.400], [0.050,-0.500], [0.060,-0.600], [0.080,-0.700], [0.100,-0.800], [0.120,-0.860], [0.140,-0.900], [0.170,-0.960], [0.200,-0.990], [0.220,-1.000], [0.260,-1.000], [0.300,-1.000], [0.340,-1.000], [0.420,-1.000], [0.480,-1.000], [0.540,-1.000], [0.600,-1.000], [0.650,-1.000], [0.720,-1.000],  ],\n  'r' : [ [0.050,-1.000], [0.050,-0.900], [0.050,-0.800], [0.050,-0.700], [0.050,-0.600], [0.050,-0.500], [0.050,-0.400], [0.050,-0.300], [0.050,-0.200], [0.050,-0.100], [0.050,0.000], [0.050,-0.100], [0.050,0.100], [0.050,0.150], [0.050,0.100], [0.050,-0.100], [0.090,-0.070], [0.150,-0.040], [0.190,-0.010], [0.230,0.000], [0.270,-0.010], [0.310,-0.040], [0.350,-0.100], [0.310,-0.040], [0.270,-0.010], [0.230,0.000], [0.190,-0.010], [0.150,-0.040], [0.090,-0.070], [0.050,-0.100], [0.050,-0.200], [0.050,-0.300], [0.050,-0.400], [0.050,-0.500], [0.050,-0.600], [0.050,-0.700], [0.050,-0.800], [0.050,-0.900], [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.250,-1.000], [0.300,-1.000], [0.350,-1.000], [0.400,-1.000],  ],\n  's' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.250,-1.000], [0.300,-1.000], [0.330,-1.000], [0.350,-0.990], [0.380,-0.960], [0.410,-0.900], [0.430,-0.860], [0.450,-0.800], [0.445,-0.740], [0.430,-0.700], [0.390,-0.650], [0.350,-0.600], [0.300,-0.550], [0.250,-0.500], [0.200,-0.450], [0.150,-0.400], [0.110,-0.350], [0.070,-0.300], [0.060,-0.210], [0.070,-0.140], [0.090,-0.100], [0.120,-0.040], [0.150,-0.010], [0.170,0.000], [0.210,0.000], [0.250,0.000], [0.290,0.000], [0.330,0.000], [0.350,-0.010], [0.380,-0.040], [0.410,-0.100], [0.430,-0.140], [0.410,-0.100], [0.380,-0.040], [0.350,-0.010], [0.330,0.000], [0.290,0.000], [0.250,0.000], [0.210,0.000], [0.170,0.000], [0.150,-0.010], [0.120,-0.040], [0.090,-0.100], [0.070,-0.140], [0.060,-0.210], [0.070,-0.300], [0.110,-0.350], [0.150,-0.400], [0.200,-0.450], [0.250,-0.500], [0.300,-0.550], [0.350,-0.600], [0.390,-0.650], [0.430,-0.700], [0.445,-0.740], [0.450,-0.800], [0.430,-0.860], [0.410,-0.900], [0.380,-0.960], [0.350,-0.990], [0.330,-1.000], [0.300,-1.000], [0.250,-1.000], [0.200,-1.000], [0.170,-1.000], [0.150,-0.990], [0.120,-0.960], [0.090,-0.900], [0.070,-0.860], [0.035,-0.800], [0.070,-0.860], [0.090,-0.900], [0.120,-0.960], [0.150,-0.990], [0.170,-1.000], [0.200,-1.000], [0.250,-1.000], [0.300,-1.000], [0.350,-1.000], [0.400,-1.000], [0.450,-1.000], [0.500,-1.000],  ],\n  't' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.220,-1.000], [0.220,-0.900], [0.220,-0.800], [0.220,-0.700], [0.220,-0.600], [0.220,-0.500], [0.220,-0.400], [0.220,-0.300], [0.220,-0.200], [0.220,-0.100], [0.220,0.000], [0.220,0.100], [0.220,0.200], [0.220,0.300], [0.220,0.350], [0.220,0.450], [0.180,0.450], [0.140,0.450], [0.100,0.450], [0.025,0.450], [0.100,0.450], [0.140,0.450], [0.180,0.450], [0.220,0.450], [0.260,0.450], [0.300,0.450], [0.340,0.450], [0.415,0.450], [0.340,0.450], [0.300,0.450], [0.260,0.450], [0.220,0.450], [0.220,0.550], [0.220,0.650], [0.220,0.750], [0.220,0.850], [0.220,0.750], [0.220,0.650], [0.220,0.550], [0.220,0.450], [0.220,0.350], [0.220,0.300], [0.220,0.200], [0.220,0.100], [0.220,0.000], [0.220,-0.100], [0.220,-0.200], [0.220,-0.300], [0.220,-0.400], [0.220,-0.500], [0.220,-0.600], [0.220,-0.700], [0.220,-0.800], [0.220,-0.900], [0.220,-1.000], [0.270,-1.000], [0.320,-1.000], [0.390,-1.000], [0.450,-1.000],  ],\n  'u' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.250,-1.000], [0.190,-0.980], [0.150,-0.960], [0.090,-0.930], [0.060,-0.900], [0.050,-0.800], [0.050,-0.700], [0.050,-0.600], [0.050,-0.500], [0.050,-0.400], [0.050,-0.300], [0.050,-0.200], [0.050,-0.100], [0.050,0.000], [0.050,-0.100], [0.050,-0.200], [0.050,-0.300], [0.050,-0.400], [0.050,-0.500], [0.050,-0.600], [0.050,-0.700], [0.050,-0.800], [0.060,-0.900], [0.090,-0.930], [0.150,-0.960], [0.190,-0.980], [0.230,-1.000], [0.270,-0.980], [0.310,-0.960], [0.370,-0.930], [0.400,-0.900], [0.410,-0.900], [0.410,-0.800], [0.410,-0.700], [0.410,-0.600], [0.410,-0.500], [0.410,-0.400], [0.410,-0.300], [0.410,-0.200], [0.410,-0.100], [0.410,0.000], [0.410,-0.100], [0.410,-0.200], [0.410,-0.300], [0.410,-0.400], [0.410,-0.500], [0.410,-0.600], [0.410,-0.700], [0.410,-0.800], [0.410,-0.900], [0.410,-1.000], [0.460,-1.000],  ],\n  'v' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.275,-1.000], [0.253,-0.900], [0.230,-0.800], [0.208,-0.700], [0.185,-0.600], [0.163,-0.500], [0.140,-0.400], [0.117,-0.300], [0.095,-0.200], [0.073,-0.100], [0.050,0.000], [0.073,-0.100], [0.095,-0.200], [0.117,-0.300], [0.140,-0.400], [0.163,-0.500], [0.185,-0.600], [0.208,-0.700], [0.230,-0.800], [0.253,-0.900], [0.275,-1.000], [0.297,-0.900], [0.320,-0.800], [0.343,-0.700], [0.365,-0.600], [0.388,-0.500], [0.410,-0.400], [0.432,-0.300], [0.455,-0.200], [0.478,-0.100], [0.500,0.000], [0.478,-0.100], [0.455,-0.200], [0.432,-0.300], [0.410,-0.400], [0.388,-0.500], [0.365,-0.600], [0.343,-0.700], [0.320,-0.800], [0.297,-0.900], [0.275,-1.000], [0.325,-1.000], [0.390,-1.000], [0.450,-1.000], [0.500,-1.000], [0.550,-1.000],  ],\n  'w' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.185,-0.900], [0.170,-0.800], [0.155,-0.700], [0.140,-0.600], [0.125,-0.500], [0.110,-0.400], [0.095,-0.300], [0.080,-0.200], [0.065,-0.100], [0.050,0.000], [0.065,-0.100], [0.080,-0.200], [0.095,-0.300], [0.110,-0.400], [0.125,-0.500], [0.140,-0.600], [0.155,-0.700], [0.170,-0.800], [0.185,-0.900], [0.200,-1.000], [0.215,-0.900], [0.230,-0.800], [0.245,-0.700], [0.260,-0.600], [0.275,-0.500], [0.290,-0.400], [0.305,-0.300], [0.320,-0.200], [0.335,-0.100], [0.350,0.000], [0.365,-0.100], [0.380,-0.200], [0.395,-0.300], [0.410,-0.400], [0.425,-0.500], [0.440,-0.600], [0.455,-0.700], [0.470,-0.800], [0.485,-0.900], [0.500,-1.000], [0.515,-0.900], [0.530,-0.800], [0.545,-0.700], [0.560,-0.600], [0.575,-0.500], [0.590,-0.400], [0.605,-0.300], [0.620,-0.200], [0.635,-0.100], [0.650,0.000], [0.635,-0.100], [0.620,-0.200], [0.605,-0.300], [0.590,-0.400], [0.575,-0.500], [0.560,-0.600], [0.545,-0.700], [0.530,-0.800], [0.515,-0.900], [0.500,-1.000], [0.550,-1.000], [0.600,-1.000], [0.650,-1.000], [0.700,-1.000],  ],\n  'x' : [ [0.045,-0.900], [0.090,-0.800], [0.135,-0.700], [0.180,-0.600], [0.225,-0.500], [0.270,-0.400], [0.315,-0.300], [0.360,-0.200], [0.405,-0.100], [0.450,0.000], [0.405,-0.100], [0.360,-0.200], [0.315,-0.300], [0.270,-0.400], [0.225,-0.500], [0.180,-0.400], [0.135,-0.300], [0.090,-0.200], [0.045,-0.100], [0.000,0.000], [0.045,-0.100], [0.090,-0.200], [0.135,-0.300], [0.180,-0.400], [0.225,-0.500], [0.270,-0.600], [0.315,-0.700], [0.360,-0.800], [0.405,-0.900], [0.450,-1.000],  ],\n  'y' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.275,-1.000], [0.253,-0.900], [0.230,-0.800], [0.208,-0.700], [0.185,-0.600], [0.163,-0.500], [0.140,-0.400], [0.117,-0.300], [0.095,-0.200], [0.073,-0.100], [0.050,0.000], [0.073,-0.100], [0.095,-0.200], [0.117,-0.300], [0.140,-0.400], [0.163,-0.500], [0.185,-0.600], [0.208,-0.700], [0.230,-0.800], [0.253,-0.900], [0.275,-1.000], [0.297,-0.900], [0.320,-0.800], [0.343,-0.700], [0.365,-0.600], [0.388,-0.500], [0.410,-0.400], [0.432,-0.300], [0.455,-0.200], [0.478,-0.100], [0.500,0.000], [0.478,-0.100], [0.455,-0.200], [0.432,-0.300], [0.410,-0.400], [0.388,-0.500], [0.365,-0.600], [0.343,-0.700], [0.320,-0.800], [0.297,-0.900], [0.275,-1.000], [0.253,-1.100], [0.230,-1.200], [0.208,-1.300], [0.185,-1.400], [0.163,-1.500], [0.140,-1.600], [0.117,-1.700], [0.140,-1.600], [0.163,-1.500], [0.185,-1.400], [0.208,-1.300], [0.230,-1.200], [0.253,-1.100], [0.275,-1.000], [0.325,-1.000], [0.375,-1.000], [0.425,-1.000], [0.475,-1.000], [0.550,-1.000],  ],\n  'z' : [ [0.050,-1.000], [0.095,-0.900], [0.140,-0.800], [0.185,-0.700], [0.230,-0.600], [0.275,-0.500], [0.320,-0.400], [0.365,-0.300], [0.410,-0.200], [0.455,-0.100], [0.500,0.000], [0.450,0.000], [0.400,0.000], [0.350,0.000], [0.300,0.000], [0.250,0.000], [0.200,0.000], [0.150,0.000], [0.100,0.000], [0.050,0.000], [0.100,0.000], [0.150,0.000], [0.200,0.000], [0.250,0.000], [0.300,0.000], [0.350,0.000], [0.400,0.000], [0.450,0.000], [0.500,0.000], [0.455,-0.100], [0.410,-0.200], [0.365,-0.300], [0.320,-0.400], [0.275,-0.500], [0.230,-0.600], [0.185,-0.700], [0.140,-0.800], [0.095,-0.900], [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.250,-1.000], [0.300,-1.000], [0.350,-1.000], [0.400,-1.000], [0.450,-1.000], [0.500,-1.000], [0.550,-1.000],  ],\n  'a*' : [ [0.050,-1.000], [0.100,-1.000],  ],\n  'b*' : [ [0.050,-1.000], [0.100,-1.000],  ],\n  'c*' : [ [0.050,-1.000], [0.100,-1.000],  ],\n  'd*' : [ [0.050,-1.000], [0.100,-1.000],  ],\n  'e*' : [ [0.050,-1.000], [0.100,-1.000],  ],\n  'f*' : [ [0.050,-1.000], [0.100,-1.000],  ],\n  'g*' : [ [0.050,-1.000], [0.100,-1.000],  ],\n  'h*' : [ [0.050,-1.000], [0.100,-1.000],  ],\n  'i*' : [ [0.050,-1.000], [0.100,-1.000],  ],\n  'j*' : [ [0.050,-1.000], [0.100,-1.000],  ],\n  'k*' : [ [0.050,-1.000], [0.100,-1.000],  ],\n  'l*' : [ [0.050,-1.000], [0.100,-1.000],  ],\n  'm*' : [ [0.050,-1.000], [0.100,-1.000],  ],\n  'n*' : [ [0.050,-1.000], [0.100,-1.000],  ],\n  'o*' : [ [0.050,-1.000], [0.100,-1.000],  ],\n  'p*' : [ [0.050,-1.000], [0.100,-1.000],  ],\n  'q*' : [ [0.050,-1.000], [0.100,-1.000],  ],\n  'r*' : [ [0.050,-1.000], [0.100,-1.000],  ],\n  's*' : [ [0.050,-1.000], [0.100,-1.000],  ],\n  't*' : [ [0.050,-1.000], [0.100,-1.000],  ],\n  'u*' : [ [0.050,-1.000], [0.100,-1.000],  ],\n  'v*' : [ [0.050,-1.000], [0.100,-1.000],  ],\n  'w*' : [ [0.050,-1.000], [0.100,-1.000],  ],\n  'x*' : [ [0.050,-1.000], [0.100,-1.000],  ],\n  'y*' : [ [0.050,-1.000], [0.100,-1.000],  ],\n  'z*' : [ [0.050,-1.000], [0.100,-1.000],  ],\n  ',' : [ [0.050,-1.000], [0.100,-1.000], [0.110,-0.900], [0.130,-0.800], [0.170,-0.900], [0.180,-1.000], [0.190,-1.100], [0.190,-1.200], [0.170,-1.300], [0.150,-1.400], [0.110,-1.500], [0.050,-1.600], [0.110,-1.500], [0.150,-1.400], [0.170,-1.300], [0.190,-1.200], [0.190,-1.100], [0.180,-1.000], [0.170,-0.900], [0.130,-0.800], [0.170,-0.900], [0.180,-1.000], [0.250,-1.000],  ],\n  '?' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.200,-1.000], [0.250,-1.000], [0.250,-0.900], [0.250,-0.800], [0.250,-0.700], [0.250,-0.600], [0.250,-0.500], [0.250,-0.400], [0.250,-0.300], [0.250,-0.200], [0.250,-0.170], [0.266,-0.120], [0.280,-0.070], [0.300,0.010], [0.320,0.100], [0.340,0.170], [0.360,0.250], [0.370,0.300], [0.380,0.350], [0.385,0.400], [0.388,0.480], [0.390,0.550], [0.385,0.600], [0.375,0.650], [0.365,0.700], [0.345,0.750], [0.330,0.790], [0.310,0.810], [0.285,0.835], [0.265,0.845], [0.245,0.850], [0.225,0.850], [0.200,0.846], [0.185,0.845], [0.160,0.830], [0.140,0.810], [0.120,0.785], [0.105,0.750], [0.088,0.700], [0.075,0.650], [0.060,0.600], [0.050,0.550], [0.060,0.600], [0.075,0.650], [0.088,0.700], [0.105,0.750], [0.120,0.785], [0.140,0.810], [0.160,0.830], [0.185,0.845], [0.200,0.846], [0.225,0.850], [0.245,0.850], [0.265,0.845], [0.285,0.835], [0.310,0.810], [0.330,0.790], [0.345,0.750], [0.365,0.700], [0.375,0.650], [0.385,0.600], [0.390,0.550], [0.388,0.480], [0.385,0.400], [0.380,0.350], [0.370,0.300], [0.360,0.250], [0.340,0.170], [0.320,0.100], [0.300,0.010], [0.280,-0.070], [0.266,-0.120], [0.250,-0.170], [0.250,-0.200], [0.250,-0.250], [0.250,-0.300], [0.250,-0.350], [0.250,-0.400], [0.250,-0.450], [0.250,-0.500], [0.250,-0.550], [0.250,-0.600], [0.250,-0.650], [0.250,-0.700], [0.250,-0.750], [0.250,-0.800], [0.250,-0.850], [0.250,-0.900], [0.250,-0.950], [0.250,-1.000], [0.200,-1.000], [0.250,-1.000], [0.360,-1.000], [0.330,-0.850], [0.250,-0.750], [0.170,-0.850], [0.140,-1.000], [0.170,-1.150], [0.250,-1.250], [0.330,-1.150], [0.360,-1.000], [0.250,-1.000], [0.300,-1.000], [0.350,-1.000], [0.400,-1.000],  ],\n  '&' : [ [0.050,-1.000], [0.102,-0.990], [0.150,-0.985], [0.195,-0.985], [0.271,-0.970], [0.330,-0.955], [0.380,-0.880], [0.430,-0.750], [0.470,-0.670], [0.500,-0.592], [0.550,-0.450], [0.610,-0.300], [0.550,-0.450], [0.500,-0.592], [0.470,-0.670], [0.430,-0.750], [0.380,-0.880], [0.330,-0.955], [0.271,-0.970], [0.195,-0.985], [0.150,-0.985], [0.102,-0.990], [0.075,-0.920], [0.060,-0.870], [0.050,-0.780], [0.045,-0.660], [0.050,-0.460], [0.080,-0.300], [0.140,-0.150], [0.190,-0.070], [0.220,-0.020], [0.290,0.030], [0.345,0.106], [0.370,0.200], [0.395,0.319], [0.415,0.430], [0.421,0.537], [0.422,0.647], [0.412,0.737], [0.392,0.807], [0.365,0.840], [0.315,0.850], [0.275,0.850], [0.235,0.840], [0.194,0.820], [0.173,0.788], [0.159,0.727], [0.152,0.637], [0.148,0.570], [0.149,0.470], [0.154,0.400], [0.170,0.285], [0.195,0.130], [0.240,0.000], [0.280,-0.200], [0.320,-0.400], [0.350,-0.600], [0.380,-0.800], [0.410,-1.000], [0.450,-1.050], [0.500,-1.050], [0.545,-1.020], [0.600,-1.000], [0.659,-1.000],  ],\n  '$' : [ [0.060,-1.000], [0.130,-1.000], [0.180,-1.000], [0.230,-1.000], [0.280,-1.000], [0.280,-1.000], [0.280,-1.400], [0.280,-1.000], [0.280,-0.700], [0.280,-0.400], [0.280,-0.100], [0.280,0.200], [0.280,0.500], [0.280,0.900], [0.300,0.900], [0.300,0.500], [0.300,0.200], [0.300,-0.100], [0.300,-0.400], [0.300,-0.700], [0.300,-1.000], [0.300,-1.400], [0.300,-1.000], [0.280,-1.000], [0.280,-1.100], [0.350,-1.145], [0.395,-1.110], [0.430,-1.050], [0.460,-0.950], [0.475,-0.850], [0.470,-0.700], [0.445,-0.550], [0.390,-0.400], [0.280,-0.250], [0.170,-0.100], [0.115,0.050], [0.090,0.200], [0.085,0.350], [0.100,0.450], [0.130,0.550], [0.165,0.610], [0.210,0.645], [0.280,0.650], [0.350,0.645], [0.395,0.610], [0.430,0.550], [0.460,0.450], [0.485,0.350], [0.460,0.450], [0.430,0.550], [0.395,0.610], [0.350,0.645], [0.280,0.650], [0.210,0.645], [0.165,0.610], [0.130,0.550], [0.100,0.450], [0.085,0.350], [0.090,0.200], [0.115,0.050], [0.170,-0.100], [0.280,-0.250], [0.390,-0.400], [0.445,-0.550], [0.470,-0.700], [0.475,-0.850], [0.460,-0.950], [0.430,-1.050], [0.395,-1.110], [0.350,-1.145], [0.280,-1.150], [0.210,-1.145], [0.165,-1.110], [0.130,-1.050], [0.100,-0.950], [0.075,-0.850], [0.050,-0.740], [0.075,-0.850], [0.100,-0.950], [0.130,-1.050], [0.165,-1.110], [0.210,-1.145], [0.280,-1.150], [0.280,-1.000], [0.330,-1.000], [0.380,-1.000], [0.430,-1.000], [0.480,-1.000], [0.530,-1.000],  ],\n  '!' : [ [0.050,-1.000], [0.100,-1.000], [0.150,-1.000], [0.150,-0.700], [0.150,-0.400], [0.150,-0.100], [0.150,0.200], [0.150,0.500], [0.150,0.850], [0.150,0.500], [0.150,0.200], [0.150,-0.100], [0.150,-0.400], [0.150,-0.700], [0.150,-1.000], [0.260,-1.000], [0.230,-0.850], [0.150,-0.750], [0.070,-0.850], [0.040,-1.000], [0.070,-1.150], [0.150,-1.250], [0.230,-1.150], [0.260,-1.000], [0.150,-1.000], [0.250,-1.000], [0.300,-1.000],  ],\n};\n","import { Vertex } from '../Geometry';\nimport { raysol_cursive } from './raysol_cursive';\nimport { raysol_sanserif } from './raysol_sanserif';\n\nconst fontSpacing = 1.5;\n\n// Format for vertices: [x,y,b] where in a 0:7(8) by -1:7 grid defining x,y and b defines the line or curve.\n// Bulge directions could be represented by a 0:4 list starting at none, then NE and going clockwise.\n// 4  1\n// 3  2\nlet billsey = {\n  ' ': [ [8,-1,0] ],\n  'A': [ [0,0,0], [3.5,7,0], [7,0,0], [5,3.5,0], [2,3.5,0], [0,0,0], [0,-1,0], [8,-1,0] ],\n  'B': [ [0,0,0], [0,7,0], [3.5,7,0], [7,5.25,1], [3.5,3.5,2], [0,3.5,0], [3.5,3.5,0], [7,1.75,1], [3.5,0,2], [0,0,0], [0,-1,0], [8,-1,0] ],\n  'C': [ [3.5,-1,0], [3.5,0,0], [0,3.5,3], [3.5,7,4], [7,5.25,1], [3.5,7,1], [0,3.5,4], [3.5,0,3], [7,1.75,2], [3.5,0,2], [3.5,-1,0], [8,-1,0] ],\n  'D': [ [0,0,0], [0,7,0], [3.5,7,0], [7,3.5,1], [3.5,0,2], [0,0,0], [0,-1,0], [8,-1,0] ],\n  'E': [ [0,0,0], [0,7,0], [7,7,0], [0,7,0], [0,3.5,0], [3.5,3.5,0], [0,3.5,0], [0,0,0], [7,0,0], [0,0,0], [0,-1,0], [8,-1,0] ],\n  'F': [ [0,0,0], [0,7,0], [7,7,0], [0,7,0], [0,3.5,0], [3.5,3.5,0], [0,3.5,0], [0,0,0], [0,-1,0], [8,-1,0] ],\n  'G': [ [3.5,-1,0], [3.5,0,0], [0,3.5,3], [3.5,7,4], [7,5.25,1], [3.5,7,1], [0,3.5,4], [3.5,0,3], [7,1.75,2], [5.25,1.75,0], [7,1.75,0], [3.5,0,2], [3.5,-1,0], [8,-1,0] ],\n  'H': [ [0,0,0], [0,7,0], [0,3.5,0], [7,3.5,0], [7,7,0], [7,0,0], [7,3.5,0], [0,3.5,0], [0,0,0], [0,-1,0], [8,-1,0] ],\n  'I': [ [3.5,-1,0], [3.5,7,0], [0,7,0], [7,7,0], [3.5,7,0], [3.5,0,0], [0,0,0], [7,0,0], [3.5,0,0], [3.5,-1,0], [8,-1,0] ],\n  'J': [ [3.5,-1,0], [3.5,0,0], [0,1.75,3], [3.5,0,3], [7,1.75,2], [7,7,0], [7,1.75,0], [3.5,0,2], [3.5,-1,0], [8,-1,0] ],\n  'K': [ [0,0,0], [0,7,0], [0,1.75,0], [3.5,3.5,0], [7,7,0], [3.5,3.5,0], [7,0,0], [3.5,3.5,0], [0,1.75,0], [0,0,0], [0,-1,0], [8,-1,0] ],\n  'L': [ [0,0,0], [0,7,0], [0,0,0], [7,0,0], [0,0,0], [0,-1,0], [8,-1,0] ],\n  'M': [ [0,0,0], [0,7,0], [3.5,0,0], [7,7,0], [7,0,0], [7,7,0], [3.5,0,0], [0,7,0], [0,0,0], [0,-1,0], [8,-1,0] ],\n  'N': [ [0,0,0], [0,7,0], [7,0,0], [7,7,0], [7,0,0], [0,7,0], [0,0,0], [0,-1,0], [8,-1,0] ],\n  'O': [ [3.5,-1,0], [3.5, 0, 0], [0, 3.5, 3], [3.5, 7, 4], [7.0, 3.5, 1], [3.5, 0, 2], [3.5, -1, 0], [8, -1, 0] ],\n  'P': [ [0,0,0], [0,7,0], [3.5,7,0], [7,5.25,1], [3.5,3.5,2], [0,3.5,0], [0,0,0], [0,-1,0], [8,-1,0] ],\n  'Q': [ [3.5,-1,0], [3.5, 0, 0], [0, 3.5, 3], [3.5, 7, 4], [7.0, 3.5, 1], [3.5, 0, 2], [4.325,0.5,4], [6.075,0,0], [7,0.5,2], [6.075,0,2], [4.325,0.5,0], [3.5,0,4], [3.5, -1, 0], [8, -1, 0] ],\n  'R': [ [0,0,0], [0,7,0], [3.5,7,0], [7,5.25,1], [3.5,3.5,2], [7,0,0], [3.5,3.5,0], [0,3.5,0], [0,0,0], [0,-1,0], [8,-1,0] ],\n  'S': [ [3.5,-1,0], [3.5,0,0], [0,1.75,3], [3.5,0,3], [7,1.75,2], [3.5,3.5,1], [0,5.25,3], [3.5,7,4], [7,5.25,1], [3.5,7,1], [0,5.25,4], [3.5,3.5,3], [7,1.75,1], [3.5,0,2], [3.5,-1,0], [8,-1,0] ],\n  'T': [ [3.5,-1,0], [3.5,7,0], [0,7,0], [7,7,0], [3.5,7,0], [3.5,0,0], [3.5,-1,0], [8,-1,0] ],\n  'U': [ [3.5,-1,0], [3.5,0,0], [0,3.5,3], [0,7,0], [0,3.5,0], [3.5,0,3], [7,3.5,2], [7,7,0], [7,3.5,0], [3.5,0,2], [3.5,-1,0], [8,-1,0] ],\n  'V': [ [3.5,-1,0], [3.5,0,0], [0,7,0], [3.5,0,0], [7,7,0], [3.5,0,0], [3.5,-1,0], [8,-1,0] ],\n  'W': [ [1.75,-1,0], [1.75,0,0], [0,7,0], [1.75,0,0], [3.5,7,0], [5.25,0,0], [7,7,0], [5.25,0,0], [3.5,7,0], [1.75,0,0], [1.75,-1,0], [8,-1,0] ],\n  'X': [ [0,0,0], [7,7,0], [3.5,3.5,0], [0,7,0], [7,0,0], [3.5,3.5,0], [0,0,0], [0,-1,0], [8,-1,0] ],\n  'Y': [ [3.5,-1,0], [3.5,3.5,0], [0,7,0], [3.5,3.5,0], [7,7,0], [3.5,3.5,0], [3.5,-1,0], [8,-1,0] ],\n  'Z': [ [0,0,0], [7,0,0], [0,0,0], [7,7,0], [0,7,0], [7,7,0], [0,0,0], [0,-1,0], [8,-1,0] ],\n  '0': [ [3.5,-1,0], [3.5,0,0], [6,3.5,2], [3.5,7,1], [1,3.5,4], [3.5,0,3], [3.5,-1,0], [8,-1,0] ],\n  '1': [ [0,-1,0], [0,0,0], [0,0,0], [7,0,0], [3.5,0,0], [3.5,7,0], [1.5,6,2], [3.5,7,2], [3.5,0,0], [0,0,0], [0,-1,0], [8,-1,0] ],\n  '2': [ [1,-1,0], [1,0,0], [6,5.25,0], [3.5,7,1], [1,5.25,4], [3.5,7,4], [6,5.25,1], [1,0,0], [6,0,0], [1,0,0], [1,-1,0], [8,-1,0] ],\n  '3': [ [3.5,-1,0], [3.5,0,0], [1,1.75,3], [3.5,0,3], [6,1.75,2], [3.5,3.5,1], [6,5.25,2], [3.5,7,1], [1,5.25,4], [3.5,7,4], [6,5.25,1], [3.5,3.5,2], [6,1.75,1], [3.5,0,2], [3.5,-1,0], [8,-1,0] ],\n  '4': [ [3.5,-1,0], [3.5,0,0], [3.5,7,0], [1,3.5,0], [6,3.5,0], [3.5,3.5,0], [3.5,-1,0], [8,-1,0] ],\n  '5': [ [3.5,-1,0], [3.5,0,0], [1,1.75,3], [3.5,0,3], [6,1.75,2], [3.5,3.5,1],[1,3.5,0], [1,7,0], [6,7,0], [1,7,0], [1,3.5,0], [3.5,3.5,0], [6,1.75,1], [3.5,0,2], [3.5,-1,0], [8,-1,0] ],\n  '6': [ [3.5,-1,0], [3.5,0,0], [1,1.75,3], [5.25,7,4], [1,1.75,4], [3.5,0,3],[6,1.75,2], [3.5,3.5,1], [1,1.75,4], [3.5,0,3], [3.5,-1,0], [8,-1,0] ],\n  '7': [ [3.5,-1,0], [3.5,0,0], [6,7,0], [1,7,0], [6,7,0], [3.5,0,0], [3.5,-1,0], [8,-1,0] ],\n  '8': [ [3.5,-1,0], [3.5,0,0], [1,1.75,3], [6,5.25,0], [3.5,7,1], [1,5.25,4], [6,1.75,0], [3.5,0,2], [3.5,-1,0], [8,-1,0] ],\n  '9': [ [3.5,-1,0], [3.5,0,0], [6,5.25,2], [3.5,7,1], [1,5.25,4], [3.5,3.5,3], [6,5.25,2], [3.5,0,2], [3.5,-1,0], [8,-1,0] ],\n  '$': [ [3.5,-1,0], [3.5,0.5,0], [0,2.00,3], [3.5,0.5,3], [7,2.00,2], [3.5,3.5,1], [0,5.00,3], [3.5,6.5,4], [7,5.00,1], [3.5,6.5,1], [3.5, 7, 0], [3.5, 0, 0], [3.5,-1,0], [8,-1,0] ],\n  '.': [ [3.5,-1,0], [3.5,0.5,0], [3,1,3], [3.5,1.5,4], [4,1,1], [3.5,0.5,2], [3.5,-1,0], [8,-1,0] ],\n};\n\n// This is a clever way to create a range from 0..32, and then compute an x,y for each of those\n// points on the unit circle from zero to pi/2.\nconst curve = [...Array(32).keys()].map((index) => {\n  let angle = (index+1) * Math.PI/2.0/32.0;\n  return Vertex(Math.cos(angle), Math.sin(angle));\n});\n\nconst billseyConverter = (vertices) => {\n  let newVertices = [];\n  let prevPoint = Vertex(0,0);\n  vertices.forEach( (vertex) => {\n    switch (vertex[2]) {\n    case 0:\n    default:\n      newVertices.push(Vertex(vertex[0] / 8.0, vertex[1] / 4.0));\n      break;\n    case 1: // NE\n      if (vertex[1] < prevPoint[1]) { // clockwise\n        let width = Math.abs(vertex[0] - prevPoint[0]) / 8.0;\n        let height = Math.abs(vertex[1] - prevPoint[1]) / 4.0;\n        newVertices = newVertices.concat(curve.map( cv => Vertex(cv.x * width + prevPoint[0] / 8.0, cv.y * height + vertex[1] / 4.0)).reverse());\n      } else { // ccwise\n        let width = Math.abs(vertex[0] - prevPoint[0]) / 8.0;\n        let height = Math.abs(vertex[1] - prevPoint[1]) / 4.0;\n        newVertices = newVertices.concat(curve.map( cv => Vertex(cv.x * width + vertex[0] / 8.0, cv.y * height + prevPoint[1] / 4.0)));\n      }\n      newVertices.push(Vertex(vertex[0] / 8.0, vertex[1] / 4.0));\n      break;\n    case 2: // SE\n      if (vertex[1] < prevPoint[1]) { // clockwise\n        let width = Math.abs(vertex[0] - prevPoint[0]) / 8.0;\n        let height = -Math.abs(vertex[1] - prevPoint[1]) / 4.0;\n        newVertices = newVertices.concat(curve.map( cv => Vertex(cv.x * width + vertex[0] / 8.0, cv.y * height + prevPoint[1] / 4.0)));\n      } else { // ccwise\n        let width = Math.abs(vertex[0] - prevPoint[0]) / 8.0;\n        let height = -Math.abs(vertex[1] - prevPoint[1]) / 4.0;\n        newVertices = newVertices.concat(curve.map( cv => Vertex(cv.x * width + prevPoint[0] / 8.0, cv.y * height + vertex[1] / 4.0)).reverse());\n      }\n      newVertices.push(Vertex(vertex[0] / 8.0, vertex[1] / 4.0));\n      break;\n    case 3: // SW\n      if (vertex[1] > prevPoint[1]) { // clockwise\n        let width = -Math.abs(vertex[0] - prevPoint[0]) / 8.0;\n        let height = -Math.abs(vertex[1] - prevPoint[1]) / 4.0;\n        newVertices = newVertices.concat(curve.map( cv => Vertex(cv.x * width + prevPoint[0] / 8.0, cv.y * height + vertex[1] / 4.0)).reverse());\n      } else { // ccwise\n        let width = -Math.abs(vertex[0] - prevPoint[0]) / 8.0;\n        let height = -Math.abs(vertex[1] - prevPoint[1]) / 4.0;\n        newVertices = newVertices.concat(curve.map( cv => Vertex(cv.x * width + vertex[0] / 8.0, cv.y * height + prevPoint[1] / 4.0)));\n      }\n      newVertices.push(Vertex(vertex[0] / 8.0, vertex[1] / 4.0));\n      break;\n    case 4: // NW\n      if (vertex[1] > prevPoint[1]) { // clockwise\n        let width = -Math.abs(vertex[0] - prevPoint[0]) / 8.0;\n        let height = Math.abs(vertex[1] - prevPoint[1]) / 4.0;\n        newVertices = newVertices.concat(curve.map( cv => Vertex(cv.x * width + vertex[0] / 8.0, cv.y * height + prevPoint[1] / 4.0)));\n      } else { // ccwise\n        let width = -Math.abs(vertex[0] - prevPoint[0]) / 8.0;\n        let height = Math.abs(vertex[1] - prevPoint[1]) / 4.0;\n        newVertices = newVertices.concat(curve.map( cv => Vertex(cv.x * width + prevPoint[0] / 8.0, cv.y * height + vertex[1] / 4.0)).reverse());\n      }\n      newVertices.push(Vertex(vertex[0] / 8.0, vertex[1] / 4.0));\n      break;\n    }\n    prevPoint = vertex;\n  });\n\n  return {\n    max_x: fontSpacing,\n    vertices: newVertices,\n  };\n}\n\nconst raysolConverter = (vertices) => {\n  let newVertices = [];\n  vertices.forEach( (vertex) => {\n    newVertices.push(Vertex(vertex[0], vertex[1]));\n  });\n\n  return {\n    max_x: fontSpacing,\n    vertices: newVertices,\n  };\n}\n\nexport const MonospaceFont = (ch) => {\n  let upper = ch.toUpperCase();\n  if (billsey.hasOwnProperty(upper)) {\n    return billseyConverter(billsey[upper]);\n  } else {\n    return billseyConverter(billsey[' ']);\n  }\n}\n\nexport const CursiveFont = (ch) => {\n  if (raysol_cursive.hasOwnProperty(ch)) {\n    return raysolConverter(raysol_cursive[ch]);\n  } else {\n    return raysolConverter(raysol_cursive[' ']);\n  }\n}\n\nexport const SansSerifFont = (ch) => {\n  if (raysol_cursive.hasOwnProperty(ch)) {\n    return raysolConverter(raysol_sanserif[ch]);\n  } else {\n    return raysolConverter(raysol_sanserif[' ']);\n  }\n}\n","import { Vertex } from '../Geometry';\n\nlet Vicious1Vertices = () => {\n  return [\n    Vertex(-0.745613252629, 0.342139688058),\n    Vertex(-0.722681883112, 0.350763810109),\n    Vertex(-0.700286039815, 0.359363989838),\n    Vertex(-0.683380317501, 0.365945196632),\n    Vertex(-0.666520036737, 0.372640251609),\n    Vertex(-0.649705686141, 0.379449643388),\n    Vertex(-0.632937754332, 0.386372394731),\n    Vertex(-0.61621672993, 0.393408994259),\n    Vertex(-0.59954407879, 0.400558464732),\n    Vertex(-0.582920289531, 0.40782080615),\n    Vertex(-0.566345850773, 0.415195529896),\n    Vertex(-0.549821739752, 0.42268214735),\n    Vertex(-0.533348933706, 0.430280658513),\n    Vertex(-0.516927921255, 0.437990574764),\n    Vertex(-0.500559191017, 0.445811896105),\n    Vertex(-0.484244208848, 0.453743645298),\n    Vertex(-0.467982974749, 0.461785822342),\n    Vertex(-0.451776954575, 0.46993793862),\n    Vertex(-0.435626636946, 0.478199505511),\n    Vertex(-0.417042020391, 0.487809171708),\n    Vertex(-0.398529230801, 0.497557117029),\n    Vertex(-0.380089734033, 0.507441875618),\n    Vertex(-0.361724018706, 0.517463936093),\n    Vertex(-0.343433550675, 0.527621343979),\n    Vertex(-0.325218818561, 0.537915076515),\n    Vertex(-0.307080799601, 0.548343667842),\n    Vertex(-0.289020959651, 0.558906629343),\n    Vertex(-0.271040275948, 0.569603472399),\n    Vertex(-0.253139237112, 0.580433708391),\n    Vertex(-0.235319797618, 0.591396360082),\n    Vertex(-0.217581468846, 0.60249142747),\n    Vertex(-0.199926693892, 0.61371793332),\n    Vertex(-0.182355472755, 0.625075389011),\n    Vertex(-0.164869271291, 0.636562817306),\n    Vertex(-0.147469066739, 0.648180218206),\n    Vertex(-0.130155347716, 0.659926125854),\n    Vertex(-0.112929580079, 0.671800540249),\n    Vertex(-0.0957922524482, 0.683802484155),\n    Vertex(-0.0787448306786, 0.695931957571),\n    Vertex(-0.0617878033894, 0.708187006022),\n    Vertex(-0.0449226364371, 0.720568118127),\n    Vertex(-0.0281493298216, 0.733074316648),\n    Vertex(-0.0114698380183, 0.745704624347),\n    Vertex(0.00511535035415, 0.758458552606),\n    Vertex(0.021605258058, 0.771335124187),\n    Vertex(0.0379993964745, 0.78433433909),\n    Vertex(0.0542962997473, 0.79745424284),\n    Vertex(0.0689143087782, 0.809362371934),\n    Vertex(0.0834609794625, 0.821357963795),\n    Vertex(0.0979358231812, 0.833440041186),\n    Vertex(0.112337862697, 0.845608604107),\n    Vertex(0.12666660939, 0.857863652558),\n    Vertex(0.140921574643, 0.870203720682),\n    Vertex(0.155102758455, 0.882629297099),\n    Vertex(0.169209183589, 0.895138915952),\n    Vertex(0.181539967956, 0.906207597924),\n    Vertex(0.193955771996, 0.91718051061),\n    Vertex(0.206455618473, 0.928057165389),\n    Vertex(0.219038530147, 0.938837562262),\n    Vertex(0.22146207946, 0.940840899396),\n    Vertex(0.223916411758, 0.942806124262),\n    Vertex(0.226401527041, 0.944732748242),\n    Vertex(0.228916936691, 0.946620282717),\n    Vertex(0.230887047745, 0.948104706671),\n    Vertex(0.232926054052, 0.949493361338),\n    Vertex(0.235029069424, 0.950783803623),\n    Vertex(0.237191207672, 0.951972124576),\n    Vertex(0.239407582608, 0.953055881104),\n    Vertex(0.241672819425, 0.954032630111),\n    Vertex(0.243982520555, 0.954900417123),\n    Vertex(0.246330822571, 0.955656799046),\n    Vertex(0.248847209458, 0.956426373676),\n    Vertex(0.251395845187, 0.957082100124),\n    Vertex(0.253971354951, 0.957622512531),\n    Vertex(0.256568363942, 0.958047610898),\n    Vertex(0.259181985973, 0.958355440751),\n    Vertex(0.261806846237, 0.958546002088),\n    Vertex(0.264437081308, 0.958618806291),\n    Vertex(0.267068293617, 0.958573364741),\n    Vertex(0.269695108356, 0.958410166058),\n    Vertex(0.2723116621, 0.95812921024),\n    Vertex(0.274913068661, 0.957731474526),\n    Vertex(0.277493953231, 0.957217447535),\n    Vertex(0.280048941005, 0.956588595122),\n    Vertex(0.282573634412, 0.955845405908),\n    Vertex(0.285062170027, 0.954989834366),\n    Vertex(0.287510150281, 0.954023834973),\n    Vertex(0.289695253613, 0.953107674698),\n    Vertex(0.291880845564, 0.952108937844),\n    Vertex(0.301388879047, 0.947138218659),\n    Vertex(0.310845118937, 0.942069775711),\n    Vertex(0.320249076614, 0.936904097619),\n    Vertex(0.329599286221, 0.931642650239),\n    Vertex(0.363485000908, 0.912453612212),\n    Vertex(0.397329182996, 0.8931922586),\n    Vertex(0.431132321104, 0.873858589404),\n    Vertex(0.464893926612, 0.854453093243),\n    Vertex(0.498613999522, 0.834975281497),\n    Vertex(0.532292539832, 0.815425642786),\n    Vertex(0.565929058925, 0.795804177109),\n    Vertex(0.599524045418, 0.776110884466),\n    Vertex(0.614195802519, 0.767461354237),\n    Vertex(0.628780096852, 0.758665238364),\n    Vertex(0.643274973942, 0.749722536847),\n    Vertex(0.657679456551, 0.740634715542),\n    Vertex(0.663100193664, 0.737124966608),\n    Vertex(0.668459853424, 0.733522380099),\n    Vertex(0.673756481358, 0.729827933253),\n    Vertex(0.678988611609, 0.72604211469),\n    Vertex(0.681833350338, 0.72394251965),\n    Vertex(0.684601864533, 0.721743246372),\n    Vertex(0.687290245243, 0.719446737951),\n    Vertex(0.689896049373, 0.717056903336),\n    Vertex(0.692415367973, 0.714576674241),\n    Vertex(0.694845269331, 0.71200800514),\n    Vertex(0.697182821733, 0.709355293604),\n    Vertex(0.699425093466, 0.706621471345),\n    Vertex(0.70031242523, 0.705263599663),\n    Vertex(0.70110301047, 0.703846605105),\n    Vertex(0.701792940234, 0.702378794191),\n    Vertex(0.702378794191, 0.700866030346),\n    Vertex(0.702858129247, 0.699316131471),\n    Vertex(0.703228502307, 0.697736426848),\n    Vertex(0.703487470278, 0.696135222997),\n    Vertex(0.703634544541, 0.694519360583),\n    Vertex(0.703808492838, 0.692484263226),\n    Vertex(0.704005894839, 0.688243540547),\n    Vertex(0.704113390977, 0.683999886156),\n    Vertex(0.704130981255, 0.679754765908),\n    Vertex(0.704059154289, 0.675510622897),\n    Vertex(0.703896932843, 0.671268434362),\n    Vertex(0.703645294154, 0.667031132015),\n    Vertex(0.703303749604, 0.662799693094),\n    Vertex(0.702872787811, 0.658576560692),\n    Vertex(0.701225165173, 0.648144060414),\n    Vertex(0.699422161753, 0.637737456933),\n    Vertex(0.697463288931, 0.627358704724),\n    Vertex(0.695350012565, 0.617010735501),\n    Vertex(0.693864122754, 0.60962184181),\n    Vertex(0.691242194203, 0.596705692105),\n    Vertex(0.688638833167, 0.58378514483),\n    Vertex(0.686055016884, 0.570860688605),\n    Vertex(0.683489768115, 0.557932812049),\n    Vertex(0.679173798139, 0.53578860744),\n    Vertex(0.675031287842, 0.513610688133),\n    Vertex(0.671063214461, 0.491401008603),\n    Vertex(0.667269089377, 0.469161523326),\n    Vertex(0.663649889828, 0.446892232301),\n    Vertex(0.660205127196, 0.424595578622),\n    Vertex(0.65693480148, 0.402273028147),\n    Vertex(0.653839889918, 0.379925069493),\n    Vertex(0.65092039251, 0.357553168517),\n    Vertex(0.648176309256, 0.335159768314),\n    Vertex(0.645608128774, 0.312745357501),\n    Vertex(0.643215362447, 0.290311401936),\n    Vertex(0.641387928086, 0.272862824121),\n    Vertex(0.640313455316, 0.262524627274),\n    Vertex(0.639318138793, 0.252178123907),\n    Vertex(0.638402467138, 0.241824779876),\n    Vertex(0.637566440349, 0.231464595183),\n    Vertex(0.636809569807, 0.221098058444),\n    Vertex(0.636132344132, 0.210726146899),\n    Vertex(0.635534763324, 0.200349349165),\n    Vertex(0.635016338763, 0.189968153863),\n    Vertex(0.634136336281, 0.166283334136),\n    Vertex(0.633371647838, 0.14259411684),\n    Vertex(0.632722273436, 0.118901479213),\n    Vertex(0.632187724454, 0.0952059098725),\n    Vertex(0.631768489513, 0.0715078974381),\n    Vertex(0.631464568611, 0.0478084191472),\n    Vertex(0.63127547313, 0.0241079636186),\n    Vertex(0.631201691689, 0.000406530852484),\n    Vertex(0.631270098323, -0.0222394852774),\n    Vertex(0.631441114908, -0.0448845241697),\n    Vertex(0.631715230062, -0.0675285858243),\n    Vertex(0.632092443786, -0.0901711816225),\n    Vertex(0.63257226746, -0.112811822945),\n    Vertex(0.633154701085, -0.135450021174),\n    Vertex(0.63384023328, -0.158085776309),\n    Vertex(0.634628864044, -0.180717622493),\n    Vertex(0.635306089719, -0.195449968327),\n    Vertex(0.636126969325, -0.210174984878),\n    Vertex(0.637091014243, -0.22489120629),\n    Vertex(0.638198713093, -0.239597655326),\n    Vertex(0.639449577254, -0.254292377511),\n    Vertex(0.640843606728, -0.268974395606),\n    Vertex(0.642380801514, -0.283642243756),\n    Vertex(0.644060672993, -0.298293967485),\n    Vertex(0.64612020129, -0.31581290641),\n    Vertex(0.6482320118, -0.333325493289),\n    Vertex(0.65039757038, -0.350831239505),\n    Vertex(0.652615411173, -0.368331122296),\n    Vertex(0.654741880247, -0.384873800832),\n    Vertex(0.656970959272, -0.401402798041),\n    Vertex(0.659303625486, -0.417918113923),\n    Vertex(0.661739390269, -0.434418282622),\n    Vertex(0.664278253622, -0.450902815519),\n    Vertex(0.666919726926, -0.467371223995),\n    Vertex(0.66966381018, -0.483822530812),\n    Vertex(0.672510992004, -0.500256735972),\n    Vertex(0.675460295159, -0.516672862235),\n    Vertex(0.678512696885, -0.533069932364),\n    Vertex(0.681666731323, -0.54944794636),\n    Vertex(0.684923375712, -0.565805926984),\n    Vertex(0.688253801542, -0.582478578124),\n    Vertex(0.691624294115, -0.599143411363),\n    Vertex(0.695033876193, -0.615799938082),\n    Vertex(0.698483036394, -0.632448158282),\n    Vertex(0.700362264349, -0.641257466863),\n    Vertex(0.702110053844, -0.650093649478),\n    Vertex(0.703725916259, -0.658955240272),\n    Vertex(0.705209362975, -0.667839796151),\n    Vertex(0.705560191283, -0.670609776202),\n    Vertex(0.705811829972, -0.673129583421),\n    Vertex(0.705988709982, -0.675296119238),\n    Vertex(0.706054184903, -0.677469495719),\n    Vertex(0.706007766116, -0.679642872199),\n    Vertex(0.70584945362, -0.681811362492),\n    Vertex(0.705579736035, -0.683968614552),\n    Vertex(0.705199590599, -0.686109253572),\n    Vertex(0.704709505929, -0.688227904745),\n    Vertex(0.704111436502, -0.690317727409),\n    Vertex(0.702891355326, -0.694066410943),\n    Vertex(0.701505632372, -0.697756460219),\n    Vertex(0.699955733497, -0.701380545956),\n    Vertex(0.698245567651, -0.704932316108),\n    Vertex(0.696378555166, -0.708403464156),\n    Vertex(0.694358116374, -0.711788126674),\n    Vertex(0.692188648844, -0.715079462999),\n    Vertex(0.689874061527, -0.718270143849),\n    Vertex(0.688711148751, -0.719521985248),\n    Vertex(0.687505237521, -0.720732294048),\n    Vertex(0.686256816453, -0.721899115774),\n    Vertex(0.684968817262, -0.723021473187),\n    Vertex(0.683641728566, -0.724097900432),\n    Vertex(0.68227750484, -0.725126443034),\n    Vertex(0.68087761194, -0.726106612373),\n    Vertex(0.679444492961, -0.727036942593),\n    Vertex(0.669607619016, -0.733287843069),\n    Vertex(0.659707713245, -0.739438576688),\n    Vertex(0.649746730121, -0.745489632069),\n    Vertex(0.639724669646, -0.751439054737),\n    Vertex(0.626066307964, -0.75960143201),\n    Vertex(0.588245257356, -0.781929357292),\n    Vertex(0.550379253818, -0.804180569421),\n    Vertex(0.512467808729, -0.826354091159),\n    Vertex(0.474510922092, -0.848449922505),\n    Vertex(0.436509082523, -0.87046806346),\n    Vertex(0.398462290023, -0.892408514024),\n    Vertex(0.360370544593, -0.914271274197),\n    Vertex(0.322234334851, -0.936056343978),\n    Vertex(0.311636192795, -0.942000391839),\n    Vertex(0.303639945919, -0.946411153865),\n    Vertex(0.301535464691, -0.947610713051),\n    Vertex(0.299393848434, -0.94874333146),\n    Vertex(0.29721754024, -0.949807054616),\n    Vertex(0.295008494586, -0.9508013939),\n    Vertex(0.292769154566, -0.951725372076),\n    Vertex(0.290501474654, -0.952577523286),\n    Vertex(0.288207897946, -0.95335784753),\n    Vertex(0.285890867534, -0.954064878953),\n    Vertex(0.282197886545, -0.955003515693),\n    Vertex(0.278465327432, -0.955768692754),\n    Vertex(0.274700519477, -0.956358455661),\n    Vertex(0.270912257819, -0.956772315796),\n    Vertex(0.267109337597, -0.957008318683),\n    Vertex(0.263299088092, -0.957066464322),\n    Vertex(0.259490304444, -0.956946752712),\n    Vertex(0.255691781792, -0.956649183855),\n    Vertex(0.251910849416, -0.956174246369),\n    Vertex(0.248156302456, -0.95552340611),\n    Vertex(0.244436447432, -0.954697640316),\n    Vertex(0.240758613626, -0.953699392081),\n    Vertex(0.240319833932, -0.953534238922),\n    Vertex(0.238502171947, -0.952568728147),\n    Vertex(0.236709918141, -0.951555821348),\n    Vertex(0.234945026988, -0.950496007142),\n    Vertex(0.233208964345, -0.949390262768),\n    Vertex(0.23150270745, -0.948239076844),\n    Vertex(0.22982723354, -0.94704293799),\n    Vertex(0.228184008471, -0.945803312061),\n    Vertex(0.226574009482, -0.944520687677),\n    Vertex(0.224074235635, -0.942570121375),\n    Vertex(0.212583875626, -0.933021043911),\n    Vertex(0.201218113415, -0.923323914947),\n    Vertex(0.189977926239, -0.913481666195),\n    Vertex(0.178866245811, -0.903494297655),\n    Vertex(0.161323853183, -0.887790577622),\n    Vertex(0.143655885521, -0.872228557044),\n    Vertex(0.125862831443, -0.856809213159),\n    Vertex(0.107946156805, -0.841533523206),\n    Vertex(0.0899073274635, -0.82640295304),\n    Vertex(0.0717468320377, -0.811418479899),\n    Vertex(0.0534666250026, -0.796580103784),\n    Vertex(0.0350671949772, -0.781890267787),\n    Vertex(0.0165500078179, -0.767348483291),\n    Vertex(-0.00208395923779, -0.752956704771),\n    Vertex(-0.0208327517145, -0.738715420845),\n    Vertex(-0.0396958809936, -0.724625608751),\n    Vertex(-0.0586718812184, -0.710688245726),\n    Vertex(-0.0777597751514, -0.69690382039),\n    Vertex(-0.0969580969362, -0.683274287218),\n    Vertex(-0.116265380716, -0.66979964621),\n    Vertex(-0.135680649254, -0.656480874603),\n    Vertex(-0.155202436693, -0.643318949635),\n    Vertex(-0.174829765796, -0.630314359925),\n    Vertex(-0.194561170706, -0.617469059948),\n    Vertex(-0.214395674185, -0.604782561085),\n    Vertex(-0.234331321759, -0.592256329193),\n    Vertex(-0.254367624808, -0.579891341509),\n    Vertex(-0.274502628858, -0.567688086652),\n    Vertex(-0.29394086248, -0.556123456584),\n    Vertex(-0.313469979201, -0.54471371868),\n    Vertex(-0.333088513165, -0.533458384321),\n    Vertex(-0.352795975753, -0.522359407981),\n    Vertex(-0.372590901108, -0.511416789662),\n    Vertex(-0.392471334756, -0.500631017982),\n    Vertex(-0.412437276696, -0.490003070179),\n    Vertex(-0.432486283835, -0.47953392349),\n    Vertex(-0.452617867553, -0.469224066534),\n    Vertex(-0.472830073375, -0.459073499311),\n    Vertex(-0.493122412682, -0.449083687678),\n    Vertex(-0.513493419618, -0.439255120252),\n    Vertex(-0.533941628327, -0.429588285654),\n    Vertex(-0.554465572951, -0.420083183884),\n    Vertex(-0.575064276254, -0.410741769415),\n    Vertex(-0.595736272379, -0.401563065011),\n    Vertex(-0.61648009547, -0.392549025148),\n    Vertex(-0.637294768288, -0.383699161205),\n    Vertex(-0.658179313597, -0.37501493904),\n    Vertex(-0.679131776921, -0.366496358653),\n    Vertex(-0.698898362385, -0.3585812225),\n    Vertex(-0.718729934152, -0.350830262268),\n    Vertex(-0.738624537745, -0.34324250072),\n    Vertex(-0.758581195928, -0.33581989233),\n    Vertex(-0.778598442844, -0.32856194848),\n    Vertex(-0.798674812635, -0.32146915779),\n    Vertex(-0.818809328066, -0.314542497496),\n    Vertex(-0.83900003466, -0.307782456217),\n    Vertex(-0.849647527216, -0.304229708827),\n    Vertex(-0.859482935305, -0.301024369413),\n    Vertex(-0.86930319621, -0.297772122593),\n    Vertex(-0.879107821313, -0.294472968367),\n    Vertex(-0.888896810615, -0.291126906735),\n    Vertex(-0.898669186876, -0.287733937697),\n    Vertex(-0.908425927336, -0.284294061253),\n    Vertex(-0.918165566137, -0.28080825464),\n    Vertex(-0.927888591898, -0.277275540622),\n    Vertex(-0.931015263683, -0.276110673371),\n    Vertex(-0.934077437785, -0.27478553915),\n    Vertex(-0.937066807683, -0.273304046909),\n    Vertex(-0.939975066859, -0.271669128361),\n    Vertex(-0.942794886029, -0.269885669693),\n    Vertex(-0.945518447293, -0.267958557094),\n    Vertex(-0.948138909988, -0.265892676752),\n    Vertex(-0.950648456212, -0.263693892093),\n    Vertex(-0.953040245302, -0.261368066543),\n    Vertex(-0.955308902451, -0.258921063527),\n    Vertex(-0.957447586996, -0.256360212328),\n    Vertex(-0.959450435511, -0.25369186499),\n    Vertex(-0.961260768213, -0.251131991028),\n    Vertex(-0.962993410524, -0.248518368997),\n    Vertex(-0.96464591935, -0.245853930609),\n    Vertex(-0.966217317453, -0.24314063034),\n    Vertex(-0.972878657732, -0.231316055063),\n    Vertex(-0.972926053757, -0.0130031238537),\n    Vertex(-0.972925565138, 0.00628803550555),\n    Vertex(-0.97291628138, 0.0249869888634),\n    Vertex(-0.972898202484, 0.0430570898088),\n    Vertex(-0.972858135742, 0.0776097691758),\n    Vertex(-0.972741844464, 0.112162448543),\n    Vertex(-0.972548351414, 0.146714639291),\n    Vertex(-0.972277656592, 0.181266341421),\n    Vertex(-0.972203875151, 0.189501034277),\n    Vertex(-0.972085629398, 0.197735727134),\n    Vertex(-0.971922919333, 0.205968954135),\n    Vertex(-0.971715256338, 0.214201692516),\n    Vertex(-0.971568670694, 0.217132916776),\n    Vertex(-0.971310679961, 0.220056811754),\n    Vertex(-0.970942749994, 0.222968491261),\n    Vertex(-0.970464880795, 0.225864534966),\n    Vertex(-0.969878049601, 0.228740056681),\n    Vertex(-0.96918274503, 0.231591636074),\n    Vertex(-0.968380432939, 0.234414875576),\n    Vertex(-0.967472090565, 0.237205866236),\n    Vertex(-0.966500716365, 0.23992551855),\n    Vertex(-0.965406210223, 0.242597774839),\n    Vertex(-0.964191015235, 0.245217260296),\n    Vertex(-0.962857085875, 0.247778600114),\n    Vertex(-0.961408331095, 0.250276908105),\n    Vertex(-0.959846705368, 0.252705832225),\n    Vertex(-0.958176117646, 0.255061463523),\n    Vertex(-0.956399499642, 0.257337938573),\n    Vertex(-0.954520760305, 0.259531348425),\n    Vertex(-0.952544297207, 0.261636318272),\n    Vertex(-0.950473530677, 0.263649427781),\n    Vertex(-0.948313346904, 0.265565790766),\n    Vertex(-0.946067654839, 0.267381009657),\n    Vertex(-0.94374134067, 0.269092641359),\n    Vertex(-0.941339779204, 0.270695799685),\n    Vertex(-0.93886736801, 0.27218804154),\n    Vertex(-0.936329481894, 0.273565946593),\n    Vertex(-0.933731007046, 0.274826094512),\n    Vertex(-0.93107829551, 0.27596701944),\n    Vertex(-0.928375744855, 0.276985301047),\n    Vertex(-0.913861323012, 0.282438287001),\n    Vertex(-0.899294130338, 0.287750550737),\n    Vertex(-0.884676121307, 0.292920137779),\n    Vertex(-0.870008761776, 0.297948025366),\n    Vertex(-0.854391527272, 0.303278856616),\n    Vertex(-0.838793348902, 0.308665390412),\n    Vertex(-0.823214226666, 0.314107138133),\n    Vertex(-0.807654649182, 0.319603611161),\n    Vertex(-0.792114127832, 0.325155298116),\n    Vertex(-0.776593639853, 0.330761710377),\n    Vertex(-0.761093185246, 0.336423336564),\n    Vertex(-0.745613252629, 0.342139688058),\n  ];\n}\n\nexport default Vicious1Vertices;\n","import React, { Component } from 'react';\nimport {\n  Col,\n  ControlLabel,\n  Form,\n  FormControl,\n  FormGroup,\n  ListGroup,\n  ListGroupItem,\n  Panel,\n  MenuItem,\n  DropdownButton\n} from 'react-bootstrap'\nimport './Transforms.css'\nimport { connect } from 'react-redux';\n\nimport { Polygon } from '../shapes/Polygon.js';\nimport { Star } from '../shapes/Star.js';\nimport { Circle } from '../shapes/Circle.js';\nimport { Heart } from '../shapes/Heart.js';\nimport { Reuleaux } from '../shapes/Reuleaux.js';\nimport { Epicycloid } from '../shapes/Epicycloid.js';\nimport { Hypocycloid } from '../shapes/Hypocycloid.js';\nimport { Rose } from '../shapes/Rose.js';\nimport { InputText } from '../shapes/InputText.js';\nimport { V1Engineering } from '../shapes/V1Engineering.js';\n\nexport const registeredShapes = [Polygon, Star, Circle, Heart, Reuleaux, Epicycloid,\n  Hypocycloid, Rose, InputText, V1Engineering];\n\n// Transform actions\nexport const addShape = ( shape ) => {\n  return {\n    type: 'ADD_SHAPE',\n    shape: shape,\n  };\n}\nexport const setShape = ( shape ) => {\n  return {\n    type: 'SET_SHAPE',\n    value: shape,\n  };\n}\n\nexport const setShapeSize = ( size ) => {\n  return {\n    type: 'SET_SHAPE_SIZE',\n    value: size,\n  };\n}\n\nexport const setXFormOffsetX = ( offset ) => {\n  return {\n    type: 'SET_SHAPE_OFFSET_X',\n    value: parseFloat(offset),\n  };\n}\n\nexport const setXFormOffsetY = ( offset ) => {\n  return {\n    type: 'SET_SHAPE_OFFSET_Y',\n    value: parseFloat(offset),\n  };\n}\n\nexport const setLoops = ( loops ) => {\n  return {\n    type: 'SET_LOOPS',\n    value: loops,\n  };\n}\n\nexport const toggleSpin = ( ) => {\n  return {\n    type: 'TOGGLE_SPIN',\n  };\n}\n\nexport const setSpin = ( value ) => {\n  return {\n    type: 'SET_SPIN',\n    value: parseFloat(value),\n  };\n}\n\nexport const setSpinSwitchbacks = ( value ) => {\n  return {\n    type: 'SET_SPIN_SWITCHBACKS',\n    value: parseInt(value),\n  };\n}\n\nexport const toggleGrow = ( ) => {\n  return {\n    type: 'TOGGLE_GROW',\n  };\n}\n\nexport const setGrow = ( value ) => {\n  return {\n    type: 'SET_GROW',\n    value: value,\n  };\n}\n\nexport const toggleTrack = ( ) => {\n  return {\n    type: 'TOGGLE_TRACK',\n  };\n}\n\nexport const toggleTrackGrow = ( ) => {\n  return {\n    type: 'TOGGLE_TRACK_GROW',\n  };\n}\n\nexport const setTrack = ( value ) => {\n  return {\n    type: 'SET_TRACK',\n    value: value,\n  };\n}\n\nexport const setTrackLength = ( value ) => {\n  return {\n    type: 'SET_TRACK_LENGTH',\n    value: value,\n  };\n}\n\nexport const setTrackGrow = ( value ) => {\n  return {\n    type: 'SET_TRACK_GROW',\n    value: value,\n  };\n}\n\nconst disableEnter = (event) => {\n  if (event.key === 'Enter' && event.shiftKey === false) {\n    event.preventDefault();\n  }\n};\n\nclass Shape extends Component {\n  render() {\n    var activeClassName = \"\";\n    if (this.props.active) {\n      activeClassName = \"active\";\n    }\n\n    var options_render = this.props.options.map( (option) => {\n      if (option.type && option.type === \"dropdown\") {\n        return <FormGroup controlId=\"options-step\" key={option.title}>\n                 <Col componentClass={ControlLabel} sm={4}>\n                   {option.title}\n                 </Col>\n                 <Col sm={8}>\n                   <DropdownButton bsStyle=\"default\"\n                                   id=\"dropdown-basic-button\"\n                                   title={option.value()}\n                                   onSelect={(event) => {\n                                       option.onChange(event);\n                                   }}\n                                   onKeyDown={disableEnter}>\n                     {option.choices.map((choice) => {\n                         return <MenuItem key={choice} eventKey={choice}>{choice}</MenuItem>;\n                     })}\n                   </DropdownButton>\n                 </Col>\n               </FormGroup>\n      } else {\n        return <FormGroup controlId=\"options-step\" key={option.title}>\n                 <Col componentClass={ControlLabel} sm={4}>\n                   {option.title}\n                 </Col>\n                 <Col sm={8}>\n                   <FormControl\n                     type={option.type ? option.type : \"number\"}\n                     step={option.step ? option.step : 1}\n                     value={option.value()}\n                     onChange={(event) => {\n                       option.onChange(event)\n                     }}\n                     onKeyDown={disableEnter}/>\n                 </Col>\n               </FormGroup>\n      }\n    });\n\n    var options_list_render = undefined;\n    var link_render = undefined;\n\n    if (this.props.link) {\n      link_render = <p>See <a target=\"_blank\" rel=\"noopener noreferrer\" href={this.props.link}>{this.props.link}</a> for ideas</p>;\n    }\n\n    if (this.props.options.length >= 1) {\n      options_list_render =\n        <div className=\"shape-options\">\n          <Panel className=\"options-panel\" collapsible expanded={this.props.active}>\n            <Form horizontal>\n              {link_render}\n              {options_render}\n            </Form>\n          </Panel>\n        </div>\n    }\n\n    return (\n      <div className=\"shape\">\n        <ListGroupItem className={activeClassName} onClick={this.props.clicked}>{this.props.name}</ListGroupItem>\n            {options_list_render}\n      </div>\n    )\n  }\n}\n\nconst shapeListProps = (state, ownProps) => {\n  let props = {\n    shapes: state.shapes.shapes,\n    currentShape: state.shapes.currentShape,\n    startingSize: state.shapes.startingSize,\n    x_offset: state.transform.xformOffsetX,\n    y_offset: state.transform.xformOffsetY,\n  };\n  let registeredProps = registeredShapes.map((shape) => shape.mapStateToProps(state, ownProps));\n\n  return Object.assign(props, ...registeredProps);\n}\n\nconst shapeListDispatch = (dispatch, ownProps) => {\n  let methods = {\n    addShape: (shape) => {\n      dispatch(addShape(shape));\n    },\n    setShape: (name) => {\n      dispatch(setShape(name));\n    },\n    onSizeChange: (event) => {\n      dispatch(setShapeSize(event.target.value));\n    },\n    onOffsetXChange: (event) => {\n      dispatch(setXFormOffsetX(event.target.value));\n    },\n    onOffsetYChange: (event) => {\n      dispatch(setXFormOffsetY(event.target.value));\n    },\n  };\n  let registeredMethods = registeredShapes.map((shape) => shape.mapDispatchToProps(dispatch, ownProps));\n\n  return Object.assign(methods, ...registeredMethods);\n}\n\nclass ShapeList extends Component {\n  constructor(props) {\n    super(props)\n\n    registeredShapes.forEach((shape) => {\n      this.props.addShape(shape.getParams(this));\n    });\n  }\n\n  render() {\n    let self = this;\n\n    var shape_render = this.props.shapes.map( (shape) => {\n      return <Shape\n               key={shape.name}\n               name={shape.name}\n               link={shape.link || \"\"}\n               active={shape.name === self.props.currentShape}\n               options={shape.options}\n               clicked={ () => { self.props.setShape(shape.name); } }\n             />\n    });\n\n    return (\n      <div className=\"shapes\">\n        <ListGroup>\n          {shape_render}\n        </ListGroup>\n        <div className=\"shoptions\">\n          <Panel className=\"options-panel\" collapsible expanded>\n            <Form horizontal>\n              <FormGroup controlId=\"shape-size\">\n                <Col componentClass={ControlLabel} sm={4}>\n                  Starting Size\n                </Col>\n                <Col sm={8}>\n                  <FormControl type=\"number\" value={this.props.startingSize} onChange={this.props.onSizeChange} onKeyDown={disableEnter}/>\n                </Col>\n              </FormGroup>\n              <FormGroup controlId=\"shape-offset\">\n                <Col componentClass={ControlLabel} sm={4}>\n                  Offset\n                </Col>\n                <Col componentClass={ControlLabel} sm={1}>\n                  X\n                </Col>\n                <Col sm={3}>\n                  <FormControl type=\"number\" value={this.props.x_offset} onChange={this.props.onOffsetXChange} onKeyDown={disableEnter}/>\n                </Col>\n                <Col componentClass={ControlLabel} sm={1}>\n                  Y\n                </Col>\n                <Col sm={3}>\n                  <FormControl type=\"number\" value={this.props.y_offset} onChange={this.props.onOffsetYChange} onKeyDown={disableEnter}/>\n                </Col>\n              </FormGroup>\n            </Form>\n          </Panel>\n        </div>\n      </div>\n    )\n  }\n}\n\nShapeList = connect(shapeListProps, shapeListDispatch)(ShapeList) ;\n\nconst rotateProps = (state, ownProps) => {\n  return {\n    active: state.transform.spinEnabled,\n    value: state.transform.spinValue,\n    switchbacks: state.transform.spinSwitchbacks,\n  }\n}\n\nconst rotateDispatch = (dispatch, ownProps) => {\n  return {\n    activeCallback: () => {\n      dispatch(toggleSpin());\n    },\n    onChange: (event) => {\n      dispatch(setSpin(event.target.value));\n    },\n    onSwitchbacksChange: (event) => {\n      dispatch(setSpinSwitchbacks(event.target.value));\n    },\n  }\n}\n\nclass RotationTransform extends Component {\n\n  render() {\n    var activeClassName = \"\";\n    if (this.props.active) {\n      activeClassName = \"active\";\n    }\n\n    return (\n      <div className=\"rotate\">\n        <ListGroupItem header=\"Spin\" className={activeClassName} onClick={this.props.activeCallback}>Spins the input shape a little bit for each copy</ListGroupItem>\n        <div className=\"rotate-options\">\n          <Panel className=\"options-panel\" collapsible expanded={this.props.active}>\n            <Form horizontal>\n              <FormGroup controlId=\"rotate-step\">\n                <Col componentClass={ControlLabel} sm={4}>\n                  Spin Step (Can be Negative)\n                </Col>\n                <Col sm={8}>\n                  <FormControl type=\"number\" step=\"0.1\" value={this.props.value} onChange={this.props.onChange} onKeyDown={disableEnter}/>\n                </Col>\n              </FormGroup>\n              <FormGroup controlId=\"rotate-switchbacks\">\n                <Col componentClass={ControlLabel} sm={4}>\n                  Switchbacks\n                </Col>\n                <Col sm={8}>\n                  <FormControl type=\"number\" step=\"1\" value={this.props.switchbacks} onChange={this.props.onSwitchbacksChange} onKeyDown={disableEnter}/>\n                </Col>\n              </FormGroup>\n            </Form>\n          </Panel>\n        </div>\n      </div>\n    )\n  }\n}\nRotationTransform = connect(rotateProps, rotateDispatch)(RotationTransform) ;\n\n\nconst scaleProps = (state, ownProps) => {\n  return {\n    active: state.transform.growEnabled,\n    value: state.transform.growValue,\n  }\n}\n\nconst scaleDispatch = (dispatch, ownProps) => {\n  return {\n    activeCallback: () => {\n      dispatch(toggleGrow());\n    },\n    onChange: (event) => {\n      dispatch(setGrow(event.target.value));\n    },\n  }\n}\n\nclass ScaleTransform extends Component {\n\n  render() {\n    var activeClassName = \"\";\n    if (this.props.active) {\n      activeClassName = \"active\";\n    }\n\n    return (\n      <div className=\"scale\">\n        <ListGroupItem header=\"Grow\" className={activeClassName} onClick={this.props.activeCallback}>Grows or shrinks the input shape a little bit for each copy</ListGroupItem>\n        <div className=\"scale-options\">\n          <Panel className=\"options-panel\" collapsible expanded={this.props.active}>\n            <Form horizontal>\n              <FormGroup controlId=\"scale-step\">\n                <Col componentClass={ControlLabel} sm={4}>\n                  Grow Step\n                </Col>\n                <Col sm={8}>\n                  <FormControl type=\"number\" value={this.props.value} onChange={this.props.onChange} onKeyDown={disableEnter}/>\n                </Col>\n              </FormGroup>\n            </Form>\n          </Panel>\n        </div>\n      </div>\n    )\n  }\n}\nScaleTransform = connect(scaleProps, scaleDispatch)(ScaleTransform) ;\n\nconst trackProps = (state, ownProps) => {\n  return {\n    active: state.transform.trackEnabled,\n    activeGrow: state.transform.trackGrowEnabled,\n    value: state.transform.trackValue,\n    length: state.transform.trackLength,\n    trackGrow: state.transform.trackGrow,\n  }\n}\n\nconst trackDispatch = (dispatch, ownProps) => {\n  return {\n    activeCallback: () => {\n      dispatch(toggleTrack());\n    },\n    activeGrowCallback: () => {\n      dispatch(toggleTrackGrow());\n    },\n    onChange: (event) => {\n      dispatch(setTrack(event.target.value));\n    },\n    onChangeLength: (event) => {\n      dispatch(setTrackLength(event.target.value));\n    },\n    onChangeGrow: (event) => {\n      dispatch(setTrackGrow(event.target.value));\n    },\n  }\n}\n\nclass TrackTransform extends Component {\n\n  render() {\n    var activeClassName = \"\";\n    if (this.props.active) {\n      activeClassName = \"active\";\n    }\n\n    var activeGrowClassName = \"\";\n    if (this.props.activeGrow) {\n      activeGrowClassName = \"active\";\n    }\n\n    return (\n      <div className=\"track\">\n        <ListGroupItem header=\"Track\" className={activeClassName} onClick={this.props.activeCallback}>Moves the shape along a track (shown in green)</ListGroupItem>\n        <div className=\"track-options\">\n          <Panel className=\"options-panel\" collapsible expanded={this.props.active}>\n            <Form horizontal>\n              <FormGroup controlId=\"track-size\">\n                <Col componentClass={ControlLabel} sm={4}>\n                  Track Size\n                </Col>\n                <Col sm={8}>\n                  <FormControl type=\"number\" value={this.props.value} onChange={this.props.onChange} onKeyDown={disableEnter}/>\n                </Col>\n              </FormGroup>\n              <FormGroup controlId=\"track-length\">\n                <Col componentClass={ControlLabel} sm={4}>\n                  Track Length\n                </Col>\n                <Col sm={8}>\n                  <FormControl type=\"number\" value={this.props.length} step=\"0.05\" onChange={this.props.onChangeLength} onKeyDown={disableEnter}/>\n                </Col>\n              </FormGroup>\n              <ListGroupItem header=\"Grow\" className={activeGrowClassName} onClick={this.props.activeGrowCallback}>Grows or shrinks the track a little bit for each step</ListGroupItem>\n              <div className=\"scale-options\">\n                <Panel className=\"options-panel\" collapsible expanded={this.props.activeGrow}>\n                    <FormGroup controlId=\"scale-step\">\n                      <Col componentClass={ControlLabel} sm={4}>\n                        Track Grow Step\n                      </Col>\n                      <Col sm={8}>\n                        <FormControl type=\"number\" value={this.props.trackGrow} onChange={this.props.onChangeGrow} onKeyDown={disableEnter}/>\n                      </Col>\n                    </FormGroup>\n                </Panel>\n              </div>\n            </Form>\n          </Panel>\n        </div>\n      </div>\n    )\n  }\n}\nTrackTransform = connect(trackProps, trackDispatch)(TrackTransform) ;\n\nconst transformsProps = (state, ownProps) => {\n  return {\n    loops: state.transform.numLoops,\n  }\n}\n\nconst transformsDispatch = (dispatch, ownProps) => {\n  return {\n    changeLoops: (event) => {\n      dispatch(setLoops(event.target.value));\n    },\n  }\n}\n\nclass Transforms extends Component {\n  render() {\n\n    return (\n      <div className=\"transforms\">\n        <Panel className=\"shapes-panel\">\n          <h4>Input Shapes</h4>\n          <ShapeList />\n        </Panel>\n        <Panel className=\"transforms-panel\">\n          <h4>Modifiers</h4>\n          <Panel className=\"options-panel\">\n            <Form horizontal>\n              <FormGroup controlId=\"loop-count\">\n                <Col componentClass={ControlLabel} sm={4}>\n                  Number of Loops\n                </Col>\n                <Col sm={8}>\n                  <FormControl type=\"number\" value={this.props.loops} onChange={this.props.changeLoops} onKeyDown={disableEnter}/>\n                </Col>\n              </FormGroup>\n            </Form>\n          </Panel>\n          <ListGroup>\n            <ScaleTransform\n              />\n            <RotationTransform\n              />\n            <TrackTransform\n              />\n          </ListGroup>\n        </Panel>\n      </div>\n    );\n  }\n}\nTransforms = connect(transformsProps, transformsDispatch)(Transforms);\n\n\nexport default Transforms\n","import { CursiveFont, SansSerifFont, MonospaceFont } from './Fonts';\nimport { Vertex } from '../Geometry';\n\nexport const setShapeInputText = ( text ) => {\n  return {\n    type: 'SET_SHAPE_INPUT_TEXT',\n    value: text,\n  };\n}\n\nexport const setShapeInputFont = ( font ) => {\n  return {\n    type: 'SET_SHAPE_INPUT_FONT',\n    value: font,\n  };\n}\n\nexport class InputText {\n  static mapStateToProps(state, ownProps) {\n    return {\n      inputText: state.shapes.inputText,\n      inputFont: state.shapes.inputFont,\n    }\n  }\n\n  static mapDispatchToProps(dispatch, ownProps) {\n    return {\n      onInputTextChange: (event) => {\n        dispatch(setShapeInputText(event.target.value));\n      },\n      onInputFontChange: (event) => {\n        dispatch(setShapeInputFont(event));\n      },\n    }\n  }\n\n  static getParams(parent) {\n    return {\n      name: \"Text\",\n      vertices: (state) => {\n        let points = [];\n        let prevLetter = \"\";\n        let x = 0.0;\n        for (let chi = 0; chi < state.shapes.inputText.length; chi++) {\n          var letter = state.shapes.inputText[chi];\n          if (prevLetter === 'b' || prevLetter === 'v' || prevLetter === \"o\" || prevLetter === 'w') {\n            prevLetter = letter\n            if (letter.search('/[a-z]/') === -1 && state.shapes.inputFont === 'Cursive')\n            {\n              letter = letter + \"*\";\n            }\n          }\n          else {\n            prevLetter = letter\n          }\n\n          var shape;\n          if (state.shapes.inputFont === 'Cursive') {\n            shape = CursiveFont(letter);\n          } else if (state.shapes.inputFont === 'Sans Serif') {\n            shape = SansSerifFont(letter);\n          } else if (state.shapes.inputFont === 'Monospace') {\n            shape = MonospaceFont(letter);\n          } else {\n            // Internal error, but I'm going to just recover\n            shape = CursiveFont(letter);\n          }\n\n\n          for (let vi = 0; vi < shape.vertices.length; vi++) {\n            points.push(Vertex(shape.vertices[vi].x + x, shape.vertices[vi].y));\n          }\n          x += shape.vertices[shape.vertices.length-1].x;\n        }\n        let widthOffset = x / 2.0;\n        return points.map( (point) => {\n          return Vertex(point.x - widthOffset, point.y);\n        });\n      },\n      options: [\n        {\n          title: \"Text\",\n          type: \"textarea\",\n          key: \"inputText\",\n          value: () => { return parent.props.inputText },\n          onChange: parent.props.onInputTextChange,\n        },\n        {\n          title: \"Font\",\n          type: \"dropdown\",\n          choices: [\"Cursive\", \"Sans Serif\", \"Monospace\"],\n          value: () => { return parent.props.inputFont },\n          onChange: parent.props.onInputFontChange,\n        },\n      ],\n    };\n  }\n\n  static getReducer(state, action) {\n    switch(action.type) {\n      case 'SET_SHAPE_INPUT_TEXT':\n        return {...state,\n          inputText: action.value,\n        };\n\n      case 'SET_SHAPE_INPUT_FONT':\n        return {...state,\n          inputFont: action.value,\n        };\n\n      default:\n        return state;\n    }\n  }\n}\n","import Vicious1Vertices from './Vicious1Vertices';\n\nexport class V1Engineering {\n  static mapStateToProps(state, ownProps) {\n    return {\n\n    }\n  }\n\n  static mapDispatchToProps(dispatch, ownProps) {\n    return {\n\n    }\n  }\n\n  static getParams(parent) {\n    return {\n      name: \"V1Engineering\",\n      vertices: (state) => {\n        return Vicious1Vertices();\n      },\n      options: [],\n    };\n}\n\n  static getReducer(state, action) {\n    switch(action.type) {\n      default:\n        return state;\n    }\n  }\n}\n","import { registeredShapes } from '../inputs/Transforms.js'\nimport reduceReducers from 'reduce-reducers';\n\nconst defaultState = {\n  // Transform settings\n  shapes: [],\n  currentShape: \"Polygon\",\n  polygonSides: 4,\n  starPoints: 5,\n  starRatio: 0.5,\n  circleLobes: 1,\n  reuleauxSides: 3,\n  inputText: \"Sandify\",\n  inputFont: \"Cursive\",\n  startingSize: 10.0,\n  epicycloidA: 1.0,\n  epicycloidB: .25,\n  hypocycloidA: 1.0,\n  hypocycloidB: .25,\n  roseN: 3,\n  roseD: 2\n}\n\nfunction defaultShapes(state = defaultState, action) {\n  switch (action.type) {\n\n    // shape actions\n    case 'ADD_SHAPE':\n      return {...state,\n          shapes: [...state.shapes,\n            action.shape\n          ],\n      };\n\n    case 'SET_SHAPE':\n      return {...state,\n        currentShape: action.value,\n      };\n\n    case 'SET_SHAPE_SIZE':\n      return {...state,\n        startingSize: action.value,\n      };\n\n    case '@@redux/INIT':\n      return state;\n    default:\n      return state;\n  }\n}\n\nexport default reduceReducers(defaultShapes, ...registeredShapes.map((shape) => shape.getReducer));\n","\nconst defaultState = {\n  xformOffsetX: 0.0,\n  xformOffsetY: 0.0,\n  numLoops: 10,\n  growEnabled: true,\n  growValue: 100,\n  spinEnabled: false,\n  spinValue: 2,\n  spinSwitchbacks: 0,\n  trackEnabled: false,\n  trackGrowEnabled: false,\n  trackValue: 10,\n  trackLength: 0.2,\n  trackGrow: 50.0,\n}\n\nexport default function transform(state = defaultState, action) {\n  switch (action.type) {\n\n    case 'SET_SHAPE_OFFSET_X':\n      return {...state,\n        xformOffsetX: action.value,\n      };\n\n    case 'SET_SHAPE_OFFSET_Y':\n      return {...state,\n        xformOffsetY: action.value,\n      };\n\n    case 'SET_LOOPS':\n      return {...state,\n        numLoops: action.value,\n      };\n\n    case 'TOGGLE_SPIN':\n      return {...state,\n        spinEnabled: !state.spinEnabled,\n      };\n\n    case 'TOGGLE_GROW':\n      return {...state,\n        growEnabled: !state.growEnabled,\n      };\n\n    case 'TOGGLE_TRACK':\n      return {...state,\n        trackEnabled: !state.trackEnabled,\n      };\n\n    case 'TOGGLE_TRACK_GROW':\n      return {...state,\n        trackGrowEnabled: !state.trackGrowEnabled,\n      };\n\n    case 'SET_SPIN':\n      return {...state,\n        spinValue: action.value,\n      };\n\n    case 'SET_SPIN_SWITCHBACKS':\n      return {...state,\n        spinSwitchbacks: (action.value >= 0? action.value : 0),\n      };\n\n    case 'SET_GROW':\n      return {...state,\n        growValue: action.value,\n      };\n\n    case 'SET_TRACK':\n      return {...state,\n        trackValue: action.value,\n      };\n\n    case 'SET_TRACK_LENGTH':\n      return {...state,\n        trackLength: action.value,\n      };\n\n    case 'SET_TRACK_GROW':\n      return {...state,\n        trackGrow: action.value,\n      };\n\n\n    case '@@redux/INIT':\n      return state;\n    default:\n      return state;\n  }\n}\n\n\n\n","\nconst defaultState = {\n  angleDeg: 15,\n  size: 12,\n}\n\nexport default function wiper(state = defaultState, action) {\n  switch (action.type) {\n\n    // Wiper Settings\n    case 'SET_WIPER_ANGLE_DEG':\n      return {...state,\n        angleDeg: action.value,\n      };\n    case 'SET_WIPER_SIZE':\n      return {...state,\n        size: action.value,\n      };\n\n    case '@@redux/INIT':\n      return state;\n    default:\n      return state;\n  }\n}\n\n\n\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './Header.css';\n\nclass Header extends Component {\n  render() {\n    return (\n      <div className=\"header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <h2>sandify</h2>\n        <p>\n          web based user interface to create patterns that\n          could be useful for robots that draw in sand with ball bearings.\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default Header\n\n","import React, { Component } from 'react';\nimport './Documentation.css';\n\nclass Documentation extends Component {\n  render () {\n    return (\n      <div className=\"documentation\">\n        <div className=\"App-col-3\">\n          <h3 className=\"docTitle\">About</h3>\n          Sandify is working on a solution to turn your\n              cold, empty hearted, emotionless sand tables into\n              cold, empty hearted emotionless sand table robots with enchanting patterns.\n          <br/>\n          <br/>\n          Sandify is a labor of love, but if you'd like to support me financially,\n            I do have a <a href=\"https://github.com/sponsors/jeffeb3\">Donation system set up <b>with github matching donations</b></a>. Or just <a href=\"https://www.paypal.me/jeffeb3\">PayPal</a>.\n        </div>\n        <div className=\"App-col-3\">\n          <h3 className=\"docTitle\">Sand Machine</h3>\n          Anything that uses gcode can be used with sandify.\n              But the machine this was designed for is the ZenXY from V1Engineering.com:\n          <br/>\n          <a href=\"https://docs.v1engineering.com/zenxy/\">ZenXY on V1Engineering.com</a>\n          <br/>\n          <a href=\"https://www.thingiverse.com/thing:2477901\">ZenXY Thingiverse Page</a>\n          <br/>\n          ZenXY was inspired by the awesome Sisyphus Kinetic Art Table by <a href=\"https://sisyphus-industries.com/\">Sisyphus Industries</a>, which is also now supported.\n          <br/>\n          Sandify was created by users in the\n          <a href=\"https://forum.v1engineering.com/t/does-this-count-as-a-build/6037\"> V1Engineering.com Forum</a>\n        </div>\n        <div className=\"App-col-3\">\n          <h3 className=\"docTitle\">Github</h3>\n          Sandify is hosted on github.io\n          <br/>\n          <a href=\"https://github.com/jeffeb3/sandify\">Sandify Source Code</a>\n          <br/>\n          Please post any problems, feature requests or comments in the github issues:\n          <br/>\n          <a href=\"https://github.com/jeffeb3/sandify/issues\">Sandify Issue Tracker</a>\n          <br/>\n          Sandify is a community project. We want and need developers:\n          <br/>\n          <a href=\"https://github.com/jeffeb3/sandify/wiki#developer-info\">Help Sandify</a>\n        </div>\n        <div className=\"App-col-3\">\n          <h3 className=\"docTitle\">License</h3>\n          Sandify is licensed under the MIT license.\n          <br/>\n          Patterns that you create and gcode generated with sandify are not covered\n              under the sandify license (they are your work, and are your copyright).\n          <br/>\n          <a href=\"https://raw.githubusercontent.com/jeffeb3/sandify/master/LICENSE\">Sandify License</a>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default Documentation\n","import React, { Component } from 'react';\nimport {\n    Col,\n    ControlLabel,\n    Form,\n    FormControl,\n    FormGroup,\n    Panel,\n} from 'react-bootstrap'\nimport { connect } from 'react-redux'\n\n// Wipe actions\nexport const setWiperAngleDeg = ( value ) => {\n  return {\n    type: 'SET_WIPER_ANGLE_DEG',\n    value: value,\n  };\n}\n\nexport const setWiperSize = ( value ) => {\n  return {\n    type: 'SET_WIPER_SIZE',\n    value: value,\n  };\n}\n\n\nconst wiperProps = (state, ownProps) => {\n  return {\n    angle: state.wiper.angleDeg,\n    size: state.wiper.size,\n  }\n}\n\nconst wiperDispatch = (dispatch, ownProps) => {\n  return {\n    changeAngle: (event) => {\n      dispatch(setWiperAngleDeg(parseFloat(event.target.value)));\n    },\n    changeSize: (event) => {\n      dispatch(setWiperSize(parseFloat(event.target.value)));\n    },\n  }\n}\n\nclass Wiper extends Component {\n\n  render() {\n\n    return (\n      <div className=\"Wiper\">\n        <Panel className=\"Wiper-panel\">\n          <h4>Wipe Settings</h4>\n          <Panel className=\"Wiper-panel\">\n            <Form horizontal>\n              <FormGroup controlId=\"angle\">\n                <Col componentClass={ControlLabel} sm={4}>\n                  Wiper Angle\n                </Col>\n                <Col sm={8}>\n                  <FormControl type=\"number\" min=\"0\" max=\"180\" step=\"0.5\" value={this.props.angle} onChange={this.props.changeAngle}/>\n                </Col>\n              </FormGroup>\n              <FormGroup controlId=\"size\">\n                <Col componentClass={ControlLabel} sm={4}>\n                  Wiper Size\n                </Col>\n                <Col sm={8}>\n                  <FormControl type=\"number\" step=\"0.1\" value={this.props.size} onChange={this.props.changeSize}/>\n                </Col>\n              </FormGroup>\n            </Form>\n\n          </Panel>\n        </Panel>\n      </div>\n    );\n  }\n}\nWiper = connect(wiperProps, wiperDispatch)(Wiper);\n\nexport default Wiper\n\n","import React, { Component } from 'react';\nimport {\n    Col,\n    ControlLabel,\n    Form,\n    FormControl,\n    FormGroup,\n    ListGroupItem,\n    Panel,\n    Well,\n} from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport './ThetaRho.css'\n\nexport const setFileVertices = ( vertices ) => {\n  return {\n    type: 'SET_FILE_VERTICES',\n    vertices: vertices,\n  };\n}\n\nexport const setFileName = ( value ) => {\n  return {\n    type: 'SET_FILE_NAME',\n    value: value,\n  };\n}\n\nexport const setFileComment = ( value ) => {\n  return {\n    type: 'SET_FILE_COMMENT',\n    value: value,\n  };\n}\n\nexport const setFileZoom = ( value ) => {\n  return {\n    type: 'SET_FILE_ZOOM',\n    value: value,\n  };\n}\n\nexport const toggleFileAspectRatio = ( value ) => {\n  return {\n    type: 'TOGGLE_FILE_ASPECT_RATIO',\n    value: value,\n  };\n}\n\nconst thrProps = (state, ownProps) => {\n  return {\n    name: state.file.name,\n    comments: state.file.comments,\n    vertices: state.file.vertices,\n    zoom: state.file.zoom,\n    aspectRatio: state.file.aspectRatio,\n  }\n}\n\n\nconst thrDispatch = (dispatch, ownProps) => {\n\n  var convertToXY = (thetaRhos) => {\n    var vertices = []\n    var previous = undefined;\n    var max_angle = Math.PI / 64.0;\n    for (let ii = 0; ii < thetaRhos.length; ii++) {\n      var next = thetaRhos[ii];\n      if (previous) {\n        if (Math.abs(next[0] - previous[0]) < max_angle) {\n          // These sin, cos elements are inverted. I'm not sure why\n          vertices.push({\n                        x: previous[1] * Math.sin(previous[0]),\n                        y: previous[1] * Math.cos(previous[0]),\n                        f: 1000,\n          });\n        } else {\n          // We need to do some interpolating.\n          let deltaAngle = next[0] - previous[0];\n          let rhoStep = max_angle / Math.abs(deltaAngle) * (next[1] - previous[1]);\n          var rho = previous[1];\n          if (deltaAngle > 0.0) {\n            var emergency_break = 0;\n            for (let angle = previous[0]; angle < next[0]; angle += max_angle, rho += rhoStep) {\n              vertices.push({\n                            x: rho * Math.sin(angle),\n                            y: rho * Math.cos(angle),\n                            f: 1000,\n              });\n              if (emergency_break++ > 100000) {\n                break;\n              }\n            }\n          } else {\n            for (let angle = previous[0]; angle > next[0]; angle -= max_angle, rho += rhoStep) {\n              vertices.push({\n                            x: rho * Math.sin(angle),\n                            y: rho * Math.cos(angle),\n                            f: 1000,\n              });\n              if (emergency_break++ > 100000) {\n                break;\n              }\n            }\n          }\n        }\n      }\n      previous = next;\n    }\n    return vertices;\n  }\n\n  var parseThrFile = (file) => {\n    var rv = {};\n    rv.comments = [];\n    rv.vertices = [];\n\n    var reader = new FileReader();\n\n    reader.onload = (event) => {\n      var text = reader.result;\n      var lines = text.split('\\n');\n      var has_vertex = false;\n      for (let ii = 0; ii < lines.length; ii++) {\n        var line = lines[ii].trim();\n        if (line.length === 0) {\n          // blank lines\n          continue;\n        }\n        if (line.indexOf(\"#\") === 0 && !has_vertex) {\n          rv.comments.push(lines[ii]);\n        }\n\n        if (line.indexOf(\"#\") !== 0) {\n          has_vertex = true;\n          // This is a point, let's try to read it.\n          var pointStrings = line.split(/\\s+/);\n          if (pointStrings.length !== 2) {\n            // AAAH\n            console.log(pointStrings);\n            continue;\n          }\n          rv.vertices.push([parseFloat(pointStrings[0]), parseFloat(pointStrings[1])]);\n        }\n      }\n\n      dispatch(setFileComment(rv.comments));\n      dispatch(setFileVertices(convertToXY(rv.vertices)));\n    }\n\n    reader.readAsText(file);\n  }\n\n  return {\n    setVertices: (event: any) => {\n      var file = event.target.files[0];\n      console.log(file)\n      dispatch(setFileName(file.name));\n      parseThrFile(file);\n    },\n    setZoom: (event) => {\n      dispatch(setFileZoom(parseFloat(event.target.value)));\n    },\n    toggleAspectRatio: (event) => {\n      dispatch(toggleFileAspectRatio());\n    },\n  }\n}\n\nconst disableEnter = (event) => {\n  if (event.key === 'Enter' && event.shiftKey === false) {\n    event.preventDefault();\n  }\n};\n\nclass ThetaRho extends Component {\n\n  render() {\n    var aspectRatioActive = \"\";\n    if (this.props.aspectRatio) {\n      aspectRatioActive = \"active\";\n    }\n\n    return (\n      <div className=\"ThetaRho\">\n        <Panel className=\"thr-panel\">\n          <h4>Theta Rho Input</h4>\n          <ControlLabel className=\"thr-panel\" htmlFor=\"fileUpload\" style={{ cursor: \"pointer\" }}>\n            <ListGroupItem header=\"Click to Load\" className=\"\" >Import a sisyphus style theta rho (.thr) file into sandify.</ListGroupItem>\n            <FormControl\n                id=\"fileUpload\"\n                type=\"file\"\n                accept=\".thr\"\n                onChange={this.props.setVertices}\n                style={{ display: \"none\" }}\n            />\n          </ControlLabel>\n          <Well> Name: {this.props.name} <br/> Comments: { this.props.comments.join('\\n') } <br/> Number of points: {this.props.vertices.length }</Well>\n          <Form horizontal>\n            <FormGroup controlId=\"thr-zoom\">\n              <Col componentClass={ControlLabel} sm={2}>\n                Zoom\n              </Col>\n              <Col sm={8}>\n                <FormControl type=\"number\" value={this.props.zoom} onChange={this.props.setZoom} onKeyDown={disableEnter} />\n              </Col>\n            </FormGroup>\n          </Form>\n          <ListGroupItem header=\"Keep Aspect Ratio\" className={aspectRatioActive} onClick={this.props.toggleAspectRatio}>Keeps original aspect ratio.</ListGroupItem>\n          <br/>\n          <h5>Where to get thr files:\n          <ul>\n            <li><h5><a href=\"https://reddit.com/u/markyland\">Markyland on Reddit</a></h5></li>\n            <li><h5><a href=\"https://github.com/Dithermaster/sisyphus/\">Dithermaster's github</a></h5></li>\n            <li><h5><a href=\"https://github.com/SlightlyLoony/JSisyphus\">JSisyphus by Slightly Loony</a></h5></li>\n            <li><h5><a href=\"https://reddit.com/r/SisyphusIndustries\">Sisyphus on Reddit</a></h5></li>\n            <li><h5><a href=\"https://sisyphus-industries.com/community/community-tracks\">Sisyphus Community</a></h5></li>\n            <li><h5><a href=\"http://thejuggler.net/sisyphus/\">The Juggler</a></h5></li>\n          </ul>\n          </h5>\n          <h6>Note about Copyrights:</h6>\n          <h6>Be careful and respectful. Understand that the original author put their labor, intensity, and ideas into this art. The creators have a right to own it (and they have a copyright, even if it doesn't say so).</h6>\n          <h6>If you don't have permisson (a license) to use their art, then you shouldn't be.</h6>\n          <h6>If you do have permission to use their art, then you should be thankful, and I'm sure they would appreciate you sending them a note of thanks. A picture of your table creating their shared art would probably make them smile.</h6>\n          <h6>Someone posting the .thr file to a forum or subreddit probably wants it to be shared, and drawing it on your home table is probably OK. Just be careful if you want to use them for something significant without explicit permission.</h6>\n          <h6>I am not a lawyer.</h6>\n        </Panel>\n      </div>\n    );\n  }\n}\nThetaRho = connect(thrProps, thrDispatch)(ThetaRho);\n\nexport default ThetaRho\n\n","import React, { Component } from 'react';\nimport {\n    Tab,\n    Tabs,\n} from 'react-bootstrap'\nimport './InputTabs.css'\nimport Transforms from './Transforms.js'\nimport Wiper from './Wiper.js'\nimport ThetaRho from './ThetaRho.js'\nimport { connect } from 'react-redux'\n\nexport const chooseInput = ( input ) => {\n  return {\n    type: 'CHOOSE_INPUT',\n    value: input,\n  };\n}\n\nclass InputTabs extends Component {\n\n  handleSelect( key ) {\n    this.props.dispatch(chooseInput(key));\n  }\n\n  render() {\n    return (\n       <Tabs defaultActiveKey={0} onSelect={this.handleSelect.bind(this)} id=\"inputTabs\">\n         <Tab eventKey={0} title=\"Shapes\">\n           <Transforms/>\n         </Tab>\n         <Tab eventKey={2} title=\"Wiper\">\n           <Wiper/>\n         </Tab>\n         <Tab eventKey={3} title=\"Code\">\n           <ThetaRho/>\n         </Tab>\n       </Tabs>\n    );\n  }\n}\nInputTabs = connect()(InputTabs);\n\nexport default InputTabs;\n","import React, { Component } from 'react';\nimport {\n    Col,\n    ControlLabel,\n    Form,\n    FormControl,\n    FormGroup,\n    ListGroup,\n    ListGroupItem,\n    Panel,\n    ToggleButton,\n    ToggleButtonGroup,\n} from 'react-bootstrap'\nimport { connect } from 'react-redux'\n\nimport './MachineSettings.css';\n\n// Machine actions\nexport const toggleMachineRectExpanded = ( ) => {\n  localStorage.setItem('machine_rect_active', 1)\n  return {\n    type: 'TOGGLE_MACHINE_RECT_EXPANDED',\n  };\n}\n\nexport const toggleMachinePolarExpanded = ( ) => {\n  localStorage.setItem('machine_rect_active', 2)\n  return {\n    type: 'TOGGLE_MACHINE_POLAR_EXPANDED',\n  };\n}\n\nexport const toggleMachineEndpoints = ( ) => {\n  return {\n    type: 'TOGGLE_MACHINE_ENDPOINTS',\n  };\n}\n\nexport const setMachineRectOrigin = (value) => {\n  return {\n    type: 'SET_MACHINE_RECT_ORIGIN',\n    value: value,\n  };\n}\n\nexport const setMachineMinX = ( value ) => {\n  // This is definitely a side effect...\n  localStorage.setItem('machine_min_x', value)\n  return {\n    type: 'SET_MIN_X',\n    value: value,\n  };\n}\n\nexport const setMachineMaxX = ( value ) => {\n  localStorage.setItem('machine_max_x', value)\n  return {\n    type: 'SET_MAX_X',\n    value: value,\n  };\n}\n\nexport const setMachineMinY = ( value ) => {\n  localStorage.setItem('machine_min_y', value)\n  return {\n    type: 'SET_MIN_Y',\n    value: value,\n  };\n}\n\nexport const setMachineMaxY = ( value ) => {\n  localStorage.setItem('machine_max_y', value)\n  return {\n    type: 'SET_MAX_Y',\n    value: value,\n  };\n}\n\nexport const setMachineRadius = ( value ) => {\n  localStorage.setItem('machine_radius', value)\n  return {\n    type: 'SET_MAX_RADIUS',\n    value: value,\n  };\n}\n\nconst rectMapStateToProps = (state, ownProps) => {\n  return {\n    expanded: state.app.machineRectExpanded,\n    active:   state.machine.rectangular,\n    min_x:    state.machine.min_x,\n    max_x:    state.machine.max_x,\n    min_y:    state.machine.min_y,\n    max_y:    state.machine.max_y,\n    origin:   state.machine.rectOrigin,\n  }\n}\n\nconst rectMapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    activeCallback: (event) => {\n      dispatch(toggleMachineRectExpanded())\n    },\n    onMinXChange: (event) => {\n      dispatch(setMachineMinX(parseFloat(event.target.value)))\n    },\n    onMaxXChange: (event) => {\n      dispatch(setMachineMaxX(parseFloat(event.target.value)))\n    },\n    onMinYChange: (event) => {\n      dispatch(setMachineMinY(parseFloat(event.target.value)))\n    },\n    onMaxYChange: (event) => {\n      dispatch(setMachineMaxY(parseFloat(event.target.value)))\n    },\n    onOriginChange: (value) => {\n      dispatch(setMachineRectOrigin(value))\n    },\n  }\n}\n\nclass RectSettings extends Component {\n  render() {\n    var activeClassName = \"\";\n    if (this.props.active) {\n      activeClassName = \"active\";\n    }\n\n    return (\n      <div className=\"rect\">\n        <ListGroupItem header=\"Rectangular Machine\" className={activeClassName} onClick={this.props.activeCallback}>Rectangle Machines like the Zen XY.</ListGroupItem>\n        <div className=\"rect-options\">\n          <Panel className=\"options-panel\" collapsible expanded={this.props.expanded}>\n            <Form horizontal>\n              <FormGroup className=\"machineSmaller\" controlId=\"min_x\">\n                <Col className=\"machineSmaller\" componentClass={ControlLabel} sm={2}>\n                  Min X (mm)\n                </Col>\n                <Col sm={8} smOffset={1}>\n                  <FormControl type=\"number\" value={this.props.min_x} onChange={this.props.onMinXChange}/>\n                </Col>\n              </FormGroup>\n              <FormGroup className=\"machineSmaller\" controlId=\"max_x\">\n                <Col className=\"machineSmaller\" componentClass={ControlLabel} sm={2}>\n                  Max X (mm)\n                </Col>\n                <Col sm={8} smOffset={1}>\n                  <FormControl type=\"number\" value={this.props.max_x} onChange={this.props.onMaxXChange}/>\n                </Col>\n              </FormGroup>\n              <FormGroup className=\"machineSmaller\" controlId=\"min_y\">\n                <Col className=\"machineSmaller\" componentClass={ControlLabel} sm={2}>\n                  Min Y (mm)\n                </Col>\n                <Col sm={8} smOffset={1}>\n                  <FormControl type=\"number\" value={this.props.min_y} onChange={this.props.onMinYChange}/>\n                </Col>\n              </FormGroup>\n              <FormGroup className=\"machineSmaller\" controlId=\"max_y\">\n                <Col className=\"machineSmaller\" componentClass={ControlLabel} sm={2}>\n                  Max Y (mm)\n                </Col>\n                <Col sm={8} smOffset={1}>\n                  <FormControl type=\"number\" value={this.props.max_y} onChange={this.props.onMaxYChange}/>\n                </Col>\n              </FormGroup>\n              <FormGroup className=\"machineSmaller\" controlId=\"max_y\">\n                <Col className=\"machineSmaller\" componentClass={ControlLabel} sm={2}>\n                  Force Origin\n                </Col>\n                <Col componentClass={ControlLabel} sm={8} smOffset={1}>\n                  <ToggleButtonGroup id=\"origin-bar\" type=\"checkbox\" name=\"origin\" value={this.props.origin} onChange={this.props.onOriginChange}>\n                    <ToggleButton value={0} >Lower Left</ToggleButton>\n                    <ToggleButton value={1} >Upper Left</ToggleButton>\n                    <ToggleButton value={2} >Upper Right</ToggleButton>\n                    <ToggleButton value={3} >Lower Right</ToggleButton>\n                  </ToggleButtonGroup>\n                </Col>\n              </FormGroup>\n            </Form>\n          </Panel>\n        </div>\n      </div>\n    )\n  }\n}\n\nRectSettings = connect(rectMapStateToProps, rectMapDispatchToProps)(RectSettings)\n\nconst polarMapStateToProps = (state, ownProps) => {\n  return {\n    expanded:   state.app.machinePolarExpanded,\n    active:     !state.machine.rectangular,\n    max_radius: state.machine.max_radius,\n    endpoints:  state.machine.polarEndpoints,\n  }\n}\n\nconst polarMapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    activeCallback: (event) => {\n      dispatch(toggleMachinePolarExpanded())\n    },\n    onMaxRadiusChange: (event) => {\n      dispatch(setMachineRadius(parseFloat(event.target.value)))\n    },\n    toggleEndpoints: () => {\n      dispatch(toggleMachineEndpoints());\n    },\n  }\n}\n\nclass PolarSettings extends Component {\n  render() {\n    var activeClassName = \"\";\n    if (this.props.active) {\n      activeClassName = \"active\";\n    }\n\n    const endpointsActiveClass = (this.props.endpoints ? \"active\" : null);\n\n    return (\n      <div className=\"polar\">\n        <ListGroupItem header=\"Polar Machine\" className={activeClassName} onClick={this.props.activeCallback}>Polar Machines like the Sisyphus.</ListGroupItem>\n        <div className=\"polar-options\">\n          <Panel className=\"options-panel\" collapsible expanded={this.props.expanded}>\n            <Form horizontal>\n              <FormGroup className=\"machineSmaller\" controlId=\"max_radius\">\n                <Col className=\"machineSmaller\" componentClass={ControlLabel} sm={3}>\n                  Max Radius (mm)\n                </Col>\n                <Col sm={7} smOffset={1}>\n                  <FormControl type=\"number\" value={this.props.max_radius} onChange={this.props.onMaxRadiusChange}/>\n                </Col>\n              </FormGroup>\n            </Form>\n            <ListGroupItem header=\"Force Endpoints\" className={endpointsActiveClass} onClick={this.props.toggleEndpoints}>Forces the first and last points to be at the center and edge.</ListGroupItem>\n          </Panel>\n        </div>\n      </div>\n    )\n  }\n}\n\nPolarSettings = connect(polarMapStateToProps, polarMapDispatchToProps)(PolarSettings)\n\nclass MachineSettings extends Component {\n  render() {\n\n    return (\n      <div className=\"machine-form\">\n        <Panel className=\"machine-panel\">\n          <h4>Machine Settings</h4>\n          <ListGroup>\n            <RectSettings/>\n            <PolarSettings/>\n          </ListGroup>\n        </Panel>\n      </div>\n    )\n  }\n}\n\nexport default MachineSettings;\n\n","import { Vertex } from '../Geometry';\nimport Victor from 'victor';\n\n// Determines which of 8 neighbor areas the point is in:\n//   https://stackoverflow.com/questions/3746274/line-intersection-with-aabb-rectangle\n//\n//           |          |\n//   0b1001  |  0b0001  |  0b0101\n//           |          |\n// ------------------------------ y_max\n//           |          |\n//   0b1000  |  0b0000  |  0b0100\n//           |          |\n// ------------------------------ y_min\n//           |          |\n//   0b1010  |  0b0010  |  0b0110\n//           |          |\n//         x_min      x_max\n//\nfunction pointLocation(point, size_x, size_y) {\n  var location = 0b0;\n  if (point.x < -size_x) {\n    location += 0b1000;\n  } else if (point.x > size_x) {\n    location += 0b0100;\n  }\n\n  if (point.y < -size_y) {\n    location += 0b0001;\n  } else if (point.y > size_y) {\n    location += 0b0010;\n  }\n\n  return location;\n}\n\n// Determine intersection with one of the sides\nfunction intersection(line_start, line_end, side_start, side_end) {\n\n  var line = line_end.clone().subtract(line_start);\n  var side = side_end.clone().subtract(side_start);\n  var lineCrossSidePerp = line.x * side.y - line.y * side.x;\n\n  // if line Cross side === 0, it means the lines are parallel so have infinite intersection points\n  if (lineCrossSidePerp === 0) {\n    return null;\n  }\n\n  var diff = side_start.clone().subtract(line_start);\n  var t = (diff.x * side.y - diff.y * side.x) / lineCrossSidePerp;\n  if (t < 0 || t >= 1) {\n    return null;\n  }\n\n  var u = (diff.x * line.y - diff.y * line.x) / lineCrossSidePerp;\n  if (u < 0 || u >= 1) {\n    return null;\n  }\n\n  var intersection = line_start.clone().add(line.clone().multiply(Victor(t, t)));\n  return intersection;\n}\n\n// This method is the guts of logic for this limits enforcer. It will take a single line (defined by\n// start and end) and if the line goes out of bounds, returns the vertices around the outside edge\n// to follow around without messing up the shape of the vertices.\n//\nfunction clipLine(line_start, line_end, size_x, size_y) {\n\n  var quadrant_start = pointLocation(line_start, size_x, size_y);\n  var quadrant_end = pointLocation(line_end, size_x, size_y);\n\n  if (quadrant_start === 0b0000 && quadrant_end === 0b0000) {\n    // The line is inside the boundaries\n    return [line_start, line_end];\n  }\n\n  if (quadrant_start === quadrant_end) {\n    // We are in the same box, and we are out of bounds.\n    return [nearestVertex(line_start, size_x, size_y), nearestVertex(line_end, size_x, size_y)];\n  }\n\n  if (quadrant_start & quadrant_end) {\n    // These points are all on one side of the box.\n    return [nearestVertex(line_start, size_x, size_y), nearestVertex(line_end, size_x, size_y)];\n  }\n\n  if (quadrant_start === 0b000) {\n    // We are exiting the box. Return the start, the intersection with the boundary, and the closest\n    // boundary point to the exited point.\n    var line = [line_start];\n    line.push(boundPoint(line_start, line_end, size_x, size_y));\n    line.push(nearestVertex(line_end, size_x, size_y));\n    return line;\n  }\n\n  if (quadrant_end === 0b000) {\n    // We are re-entering the box.\n    return [boundPoint(line_end, line_start, size_x, size_y), line_end];\n  }\n\n  // We have reached a terrible place, where both points are oob, but it might intersect with the\n  // work area.\n\n  // First, define the boundaries as lines.\n  const sides = [\n    // left\n    [Victor(-size_x, -size_y), Victor(-size_x, size_y)],\n    // right\n    [Victor(size_x, -size_y), Victor(size_x, size_y)],\n    // bottom\n    [Victor(-size_x, -size_y), Victor(size_x, -size_y)],\n    // top\n    [Victor(-size_x, size_y), Victor(size_x, size_y)],\n  ]\n\n  // Count up the number of boundary lines intersect with our line segment.\n  var intersections = []\n  for (var s=0; s<sides.length; s++) {\n    var int_point = intersection(Victor.fromObject(line_start),\n                                 Victor.fromObject(line_end),\n                                 sides[s][0],\n                                 sides[s][1]);\n    if (int_point) {\n      intersections.push(Vertex(int_point.x, int_point.y));\n    }\n  }\n\n  if (intersections.length !== 0) {\n    if (intersections.length !== 2) {\n      // We should never get here. How would we have something other than 2 or 0 intersections with\n      // a box?\n      console.log(intersections);\n      throw Error(\"Software Geometry Error\");\n    }\n\n    // The intersections are tested in some normal order, but the line could be going through them\n    // in any direction. This check will flip the intersections if they are reversed somehow.\n    if (Victor.fromObject(intersections[0]).subtract(Victor.fromObject(line_start)).lengthSq() >\n        Victor.fromObject(intersections[1]).subtract(Victor.fromObject(line_start)).lengthSq()) {\n      var temp = intersections[0];\n      intersections[0] = intersections[1];\n      intersections[1] = temp;\n    }\n    return [...intersections, nearestVertex(line_end, size_x, size_y)];\n  }\n\n  // Damn. We got here because we have a start and end that are failing different boundary checks,\n  // and the line segment doesn't intersect the box. We have to crawl around the outside of the\n  // box until we reach the other point.\n  //\n  // Here, I'm going to split this line into two parts, and send each half line segment back\n  // through the clipLine algorithm. Eventually, that should result in only one of the other cases.\n  var midpoint = Victor.fromObject(line_start).add(Victor.fromObject(line_end)).multiply(Victor(0.5, 0.5));\n  // recurse, and find smaller segments until we don't end up in this place again.\n  return [...clipLine(line_start, midpoint, size_x, size_y),\n          ...clipLine(midpoint,   line_end, size_x, size_y)];\n}\n\n// Finds the nearest vertex that is in the bounds. This will change the shape. i.e. this doesn't\n// care about the line segment, only about the point.\nfunction nearestVertex(vertex, size_x, size_y) {\n  return Vertex(Math.min(size_x, Math.max(-size_x, vertex.x)),\n                Math.min(size_y, Math.max(-size_y, vertex.y)));\n}\n\n// Intersect the line with the boundary, and return the point exactly on the boundary.\n// This will keep the shape. i.e. It will follow the line segment, and return the point on that line\n// segment.\nfunction boundPoint(good, bad, size_x, size_y) {\n  var dx = good.x - bad.x;\n  var dy = good.y - bad.y;\n\n  var fixed = Vertex(bad.x, bad.y);\n  var distance = 0;\n  if (bad.x < -size_x || bad.x > size_x) {\n    if (bad.x < -size_x) {\n      // we are leaving the left\n      fixed.x = -size_x;\n    } else {\n      // we are leaving the right\n      fixed.x = size_x;\n    }\n    distance = (fixed.x - good.x) / dx;\n    fixed.y = good.y + distance * dy;\n    // We fixed x, but y might have the same problem, so we'll rerun this, with different points.\n    return boundPoint(good, fixed, size_x, size_y);\n  }\n  if (bad.y < -size_y || bad.y > size_y) {\n    if (bad.y < -size_y) {\n      // we are leaving the bottom\n      fixed.y = -size_y;\n    } else {\n      // we are leaving the top\n      fixed.y = size_y;\n    }\n    distance = (fixed.y - good.y) / dy;\n    fixed.x = good.x + distance * dx;\n  }\n  return fixed;\n}\n\n// Returns points along the circle from the start to the end, tracing a circle of radius size.\nfunction traceCircle(start, end, size) {\n  const startAngle = start.angle();\n  const endAngle = end.angle();\n  let resolution = (Math.PI*2.0) / 128.0; // 128 segments per circle. Enough?\n  let deltaAngle = ((endAngle - startAngle) + 2.0 * Math.PI) % (2.0 * Math.PI);\n  if (deltaAngle > Math.PI) {\n    deltaAngle -= 2.0 * Math.PI;\n  }\n  if (deltaAngle < 0.0) {\n    resolution *= -1.0;\n  }\n\n  var tracePoints = []\n  for (var step = 0; step < (deltaAngle/resolution) ; step++) {\n    tracePoints.push(Victor(size * Math.cos(resolution * step + startAngle),\n                            size * Math.sin(resolution * step + startAngle)));\n  }\n  return tracePoints;\n}\n\nfunction onSegment(start, end, point) {\n  if (start.distance(point) + end.distance(point) - start.distance(end) < 0.001) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction getIntersections(start, end, size) {\n  var direction = end.clone().subtract(start).clone().normalize();\n\n  var t = direction.x * -1.0 * start.x + direction.y * -1.0 * start.y;\n  var e = direction.clone().multiply(Victor(t,t)).add(start);\n\n  var distanceToLine = e.magnitude();\n\n  if (distanceToLine >= size)\n  {\n    return {\n      intersection: false,\n      points: [],\n    }\n  }\n\n  var dt = Math.sqrt(size*size - distanceToLine*distanceToLine);\n\n  var point1 = direction.clone().multiply(Victor(t - dt,t - dt)).add(start);\n  var point2 = direction.clone().multiply(Victor(t + dt,t + dt)).add(start);\n\n  return {\n    intersection: true,\n    points: [\n      {\n        point: point1,\n        on: onSegment(start, end, point1),\n      },\n      {\n        point: point2,\n        on: onSegment(start, end, point2),\n      }\n    ]}\n}\n\n// This method is the guts of logic for this limits enforcer. It will take a single line (defined by\n// start and end) and if the line goes out of bounds, returns the vertices around the outside edge\n// to follow around without messing up the shape of the vertices.\n//\nfunction clipLineCircle(line_start, line_end, size) {\n\n  // Cases:\n  // 1 - Entire line is inside\n  //     return start, end\n  // 2 - Entire line is outside\n  //     trace from start to end\n  // 3 - only start is inside\n  //     find the intersection\n  //     include start\n  //     include intersection\n  //     trace from intersection to closest to end point\n  // 4 - only end is inside\n  //     do reverse of 3\n  // 4 - Neither end is inside, but there is some line segment inside\n  //     find both intersections\n  //     trace from start to first intersction\n  //     trace from second intersection to end\n\n  // Helper objects\n  const start = Victor.fromObject(line_start);\n  const end = Victor.fromObject(line_end);\n\n  // I'll need these\n  const rad_start = start.magnitude();\n  const rad_end = end.magnitude();\n\n  // Check the easy case\n  if (rad_start <= size && rad_end <= size) {\n    // The whole segment is inside\n    return [line_start, line_end];\n  }\n\n  // Check for the odd case of coincident points\n  if (start.distance(end) < 0.00001) {\n     return [nearestVertexCircle(start, size)];\n  }\n\n  var intersections = getIntersections(start, end, size);\n\n  if ( !intersections.intersection )\n  {\n    // The whole line is outside, just trace.\n    return traceCircle(start, end, size);\n  }\n\n  // if neither point is on the segment, then it should just be a trace\n  if (!intersections.points[0].on && ! intersections.points[1].on) {\n    return traceCircle(start, end, size);\n  }\n\n  // If both points are outside, but there's an intersection\n  if (rad_start > size + 1.0e-9 && rad_end > size + 1.0e-9) {\n    let point = intersections.points[0].point;\n    let other_point = intersections.points[1].point;\n\n    return [\n      ...traceCircle(start, point, size),\n      point,\n      ...traceCircle(other_point, end, size)\n    ];\n  }\n\n  // If we're here, then one point is still in the circle.\n  if (rad_start <= size) {\n    var point1 = (intersections.points[0].on && Math.abs(intersections.points[0].point - start) > 0.0001) ? intersections.points[0].point : intersections.points[1].point;\n    return [\n      start,\n      ...traceCircle(point1, end, size),\n      end\n    ];\n  } else {\n    point1 = intersections.points[0].on ? intersections.points[0].point : intersections.points[1].point;\n    return [\n      ...traceCircle(start, point1, size),\n      point1,\n      end\n    ];\n  }\n}\n\n// Finds the nearest vertex that is in the bounds of the circle. This will change the shape. i.e. this doesn't\n// care about the line segment, only about the point.\nfunction nearestVertexCircle(vertex, size) {\n  const point = Victor.fromObject(vertex);\n  if ( point.length() > size) {\n    let scale = size / point.length();\n    return point.multiply(Victor(scale, scale));\n  } else {\n    return point;\n  }\n}\n\n// Manipulates the points to make them all in bounds, while doing the least amount of damage to the\n// desired shape.\nexport const enforceRectLimits = function(vertices, size_x, size_y) {\n  var cleanVertices = []\n  var previous = null;\n\n  if (size_x < 0) {\n    size_x *= -1.0;\n  }\n  if (size_y < 0) {\n    size_y *= -1.0;\n  }\n  for (var next=0; next<vertices.length; next++) {\n    var vertex = vertices[next];\n    if (previous) {\n      var line = clipLine(previous, vertex, size_x, size_y);\n      for (var pt=0; pt<line.length; pt++) {\n        if (line[pt] !== previous) {\n          cleanVertices.push(line[pt]);\n        }\n      }\n    } else {\n      cleanVertices.push(nearestVertex(vertex, size_x, size_y));\n    }\n    previous = vertex;\n  }\n\n  // Just for sanity, and cases that I haven't thought of, clean this list again, including removing\n  // duplicate points\n  previous = null;\n  var cleanerVertices = []\n  for (var i=0; i<cleanVertices.length; i++) {\n    if (previous) {\n      let start = Victor.fromObject(cleanVertices[i]);\n      let end = Victor.fromObject(previous);\n      if (start.distance(end) > 0.001) {\n        cleanerVertices.push(nearestVertex(cleanVertices[i], size_x, size_y));\n      }\n    } else {\n      cleanerVertices.push(nearestVertex(cleanVertices[i], size_x, size_y));\n    }\n    previous = cleanVertices[i];\n  }\n\n  return cleanerVertices;\n}\n\nexport const enforcePolarLimits = function(vertices, size) {\n\n  var cleanVertices = []\n  var previous = null;\n\n  for (var next=0; next<vertices.length; next++) {\n    var vertex = vertices[next];\n    if (previous) {\n      var line = clipLineCircle(previous, vertex, size);\n      for (var pt=0; pt<line.length; pt++) {\n        if (line[pt] !== previous) {\n          cleanVertices.push(line[pt]);\n        }\n      }\n    } else {\n      cleanVertices.push(nearestVertexCircle(vertex, size));\n    }\n    previous = vertex;\n  }\n\n  // Just for sanity, and cases that I haven't thought of, clean this list again, including removing\n  // duplicate points\n  previous = null;\n  var cleanerVertices = []\n  for (var i=0; i<cleanVertices.length; i++) {\n    if (previous) {\n      let start = Victor.fromObject(cleanVertices[i]);\n      let end = Victor.fromObject(previous);\n      if (start.distance(end) > 0.001) {\n        cleanerVertices.push(nearestVertexCircle(cleanVertices[i], size));\n      }\n    } else {\n      cleanerVertices.push(nearestVertexCircle(cleanVertices[i], size));\n    }\n    previous = cleanVertices[i];\n  }\n  return cleanerVertices;\n}\n\n\n","import {\n  degToRad,\n  Vertex,\n} from '../Geometry.js'\nimport {\n  enforceRectLimits,\n  enforcePolarLimits\n} from '../machine/LimitEnforcer';\nimport Victor from 'victor';\nimport { createSelector } from 'reselect'\n\n// Transform funtions\nfunction rotate (vertex, angle_deg) {\n  var angle = Math.PI / 180.0 * angle_deg;\n  return Vertex(\n           vertex.x * Math.cos(angle) - vertex.y * Math.sin(angle),\n           vertex.x * Math.sin(angle) + vertex.y * Math.cos(angle),\n           vertex.f);\n}\n\nfunction scale (vertex, scale_perc) {\n  var scale = scale_perc / 100.0;\n  return {\n    x: vertex.x * scale,\n    y: vertex.y * scale,\n    f: vertex.f,\n  }\n}\n\nfunction offset (vertex, offset_x, offset_y) {\n  return {\n    x: vertex.x + offset_x,\n    y: vertex.y + offset_y,\n    f: vertex.f,\n  }\n}\n\nfunction track (vertex, data, loop_index) {\n  let angle = data.trackLength * loop_index / 16 * 2.0 * Math.PI;\n  let radius = 1.0;\n  if (data.trackGrowEnabled) {\n    radius = 1.0 + loop_index / 10.0 * data.trackGrow / 100.0;\n  }\n  return {\n    x: vertex.x + radius * data.trackValue * Math.cos(angle),\n    y: vertex.y + radius * data.trackValue * Math.sin(angle),\n    f: vertex.f, // Why do I still have f in here?\n  };\n}\n\nexport const transform = (data, vertex, fraction_index) => {\n  var transformed_vertex = vertex\n  if (data.growEnabled)\n  {\n    transformed_vertex = scale(transformed_vertex, 100.0 + (data.growValue * fraction_index));\n  }\n  transformed_vertex = offset(transformed_vertex, data.xformOffsetX, data.xformOffsetY);\n  if (data.spinEnabled)\n  {\n    var loop_period = data.numLoops / (parseInt(data.spinSwitchbacks) + 1);\n    var stage = fraction_index/loop_period;\n    var direction = (stage % 2 < 1 ? 1.0 : -1.0);\n    var spin_amount = direction * (fraction_index % loop_period) * data.spinValue;\n    // Add in the amount it goes positive to the negatives, so they start at the same place.\n    if (direction < 0.0) {\n      spin_amount += loop_period * data.spinValue;\n    }\n    transformed_vertex = rotate(transformed_vertex, spin_amount);\n  }\n  if (data.trackEnabled) {\n    transformed_vertex = track(transformed_vertex, data, fraction_index);\n  }\n  return transformed_vertex;\n}\n\nconst outOfBounds = (point, width, height) => {\n  if (point.x < -width/2.0) {\n    return true;\n  }\n  if (point.y < -height/2.0) {\n    return true;\n  }\n  if (point.x > width/2.0) {\n    return true;\n  }\n  if (point.y > height/2.0) {\n    return true;\n  }\n  return false;\n}\n\nconst findShape = (shapes, name) => {\n  for (let i=0; i<shapes.length; i++) {\n    if (name === shapes[i].name) {\n      return shapes[i];\n    }\n  }\n  return null;\n}\n\n// Intersect the line with the boundary, and return the point exactly on the boundary.\n// This will keep the shape. i.e. It will follow the line segment, and return the point on that line\n// segment.\nfunction boundPoint(good, bad, size_x, size_y) {\n  var dx = good.x - bad.x;\n  var dy = good.y - bad.y;\n\n  var fixed = Victor(bad.x, bad.y);\n  var distance = 0;\n  if (bad.x < -size_x || bad.x > size_x) {\n    if (bad.x < -size_x) {\n      // we are leaving the left\n      fixed.x = -size_x;\n    } else {\n      // we are leaving the right\n      fixed.x = size_x;\n    }\n    distance = (fixed.x - good.x) / dx;\n    fixed.y = good.y + distance * dy;\n    // We fixed x, but y might have the same problem, so we'll rerun this, with different points.\n    return boundPoint(good, fixed, size_x, size_y);\n  }\n  if (bad.y < -size_y || bad.y > size_y) {\n    if (bad.y < -size_y) {\n      // we are leaving the bottom\n      fixed.y = -size_y;\n    } else {\n      // we are leaving the top\n      fixed.y = size_y;\n    }\n    distance = (fixed.y - good.y) / dy;\n    fixed.x = good.x + distance * dx;\n  }\n  return fixed;\n}\n\nfunction nearEnough(end, point) {\n  if (point.clone().subtract(end).length() < 0.01) {\n    return true;\n  }\n  return false;\n}\n\n// Vertex functions\nexport const polishVertices = (state, vertices) => {\n  let machine = state.machine;\n  if (vertices.length > 0) {\n    if (machine.rectangular && machine.rectOrigin.length === 1) {\n\n      // OK, let's assign corners indices:\n      //\n      // [1]   [2]\n      //\n      //\n      // [0]   [3]\n\n      let dx = (machine.max_x - machine.min_x) / 2.0;\n      let dy = (machine.max_y - machine.min_y) / 2.0;\n\n      let corners = [\n        {x: -dx, y: -dy},\n        {x: -dx, y:  dy},\n        {x:  dx, y:  dy},\n        {x:  dx, y: -dy}\n      ];\n      console.log(corners);\n\n      let first = vertices[0];\n      let last = vertices[vertices.length-1];\n\n      // Max radius\n      let max_radius = Math.sqrt(Math.pow(2.0*dx,2.0) + Math.pow(2.0*dy, 2.0)) / 2.0;\n\n      let vFirst = Victor.fromObject(first);\n      let vLast = Victor.fromObject(last);\n      let outPoint;\n      let newVertices = [];\n      if (vFirst.magnitude() <= vLast.magnitude()) {\n        // It's going outward\n        let scale = max_radius / vLast.magnitude();\n        outPoint = vLast.multiply(Victor(scale,scale));\n        newVertices.push({ ...last, x: outPoint.x, y: outPoint.y});\n      } else {\n        let scale = max_radius / vFirst.magnitude();\n        outPoint = vFirst.multiply(Victor(scale,scale));\n        newVertices.push({ ...first, x: outPoint.x, y: outPoint.y});\n      }\n      console.log(outPoint);\n      console.log(dx);\n\n      let nextCorner = 1;\n      if (outPoint.x >= dx) {\n        // right\n        nextCorner = 2;\n      } else if (outPoint.x <= -dx) {\n        // left\n        nextCorner = 0;\n      } else if (outPoint.y >= dy) {\n        // up\n        nextCorner = 1;\n      } else if (outPoint.y <= -dy) {\n        // down\n        nextCorner = 3;\n      } else {\n        console.log(\"Darn!\");\n        nextCorner = 3;\n      }\n      // console.log(\"nextCorner: \" + nextCorner);\n      // newVertices.push({ ...first, x: corners[nextCorner].x, y: corners[nextCorner].y});\n\n      while (nextCorner !== machine.rectOrigin[0]) {\n        console.log(\"nextCorner: \" + nextCorner);\n        newVertices.push({ ...first, x: corners[nextCorner].x, y: corners[nextCorner].y});\n        nextCorner -= 1;\n        if (nextCorner < 0) {\n          nextCorner = 3;\n        }\n      }\n      console.log(\"nextCorner: \" + nextCorner);\n      newVertices.push({ ...first, x: corners[nextCorner].x, y: corners[nextCorner].y});\n\n      console.log(newVertices);\n      if (vFirst.magnitude() <= vLast.magnitude()) {\n        // outward\n        vertices = vertices.concat(newVertices);\n      } else {\n        vertices = newVertices.reverse().concat(vertices);\n      }\n    }\n    if (machine.polarEndpoints && !machine.rectangular) {\n\n      let first = vertices[0];\n      let last = vertices[vertices.length-1];\n\n      // Always put 0.0 in there\n\n      // Max radius\n      let max_radius = machine.max_radius;\n      let vFirst = Victor.fromObject(first);\n      let vLast = Victor.fromObject(last);\n      if (vFirst.magnitude() <= vLast.magnitude()) {\n        // It's going outward\n        let scale = max_radius / vLast.magnitude();\n        let outPoint = vLast.multiply(Victor(scale,scale));\n        vertices.unshift(Vertex(0.0, 0.0, first.f));\n        vertices.push(Vertex(outPoint.x, outPoint.y, last.f));\n      } else {\n        let scale = max_radius / vFirst.magnitude();\n        let outPoint = vFirst.multiply(Victor(scale,scale));\n        vertices.push(Vertex(0.0, 0.0, first.f));\n        vertices.unshift(Vertex(outPoint.x, outPoint.y, last.f));\n      }\n    }\n  }\n  if (state.app.reverse) {\n    vertices.reverse();\n  }\n  if (machine.rectangular) {\n    vertices = enforceRectLimits(vertices,\n                                 (machine.max_x - machine.min_x)/2.0,\n                                 (machine.max_y - machine.min_y)/2.0\n                                 );\n  } else {\n    vertices = enforcePolarLimits(vertices,\n                                  machine.max_radius\n                                  );\n  }\n\n  return vertices;\n}\n\nconst wiper = (state) => {\n\n  var outputVertices = []\n\n  // Do the math\n\n  // Get the angle between 0,180\n  let angle = (180.0 - (state.wiper.angleDeg % 360)) % 180.0;\n  if (angle < 0.0) {\n    angle += 180.0;\n  }\n  angle = degToRad(angle);\n\n  // Start with the defaults for 0,45\n  let height = 1;\n  let width = 1;\n  let machine = state.machine;\n  if (machine.rectangular) {\n    height = machine.max_y - machine.min_y;\n    width = machine.max_x - machine.min_x;\n  } else {\n    height = machine.max_radius * 2.0;\n    width = height;\n  }\n\n  let startLocation = Victor(-width/2.0, height/2.0)\n  let cosa = Math.cos(angle);\n  let sina = Math.sin(angle);\n  // These can be zero, but infinity isn't great for out math, so let's just clip it.\n  if (Math.abs(cosa) < 1.0e-10) {\n    cosa = 1.0e-10;\n  }\n  if (Math.abs(sina) < 1.0e-10) {\n    sina = 1.0e-10;\n  }\n  let orig_delta_w = Victor(state.wiper.size / cosa, 0.0);\n  let orig_delta_h = Victor(0.0, -state.wiper.size / sina);\n\n  if (angle > Math.PI/4.0 && angle < 0.75 * Math.PI) {\n    // flip the logic of x,y\n    let temp = orig_delta_w.clone();\n    orig_delta_w = orig_delta_h.clone();\n    orig_delta_h = temp;\n  }\n  if (angle > Math.PI/2.0) {\n    startLocation = Victor(-width/2.0, -height/2.0)\n    orig_delta_w = orig_delta_w.clone().multiply(Victor(-1.0, -1.0));\n    orig_delta_h = orig_delta_h.clone().multiply(Victor(-1.0, -1.0));\n  }\n  let delta_w = orig_delta_w;\n  let delta_h = orig_delta_h;\n  let endLocation = startLocation.clone().multiply(Victor(-1.0, -1.0));\n  outputVertices.push(startLocation);\n  let nextWidthPoint = startLocation;\n  let nextHeightPoint = startLocation;\n\n  let emergency_break = 0;\n  while (emergency_break < 1000) {\n    emergency_break += 1;\n\n    // \"right\"\n    nextWidthPoint = nextWidthPoint.clone().add(delta_w);\n    if (outOfBounds(nextWidthPoint, width, height)) {\n      let corner = boundPoint(nextWidthPoint.clone().subtract(delta_w), nextWidthPoint, width/2.0, height/2.0);\n      outputVertices.push(corner);\n      if (nearEnough(endLocation, corner)) {\n        break;\n      }\n      nextWidthPoint = boundPoint(nextHeightPoint, nextWidthPoint, width/2.0, height/2.0);\n      delta_w = orig_delta_h;\n    }\n    outputVertices.push(nextWidthPoint);\n    if (nearEnough(endLocation, nextWidthPoint)) {\n      break;\n    }\n\n    // \"down-left\"\n    nextHeightPoint = nextHeightPoint.clone().add(delta_h);\n    if (outOfBounds(nextHeightPoint, width, height)) {\n      nextHeightPoint = boundPoint(nextWidthPoint, nextHeightPoint, width/2.0, height/2.0);\n      delta_h = orig_delta_w;\n    }\n    outputVertices.push(nextHeightPoint);\n    if (nearEnough(endLocation, nextHeightPoint)) {\n      break;\n    }\n\n    // \"down\"\n    nextHeightPoint = nextHeightPoint.clone().add(delta_h);\n    outputVertices.push(nextHeightPoint);\n    if (nearEnough(endLocation, nextHeightPoint)) {\n      break;\n    }\n    if (outOfBounds(nextHeightPoint, width, height)) {\n      let corner = boundPoint(nextHeightPoint.clone().subtract(delta_h), nextHeightPoint, width/2.0, height/2.0);\n      outputVertices.push(corner);\n      if (nearEnough(endLocation, corner)) {\n        break;\n      }\n      nextHeightPoint = boundPoint(nextWidthPoint, nextHeightPoint, width/2.0, height/2.0);\n      delta_h = orig_delta_w;\n    }\n    outputVertices.push(nextHeightPoint);\n    if (nearEnough(endLocation, nextHeightPoint)) {\n      break;\n    }\n\n    // \"up-right\"\n    nextWidthPoint = nextWidthPoint.clone().add(delta_w);\n    outputVertices.push(nextWidthPoint);\n    if (nearEnough(endLocation, nextWidthPoint)) {\n      break;\n    }\n    if (outOfBounds(nextWidthPoint, width, height)) {\n      nextWidthPoint = boundPoint(nextHeightPoint, nextWidthPoint, width/2.0, height/2.0);\n      delta_w = orig_delta_h;\n    }\n\n  }\n\n  return polishVertices(state, outputVertices);\n};\n\nconst thetaRho = (state) => {\n  let machine = state.machine;\n  var x_scale = (machine.max_x - machine.min_x)/2.0 * 0.01 * state.file.zoom;\n  var y_scale = (machine.max_y - machine.min_y)/2.0 * 0.01 * state.file.zoom;\n  if (!machine.rectangular) {\n    x_scale = y_scale = machine.max_radius;\n  }\n  x_scale *= 0.01 * state.file.zoom;\n  y_scale *= 0.01 * state.file.zoom;\n  if (state.file.aspectRatio) {\n    x_scale = y_scale = Math.min(x_scale,y_scale);\n  }\n\n  var newVertices = state.file.vertices.map( (vertex) => {\n    return {...vertex,\n      x: vertex.x * x_scale,\n      y: vertex.y * y_scale,\n    };\n  });\n  return polishVertices(state, newVertices);\n}\n\nconst transformShapes = (state) => {\n  const shape = findShape(state.shapes.shapes, state.shapes.currentShape);\n  var input = []\n  if (shape) {\n    input = shape.vertices(state).map( (vertex) => {\n      return scale(vertex, 100.0 * state.shapes.startingSize);\n    });\n  }\n\n  var num_loops = state.transform.numLoops;\n  var outputVertices = []\n  for (var i=0; i<num_loops; i++) {\n    for (var j=0; j<input.length; j++) {\n      let fraction = j/input.length;\n      outputVertices.push(transform(state.transform, input[j], i+fraction))\n    }\n  }\n\n  return polishVertices(state, outputVertices);\n};\n\nconst getApp = state => state.app;\nconst getShapes = state => state.shapes;\nconst getTransform = state => state.transform;\nconst getFile = state => state.file;\nconst getWiper = state => state.wiper;\nconst getMachine = state => state.machine;\n\nexport const getVertices = createSelector(\n  [\n      getApp,\n      getShapes,\n      getTransform,\n      getFile,\n      getWiper,\n      getMachine,\n  ],\n  (app, shapes, transform, file, wiperState, machine) => {\n    let state = {\n      app: app,\n      shapes: shapes,\n      transform: transform,\n      file: file,\n      wiper: wiperState,\n      machine: machine\n    };\n\n    if (state.app.input === 0) {\n      return transformShapes(state);\n    } else if (state.app.input === 2) {\n      return wiper(state);\n    } else if (state.app.input === 3) {\n      return thetaRho(state);\n    }\n  }\n);\n\nexport const getVerticesStats = createSelector(\n  [\n      getVertices\n  ],\n  (vertices) => {\n    let distance = 0.0;\n    let previous = null;\n    vertices.forEach( (vertex) => {\n      if (previous) {\n        distance += Math.sqrt(Math.pow(vertex.x - previous.x, 2.0) +\n                              Math.pow(vertex.y - previous.y, 2.0));\n      }\n      previous = vertex;\n    });\n    return {\n      numPoints: vertices.length,\n      distance: Math.floor(distance),\n    };\n  }\n);\n\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './MachinePreview.css';\nimport { Vertex } from '../Geometry';\nimport MachineSettings from './MachineSettings.js';\nimport { connect } from 'react-redux'\nimport { Panel } from 'react-bootstrap'\nimport Slider from 'rc-slider'\nimport 'rc-slider/assets/index.css'\nimport {\n  transform,\n  getVertices,\n  getVerticesStats,\n} from '../inputs/Computer.js';\nimport { createSelector } from 'reselect'\n\nexport const setMachinePreviewSize = ( value ) => {\n  return {\n    type: 'SET_MACHINE_SIZE',\n    value: value,\n  };\n}\n\nexport const setMachineSlider = ( value ) => {\n  return {\n    type: 'SET_MACHINE_SLIDER',\n    value: value,\n  };\n}\n\nconst getTransform = state => state.transform;\n\nconst getTrackVertices = createSelector(\n  [getTransform],\n  (data) => {\n    var num_loops = data.numLoops;\n    var trackVertices = []\n    for (var i=0; i<num_loops; i++) {\n      if (data.trackEnabled) {\n        trackVertices.push(transform(data, {x: 0.0, y: 0.0}, i))\n      }\n    }\n    return trackVertices;\n  }\n);\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    use_rect: state.machine.rectangular,\n    min_x: state.machine.min_x,\n    max_x: state.machine.max_x,\n    min_y: state.machine.min_y,\n    max_y: state.machine.max_y,\n    max_radius: state.machine.max_radius,\n    canvas_width: state.app.canvas_width,\n    canvas_height: state.app.canvas_height,\n    vertices: getVertices(state),\n    sliderValue: state.app.machineSlider,\n    showTrack: state.app.input === 0,\n    trackVertices: getTrackVertices(state),\n  }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    onResize: (size) => {\n      dispatch(setMachinePreviewSize(size))\n    },\n  }\n}\n\n// Contains the preview window, and any parameters for the machine.\nclass PreviewWindow extends Component {\n  componentDidMount() {\n    var canvas = ReactDOM.findDOMNode(this);\n    var context = canvas.getContext('2d');\n    var bigBox = document.getElementById(\"biggerBox\");\n    this.resize(canvas, bigBox);\n    window.addEventListener('resize', () => { this.resize(canvas, bigBox) }, false);\n\n    // force a resize so that it autosizes properly when running locally\n    setTimeout(() => this.resize(canvas, bigBox), 250);\n\n    this.paint(context);\n  }\n\n  componentDidUpdate() {\n    var canvas = ReactDOM.findDOMNode(this);\n    var context = canvas.getContext('2d');\n    context.clearRect(0, 0, this.props.canvas_width, this.props.canvas_height);\n    var bigBox = document.getElementById(\"biggerBox\");\n    this.resize(canvas, bigBox);\n  }\n\n  // in mm means in units of mm, but 0,0 is the center, not the lower corner or something.\n  mmToPixelsScale() {\n\n    var machine_x = 1;\n    var machine_y = 1;\n    if (this.props.use_rect) {\n      machine_x = this.props.max_x - this.props.min_x;\n      machine_y = this.props.max_y - this.props.min_y;\n    } else {\n      machine_x = this.props.max_radius * 2.0;\n      machine_y = machine_x;\n    }\n\n    var scale_x = this.props.canvas_width / machine_x;\n    var scale_y = this.props.canvas_height / machine_y;\n    // Keep it square.\n    return Math.min(scale_x, scale_y) * 0.95;\n  }\n\n  mmToPixels(vertex) {\n    var min_scale = this.mmToPixelsScale()\n\n    var x = vertex.x * min_scale + this.props.canvas_width/2.0;\n    // Y for pixels starts at the top, and goes down.\n    var y = -vertex.y * min_scale + this.props.canvas_height/2.0;\n\n    return Vertex(x, y);\n  }\n\n  moveTo_mm(context, vertex) {\n    var in_mm = this.mmToPixels(vertex);\n    context.moveTo(in_mm.x, in_mm.y)\n  }\n\n  lineTo_mm(context, vertex) {\n    var in_mm = this.mmToPixels(vertex);\n    context.lineTo(in_mm.x, in_mm.y)\n  }\n\n  dot_mm(context, vertex) {\n    var in_mm = this.mmToPixels(vertex);\n    context.arc(in_mm.x, in_mm.y, Math.max(4.0, this.mmToPixelsScale() * 1.5), 0, 2 * Math.PI, true);\n    context.fillStyle = context.strokeStyle;\n    context.fill();\n  }\n\n  slice_vertices(vertices, sliderValue) {\n    const slide_size = 10.0;\n    if (sliderValue === 0) {\n      return vertices;\n    }\n\n    // Let's start by just assuming we want a slide_size sized window, as a percentage of the whole\n    // thing.\n    //\n    const begin_fraction = sliderValue / 100.0;\n    const end_fraction = (slide_size + sliderValue) / 100.0;\n\n    const begin_vertex = Math.round(vertices.length * begin_fraction);\n    const end_vertex = Math.round(vertices.length * end_fraction);\n\n    return vertices.slice(begin_vertex, end_vertex);\n  }\n\n  paint(context) {\n    context.save();\n\n    // Draw the bounds of the machine\n    context.beginPath();\n    context.lineWidth = \"1\";\n    context.strokeStyle = \"blue\";\n    if (this.props.use_rect) {\n      this.moveTo_mm(context, Vertex((this.props.min_x - this.props.max_x)/2.0, (this.props.min_y - this.props.max_y)/2.0))\n      this.lineTo_mm(context, Vertex((this.props.max_x - this.props.min_x)/2.0, (this.props.min_y - this.props.max_y)/2.0))\n      this.lineTo_mm(context, Vertex((this.props.max_x - this.props.min_x)/2.0, (this.props.max_y - this.props.min_y)/2.0))\n      this.lineTo_mm(context, Vertex((this.props.min_x - this.props.max_x)/2.0, (this.props.max_y - this.props.min_y)/2.0))\n      this.lineTo_mm(context, Vertex((this.props.min_x - this.props.max_x)/2.0, (this.props.min_y - this.props.max_y)/2.0))\n    } else {\n      this.moveTo_mm(context, Vertex(this.props.max_radius, 0.0));\n      let resolution = 128.0;\n      for (let i=0; i<=resolution ; i++) {\n        let angle = Math.PI * 2.0 / resolution * i\n        this.lineTo_mm(context, Vertex(this.props.max_radius * Math.cos(angle),\n                                       this.props.max_radius * Math.sin(angle)));\n      }\n    }\n    context.stroke();\n\n    var drawing_vertices = this.props.vertices;\n\n    drawing_vertices = this.slice_vertices(drawing_vertices, this.props.sliderValue);\n\n    if (drawing_vertices && drawing_vertices.length > 0) {\n\n      // Draw the start and end points\n      context.beginPath();\n      context.lineWidth = 1.0;\n      context.strokeStyle = \"green\";\n      this.dot_mm(context, this.props.vertices[0]);\n      context.stroke();\n      context.beginPath();\n      context.lineWidth = 1.0;\n      context.strokeStyle = \"red\";\n      this.dot_mm(context, this.props.vertices[this.props.vertices.length-1]);\n      context.stroke();\n\n      // Draw the background vertices\n      if (this.props.sliderValue !== 0) {\n        context.beginPath();\n        context.lineWidth = this.mmToPixelsScale();\n        context.strokeStyle = \"gray\";\n        this.moveTo_mm(context, this.props.vertices[0]);\n        for (let i=0; i<this.props.vertices.length; i++) {\n          this.lineTo_mm(context, this.props.vertices[i]);\n        }\n        context.stroke();\n      }\n\n      // Draw the specific vertices\n      context.beginPath();\n      context.lineWidth = this.mmToPixelsScale();\n      context.strokeStyle = \"yellow\";\n      this.moveTo_mm(context, drawing_vertices[0]);\n      for (let i=0; i<drawing_vertices.length; i++) {\n        this.lineTo_mm(context, drawing_vertices[i]);\n      }\n      context.stroke();\n    }\n    // Draw the trackVertices\n    if (this.props.trackVertices && this.props.trackVertices.length > 0 && this.props.showTrack) {\n      // Draw the track vertices\n      context.beginPath();\n      context.lineWidth = this.mmToPixelsScale();\n      context.strokeStyle = \"green\";\n      this.moveTo_mm(context, this.props.trackVertices[0]);\n      for (let i=0; i<this.props.trackVertices.length; i++) {\n        this.lineTo_mm(context, this.props.trackVertices[i]);\n      }\n      context.stroke();\n    }\n\n    context.restore();\n  }\n\n  resize(canvas, bigBox) {\n    var size = parseInt(getComputedStyle(bigBox).getPropertyValue('width'),10);\n    canvas.width = size;\n    canvas.height = size;\n    if (this.props.canvas_width !== size) {\n      this.props.onResize(size);\n    }\n    var context = canvas.getContext('2d');\n    this.paint(context)\n  }\n\n  render() {\n    const {canvas_width, canvas_height} = this.props;\n    return (\n        <canvas className=\"canvas\"\n          width={canvas_width}\n          height={canvas_height}\n        />\n    );\n  }\n}\nPreviewWindow = connect(mapStateToProps, mapDispatchToProps)(PreviewWindow);\n\nconst machineStateToProps = (state, ownProps) => {\n  return {\n    sliderValue: state.app.machineSlider,\n    verticesStats: getVerticesStats(state),\n  }\n}\n\nconst machineDispatchToProps = (dispatch, ownProps) => {\n  return {\n    onSlider: (value) => {\n      dispatch(setMachineSlider(value))\n    },\n  }\n}\n\nclass MachinePreview extends Component {\n  render() {\n    return (\n      <div className=\"machine-preview\">\n\n        <Panel>\n            <PreviewWindow />\n            Points: {this.props.verticesStats.numPoints}, Distance: {this.props.verticesStats.distance}\n            <div className=\"slide-box\">\n                <Slider\n                  value={this.props.sliderValue}\n                  step={1.0}\n                  min={0.0}\n                  max={100.0}\n                  onChange={this.props.onSlider}\n                />\n            </div>\n            <div className=\"cheatBox\" id=\"biggerBox\">\n                <MachineSettings />\n            </div>\n        </Panel>\n      </div>\n    )\n  }\n}\nMachinePreview = connect(machineStateToProps, machineDispatchToProps)(MachinePreview);\n\nexport default MachinePreview;\n","import './GCode.css';\nimport React, { Component } from 'react';\nimport {\n  Button,\n  ControlLabel,\n  FormControl,\n  FormGroup,\n  ListGroupItem,\n  Modal,\n} from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport {\n  getVertices,\n} from '../inputs/Computer.js';\n\nimport {\n  Vertex,\n} from '../Geometry.js'\nimport Victor from 'victor';\n\n// GCode Actions\nexport const setGCodeFilename = ( text ) => {\n  return {\n    type: 'SET_GCODE_FILENAME',\n    value: text,\n  };\n}\n\nexport const setGCodePre = ( text ) => {\n  localStorage.setItem('gcode_pre', text)\n  return {\n    type: 'SET_GCODE_PRE',\n    value: text,\n  };\n}\n\nexport const setGCodePost = ( text ) => {\n  localStorage.setItem('gcode_post', text)\n  return {\n    type: 'SET_GCODE_POST',\n    value: text,\n  };\n}\n\nexport const toggleReverse = ( ) => {\n  return {\n    type: 'TOGGLE_REVERSE',\n  };\n}\n\nexport const setShowGCode = ( on ) => {\n  return {\n    type: 'SET_SHOW_GCODE',\n    value: on,\n  };\n}\n\n\n// Helper function to take a string and make the user download a text file with that text as the\n// content.\n//\n// I don't really understand this, but I took it from here, and it seems to work:\n// https://stackoverflow.com/a/18197511\n//\nfunction download(filename, text) {\n\n  let link = document.createElement('a');\n  link.download = filename;\n\n  let blob = new Blob([text],{type: 'text/plain;charset=utf-8'});\n\n  // Windows Edge fix\n  if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n    window.navigator.msSaveOrOpenBlob(blob, filename);\n  } else {\n    link.href = URL.createObjectURL(blob);\n    if (document.createEvent) {\n      var event = document.createEvent('MouseEvents');\n      event.initEvent('click', true, true);\n      link.dispatchEvent(event);\n    }\n    else {\n      link.click();\n    }\n    URL.revokeObjectURL(link.href);\n  }\n\n}\n\nfunction gcode(vertex) {\n  var command = 'G01' +\n    ' X' + vertex.x.toFixed(3) +\n    ' Y' + vertex.y.toFixed(3)\n  if (vertex.speed > 0.0) {\n    command += ' F' + vertex.f\n  }\n  return command + '\\n'\n}\n\nfunction thetarho(vertex) {\n  return \"\" + vertex.x.toFixed(5) + \" \" + vertex.y.toFixed(5) + \"\\n\";\n}\n\nconst getComments = (state) => {\n\n  let comments = [];\n  comments.push(\"Created by Sandify\");\n  comments.push(\"\");\n  comments.push(\"  https://sandify.org\");\n  comments.push(\"\");\n  comments.push(\"  Sandify Version: \" + state.app.sandifyVersion);\n  comments.push(\"\");\n  comments.push(\"  Machine Type: \" + (state.machine.rectangular ? \"Rectangular\" : \"Polar\"));\n  if (state.machine.rectangular) {\n    comments.push(\"    MinX: \" + state.machine.min_x + \" MaxX: \" + state.machine.max_x + \" MinY: \" + state.machine.min_y + \" MaxY: \" + state.machine.max_y);\n  } else {\n    comments.push(\"    Max Radius: \" + state.machine.max_radius);\n    comments.push(\"    Force Endpoints: \" + state.machine.polarEndpoints);\n  }\n\n  switch (state.app.input) {\n    case 0: // shapes\n      var shapeInfo = state.shapes.shapes.find(shape => shape.name === state.shapes.currentShape);\n\n      comments.push(\"  Content Type: Shapes\");\n      comments.push(\"    Starting Size: \" + state.shapes.startingSize);\n      comments.push(\"    Offset: X: \" + state.transform.xformOffsetX + \" Y: \" + state.transform.xformOffsetY);\n      comments.push(\"    Selected Shape: \" + shapeInfo.name);\n\n      shapeInfo.options.forEach((option) => {\n        comments.push(\"      \" + option.title + \": \" + state.shapes[option.key]);\n      });\n\n      comments.push(\"    Number of Loops: \" + state.transform.numLoops);\n      comments.push(\"    Spin: \" + state.transform.spinEnabled);\n      if (state.transform.spinEnabled) {\n        comments.push(\"      Spin Value: \" + state.transform.spinValue);\n        comments.push(\"      Spin Switchbacks: \" + state.transform.spinSwitchbacks);\n      }\n      comments.push(\"    Grow: \" + state.transform.growEnabled);\n      if (state.transform.growEnabled) {\n        comments.push(\"      Grow Value: \" + state.transform.growValue);\n      }\n      comments.push(\"    Track: \" + state.transform.trackEnabled);\n      if (state.transform.trackEnabled) {\n        comments.push(\"      Track Size: \" + state.transform.trackValue);\n        comments.push(\"      Track Length: \" + state.transform.trackLength);\n        comments.push(\"      Track Grow: \" + state.transform.trackGrowEnabled);\n        if (state.transform.trackGrowEnabled) {\n          comments.push(\"          Track Grow Value: \" + state.transform.trackGrow);\n        }\n      }\n      break;\n    case 2: // wiper\n      comments.push(\"  Content Type: Wiper\");\n      comments.push(\"    Wiper Angle: \" + state.wiper.angleDeg);\n      comments.push(\"    Wiper Size: \"  + state.wiper.size);\n      break;\n    case 3: // thetarho\n      comments.push(\"  Content Type: ThetaRho\");\n      comments.push(\"    Input File: \" + state.file.name);\n      comments.push(\"    Zoom: \"  + state.file.zoom);\n      comments.push(\"    Aspect Ratio: \" + state.file.aspectRatio);\n      break;\n    default: // Dunno\n      comments.push(\"  Content Type: Unknown\");\n      break;\n  }\n  comments.push(\"  Path Reversed: \" + state.app.reverse);\n  comments.push(\"\");\n\n  return comments;\n};\n\nconst gcodeProps = (state, ownProps) => {\n  return {\n    reverse: state.app.reverse,\n    show: state.app.showGCode,\n    vertices: getVertices(state),\n\n    settings: getComments(state),\n    xOffset: (state.machine.min_x + state.machine.max_x) / 2.0,\n    yOffset: (state.machine.min_y + state.machine.max_y) / 2.0,\n    max_radius: state.machine.max_radius,\n\n    filename: state.gcode.filename,\n    pre: state.gcode.pre,\n    post: state.gcode.post,\n  }\n}\n\nconst gcodeDispatch = (dispatch, ownProps) => {\n  return {\n    open: () => {\n      dispatch(setShowGCode(true));\n    },\n    close: () => {\n      dispatch(setShowGCode(false));\n    },\n    toggleReverse: () => {\n      dispatch(toggleReverse());\n    },\n    setFilename: (event) => {\n      dispatch(setGCodeFilename(event.target.value));\n    },\n    setPre: (event) => {\n      dispatch(setGCodePre(event.target.value));\n    },\n    setPost: (event) => {\n      dispatch(setGCodePost(event.target.value));\n    },\n  }\n}\n\n// A class that will encapsulate all the gcode generation. This is currently just a button that\n// converts vertices and a speed into a list of positions. There is a lot more than could exists\n// here.\nclass GCodeGenerator extends Component {\n\n  generateGCode() {\n    var content = \"; \" + this.props.settings.join(\"\\n; \");\n    content += \"\\n\";\n    content += \"; filename: '\" + this.props.filename + \"'\\n\\n\";\n    content += \"; BEGIN PRE\\n\";\n    content += this.props.pre;\n    content += \"; END PRE\\n\";\n\n    console.log(\"offset x: \" + this.props.xOffset + \" y: \" + this.props.yOffset);\n    var centeredVertices = this.props.vertices.map( (vertex) => {\n      return {\n        ...vertex,\n        x: vertex.x + this.props.xOffset,\n        y: vertex.y + this.props.yOffset,\n      }\n    });\n\n    var lines = centeredVertices.map(gcode);\n\n    content += lines.join('');\n\n    content += '\\n';\n    content += \"; BEGIN POST\\n\";\n    content += this.props.post;\n    content += \"; END POST\\n\";\n    var filename = this.props.filename;\n    if (!filename.includes(\".\")) {\n      filename += \".gcode\";\n    }\n    download(filename, content)\n    this.props.close();\n  }\n\n  generateThetaRho() {\n    var content = \"# \" + this.props.settings.join(\"\\n# \");\n    content += \"\\n\";\n    content += \"# filename: '\" + this.props.filename + \"'\\n\\n\";\n    content += \"# BEGIN PRE\\n\";\n    content += this.props.pre;\n    content += \"# END PRE\\n\";\n    content += '\\n';\n\n    // First, downsample larger lines into smaller ones.\n    var maxLength = 2.0;\n    var subsampledVertices = [];\n    var previous = undefined;\n    var next;\n    for (next = 0; next < this.props.vertices.length; next++) {\n      if (previous !== undefined) {\n        var start = Victor.fromObject(this.props.vertices[previous]);\n        var end = Victor.fromObject(this.props.vertices[next]);\n\n        var delta = end.clone().subtract(start);\n        var deltaSegment = end.clone().subtract(start).normalize().multiply(Victor(maxLength, maxLength));\n\n        // This loads up (start, end].\n        for (let step = 0; step < (delta.magnitude() / maxLength) ; step++) {\n          subsampledVertices.push(Vertex(start.x + step * deltaSegment.x,\n                                         start.y + step * deltaSegment.y,\n                                         this.props.vertices[next].f));\n        }\n\n      }\n      previous = next;\n    }\n    // Add in the end.\n    if (previous !== undefined) {\n      subsampledVertices.push(this.props.vertices[this.props.vertices.length - 1]);\n    }\n\n    // Convert to Theta, Rho\n    var trVertices = [];\n    var previousTheta = 0;\n    var previousRawTheta = 0;\n    for (next = 0; next < subsampledVertices.length; ++next) {\n      // Normalize the radius\n      var rho = Victor.fromObject(subsampledVertices[next]).magnitude() / this.props.max_radius;\n\n      // What is the basic theta for this point?\n      var rawTheta = Math.atan2(subsampledVertices[next].x,\n                                subsampledVertices[next].y);\n      // Convert to [0,2pi]\n      rawTheta = (rawTheta + 2.0 * Math.PI) % (2.0 * Math.PI);\n\n      // Compute the difference to the last point.\n      var deltaTheta = rawTheta - previousRawTheta;\n      // Convert to [-pi,pi]\n      if (deltaTheta < -Math.PI) {\n        deltaTheta += 2.0 * Math.PI;\n      }\n      if (deltaTheta > Math.PI) {\n        deltaTheta -= 2.0 * Math.PI;\n      }\n      var theta = previousTheta + deltaTheta;\n      previousRawTheta = rawTheta;\n      previousTheta = theta;\n\n      trVertices.push(Vertex(theta, rho, subsampledVertices[next].f));\n    }\n\n    var lines = trVertices.map(thetarho);\n\n    content += lines.join('');\n\n    content += '\\n';\n    content += \"# BEGIN POST\\n\";\n    content += this.props.post;\n    content += \"# END POST\\n\";\n\n    var filename = this.props.filename;\n    if (!filename.includes(\".\")) {\n      filename += \".thr\";\n    }\n    download(filename, content)\n\n    this.props.close();\n  }\n\n  render() {\n    const reverseActiveClass = (this.props.reverse ? \"active\" : null);\n    return (\n      <div>\n        <Button className=\"finishButton\" bsStyle=\"primary\" bsSize=\"large\" onClick={this.props.open}>Create Code</Button>\n        <Modal show={this.props.show} onHide={this.props.close}>\n          <Modal.Header closeButton>\n            <Modal.Title>Code Parameters</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <FormGroup controlId=\"sandifyFilename\">\n              <ControlLabel>Name of Output</ControlLabel>\n              <FormControl type=\"text\" value={this.props.filename} onChange={this.props.setFilename}/>\n            </FormGroup>\n            <FormGroup controlId=\"preCode\">\n              <ControlLabel>Program Start Code</ControlLabel>\n              <FormControl componentClass=\"textarea\" value={this.props.pre} onChange={this.props.setPre}/>\n            </FormGroup>\n            <FormGroup controlId=\"postCode\">\n              <ControlLabel>Program End Code</ControlLabel>\n              <FormControl componentClass=\"textarea\" value={this.props.post} onChange={this.props.setPost}/>\n            </FormGroup>\n            <ListGroupItem header=\"Reverse Path\" className={reverseActiveClass} onClick={this.props.toggleReverse}>Reverses the Code, starting at the final location</ListGroupItem>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button id=\"code-close\" bsStyle=\"default\" onClick={this.props.close}>Close</Button>\n            <Button id=\"code-gen-gcode\" bsStyle=\"primary\" onClick={this.generateGCode.bind(this)}>Generate GCode</Button>\n            <Button id=\"code-gen-thetarho\" bsStyle=\"primary\" onClick={this.generateThetaRho.bind(this)}>Generate Theta Rho</Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    );\n  }\n}\nGCodeGenerator = connect(gcodeProps, gcodeDispatch)(GCodeGenerator);\n\nexport default GCodeGenerator\n","import React, { Component } from 'react';\nimport './App.css';\nimport { createStore } from 'redux';\nimport { combineReducers } from 'redux';\nimport { Provider } from 'react-redux';\n\nimport app from '../reducers/App.js';\nimport file from '../reducers/File.js';\nimport gcode from '../reducers/GCode.js';\nimport machine from '../reducers/Machine.js';\nimport shapes from '../reducers/Shapes.js';\nimport transform from '../reducers/Transform.js';\nimport wiper from '../reducers/Wiper.js';\nimport Header from './Header';\nimport Documentation from './Documentation';\nimport InputTabs from '../inputs/InputTabs';\nimport MachinePreview from '../machine/MachinePreview';\nimport GCodeGenerator from '../machine/GCode';\n\nconst store =\n  createStore(\n    combineReducers(\n      {\n        app,\n        file,\n        gcode,\n        machine,\n        shapes,\n        transform,\n        wiper,\n      }));\n\nclass App extends Component {\n\n  render() {\n\n    return (\n      <Provider store={store}>\n        <div className=\"App\">\n\n          <div className=\"App-header\">\n            <Header/>\n          </div>\n\n          <div className=\"App-col-7 App-left\">\n            <InputTabs/>\n          </div>\n\n          <div className=\"App-col-5 App-mid\">\n            <div className=\"App-canvas\">\n              <MachinePreview/>\n            </div>\n\n            <div id=\"output\">\n              <GCodeGenerator/>\n            </div>\n          </div>\n          <div className=\"App-col-12 App-doc\">\n            <Documentation/>\n          </div>\n\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import 'bootstrap/dist/css/bootstrap.css';\n// import 'bootstrap/dist/css/bootstrap-theme.css';\nimport App from './App/App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}